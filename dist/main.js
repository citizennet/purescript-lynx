(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
var bigInt = (function (undefined) {
    "use strict";

    var BASE = 1e7,
        LOG_BASE = 7,
        MAX_INT = 9007199254740992,
        MAX_INT_ARR = smallToArray(MAX_INT),
        DEFAULT_ALPHABET = "0123456789abcdefghijklmnopqrstuvwxyz";

    var supportsNativeBigInt = typeof BigInt === "function";

    function Integer(v, radix, alphabet, caseSensitive) {
        if (typeof v === "undefined") return Integer[0];
        if (typeof radix !== "undefined") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);
        return parseValue(v);
    }

    function BigInteger(value, sign) {
        this.value = value;
        this.sign = sign;
        this.isSmall = false;
    }
    BigInteger.prototype = Object.create(Integer.prototype);

    function SmallInteger(value) {
        this.value = value;
        this.sign = value < 0;
        this.isSmall = true;
    }
    SmallInteger.prototype = Object.create(Integer.prototype);

    function NativeBigInt(value) {
        this.value = value;
    }
    NativeBigInt.prototype = Object.create(Integer.prototype);

    function isPrecise(n) {
        return -MAX_INT < n && n < MAX_INT;
    }

    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes
        if (n < 1e7)
            return [n];
        if (n < 1e14)
            return [n % 1e7, Math.floor(n / 1e7)];
        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];
    }

    function arrayToSmall(arr) { // If BASE changes this function may need to change
        trim(arr);
        var length = arr.length;
        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {
            switch (length) {
                case 0: return 0;
                case 1: return arr[0];
                case 2: return arr[0] + arr[1] * BASE;
                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;
            }
        }
        return arr;
    }

    function trim(v) {
        var i = v.length;
        while (v[--i] === 0);
        v.length = i + 1;
    }

    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger
        var x = new Array(length);
        var i = -1;
        while (++i < length) {
            x[i] = 0;
        }
        return x;
    }

    function truncate(n) {
        if (n > 0) return Math.floor(n);
        return Math.ceil(n);
    }

    function add(a, b) { // assumes a and b are arrays with a.length >= b.length
        var l_a = a.length,
            l_b = b.length,
            r = new Array(l_a),
            carry = 0,
            base = BASE,
            sum, i;
        for (i = 0; i < l_b; i++) {
            sum = a[i] + b[i] + carry;
            carry = sum >= base ? 1 : 0;
            r[i] = sum - carry * base;
        }
        while (i < l_a) {
            sum = a[i] + carry;
            carry = sum === base ? 1 : 0;
            r[i++] = sum - carry * base;
        }
        if (carry > 0) r.push(carry);
        return r;
    }

    function addAny(a, b) {
        if (a.length >= b.length) return add(a, b);
        return add(b, a);
    }

    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT
        var l = a.length,
            r = new Array(l),
            base = BASE,
            sum, i;
        for (i = 0; i < l; i++) {
            sum = a[i] - base + carry;
            carry = Math.floor(sum / base);
            r[i] = sum - carry * base;
            carry += 1;
        }
        while (carry > 0) {
            r[i++] = carry % base;
            carry = Math.floor(carry / base);
        }
        return r;
    }

    BigInteger.prototype.add = function (v) {
        var n = parseValue(v);
        if (this.sign !== n.sign) {
            return this.subtract(n.negate());
        }
        var a = this.value, b = n.value;
        if (n.isSmall) {
            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);
        }
        return new BigInteger(addAny(a, b), this.sign);
    };
    BigInteger.prototype.plus = BigInteger.prototype.add;

    SmallInteger.prototype.add = function (v) {
        var n = parseValue(v);
        var a = this.value;
        if (a < 0 !== n.sign) {
            return this.subtract(n.negate());
        }
        var b = n.value;
        if (n.isSmall) {
            if (isPrecise(a + b)) return new SmallInteger(a + b);
            b = smallToArray(Math.abs(b));
        }
        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);
    };
    SmallInteger.prototype.plus = SmallInteger.prototype.add;

    NativeBigInt.prototype.add = function (v) {
        return new NativeBigInt(this.value + parseValue(v).value);
    }
    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;

    function subtract(a, b) { // assumes a and b are arrays with a >= b
        var a_l = a.length,
            b_l = b.length,
            r = new Array(a_l),
            borrow = 0,
            base = BASE,
            i, difference;
        for (i = 0; i < b_l; i++) {
            difference = a[i] - borrow - b[i];
            if (difference < 0) {
                difference += base;
                borrow = 1;
            } else borrow = 0;
            r[i] = difference;
        }
        for (i = b_l; i < a_l; i++) {
            difference = a[i] - borrow;
            if (difference < 0) difference += base;
            else {
                r[i++] = difference;
                break;
            }
            r[i] = difference;
        }
        for (; i < a_l; i++) {
            r[i] = a[i];
        }
        trim(r);
        return r;
    }

    function subtractAny(a, b, sign) {
        var value;
        if (compareAbs(a, b) >= 0) {
            value = subtract(a, b);
        } else {
            value = subtract(b, a);
            sign = !sign;
        }
        value = arrayToSmall(value);
        if (typeof value === "number") {
            if (sign) value = -value;
            return new SmallInteger(value);
        }
        return new BigInteger(value, sign);
    }

    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT
        var l = a.length,
            r = new Array(l),
            carry = -b,
            base = BASE,
            i, difference;
        for (i = 0; i < l; i++) {
            difference = a[i] + carry;
            carry = Math.floor(difference / base);
            difference %= base;
            r[i] = difference < 0 ? difference + base : difference;
        }
        r = arrayToSmall(r);
        if (typeof r === "number") {
            if (sign) r = -r;
            return new SmallInteger(r);
        } return new BigInteger(r, sign);
    }

    BigInteger.prototype.subtract = function (v) {
        var n = parseValue(v);
        if (this.sign !== n.sign) {
            return this.add(n.negate());
        }
        var a = this.value, b = n.value;
        if (n.isSmall)
            return subtractSmall(a, Math.abs(b), this.sign);
        return subtractAny(a, b, this.sign);
    };
    BigInteger.prototype.minus = BigInteger.prototype.subtract;

    SmallInteger.prototype.subtract = function (v) {
        var n = parseValue(v);
        var a = this.value;
        if (a < 0 !== n.sign) {
            return this.add(n.negate());
        }
        var b = n.value;
        if (n.isSmall) {
            return new SmallInteger(a - b);
        }
        return subtractSmall(b, Math.abs(a), a >= 0);
    };
    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;

    NativeBigInt.prototype.subtract = function (v) {
        return new NativeBigInt(this.value - parseValue(v).value);
    }
    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;

    BigInteger.prototype.negate = function () {
        return new BigInteger(this.value, !this.sign);
    };
    SmallInteger.prototype.negate = function () {
        var sign = this.sign;
        var small = new SmallInteger(-this.value);
        small.sign = !sign;
        return small;
    };
    NativeBigInt.prototype.negate = function () {
        return new NativeBigInt(-this.value);
    }

    BigInteger.prototype.abs = function () {
        return new BigInteger(this.value, false);
    };
    SmallInteger.prototype.abs = function () {
        return new SmallInteger(Math.abs(this.value));
    };
    NativeBigInt.prototype.abs = function () {
        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);
    }


    function multiplyLong(a, b) {
        var a_l = a.length,
            b_l = b.length,
            l = a_l + b_l,
            r = createArray(l),
            base = BASE,
            product, carry, i, a_i, b_j;
        for (i = 0; i < a_l; ++i) {
            a_i = a[i];
            for (var j = 0; j < b_l; ++j) {
                b_j = b[j];
                product = a_i * b_j + r[i + j];
                carry = Math.floor(product / base);
                r[i + j] = product - carry * base;
                r[i + j + 1] += carry;
            }
        }
        trim(r);
        return r;
    }

    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE
        var l = a.length,
            r = new Array(l),
            base = BASE,
            carry = 0,
            product, i;
        for (i = 0; i < l; i++) {
            product = a[i] * b + carry;
            carry = Math.floor(product / base);
            r[i] = product - carry * base;
        }
        while (carry > 0) {
            r[i++] = carry % base;
            carry = Math.floor(carry / base);
        }
        return r;
    }

    function shiftLeft(x, n) {
        var r = [];
        while (n-- > 0) r.push(0);
        return r.concat(x);
    }

    function multiplyKaratsuba(x, y) {
        var n = Math.max(x.length, y.length);

        if (n <= 30) return multiplyLong(x, y);
        n = Math.ceil(n / 2);

        var b = x.slice(n),
            a = x.slice(0, n),
            d = y.slice(n),
            c = y.slice(0, n);

        var ac = multiplyKaratsuba(a, c),
            bd = multiplyKaratsuba(b, d),
            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));

        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));
        trim(product);
        return product;
    }

    // The following function is derived from a surface fit of a graph plotting the performance difference
    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.
    function useKaratsuba(l1, l2) {
        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;
    }

    BigInteger.prototype.multiply = function (v) {
        var n = parseValue(v),
            a = this.value, b = n.value,
            sign = this.sign !== n.sign,
            abs;
        if (n.isSmall) {
            if (b === 0) return Integer[0];
            if (b === 1) return this;
            if (b === -1) return this.negate();
            abs = Math.abs(b);
            if (abs < BASE) {
                return new BigInteger(multiplySmall(a, abs), sign);
            }
            b = smallToArray(abs);
        }
        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes
            return new BigInteger(multiplyKaratsuba(a, b), sign);
        return new BigInteger(multiplyLong(a, b), sign);
    };

    BigInteger.prototype.times = BigInteger.prototype.multiply;

    function multiplySmallAndArray(a, b, sign) { // a >= 0
        if (a < BASE) {
            return new BigInteger(multiplySmall(b, a), sign);
        }
        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);
    }
    SmallInteger.prototype._multiplyBySmall = function (a) {
        if (isPrecise(a.value * this.value)) {
            return new SmallInteger(a.value * this.value);
        }
        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);
    };
    BigInteger.prototype._multiplyBySmall = function (a) {
        if (a.value === 0) return Integer[0];
        if (a.value === 1) return this;
        if (a.value === -1) return this.negate();
        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);
    };
    SmallInteger.prototype.multiply = function (v) {
        return parseValue(v)._multiplyBySmall(this);
    };
    SmallInteger.prototype.times = SmallInteger.prototype.multiply;

    NativeBigInt.prototype.multiply = function (v) {
        return new NativeBigInt(this.value * parseValue(v).value);
    }
    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;

    function square(a) {
        //console.assert(2 * BASE * BASE < MAX_INT);
        var l = a.length,
            r = createArray(l + l),
            base = BASE,
            product, carry, i, a_i, a_j;
        for (i = 0; i < l; i++) {
            a_i = a[i];
            carry = 0 - a_i * a_i;
            for (var j = i; j < l; j++) {
                a_j = a[j];
                product = 2 * (a_i * a_j) + r[i + j] + carry;
                carry = Math.floor(product / base);
                r[i + j] = product - carry * base;
            }
            r[i + l] = carry;
        }
        trim(r);
        return r;
    }

    BigInteger.prototype.square = function () {
        return new BigInteger(square(this.value), false);
    };

    SmallInteger.prototype.square = function () {
        var value = this.value * this.value;
        if (isPrecise(value)) return new SmallInteger(value);
        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);
    };

    NativeBigInt.prototype.square = function (v) {
        return new NativeBigInt(this.value * this.value);
    }

    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.
        var a_l = a.length,
            b_l = b.length,
            base = BASE,
            result = createArray(b.length),
            divisorMostSignificantDigit = b[b_l - 1],
            // normalization
            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),
            remainder = multiplySmall(a, lambda),
            divisor = multiplySmall(b, lambda),
            quotientDigit, shift, carry, borrow, i, l, q;
        if (remainder.length <= a_l) remainder.push(0);
        divisor.push(0);
        divisorMostSignificantDigit = divisor[b_l - 1];
        for (shift = a_l - b_l; shift >= 0; shift--) {
            quotientDigit = base - 1;
            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {
                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);
            }
            // quotientDigit <= base - 1
            carry = 0;
            borrow = 0;
            l = divisor.length;
            for (i = 0; i < l; i++) {
                carry += quotientDigit * divisor[i];
                q = Math.floor(carry / base);
                borrow += remainder[shift + i] - (carry - q * base);
                carry = q;
                if (borrow < 0) {
                    remainder[shift + i] = borrow + base;
                    borrow = -1;
                } else {
                    remainder[shift + i] = borrow;
                    borrow = 0;
                }
            }
            while (borrow !== 0) {
                quotientDigit -= 1;
                carry = 0;
                for (i = 0; i < l; i++) {
                    carry += remainder[shift + i] - base + divisor[i];
                    if (carry < 0) {
                        remainder[shift + i] = carry + base;
                        carry = 0;
                    } else {
                        remainder[shift + i] = carry;
                        carry = 1;
                    }
                }
                borrow += carry;
            }
            result[shift] = quotientDigit;
        }
        // denormalization
        remainder = divModSmall(remainder, lambda)[0];
        return [arrayToSmall(result), arrayToSmall(remainder)];
    }

    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/
        // Performs faster than divMod1 on larger input sizes.
        var a_l = a.length,
            b_l = b.length,
            result = [],
            part = [],
            base = BASE,
            guess, xlen, highx, highy, check;
        while (a_l) {
            part.unshift(a[--a_l]);
            trim(part);
            if (compareAbs(part, b) < 0) {
                result.push(0);
                continue;
            }
            xlen = part.length;
            highx = part[xlen - 1] * base + part[xlen - 2];
            highy = b[b_l - 1] * base + b[b_l - 2];
            if (xlen > b_l) {
                highx = (highx + 1) * base;
            }
            guess = Math.ceil(highx / highy);
            do {
                check = multiplySmall(b, guess);
                if (compareAbs(check, part) <= 0) break;
                guess--;
            } while (guess);
            result.push(guess);
            part = subtract(part, check);
        }
        result.reverse();
        return [arrayToSmall(result), arrayToSmall(part)];
    }

    function divModSmall(value, lambda) {
        var length = value.length,
            quotient = createArray(length),
            base = BASE,
            i, q, remainder, divisor;
        remainder = 0;
        for (i = length - 1; i >= 0; --i) {
            divisor = remainder * base + value[i];
            q = truncate(divisor / lambda);
            remainder = divisor - q * lambda;
            quotient[i] = q | 0;
        }
        return [quotient, remainder | 0];
    }

    function divModAny(self, v) {
        var value, n = parseValue(v);
        if (supportsNativeBigInt) {
            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];
        }
        var a = self.value, b = n.value;
        var quotient;
        if (b === 0) throw new Error("Cannot divide by zero");
        if (self.isSmall) {
            if (n.isSmall) {
                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];
            }
            return [Integer[0], self];
        }
        if (n.isSmall) {
            if (b === 1) return [self, Integer[0]];
            if (b == -1) return [self.negate(), Integer[0]];
            var abs = Math.abs(b);
            if (abs < BASE) {
                value = divModSmall(a, abs);
                quotient = arrayToSmall(value[0]);
                var remainder = value[1];
                if (self.sign) remainder = -remainder;
                if (typeof quotient === "number") {
                    if (self.sign !== n.sign) quotient = -quotient;
                    return [new SmallInteger(quotient), new SmallInteger(remainder)];
                }
                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];
            }
            b = smallToArray(abs);
        }
        var comparison = compareAbs(a, b);
        if (comparison === -1) return [Integer[0], self];
        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];

        // divMod1 is faster on smaller input sizes
        if (a.length + b.length <= 200)
            value = divMod1(a, b);
        else value = divMod2(a, b);

        quotient = value[0];
        var qSign = self.sign !== n.sign,
            mod = value[1],
            mSign = self.sign;
        if (typeof quotient === "number") {
            if (qSign) quotient = -quotient;
            quotient = new SmallInteger(quotient);
        } else quotient = new BigInteger(quotient, qSign);
        if (typeof mod === "number") {
            if (mSign) mod = -mod;
            mod = new SmallInteger(mod);
        } else mod = new BigInteger(mod, mSign);
        return [quotient, mod];
    }

    BigInteger.prototype.divmod = function (v) {
        var result = divModAny(this, v);
        return {
            quotient: result[0],
            remainder: result[1]
        };
    };
    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;


    BigInteger.prototype.divide = function (v) {
        return divModAny(this, v)[0];
    };
    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {
        return new NativeBigInt(this.value / parseValue(v).value);
    };
    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;

    BigInteger.prototype.mod = function (v) {
        return divModAny(this, v)[1];
    };
    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {
        return new NativeBigInt(this.value % parseValue(v).value);
    };
    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;

    BigInteger.prototype.pow = function (v) {
        var n = parseValue(v),
            a = this.value,
            b = n.value,
            value, x, y;
        if (b === 0) return Integer[1];
        if (a === 0) return Integer[0];
        if (a === 1) return Integer[1];
        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];
        if (n.sign) {
            return Integer[0];
        }
        if (!n.isSmall) throw new Error("The exponent " + n.toString() + " is too large.");
        if (this.isSmall) {
            if (isPrecise(value = Math.pow(a, b)))
                return new SmallInteger(truncate(value));
        }
        x = this;
        y = Integer[1];
        while (true) {
            if (b & 1 === 1) {
                y = y.times(x);
                --b;
            }
            if (b === 0) break;
            b /= 2;
            x = x.square();
        }
        return y;
    };
    SmallInteger.prototype.pow = BigInteger.prototype.pow;

    NativeBigInt.prototype.pow = function (v) {
        var n = parseValue(v);
        var a = this.value, b = n.value;
        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);
        if (b === _0) return Integer[1];
        if (a === _0) return Integer[0];
        if (a === _1) return Integer[1];
        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];
        if (n.isNegative()) return new NativeBigInt(_0);
        var x = this;
        var y = Integer[1];
        while (true) {
            if ((b & _1) === _1) {
                y = y.times(x);
                --b;
            }
            if (b === _0) break;
            b /= _2;
            x = x.square();
        }
        return y;
    }

    BigInteger.prototype.modPow = function (exp, mod) {
        exp = parseValue(exp);
        mod = parseValue(mod);
        if (mod.isZero()) throw new Error("Cannot take modPow with modulus 0");
        var r = Integer[1],
            base = this.mod(mod);
        while (exp.isPositive()) {
            if (base.isZero()) return Integer[0];
            if (exp.isOdd()) r = r.multiply(base).mod(mod);
            exp = exp.divide(2);
            base = base.square().mod(mod);
        }
        return r;
    };
    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;

    function compareAbs(a, b) {
        if (a.length !== b.length) {
            return a.length > b.length ? 1 : -1;
        }
        for (var i = a.length - 1; i >= 0; i--) {
            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;
        }
        return 0;
    }

    BigInteger.prototype.compareAbs = function (v) {
        var n = parseValue(v),
            a = this.value,
            b = n.value;
        if (n.isSmall) return 1;
        return compareAbs(a, b);
    };
    SmallInteger.prototype.compareAbs = function (v) {
        var n = parseValue(v),
            a = Math.abs(this.value),
            b = n.value;
        if (n.isSmall) {
            b = Math.abs(b);
            return a === b ? 0 : a > b ? 1 : -1;
        }
        return -1;
    };
    NativeBigInt.prototype.compareAbs = function (v) {
        var a = this.value;
        var b = parseValue(v).value;
        a = a >= 0 ? a : -a;
        b = b >= 0 ? b : -b;
        return a === b ? 0 : a > b ? 1 : -1;
    }

    BigInteger.prototype.compare = function (v) {
        // See discussion about comparison with Infinity:
        // https://github.com/peterolson/BigInteger.js/issues/61
        if (v === Infinity) {
            return -1;
        }
        if (v === -Infinity) {
            return 1;
        }

        var n = parseValue(v),
            a = this.value,
            b = n.value;
        if (this.sign !== n.sign) {
            return n.sign ? 1 : -1;
        }
        if (n.isSmall) {
            return this.sign ? -1 : 1;
        }
        return compareAbs(a, b) * (this.sign ? -1 : 1);
    };
    BigInteger.prototype.compareTo = BigInteger.prototype.compare;

    SmallInteger.prototype.compare = function (v) {
        if (v === Infinity) {
            return -1;
        }
        if (v === -Infinity) {
            return 1;
        }

        var n = parseValue(v),
            a = this.value,
            b = n.value;
        if (n.isSmall) {
            return a == b ? 0 : a > b ? 1 : -1;
        }
        if (a < 0 !== n.sign) {
            return a < 0 ? -1 : 1;
        }
        return a < 0 ? 1 : -1;
    };
    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;

    NativeBigInt.prototype.compare = function (v) {
        if (v === Infinity) {
            return -1;
        }
        if (v === -Infinity) {
            return 1;
        }
        var a = this.value;
        var b = parseValue(v).value;
        return a === b ? 0 : a > b ? 1 : -1;
    }
    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;

    BigInteger.prototype.equals = function (v) {
        return this.compare(v) === 0;
    };
    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;

    BigInteger.prototype.notEquals = function (v) {
        return this.compare(v) !== 0;
    };
    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;

    BigInteger.prototype.greater = function (v) {
        return this.compare(v) > 0;
    };
    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;

    BigInteger.prototype.lesser = function (v) {
        return this.compare(v) < 0;
    };
    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;

    BigInteger.prototype.greaterOrEquals = function (v) {
        return this.compare(v) >= 0;
    };
    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;

    BigInteger.prototype.lesserOrEquals = function (v) {
        return this.compare(v) <= 0;
    };
    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;

    BigInteger.prototype.isEven = function () {
        return (this.value[0] & 1) === 0;
    };
    SmallInteger.prototype.isEven = function () {
        return (this.value & 1) === 0;
    };
    NativeBigInt.prototype.isEven = function () {
        return (this.value & BigInt(1)) === BigInt(0);
    }

    BigInteger.prototype.isOdd = function () {
        return (this.value[0] & 1) === 1;
    };
    SmallInteger.prototype.isOdd = function () {
        return (this.value & 1) === 1;
    };
    NativeBigInt.prototype.isOdd = function () {
        return (this.value & BigInt(1)) === BigInt(1);
    }

    BigInteger.prototype.isPositive = function () {
        return !this.sign;
    };
    SmallInteger.prototype.isPositive = function () {
        return this.value > 0;
    };
    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;

    BigInteger.prototype.isNegative = function () {
        return this.sign;
    };
    SmallInteger.prototype.isNegative = function () {
        return this.value < 0;
    };
    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;

    BigInteger.prototype.isUnit = function () {
        return false;
    };
    SmallInteger.prototype.isUnit = function () {
        return Math.abs(this.value) === 1;
    };
    NativeBigInt.prototype.isUnit = function () {
        return this.abs().value === BigInt(1);
    }

    BigInteger.prototype.isZero = function () {
        return false;
    };
    SmallInteger.prototype.isZero = function () {
        return this.value === 0;
    };
    NativeBigInt.prototype.isZero = function () {
        return this.value === BigInt(0);
    }

    BigInteger.prototype.isDivisibleBy = function (v) {
        var n = parseValue(v);
        if (n.isZero()) return false;
        if (n.isUnit()) return true;
        if (n.compareAbs(2) === 0) return this.isEven();
        return this.mod(n).isZero();
    };
    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;

    function isBasicPrime(v) {
        var n = v.abs();
        if (n.isUnit()) return false;
        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;
        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;
        if (n.lesser(49)) return true;
        // we don't know if it's prime: let the other functions figure it out
    }

    function millerRabinTest(n, a) {
        var nPrev = n.prev(),
            b = nPrev,
            r = 0,
            d, t, i, x;
        while (b.isEven()) b = b.divide(2), r++;
        next: for (i = 0; i < a.length; i++) {
            if (n.lesser(a[i])) continue;
            x = bigInt(a[i]).modPow(b, n);
            if (x.isUnit() || x.equals(nPrev)) continue;
            for (d = r - 1; d != 0; d--) {
                x = x.square().mod(n);
                if (x.isUnit()) return false;
                if (x.equals(nPrev)) continue next;
            }
            return false;
        }
        return true;
    }

    // Set "strict" to true to force GRH-supported lower bound of 2*log(N)^2
    BigInteger.prototype.isPrime = function (strict) {
        var isPrime = isBasicPrime(this);
        if (isPrime !== undefined) return isPrime;
        var n = this.abs();
        var bits = n.bitLength();
        if (bits <= 64)
            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);
        var logN = Math.log(2) * bits.toJSNumber();
        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);
        for (var a = [], i = 0; i < t; i++) {
            a.push(bigInt(i + 2));
        }
        return millerRabinTest(n, a);
    };
    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;

    BigInteger.prototype.isProbablePrime = function (iterations) {
        var isPrime = isBasicPrime(this);
        if (isPrime !== undefined) return isPrime;
        var n = this.abs();
        var t = iterations === undefined ? 5 : iterations;
        for (var a = [], i = 0; i < t; i++) {
            a.push(bigInt.randBetween(2, n.minus(2)));
        }
        return millerRabinTest(n, a);
    };
    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;

    BigInteger.prototype.modInv = function (n) {
        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;
        while (!newR.isZero()) {
            q = r.divide(newR);
            lastT = t;
            lastR = r;
            t = newT;
            r = newR;
            newT = lastT.subtract(q.multiply(newT));
            newR = lastR.subtract(q.multiply(newR));
        }
        if (!r.isUnit()) throw new Error(this.toString() + " and " + n.toString() + " are not co-prime");
        if (t.compare(0) === -1) {
            t = t.add(n);
        }
        if (this.isNegative()) {
            return t.negate();
        }
        return t;
    };

    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;

    BigInteger.prototype.next = function () {
        var value = this.value;
        if (this.sign) {
            return subtractSmall(value, 1, this.sign);
        }
        return new BigInteger(addSmall(value, 1), this.sign);
    };
    SmallInteger.prototype.next = function () {
        var value = this.value;
        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);
        return new BigInteger(MAX_INT_ARR, false);
    };
    NativeBigInt.prototype.next = function () {
        return new NativeBigInt(this.value + BigInt(1));
    }

    BigInteger.prototype.prev = function () {
        var value = this.value;
        if (this.sign) {
            return new BigInteger(addSmall(value, 1), true);
        }
        return subtractSmall(value, 1, this.sign);
    };
    SmallInteger.prototype.prev = function () {
        var value = this.value;
        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);
        return new BigInteger(MAX_INT_ARR, true);
    };
    NativeBigInt.prototype.prev = function () {
        return new NativeBigInt(this.value - BigInt(1));
    }

    var powersOfTwo = [1];
    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);
    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];

    function shift_isSmall(n) {
        return Math.abs(n) <= BASE;
    }

    BigInteger.prototype.shiftLeft = function (v) {
        var n = parseValue(v).toJSNumber();
        if (!shift_isSmall(n)) {
            throw new Error(String(n) + " is too large for shifting.");
        }
        if (n < 0) return this.shiftRight(-n);
        var result = this;
        if (result.isZero()) return result;
        while (n >= powers2Length) {
            result = result.multiply(highestPower2);
            n -= powers2Length - 1;
        }
        return result.multiply(powersOfTwo[n]);
    };
    NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;

    BigInteger.prototype.shiftRight = function (v) {
        var remQuo;
        var n = parseValue(v).toJSNumber();
        if (!shift_isSmall(n)) {
            throw new Error(String(n) + " is too large for shifting.");
        }
        if (n < 0) return this.shiftLeft(-n);
        var result = this;
        while (n >= powers2Length) {
            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;
            remQuo = divModAny(result, highestPower2);
            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];
            n -= powers2Length - 1;
        }
        remQuo = divModAny(result, powersOfTwo[n]);
        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];
    };
    NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;

    function bitwise(x, y, fn) {
        y = parseValue(y);
        var xSign = x.isNegative(), ySign = y.isNegative();
        var xRem = xSign ? x.not() : x,
            yRem = ySign ? y.not() : y;
        var xDigit = 0, yDigit = 0;
        var xDivMod = null, yDivMod = null;
        var result = [];
        while (!xRem.isZero() || !yRem.isZero()) {
            xDivMod = divModAny(xRem, highestPower2);
            xDigit = xDivMod[1].toJSNumber();
            if (xSign) {
                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers
            }

            yDivMod = divModAny(yRem, highestPower2);
            yDigit = yDivMod[1].toJSNumber();
            if (ySign) {
                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers
            }

            xRem = xDivMod[0];
            yRem = yDivMod[0];
            result.push(fn(xDigit, yDigit));
        }
        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);
        for (var i = result.length - 1; i >= 0; i -= 1) {
            sum = sum.multiply(highestPower2).add(bigInt(result[i]));
        }
        return sum;
    }

    BigInteger.prototype.not = function () {
        return this.negate().prev();
    };
    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;

    BigInteger.prototype.and = function (n) {
        return bitwise(this, n, function (a, b) { return a & b; });
    };
    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;

    BigInteger.prototype.or = function (n) {
        return bitwise(this, n, function (a, b) { return a | b; });
    };
    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;

    BigInteger.prototype.xor = function (n) {
        return bitwise(this, n, function (a, b) { return a ^ b; });
    };
    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;

    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;
    function roughLOB(n) { // get lowestOneBit (rough)
        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)
        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]
        var v = n.value,
            x = typeof v === "number" ? v | LOBMASK_I :
                typeof v === "bigint" ? v | BigInt(LOBMASK_I) :
                    v[0] + v[1] * BASE | LOBMASK_BI;
        return x & -x;
    }

    function integerLogarithm(value, base) {
        if (base.compareTo(value) <= 0) {
            var tmp = integerLogarithm(value, base.square(base));
            var p = tmp.p;
            var e = tmp.e;
            var t = p.multiply(base);
            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };
        }
        return { p: bigInt(1), e: 0 };
    }

    BigInteger.prototype.bitLength = function () {
        var n = this;
        if (n.compareTo(bigInt(0)) < 0) {
            n = n.negate().subtract(bigInt(1));
        }
        if (n.compareTo(bigInt(0)) === 0) {
            return bigInt(0);
        }
        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));
    }
    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;

    function max(a, b) {
        a = parseValue(a);
        b = parseValue(b);
        return a.greater(b) ? a : b;
    }
    function min(a, b) {
        a = parseValue(a);
        b = parseValue(b);
        return a.lesser(b) ? a : b;
    }
    function gcd(a, b) {
        a = parseValue(a).abs();
        b = parseValue(b).abs();
        if (a.equals(b)) return a;
        if (a.isZero()) return b;
        if (b.isZero()) return a;
        var c = Integer[1], d, t;
        while (a.isEven() && b.isEven()) {
            d = min(roughLOB(a), roughLOB(b));
            a = a.divide(d);
            b = b.divide(d);
            c = c.multiply(d);
        }
        while (a.isEven()) {
            a = a.divide(roughLOB(a));
        }
        do {
            while (b.isEven()) {
                b = b.divide(roughLOB(b));
            }
            if (a.greater(b)) {
                t = b; b = a; a = t;
            }
            b = b.subtract(a);
        } while (!b.isZero());
        return c.isUnit() ? a : a.multiply(c);
    }
    function lcm(a, b) {
        a = parseValue(a).abs();
        b = parseValue(b).abs();
        return a.divide(gcd(a, b)).multiply(b);
    }
    function randBetween(a, b) {
        a = parseValue(a);
        b = parseValue(b);
        var low = min(a, b), high = max(a, b);
        var range = high.subtract(low).add(1);
        if (range.isSmall) return low.add(Math.floor(Math.random() * range));
        var digits = toBase(range, BASE).value;
        var result = [], restricted = true;
        for (var i = 0; i < digits.length; i++) {
            var top = restricted ? digits[i] : BASE;
            var digit = truncate(Math.random() * top);
            result.push(digit);
            if (digit < top) restricted = false;
        }
        return low.add(Integer.fromArray(result, BASE, false));
    }

    var parseBase = function (text, base, alphabet, caseSensitive) {
        alphabet = alphabet || DEFAULT_ALPHABET;
        text = String(text);
        if (!caseSensitive) {
            text = text.toLowerCase();
            alphabet = alphabet.toLowerCase();
        }
        var length = text.length;
        var i;
        var absBase = Math.abs(base);
        var alphabetValues = {};
        for (i = 0; i < alphabet.length; i++) {
            alphabetValues[alphabet[i]] = i;
        }
        for (i = 0; i < length; i++) {
            var c = text[i];
            if (c === "-") continue;
            if (c in alphabetValues) {
                if (alphabetValues[c] >= absBase) {
                    if (c === "1" && absBase === 1) continue;
                    throw new Error(c + " is not a valid digit in base " + base + ".");
                }
            }
        }
        base = parseValue(base);
        var digits = [];
        var isNegative = text[0] === "-";
        for (i = isNegative ? 1 : 0; i < text.length; i++) {
            var c = text[i];
            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));
            else if (c === "<") {
                var start = i;
                do { i++; } while (text[i] !== ">" && i < text.length);
                digits.push(parseValue(text.slice(start + 1, i)));
            }
            else throw new Error(c + " is not a valid character");
        }
        return parseBaseFromArray(digits, base, isNegative);
    };

    function parseBaseFromArray(digits, base, isNegative) {
        var val = Integer[0], pow = Integer[1], i;
        for (i = digits.length - 1; i >= 0; i--) {
            val = val.add(digits[i].times(pow));
            pow = pow.times(base);
        }
        return isNegative ? val.negate() : val;
    }

    function stringify(digit, alphabet) {
        alphabet = alphabet || DEFAULT_ALPHABET;
        if (digit < alphabet.length) {
            return alphabet[digit];
        }
        return "<" + digit + ">";
    }

    function toBase(n, base) {
        base = bigInt(base);
        if (base.isZero()) {
            if (n.isZero()) return { value: [0], isNegative: false };
            throw new Error("Cannot convert nonzero numbers to base 0.");
        }
        if (base.equals(-1)) {
            if (n.isZero()) return { value: [0], isNegative: false };
            if (n.isNegative())
                return {
                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))
                        .map(Array.prototype.valueOf, [1, 0])
                    ),
                    isNegative: false
                };

            var arr = Array.apply(null, Array(n.toJSNumber() - 1))
                .map(Array.prototype.valueOf, [0, 1]);
            arr.unshift([1]);
            return {
                value: [].concat.apply([], arr),
                isNegative: false
            };
        }

        var neg = false;
        if (n.isNegative() && base.isPositive()) {
            neg = true;
            n = n.abs();
        }
        if (base.isUnit()) {
            if (n.isZero()) return { value: [0], isNegative: false };

            return {
                value: Array.apply(null, Array(n.toJSNumber()))
                    .map(Number.prototype.valueOf, 1),
                isNegative: neg
            };
        }
        var out = [];
        var left = n, divmod;
        while (left.isNegative() || left.compareAbs(base) >= 0) {
            divmod = left.divmod(base);
            left = divmod.quotient;
            var digit = divmod.remainder;
            if (digit.isNegative()) {
                digit = base.minus(digit).abs();
                left = left.next();
            }
            out.push(digit.toJSNumber());
        }
        out.push(left.toJSNumber());
        return { value: out.reverse(), isNegative: neg };
    }

    function toBaseString(n, base, alphabet) {
        var arr = toBase(n, base);
        return (arr.isNegative ? "-" : "") + arr.value.map(function (x) {
            return stringify(x, alphabet);
        }).join('');
    }

    BigInteger.prototype.toArray = function (radix) {
        return toBase(this, radix);
    };

    SmallInteger.prototype.toArray = function (radix) {
        return toBase(this, radix);
    };

    NativeBigInt.prototype.toArray = function (radix) {
        return toBase(this, radix);
    };

    BigInteger.prototype.toString = function (radix, alphabet) {
        if (radix === undefined) radix = 10;
        if (radix !== 10) return toBaseString(this, radix, alphabet);
        var v = this.value, l = v.length, str = String(v[--l]), zeros = "0000000", digit;
        while (--l >= 0) {
            digit = String(v[l]);
            str += zeros.slice(digit.length) + digit;
        }
        var sign = this.sign ? "-" : "";
        return sign + str;
    };

    SmallInteger.prototype.toString = function (radix, alphabet) {
        if (radix === undefined) radix = 10;
        if (radix != 10) return toBaseString(this, radix, alphabet);
        return String(this.value);
    };

    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;

    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }

    BigInteger.prototype.valueOf = function () {
        return parseInt(this.toString(), 10);
    };
    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;

    SmallInteger.prototype.valueOf = function () {
        return this.value;
    };
    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;
    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {
        return parseInt(this.toString(), 10);
    }

    function parseStringValue(v) {
        if (isPrecise(+v)) {
            var x = +v;
            if (x === truncate(x))
                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);
            throw new Error("Invalid integer: " + v);
        }
        var sign = v[0] === "-";
        if (sign) v = v.slice(1);
        var split = v.split(/e/i);
        if (split.length > 2) throw new Error("Invalid integer: " + split.join("e"));
        if (split.length === 2) {
            var exp = split[1];
            if (exp[0] === "+") exp = exp.slice(1);
            exp = +exp;
            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error("Invalid integer: " + exp + " is not a valid exponent.");
            var text = split[0];
            var decimalPlace = text.indexOf(".");
            if (decimalPlace >= 0) {
                exp -= text.length - decimalPlace - 1;
                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);
            }
            if (exp < 0) throw new Error("Cannot include negative exponent part for integers");
            text += (new Array(exp + 1)).join("0");
            v = text;
        }
        var isValid = /^([0-9][0-9]*)$/.test(v);
        if (!isValid) throw new Error("Invalid integer: " + v);
        if (supportsNativeBigInt) {
            return new NativeBigInt(BigInt(sign ? "-" + v : v));
        }
        var r = [], max = v.length, l = LOG_BASE, min = max - l;
        while (max > 0) {
            r.push(+v.slice(min, max));
            min -= l;
            if (min < 0) min = 0;
            max -= l;
        }
        trim(r);
        return new BigInteger(r, sign);
    }

    function parseNumberValue(v) {
        if (supportsNativeBigInt) {
            return new NativeBigInt(BigInt(v));
        }
        if (isPrecise(v)) {
            if (v !== truncate(v)) throw new Error(v + " is not an integer.");
            return new SmallInteger(v);
        }
        return parseStringValue(v.toString());
    }

    function parseValue(v) {
        if (typeof v === "number") {
            return parseNumberValue(v);
        }
        if (typeof v === "string") {
            return parseStringValue(v);
        }
        if (typeof v === "bigint") {
            return new NativeBigInt(v);
        }
        return v;
    }
    // Pre-define numbers in range [-999,999]
    for (var i = 0; i < 1000; i++) {
        Integer[i] = parseValue(i);
        if (i > 0) Integer[-i] = parseValue(-i);
    }
    // Backwards compatibility
    Integer.one = Integer[1];
    Integer.zero = Integer[0];
    Integer.minusOne = Integer[-1];
    Integer.max = max;
    Integer.min = min;
    Integer.gcd = gcd;
    Integer.lcm = lcm;
    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };
    Integer.randBetween = randBetween;

    Integer.fromArray = function (digits, base, isNegative) {
        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);
    };

    return Integer;
})();

// Node.js check
if (typeof module !== "undefined" && module.hasOwnProperty("exports")) {
    module.exports = bigInt;
}

//amd check
if (typeof define === "function" && define.amd) {
    define("big-integer", [], function () {
        return bigInt;
    });
}

},{}],2:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],3:[function(require,module,exports){
(function (setImmediate,clearImmediate){
var nextTick = require('process/browser.js').nextTick;
var apply = Function.prototype.apply;
var slice = Array.prototype.slice;
var immediateIds = {};
var nextImmediateId = 0;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) { timeout.close(); };

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// That's not how node.js implements it but the exposed api is the same.
exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
  var id = nextImmediateId++;
  var args = arguments.length < 2 ? false : slice.call(arguments, 1);

  immediateIds[id] = true;

  nextTick(function onNextTick() {
    if (immediateIds[id]) {
      // fn.call() is faster so we optimize for the common use-case
      // @see http://jsperf.com/call-apply-segu
      if (args) {
        fn.apply(null, args);
      } else {
        fn.call(null);
      }
      // Prevent ids from leaking
      exports.clearImmediate(id);
    }
  });

  return id;
};

exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
  delete immediateIds[id];
};
}).call(this,require("timers").setImmediate,require("timers").clearImmediate)
},{"process/browser.js":2,"timers":3}],4:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Functor = require("../Data.Functor/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Alt = function (Functor0, alt) {
    this.Functor0 = Functor0;
    this.alt = alt;
};
var altArray = new Alt(function () {
    return Data_Functor.functorArray;
}, Data_Semigroup.append(Data_Semigroup.semigroupArray));
var alt = function (dict) {
    return dict.alt;
};
module.exports = {
    Alt: Alt,
    alt: alt,
    altArray: altArray
};

},{"../Data.Functor/index.js":153,"../Data.Semigroup/index.js":248}],5:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Alternative = function (Applicative0, Plus1) {
    this.Applicative0 = Applicative0;
    this.Plus1 = Plus1;
};
var alternativeArray = new Alternative(function () {
    return Control_Applicative.applicativeArray;
}, function () {
    return Control_Plus.plusArray;
});
module.exports = {
    Alternative: Alternative,
    alternativeArray: alternativeArray
};

},{"../Control.Alt/index.js":4,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Plus/index.js":60,"../Data.Functor/index.js":153}],6:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Const = require("../Data.Const/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_NonEmpty = require("../Data.List.NonEmpty/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_NonEmpty = require("../Data.NonEmpty/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Pure = (function () {
    function Pure(value0) {
        this.value0 = value0;
    };
    Pure.create = function (value0) {
        return new Pure(value0);
    };
    return Pure;
})();
var Lift = (function () {
    function Lift(value0) {
        this.value0 = value0;
    };
    Lift.create = function (value0) {
        return new Lift(value0);
    };
    return Lift;
})();
var Ap = (function () {
    function Ap(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Ap.create = function (value0) {
        return function (value1) {
            return new Ap(value0, value1);
        };
    };
    return Ap;
})();
var mkAp = function (fba) {
    return function (fb) {
        return new Ap(fba, fb);
    };
};
var liftFreeAp = Lift.create;
var goLeft = function ($copy_dictApplicative) {
    return function ($copy_fStack) {
        return function ($copy_valStack) {
            return function ($copy_nat) {
                return function ($copy_func) {
                    return function ($copy_count) {
                        var $tco_var_dictApplicative = $copy_dictApplicative;
                        var $tco_var_fStack = $copy_fStack;
                        var $tco_var_valStack = $copy_valStack;
                        var $tco_var_nat = $copy_nat;
                        var $tco_var_func = $copy_func;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(dictApplicative, fStack, valStack, nat, func, count) {
                            if (func instanceof Pure) {
                                $tco_done = true;
                                return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                    func: Control_Applicative.pure(dictApplicative)(func.value0),
                                    count: count
                                }, fStack), valStack);
                            };
                            if (func instanceof Lift) {
                                $tco_done = true;
                                return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                    func: nat(func.value0),
                                    count: count
                                }, fStack), valStack);
                            };
                            if (func instanceof Ap) {
                                $tco_var_dictApplicative = dictApplicative;
                                $tco_var_fStack = fStack;
                                $tco_var_valStack = Data_List_NonEmpty.cons(func.value1)(valStack);
                                $tco_var_nat = nat;
                                $tco_var_func = func.value0;
                                $copy_count = count + 1 | 0;
                                return;
                            };
                            throw new Error("Failed pattern match at Control.Applicative.Free (line 102, column 41 - line 105, column 81): " + [ func.constructor.name ]);
                        };
                        while (!$tco_done) {
                            $tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_valStack, $tco_var_nat, $tco_var_func, $copy_count);
                        };
                        return $tco_result;
                    };
                };
            };
        };
    };
};
var goApply = function ($copy_dictApplicative) {
    return function ($copy_fStack) {
        return function ($copy_vals) {
            return function ($copy_gVal) {
                var $tco_var_dictApplicative = $copy_dictApplicative;
                var $tco_var_fStack = $copy_fStack;
                var $tco_var_vals = $copy_vals;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(dictApplicative, fStack, vals, gVal) {
                    if (fStack instanceof Data_List_Types.Nil) {
                        $tco_done = true;
                        return new Data_Either.Left(gVal);
                    };
                    if (fStack instanceof Data_List_Types.Cons) {
                        var gRes = Control_Apply.apply(dictApplicative.Apply0())(fStack.value0.func)(gVal);
                        var $14 = fStack.value0.count === 1;
                        if ($14) {
                            if (fStack.value1 instanceof Data_List_Types.Nil) {
                                $tco_done = true;
                                return new Data_Either.Left(gRes);
                            };
                            $tco_var_dictApplicative = dictApplicative;
                            $tco_var_fStack = fStack.value1;
                            $tco_var_vals = vals;
                            $copy_gVal = gRes;
                            return;
                        };
                        if (vals instanceof Data_List_Types.Nil) {
                            $tco_done = true;
                            return new Data_Either.Left(gRes);
                        };
                        if (vals instanceof Data_List_Types.Cons) {
                            $tco_done = true;
                            return Data_Either.Right.create(new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                func: gRes,
                                count: fStack.value0.count - 1 | 0
                            }, fStack.value1), new Data_NonEmpty.NonEmpty(vals.value0, vals.value1)));
                        };
                        throw new Error("Failed pattern match at Control.Applicative.Free (line 83, column 11 - line 88, column 50): " + [ vals.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at Control.Applicative.Free (line 72, column 3 - line 88, column 50): " + [ fStack.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_vals, $copy_gVal);
                };
                return $tco_result;
            };
        };
    };
};
var functorFreeAp = new Data_Functor.Functor(function (f) {
    return function (x) {
        return mkAp(new Pure(f))(x);
    };
});
var foldFreeAp = function (dictApplicative) {
    return function (nat) {
        return function (z) {
            var go = function ($copy_v) {
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(v) {
                    if (v.value1.value0 instanceof Pure) {
                        var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(Control_Applicative.pure(dictApplicative)(v.value1.value0.value0));
                        if (v1 instanceof Data_Either.Left) {
                            $tco_done = true;
                            return v1.value0;
                        };
                        if (v1 instanceof Data_Either.Right) {
                            $copy_v = v1.value0;
                            return;
                        };
                        throw new Error("Failed pattern match at Control.Applicative.Free (line 54, column 17 - line 56, column 24): " + [ v1.constructor.name ]);
                    };
                    if (v.value1.value0 instanceof Lift) {
                        var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(nat(v.value1.value0.value0));
                        if (v1 instanceof Data_Either.Left) {
                            $tco_done = true;
                            return v1.value0;
                        };
                        if (v1 instanceof Data_Either.Right) {
                            $copy_v = v1.value0;
                            return;
                        };
                        throw new Error("Failed pattern match at Control.Applicative.Free (line 57, column 17 - line 59, column 24): " + [ v1.constructor.name ]);
                    };
                    if (v.value1.value0 instanceof Ap) {
                        var nextVals = new Data_NonEmpty.NonEmpty(v.value1.value0.value1, v.value1.value1);
                        $copy_v = goLeft(dictApplicative)(v.value0)(nextVals)(nat)(v.value1.value0.value0)(1);
                        return;
                    };
                    throw new Error("Failed pattern match at Control.Applicative.Free (line 53, column 5 - line 64, column 1): " + [ v.value1.value0.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($copy_v);
                };
                return $tco_result;
            };
            return go(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_NonEmpty.singleton(z)));
        };
    };
};
var retractFreeAp = function (dictApplicative) {
    return foldFreeAp(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
};
var applyFreeAp = new Control_Apply.Apply(function () {
    return functorFreeAp;
}, function (fba) {
    return function (fb) {
        return mkAp(fba)(fb);
    };
});
var applicativeFreeAp = new Control_Applicative.Applicative(function () {
    return applyFreeAp;
}, Pure.create);
var hoistFreeAp = function (f) {
    return foldFreeAp(applicativeFreeAp)(function ($37) {
        return liftFreeAp(f($37));
    });
};
var analyzeFreeAp = function (dictMonoid) {
    return function (k) {
        return function ($38) {
            return Data_Newtype.unwrap(Data_Const.newtypeConst)(foldFreeAp(Data_Const.applicativeConst(dictMonoid))(function ($39) {
                return Data_Const.Const(k($39));
            })($38));
        };
    };
};
module.exports = {
    liftFreeAp: liftFreeAp,
    retractFreeAp: retractFreeAp,
    foldFreeAp: foldFreeAp,
    hoistFreeAp: hoistFreeAp,
    analyzeFreeAp: analyzeFreeAp,
    functorFreeAp: functorFreeAp,
    applyFreeAp: applyFreeAp,
    applicativeFreeAp: applicativeFreeAp
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Category/index.js":14,"../Control.Semigroupoid/index.js":61,"../Data.Const/index.js":119,"../Data.Either/index.js":131,"../Data.Eq/index.js":135,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.List.NonEmpty/index.js":202,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Newtype/index.js":220,"../Data.NonEmpty/index.js":221,"../Data.Ring/index.js":242,"../Data.Semiring/index.js":251,"../Data.Tuple/index.js":283,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425}],7:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Apply = require("../Control.Apply/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Applicative = function (Apply0, pure) {
    this.Apply0 = Apply0;
    this.pure = pure;
};
var pure = function (dict) {
    return dict.pure;
};
var unless = function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (!v) {
                return v1;
            };
            if (v) {
                return pure(dictApplicative)(Data_Unit.unit);
            };
            throw new Error("Failed pattern match at Control.Applicative (line 62, column 1 - line 62, column 65): " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var when = function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v) {
                return v1;
            };
            if (!v) {
                return pure(dictApplicative)(Data_Unit.unit);
            };
            throw new Error("Failed pattern match at Control.Applicative (line 57, column 1 - line 57, column 63): " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var liftA1 = function (dictApplicative) {
    return function (f) {
        return function (a) {
            return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
        };
    };
};
var applicativeFn = new Applicative(function () {
    return Control_Apply.applyFn;
}, function (x) {
    return function (v) {
        return x;
    };
});
var applicativeArray = new Applicative(function () {
    return Control_Apply.applyArray;
}, function (x) {
    return [ x ];
});
module.exports = {
    Applicative: Applicative,
    pure: pure,
    liftA1: liftA1,
    unless: unless,
    when: when,
    applicativeFn: applicativeFn,
    applicativeArray: applicativeArray
};

},{"../Control.Apply/index.js":9,"../Data.Functor/index.js":153,"../Data.Unit/index.js":289}],8:[function(require,module,exports){
"use strict";

exports.arrayApply = function (fs) {
  return function (xs) {
    var l = fs.length;
    var k = xs.length;
    var result = new Array(l*k);
    var n = 0;
    for (var i = 0; i < l; i++) {
      var f = fs[i];
      for (var j = 0; j < k; j++) {
        result[n++] = f(xs[j]);
      }
    }
    return result;
  };
};

},{}],9:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Category = require("../Control.Category/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Apply = function (Functor0, apply) {
    this.Functor0 = Functor0;
    this.apply = apply;
};
var applyFn = new Apply(function () {
    return Data_Functor.functorFn;
}, function (f) {
    return function (g) {
        return function (x) {
            return f(x)(g(x));
        };
    };
});
var applyArray = new Apply(function () {
    return Data_Functor.functorArray;
}, $foreign.arrayApply);
var apply = function (dict) {
    return dict.apply;
};
var applyFirst = function (dictApply) {
    return function (a) {
        return function (b) {
            return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"])(a))(b);
        };
    };
};
var applySecond = function (dictApply) {
    return function (a) {
        return function (b) {
            return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
        };
    };
};
var lift2 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
            };
        };
    };
};
var lift3 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c);
                };
            };
        };
    };
};
var lift4 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d);
                    };
                };
            };
        };
    };
};
var lift5 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return apply(dictApply)(apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d))(e);
                        };
                    };
                };
            };
        };
    };
};
module.exports = {
    Apply: Apply,
    apply: apply,
    applyFirst: applyFirst,
    applySecond: applySecond,
    lift2: lift2,
    lift3: lift3,
    lift4: lift4,
    lift5: lift5,
    applyFn: applyFn,
    applyArray: applyArray
};

},{"../Control.Category/index.js":14,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"./foreign.js":8}],10:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Biapply = require("../Control.Biapply/index.js");
var Biapplicative = function (Biapply0, bipure) {
    this.Biapply0 = Biapply0;
    this.bipure = bipure;
};
var bipure = function (dict) {
    return dict.bipure;
};
module.exports = {
    bipure: bipure,
    Biapplicative: Biapplicative
};

},{"../Control.Biapply/index.js":11}],11:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Function = require("../Data.Function/index.js");
var Biapply = function (Bifunctor0, biapply) {
    this.Bifunctor0 = Bifunctor0;
    this.biapply = biapply;
};
var biapply = function (dict) {
    return dict.biapply;
};
var biapplyFirst = function (dictBiapply) {
    return function (a) {
        return function (b) {
            return biapply(dictBiapply)(Control_Category.identity(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn))))(a))(b);
        };
    };
};
var biapplySecond = function (dictBiapply) {
    return function (a) {
        return function (b) {
            return biapply(dictBiapply)(Control_Category.identity(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(Data_Function["const"])(Data_Function["const"]))(a))(b);
        };
    };
};
var bilift2 = function (dictBiapply) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return biapply(dictBiapply)(Control_Category.identity(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(f)(g))(a))(b);
                };
            };
        };
    };
};
var bilift3 = function (dictBiapply) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return biapply(dictBiapply)(biapply(dictBiapply)(Control_Category.identity(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(f)(g))(a))(b))(c);
                    };
                };
            };
        };
    };
};
module.exports = {
    biapply: biapply,
    Biapply: Biapply,
    biapplyFirst: biapplyFirst,
    biapplySecond: biapplySecond,
    bilift2: bilift2,
    bilift3: bilift3
};

},{"../Control.Category/index.js":14,"../Data.Bifunctor/index.js":106,"../Data.Function/index.js":145}],12:[function(require,module,exports){
"use strict";

exports.arrayBind = function (arr) {
  return function (f) {
    var result = [];
    for (var i = 0, l = arr.length; i < l; i++) {
      Array.prototype.push.apply(result, f(arr[i]));
    }
    return result;
  };
};

},{}],13:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Category = require("../Control.Category/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Bind = function (Apply0, bind) {
    this.Apply0 = Apply0;
    this.bind = bind;
};
var Discard = function (discard) {
    this.discard = discard;
};
var discard = function (dict) {
    return dict.discard;
};
var bindFn = new Bind(function () {
    return Control_Apply.applyFn;
}, function (m) {
    return function (f) {
        return function (x) {
            return f(m(x))(x);
        };
    };
});
var bindArray = new Bind(function () {
    return Control_Apply.applyArray;
}, $foreign.arrayBind);
var bind = function (dict) {
    return dict.bind;
};
var bindFlipped = function (dictBind) {
    return Data_Function.flip(bind(dictBind));
};
var composeKleisliFlipped = function (dictBind) {
    return function (f) {
        return function (g) {
            return function (a) {
                return bindFlipped(dictBind)(f)(g(a));
            };
        };
    };
};
var composeKleisli = function (dictBind) {
    return function (f) {
        return function (g) {
            return function (a) {
                return bind(dictBind)(f(a))(g);
            };
        };
    };
};
var discardUnit = new Discard(function (dictBind) {
    return bind(dictBind);
});
var ifM = function (dictBind) {
    return function (cond) {
        return function (t) {
            return function (f) {
                return bind(dictBind)(cond)(function (cond$prime) {
                    if (cond$prime) {
                        return t;
                    };
                    return f;
                });
            };
        };
    };
};
var join = function (dictBind) {
    return function (m) {
        return bind(dictBind)(m)(Control_Category.identity(Control_Category.categoryFn));
    };
};
module.exports = {
    Bind: Bind,
    bind: bind,
    bindFlipped: bindFlipped,
    Discard: Discard,
    discard: discard,
    join: join,
    composeKleisli: composeKleisli,
    composeKleisliFlipped: composeKleisliFlipped,
    ifM: ifM,
    bindFn: bindFn,
    bindArray: bindArray,
    discardUnit: discardUnit
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Category/index.js":14,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Unit/index.js":289,"./foreign.js":12}],14:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Category = function (Semigroupoid0, identity) {
    this.Semigroupoid0 = Semigroupoid0;
    this.identity = identity;
};
var identity = function (dict) {
    return dict.identity;
};
var categoryFn = new Category(function () {
    return Control_Semigroupoid.semigroupoidFn;
}, function (x) {
    return x;
});
module.exports = {
    Category: Category,
    identity: identity,
    categoryFn: categoryFn
};

},{"../Control.Semigroupoid/index.js":61}],15:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Comonad_Trans_Class = require("../Control.Comonad.Trans.Class/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var EnvT = function (x) {
    return x;
};
var withEnvT = function (f) {
    return function (v) {
        return EnvT(new Data_Tuple.Tuple(f(v.value0), v.value1));
    };
};
var runEnvT = function (v) {
    return v;
};
var newtypeEnvT = new Data_Newtype.Newtype(function (n) {
    return n;
}, EnvT);
var mapEnvT = function (f) {
    return function (v) {
        return EnvT(new Data_Tuple.Tuple(v.value0, f(v.value1)));
    };
};
var functorEnvT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return EnvT(new Data_Tuple.Tuple(v.value0, Data_Functor.map(dictFunctor)(f)(v.value1)));
        };
    });
};
var foldableEnvT = function (dictFoldable) {
    return new Data_Foldable.Foldable(function (dictMonoid) {
        return function (fn) {
            return function (v) {
                return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(fn)(v.value1);
            };
        };
    }, function (fn) {
        return function (a) {
            return function (v) {
                return Data_Foldable.foldl(dictFoldable)(fn)(a)(v.value1);
            };
        };
    }, function (fn) {
        return function (a) {
            return function (v) {
                return Data_Foldable.foldr(dictFoldable)(fn)(a)(v.value1);
            };
        };
    });
};
var traversableEnvT = function (dictTraversable) {
    return new Data_Traversable.Traversable(function () {
        return foldableEnvT(dictTraversable.Foldable1());
    }, function () {
        return functorEnvT(dictTraversable.Functor0());
    }, function (dictApplicative) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Functor.map(Data_Functor.functorFn)(EnvT)(Data_Tuple.Tuple.create(v.value0)))(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v.value1));
        };
    }, function (dictApplicative) {
        return function (f) {
            return function (v) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Functor.map(Data_Functor.functorFn)(EnvT)(Data_Tuple.Tuple.create(v.value0)))(Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)(v.value1));
            };
        };
    });
};
var extendEnvT = function (dictExtend) {
    return new Control_Extend.Extend(function () {
        return functorEnvT(dictExtend.Functor0());
    }, function (f) {
        return function (v) {
            return EnvT(new Data_Tuple.Tuple(v.value0, Data_Functor.map(dictExtend.Functor0())(f)(Control_Extend.extend(dictExtend)(function ($68) {
                return EnvT(Data_Tuple.Tuple.create(v.value0)($68));
            })(v.value1))));
        };
    });
};
var comonadTransEnvT = new Control_Comonad_Trans_Class.ComonadTrans(function (dictComonad) {
    return function (v) {
        return v.value1;
    };
});
var comonadEnvT = function (dictComonad) {
    return new Control_Comonad.Comonad(function () {
        return extendEnvT(dictComonad.Extend0());
    }, function (v) {
        return Control_Comonad.extract(dictComonad)(v.value1);
    });
};
module.exports = {
    EnvT: EnvT,
    runEnvT: runEnvT,
    withEnvT: withEnvT,
    mapEnvT: mapEnvT,
    newtypeEnvT: newtypeEnvT,
    functorEnvT: functorEnvT,
    extendEnvT: extendEnvT,
    comonadEnvT: comonadEnvT,
    comonadTransEnvT: comonadTransEnvT,
    foldableEnvT: foldableEnvT,
    traversableEnvT: traversableEnvT
};

},{"../Control.Comonad.Trans.Class/index.js":20,"../Control.Comonad/index.js":21,"../Control.Extend/index.js":24,"../Control.Semigroupoid/index.js":61,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Newtype/index.js":220,"../Data.Traversable/index.js":281,"../Data.Tuple/index.js":283,"../Prelude/index.js":385}],16:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Comonad_Env_Trans = require("../Control.Comonad.Env.Trans/index.js");
var Control_Comonad_Store_Trans = require("../Control.Comonad.Store.Trans/index.js");
var Control_Comonad_Traced_Trans = require("../Control.Comonad.Traced.Trans/index.js");
var Control_Comonad_Trans_Class = require("../Control.Comonad.Trans.Class/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var ComonadStore = function (Comonad0, peek, pos) {
    this.Comonad0 = Comonad0;
    this.peek = peek;
    this.pos = pos;
};
var pos = function (dict) {
    return dict.pos;
};
var peek = function (dict) {
    return dict.peek;
};
var peeks = function (dictComonadStore) {
    return function (f) {
        return function (x) {
            return peek(dictComonadStore)(f(pos(dictComonadStore)(x)))(x);
        };
    };
};
var seeks = function (dictComonadStore) {
    return function (f) {
        return function ($18) {
            return peeks(dictComonadStore)(f)(Control_Extend.duplicate((dictComonadStore.Comonad0()).Extend0())($18));
        };
    };
};
var seek = function (dictComonadStore) {
    return function (s) {
        return function ($19) {
            return peek(dictComonadStore)(s)(Control_Extend.duplicate((dictComonadStore.Comonad0()).Extend0())($19));
        };
    };
};
var experiment = function (dictComonadStore) {
    return function (dictFunctor) {
        return function (f) {
            return function (x) {
                return Data_Functor.map(dictFunctor)(Data_Function.flip(peek(dictComonadStore))(x))(f(pos(dictComonadStore)(x)));
            };
        };
    };
};
var comonadStoreTracedT = function (dictComonadStore) {
    return function (dictMonoid) {
        return new ComonadStore(function () {
            return Control_Comonad_Traced_Trans.comonadTracedT(dictComonadStore.Comonad0())(dictMonoid);
        }, function (s) {
            return function ($20) {
                return peek(dictComonadStore)(s)(Control_Comonad_Trans_Class.lower(Control_Comonad_Traced_Trans.comonadTransTracedT(dictMonoid))(dictComonadStore.Comonad0())($20));
            };
        }, function ($21) {
            return pos(dictComonadStore)(Control_Comonad_Trans_Class.lower(Control_Comonad_Traced_Trans.comonadTransTracedT(dictMonoid))(dictComonadStore.Comonad0())($21));
        });
    };
};
var comonadStoreStoreT = function (dictComonad) {
    return new ComonadStore(function () {
        return Control_Comonad_Store_Trans.comonadStoreT(dictComonad);
    }, function (s) {
        return function (v) {
            return Control_Comonad.extract(dictComonad)(v.value0)(s);
        };
    }, function (v) {
        return v.value1;
    });
};
var comonadStoreEnvT = function (dictComonadStore) {
    return new ComonadStore(function () {
        return Control_Comonad_Env_Trans.comonadEnvT(dictComonadStore.Comonad0());
    }, function (s) {
        return function ($22) {
            return peek(dictComonadStore)(s)(Control_Comonad_Trans_Class.lower(Control_Comonad_Env_Trans.comonadTransEnvT)(dictComonadStore.Comonad0())($22));
        };
    }, function ($23) {
        return pos(dictComonadStore)(Control_Comonad_Trans_Class.lower(Control_Comonad_Env_Trans.comonadTransEnvT)(dictComonadStore.Comonad0())($23));
    });
};
module.exports = {
    peek: peek,
    pos: pos,
    ComonadStore: ComonadStore,
    experiment: experiment,
    peeks: peeks,
    seek: seek,
    seeks: seeks,
    comonadStoreStoreT: comonadStoreStoreT,
    comonadStoreEnvT: comonadStoreEnvT,
    comonadStoreTracedT: comonadStoreTracedT
};

},{"../Control.Comonad.Env.Trans/index.js":15,"../Control.Comonad.Store.Trans/index.js":17,"../Control.Comonad.Traced.Trans/index.js":19,"../Control.Comonad.Trans.Class/index.js":20,"../Control.Comonad/index.js":21,"../Control.Extend/index.js":24,"../Control.Semigroupoid/index.js":61,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Tuple/index.js":283,"../Prelude/index.js":385}],17:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Comonad_Trans_Class = require("../Control.Comonad.Trans.Class/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var StoreT = function (x) {
    return x;
};
var runStoreT = function (v) {
    return v;
};
var newtypeStoreT = new Data_Newtype.Newtype(function (n) {
    return n;
}, StoreT);
var functorStoreT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return StoreT(new Data_Tuple.Tuple(Data_Functor.map(dictFunctor)(function (h) {
                return function ($28) {
                    return f(h($28));
                };
            })(v.value0), v.value1));
        };
    });
};
var extendStoreT = function (dictExtend) {
    return new Control_Extend.Extend(function () {
        return functorStoreT(dictExtend.Functor0());
    }, function (f) {
        return function (v) {
            return StoreT(new Data_Tuple.Tuple(Control_Extend.extend(dictExtend)(function (w$prime) {
                return function (s$prime) {
                    return f(StoreT(new Data_Tuple.Tuple(w$prime, s$prime)));
                };
            })(v.value0), v.value1));
        };
    });
};
var comonadTransStoreT = new Control_Comonad_Trans_Class.ComonadTrans(function (dictComonad) {
    return function (v) {
        return Data_Functor.map((dictComonad.Extend0()).Functor0())(function (v1) {
            return v1(v.value1);
        })(v.value0);
    };
});
var comonadStoreT = function (dictComonad) {
    return new Control_Comonad.Comonad(function () {
        return extendStoreT(dictComonad.Extend0());
    }, function (v) {
        return Control_Comonad.extract(dictComonad)(v.value0)(v.value1);
    });
};
module.exports = {
    StoreT: StoreT,
    runStoreT: runStoreT,
    newtypeStoreT: newtypeStoreT,
    functorStoreT: functorStoreT,
    extendStoreT: extendStoreT,
    comonadStoreT: comonadStoreT,
    comonadTransStoreT: comonadTransStoreT
};

},{"../Control.Comonad.Trans.Class/index.js":20,"../Control.Comonad/index.js":21,"../Control.Extend/index.js":24,"../Control.Semigroupoid/index.js":61,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Newtype/index.js":220,"../Data.Tuple/index.js":283,"../Prelude/index.js":385}],18:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Comonad_Store_Class = require("../Control.Comonad.Store.Class/index.js");
var Control_Comonad_Store_Trans = require("../Control.Comonad.Store.Trans/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var store = function (f) {
    return function (x) {
        return Control_Comonad_Store_Trans.StoreT(new Data_Tuple.Tuple(f, x));
    };
};
var runStore = function (v) {
    return Data_Tuple.swap(Data_Functor.map(Data_Tuple.functorTuple)(Data_Newtype.unwrap(Data_Identity.newtypeIdentity))(Data_Tuple.swap(v)));
};
module.exports = {
    runStore: runStore,
    store: store
};

},{"../Control.Comonad.Store.Class/index.js":16,"../Control.Comonad.Store.Trans/index.js":17,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Identity/index.js":163,"../Data.Newtype/index.js":220,"../Data.Tuple/index.js":283,"../Prelude/index.js":385}],19:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Comonad_Trans_Class = require("../Control.Comonad.Trans.Class/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Prelude = require("../Prelude/index.js");
var TracedT = function (x) {
    return x;
};
var runTracedT = function (v) {
    return v;
};
var newtypeTracedT = new Data_Newtype.Newtype(function (n) {
    return n;
}, TracedT);
var functorTracedT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(function (g) {
                return function (t) {
                    return f(g(t));
                };
            })(v);
        };
    });
};
var extendTracedT = function (dictExtend) {
    return function (dictSemigroup) {
        return new Control_Extend.Extend(function () {
            return functorTracedT(dictExtend.Functor0());
        }, function (f) {
            return function (v) {
                return Control_Extend.extend(dictExtend)(function (w$prime) {
                    return function (t) {
                        return f(Data_Functor.map(dictExtend.Functor0())(function (h) {
                            return function (t$prime) {
                                return h(Data_Semigroup.append(dictSemigroup)(t)(t$prime));
                            };
                        })(w$prime));
                    };
                })(v);
            };
        });
    };
};
var comonadTransTracedT = function (dictMonoid) {
    return new Control_Comonad_Trans_Class.ComonadTrans(function (dictComonad) {
        return function (v) {
            return Data_Functor.map((dictComonad.Extend0()).Functor0())(function (f) {
                return f(Data_Monoid.mempty(dictMonoid));
            })(v);
        };
    });
};
var comonadTracedT = function (dictComonad) {
    return function (dictMonoid) {
        return new Control_Comonad.Comonad(function () {
            return extendTracedT(dictComonad.Extend0())(dictMonoid.Semigroup0());
        }, function (v) {
            return Control_Comonad.extract(dictComonad)(v)(Data_Monoid.mempty(dictMonoid));
        });
    };
};
module.exports = {
    TracedT: TracedT,
    runTracedT: runTracedT,
    newtypeTracedT: newtypeTracedT,
    functorTracedT: functorTracedT,
    extendTracedT: extendTracedT,
    comonadTracedT: comonadTracedT,
    comonadTransTracedT: comonadTransTracedT
};

},{"../Control.Comonad.Trans.Class/index.js":20,"../Control.Comonad/index.js":21,"../Control.Extend/index.js":24,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Semigroup/index.js":248,"../Prelude/index.js":385}],20:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Comonad = require("../Control.Comonad/index.js");
var ComonadTrans = function (lower) {
    this.lower = lower;
};
var lower = function (dict) {
    return dict.lower;
};
module.exports = {
    lower: lower,
    ComonadTrans: ComonadTrans
};

},{"../Control.Comonad/index.js":21}],21:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Extend = require("../Control.Extend/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Comonad = function (Extend0, extract) {
    this.Extend0 = Extend0;
    this.extract = extract;
};
var extract = function (dict) {
    return dict.extract;
};
module.exports = {
    Comonad: Comonad,
    extract: extract
};

},{"../Control.Extend/index.js":24,"../Data.Functor/index.js":153}],22:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad_Except = require("../Control.Monad.Except/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Control_Monad_Free_Trans = require("../Control.Monad.Free.Trans/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Parallel = require("../Control.Parallel/index.js");
var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Prelude = require("../Prelude/index.js");
var Transform = function (x) {
    return x;
};
var Emit = (function () {
    function Emit(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Emit.create = function (value0) {
        return function (value1) {
            return new Emit(value0, value1);
        };
    };
    return Emit;
})();
var CoTransform = (function () {
    function CoTransform(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    CoTransform.create = function (value0) {
        return function (value1) {
            return new CoTransform(value0, value1);
        };
    };
    return CoTransform;
})();
var Await = function (x) {
    return x;
};
var runProcess = function (dictMonadRec) {
    return Control_Monad_Free_Trans.runFreeT(Data_Identity.functorIdentity)(dictMonadRec)(function ($186) {
        return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($186));
    });
};
var profunctorAwait = new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
        return function (v) {
            return Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(f)(g)(v);
        };
    };
});
var loop = function (dictFunctor) {
    return function (dictMonad) {
        return function (me) {
            return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(dictFunctor)(dictMonad))(function (v) {
                return Data_Functor.map(Control_Monad_Free_Trans.functorFreeT(dictFunctor)(((dictMonad.Bind1()).Apply0()).Functor0()))(Data_Maybe.maybe(new Control_Monad_Rec_Class.Loop(Data_Unit.unit))(Control_Monad_Rec_Class.Done.create))(me);
            })(Data_Unit.unit);
        };
    };
};
var fuseWithL = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictFunctor2) {
            return function (dictMonadRec) {
                return function (zap) {
                    return function (fs) {
                        return function (gs) {
                            var go = function (v) {
                                return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0)))(function (v1) {
                                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))(function (v2) {
                                        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonadRec.Monad0()))(Data_Functor.map(dictFunctor2)(function (t) {
                                            return Control_Monad_Free_Trans.freeT(function (v3) {
                                                return go(t);
                                            });
                                        })(zap(Data_Tuple.Tuple.create)(v1)(v2)));
                                    });
                                }));
                            };
                            return Control_Monad_Free_Trans.freeT(function (v) {
                                return go(new Data_Tuple.Tuple(fs, gs));
                            });
                        };
                    };
                };
            };
        };
    };
};
var fuseWith = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictFunctor2) {
            return function (dictMonadRec) {
                return function (dictParallel) {
                    return function (zap) {
                        return function (fs) {
                            return function (gs) {
                                var go = function (v) {
                                    return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply((dictParallel.Applicative1()).Apply0())(Data_Functor.map(((dictParallel.Applicative1()).Apply0()).Functor0())(Control_Apply.lift2(Data_Either.applyEither)(zap(Data_Tuple.Tuple.create)))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0))))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))))(function (v1) {
                                        if (v1 instanceof Data_Either.Left) {
                                            return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Data_Either.Left(v1.value0));
                                        };
                                        if (v1 instanceof Data_Either.Right) {
                                            return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor2)(function (t) {
                                                return Control_Monad_Free_Trans.freeT(function (v2) {
                                                    return go(t);
                                                });
                                            })(v1.value0)));
                                        };
                                        throw new Error("Failed pattern match at Control.Coroutine (line 79, column 5 - line 81, column 63): " + [ v1.constructor.name ]);
                                    });
                                };
                                return Control_Monad_Free_Trans.freeT(function (v) {
                                    return go(new Data_Tuple.Tuple(fs, gs));
                                });
                            };
                        };
                    };
                };
            };
        };
    };
};
var functorAwait = new Data_Functor.Functor(Data_Profunctor.rmap(profunctorAwait));
var joinConsumers = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorAwait)(functorAwait)(functorAwait)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    return function (v2) {
                        return f(v(v2.value0))(v1(v2.value1));
                    };
                };
            };
        });
    };
};
var bifunctorTransform = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            return function ($187) {
                return Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(f)(g)(v($187));
            };
        };
    };
});
var functorTransform = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorTransform));
var composeTransformers = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorTransform)(functorTransform)(functorTransform)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    return function (i) {
                        var v2 = v(i);
                        var v3 = v1(v2.value0);
                        return new Data_Tuple.Tuple(v3.value0, f(v2.value1)(v3.value1));
                    };
                };
            };
        });
    };
};
var transform = function (dictMonad) {
    return function (f) {
        return Control_Monad_Free_Trans.liftFreeT(functorTransform)(dictMonad)(function (i) {
            return new Data_Tuple.Tuple(f(i), Data_Unit.unit);
        });
    };
};
var transformConsumer = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorTransform)(functorAwait)(functorAwait)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    return function (i) {
                        var v2 = v(i);
                        return f(v2.value1)(v1(v2.value0));
                    };
                };
            };
        });
    };
};
var bifunctorEmit = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            return new Emit(f(v.value0), g(v.value1));
        };
    };
});
var functorEmit = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorEmit));
var connect = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorEmit)(functorAwait)(Data_Identity.functorIdentity)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    return f(v.value1)(v1(v.value0));
                };
            };
        });
    };
};
var emit = function (dictMonad) {
    return function (o) {
        return Control_Monad_Free_Trans.liftFreeT(functorEmit)(dictMonad)(new Emit(o, Data_Unit.unit));
    };
};
var joinProducers = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorEmit)(functorEmit)(functorEmit)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    return new Emit(new Data_Tuple.Tuple(v.value0, v1.value0), f(v.value1)(v1.value1));
                };
            };
        });
    };
};
var producer = function (dictMonad) {
    return function (recv) {
        return loop(functorEmit)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonad))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonad)(recv))(function (v) {
            if (v instanceof Data_Either.Left) {
                return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(functorEmit)(((dictMonad.Bind1()).Apply0()).Functor0()))(emit(dictMonad)(v.value0))(Data_Maybe.Nothing.value);
            };
            if (v instanceof Data_Either.Right) {
                return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonad))(new Data_Maybe.Just(v.value0));
            };
            throw new Error("Failed pattern match at Control.Coroutine (line 125, column 3 - line 127, column 29): " + [ v.constructor.name ]);
        }));
    };
};
var pullFrom = function (dictMonadRec) {
    return fuseWithL(functorAwait)(functorEmit)(Data_Identity.functorIdentity)(dictMonadRec)(function (f) {
        return function (v) {
            return function (v1) {
                return Control_Applicative.pure(Data_Identity.applicativeIdentity)(f(v(v1.value0))(v1.value1));
            };
        };
    });
};
var transformProducer = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorEmit)(functorTransform)(functorEmit)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    var v2 = v1(v.value0);
                    return new Emit(v2.value0, f(v.value1)(v2.value1));
                };
            };
        });
    };
};
var bifunctorCoTransform = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            return new CoTransform(f(v.value0), function ($188) {
                return g(v.value1($188));
            });
        };
    };
});
var functorCoTransform = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorCoTransform));
var composeCoTransformers = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorCoTransform)(functorCoTransform)(functorCoTransform)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    return new CoTransform(v1.value0, function (i) {
                        return f(v.value1(i))(v1.value1(v.value0));
                    });
                };
            };
        });
    };
};
var cotransform = function (dictMonad) {
    return function (o) {
        return Control_Monad_Free_Trans.freeT(function (v) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(new CoTransform(o, Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorCoTransform)(dictMonad)))));
        });
    };
};
var fuseCoTransform = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorTransform)(functorCoTransform)(Data_Identity.functorIdentity)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    var v2 = v(v1.value0);
                    return f(v2.value1)(v1.value1(v2.value0));
                };
            };
        });
    };
};
var transformCoTransformL = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorTransform)(functorCoTransform)(functorCoTransform)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    return new CoTransform(v1.value0, function (i1) {
                        var v2 = v(i1);
                        return f(v2.value1)(v1.value1(v2.value0));
                    });
                };
            };
        });
    };
};
var transformCoTransformR = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorCoTransform)(functorTransform)(functorCoTransform)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    var v2 = v1(v.value0);
                    return new CoTransform(v2.value0, function ($189) {
                        return (function (v3) {
                            return f(v3)(v2.value1);
                        })(v.value1($189));
                    });
                };
            };
        });
    };
};
var $$await = function (dictMonad) {
    return Control_Monad_Free_Trans.liftFreeT(functorAwait)(dictMonad)(Control_Category.identity(Control_Category.categoryFn));
};
var consumer = function (dictMonad) {
    return function (send) {
        return loop(functorAwait)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorAwait)(dictMonad))($$await(dictMonad))(function (v) {
            return Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorAwait))(dictMonad)(send(v));
        }));
    };
};
module.exports = {
    loop: loop,
    runProcess: runProcess,
    fuseWith: fuseWith,
    fuseWithL: fuseWithL,
    Emit: Emit,
    emit: emit,
    producer: producer,
    Await: Await,
    "await": $$await,
    consumer: consumer,
    Transform: Transform,
    transform: transform,
    CoTransform: CoTransform,
    cotransform: cotransform,
    connect: connect,
    pullFrom: pullFrom,
    transformProducer: transformProducer,
    transformConsumer: transformConsumer,
    composeTransformers: composeTransformers,
    composeCoTransformers: composeCoTransformers,
    fuseCoTransform: fuseCoTransform,
    transformCoTransformL: transformCoTransformL,
    transformCoTransformR: transformCoTransformR,
    joinProducers: joinProducers,
    joinConsumers: joinConsumers,
    bifunctorEmit: bifunctorEmit,
    functorEmit: functorEmit,
    profunctorAwait: profunctorAwait,
    functorAwait: functorAwait,
    bifunctorTransform: bifunctorTransform,
    functorTransform: functorTransform,
    bifunctorCoTransform: bifunctorCoTransform,
    functorCoTransform: functorCoTransform
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Monad.Except.Trans/index.js":29,"../Control.Monad.Except/index.js":30,"../Control.Monad.Free.Trans/index.js":32,"../Control.Monad.Rec.Class/index.js":43,"../Control.Monad.Trans.Class/index.js":52,"../Control.Parallel.Class/index.js":58,"../Control.Parallel/index.js":59,"../Control.Semigroupoid/index.js":61,"../Data.Bifunctor/index.js":106,"../Data.Either/index.js":131,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Identity/index.js":163,"../Data.Maybe/index.js":210,"../Data.Newtype/index.js":220,"../Data.Profunctor/index.js":238,"../Data.Tuple/index.js":283,"../Data.Unit/index.js":289,"../Prelude/index.js":385}],23:[function(require,module,exports){
"use strict";

exports.arrayExtend = function(f) {
  return function(xs) {
    return xs.map(function (_, i, xs) {
      return f(xs.slice(i));
    });
  };
};

},{}],24:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Category = require("../Control.Category/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Extend = function (Functor0, extend) {
    this.Functor0 = Functor0;
    this.extend = extend;
};
var extendFn = function (dictSemigroup) {
    return new Extend(function () {
        return Data_Functor.functorFn;
    }, function (f) {
        return function (g) {
            return function (w) {
                return f(function (w$prime) {
                    return g(Data_Semigroup.append(dictSemigroup)(w)(w$prime));
                });
            };
        };
    });
};
var extendArray = new Extend(function () {
    return Data_Functor.functorArray;
}, $foreign.arrayExtend);
var extend = function (dict) {
    return dict.extend;
};
var extendFlipped = function (dictExtend) {
    return function (w) {
        return function (f) {
            return extend(dictExtend)(f)(w);
        };
    };
};
var duplicate = function (dictExtend) {
    return extend(dictExtend)(Control_Category.identity(Control_Category.categoryFn));
};
var composeCoKleisliFlipped = function (dictExtend) {
    return function (f) {
        return function (g) {
            return function (w) {
                return f(extend(dictExtend)(g)(w));
            };
        };
    };
};
var composeCoKleisli = function (dictExtend) {
    return function (f) {
        return function (g) {
            return function (w) {
                return g(extend(dictExtend)(f)(w));
            };
        };
    };
};
module.exports = {
    Extend: Extend,
    extend: extend,
    extendFlipped: extendFlipped,
    composeCoKleisli: composeCoKleisli,
    composeCoKleisliFlipped: composeCoKleisliFlipped,
    duplicate: duplicate,
    extendFn: extendFn,
    extendArray: extendArray
};

},{"../Control.Category/index.js":14,"../Data.Functor/index.js":153,"../Data.Semigroup/index.js":248,"./foreign.js":23}],25:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Unit = require("../Data.Unit/index.js");
var Lazy = function (defer) {
    this.defer = defer;
};
var lazyUnit = new Lazy(function (v) {
    return Data_Unit.unit;
});
var lazyFn = new Lazy(function (f) {
    return function (x) {
        return f(Data_Unit.unit)(x);
    };
});
var defer = function (dict) {
    return dict.defer;
};
var fix = function (dictLazy) {
    return function (f) {
        var go = defer(dictLazy)(function (v) {
            return f(go);
        });
        return go;
    };
};
module.exports = {
    defer: defer,
    Lazy: Lazy,
    fix: fix,
    lazyFn: lazyFn,
    lazyUnit: lazyUnit
};

},{"../Data.Unit/index.js":289}],26:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Prelude = require("../Prelude/index.js");
var MonadCont = function (Monad0, callCC) {
    this.Monad0 = Monad0;
    this.callCC = callCC;
};
var callCC = function (dict) {
    return dict.callCC;
};
module.exports = {
    MonadCont: MonadCont,
    callCC: callCC
};

},{"../Prelude/index.js":385}],27:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Prelude = require("../Prelude/index.js");
var ContT = function (x) {
    return x;
};
var withContT = function (f) {
    return function (v) {
        return function (k) {
            return v(f(k));
        };
    };
};
var runContT = function (v) {
    return function (k) {
        return v(k);
    };
};
var newtypeContT = new Data_Newtype.Newtype(function (n) {
    return n;
}, ContT);
var monadTransContT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
        return function (k) {
            return Control_Bind.bind(dictMonad.Bind1())(m)(k);
        };
    };
});
var mapContT = function (f) {
    return function (v) {
        return function (k) {
            return f(v(k));
        };
    };
};
var functorContT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return function (k) {
                return v(function (a) {
                    return k(f(a));
                });
            };
        };
    });
};
var applyContT = function (dictApply) {
    return new Control_Apply.Apply(function () {
        return functorContT(dictApply.Functor0());
    }, function (v) {
        return function (v1) {
            return function (k) {
                return v(function (g) {
                    return v1(function (a) {
                        return k(g(a));
                    });
                });
            };
        };
    });
};
var bindContT = function (dictBind) {
    return new Control_Bind.Bind(function () {
        return applyContT(dictBind.Apply0());
    }, function (v) {
        return function (k) {
            return function (k$prime) {
                return v(function (a) {
                    var v1 = k(a);
                    return v1(k$prime);
                });
            };
        };
    });
};
var applicativeContT = function (dictApplicative) {
    return new Control_Applicative.Applicative(function () {
        return applyContT(dictApplicative.Apply0());
    }, function (a) {
        return function (k) {
            return k(a);
        };
    });
};
var monadContT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeContT(dictMonad.Applicative0());
    }, function () {
        return bindContT(dictMonad.Bind1());
    });
};
var monadAskContT = function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadContT(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderContT = function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskContT(dictMonadReader.MonadAsk0());
    }, function (f) {
        return function (v) {
            return function (k) {
                return Control_Bind.bind(((dictMonadReader.MonadAsk0()).Monad0()).Bind1())(Control_Monad_Reader_Class.ask(dictMonadReader.MonadAsk0()))(function (v1) {
                    return Control_Monad_Reader_Class.local(dictMonadReader)(f)(v(function ($45) {
                        return Control_Monad_Reader_Class.local(dictMonadReader)(Data_Function["const"](v1))(k($45));
                    }));
                });
            };
        };
    });
};
var monadContContT = function (dictMonad) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadContT(dictMonad);
    }, function (f) {
        return function (k) {
            var v = f(function (a) {
                return function (v1) {
                    return k(a);
                };
            });
            return v(k);
        };
    });
};
var monadEffectContT = function (dictMonadEffect) {
    return new Effect_Class.MonadEffect(function () {
        return monadContT(dictMonadEffect.Monad0());
    }, function ($46) {
        return Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadEffect.Monad0())(Effect_Class.liftEffect(dictMonadEffect)($46));
    });
};
var monadStateContT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadContT(dictMonadState.Monad0());
    }, function ($47) {
        return Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)($47));
    });
};
module.exports = {
    ContT: ContT,
    runContT: runContT,
    mapContT: mapContT,
    withContT: withContT,
    newtypeContT: newtypeContT,
    monadContContT: monadContContT,
    functorContT: functorContT,
    applyContT: applyContT,
    applicativeContT: applicativeContT,
    bindContT: bindContT,
    monadContT: monadContT,
    monadTransContT: monadTransContT,
    monadEffectContT: monadEffectContT,
    monadAskContT: monadAskContT,
    monadReaderContT: monadReaderContT,
    monadStateContT: monadStateContT
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Monad.Cont.Class/index.js":26,"../Control.Monad.Reader.Class/index.js":40,"../Control.Monad.State.Class/index.js":48,"../Control.Monad.Trans.Class/index.js":52,"../Control.Monad/index.js":55,"../Control.Semigroupoid/index.js":61,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Newtype/index.js":220,"../Effect.Class/index.js":298,"../Prelude/index.js":385}],28:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Prelude = require("../Prelude/index.js");
var MonadThrow = function (Monad0, throwError) {
    this.Monad0 = Monad0;
    this.throwError = throwError;
};
var MonadError = function (MonadThrow0, catchError) {
    this.MonadThrow0 = MonadThrow0;
    this.catchError = catchError;
};
var throwError = function (dict) {
    return dict.throwError;
};
var monadThrowMaybe = new MonadThrow(function () {
    return Data_Maybe.monadMaybe;
}, Data_Function["const"](Data_Maybe.Nothing.value));
var monadThrowEither = new MonadThrow(function () {
    return Data_Either.monadEither;
}, Data_Either.Left.create);
var monadThrowEffect = new MonadThrow(function () {
    return Effect.monadEffect;
}, Effect_Exception.throwException);
var monadErrorMaybe = new MonadError(function () {
    return monadThrowMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Maybe.Nothing) {
            return v1(Data_Unit.unit);
        };
        if (v instanceof Data_Maybe.Just) {
            return new Data_Maybe.Just(v.value0);
        };
        throw new Error("Failed pattern match at Control.Monad.Error.Class (line 79, column 1 - line 79, column 50): " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var monadErrorEither = new MonadError(function () {
    return monadThrowEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Either.Left) {
            return v1(v.value0);
        };
        if (v instanceof Data_Either.Right) {
            return new Data_Either.Right(v.value0);
        };
        throw new Error("Failed pattern match at Control.Monad.Error.Class (line 72, column 1 - line 72, column 53): " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var monadErrorEffect = new MonadError(function () {
    return monadThrowEffect;
}, Data_Function.flip(Effect_Exception.catchException));
var catchError = function (dict) {
    return dict.catchError;
};
var catchJust = function (dictMonadError) {
    return function (p) {
        return function (act) {
            return function (handler) {
                var handle = function (e) {
                    var v = p(e);
                    if (v instanceof Data_Maybe.Nothing) {
                        return throwError(dictMonadError.MonadThrow0())(e);
                    };
                    if (v instanceof Data_Maybe.Just) {
                        return handler(v.value0);
                    };
                    throw new Error("Failed pattern match at Control.Monad.Error.Class (line 57, column 5 - line 59, column 26): " + [ v.constructor.name ]);
                };
                return catchError(dictMonadError)(act)(handle);
            };
        };
    };
};
var $$try = function (dictMonadError) {
    return function (a) {
        return catchError(dictMonadError)(Data_Functor.map(((((dictMonadError.MonadThrow0()).Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(a))(function ($21) {
            return Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0())(Data_Either.Left.create($21));
        });
    };
};
var withResource = function (dictMonadError) {
    return function (acquire) {
        return function (release) {
            return function (kleisli) {
                return Control_Bind.bind(((dictMonadError.MonadThrow0()).Monad0()).Bind1())(acquire)(function (v) {
                    return Control_Bind.bind(((dictMonadError.MonadThrow0()).Monad0()).Bind1())($$try(dictMonadError)(kleisli(v)))(function (v1) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(((dictMonadError.MonadThrow0()).Monad0()).Bind1())(release(v))(function () {
                            return Data_Either.either(throwError(dictMonadError.MonadThrow0()))(Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0()))(v1);
                        });
                    });
                });
            };
        };
    };
};
module.exports = {
    catchError: catchError,
    throwError: throwError,
    MonadThrow: MonadThrow,
    MonadError: MonadError,
    catchJust: catchJust,
    "try": $$try,
    withResource: withResource,
    monadThrowEither: monadThrowEither,
    monadErrorEither: monadErrorEither,
    monadThrowMaybe: monadThrowMaybe,
    monadErrorMaybe: monadErrorMaybe,
    monadThrowEffect: monadThrowEffect,
    monadErrorEffect: monadErrorEffect
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Control.Semigroupoid/index.js":61,"../Data.Either/index.js":131,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Unit/index.js":289,"../Effect.Exception/index.js":302,"../Effect/index.js":312,"../Prelude/index.js":385}],29:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Prelude = require("../Prelude/index.js");
var ExceptT = function (x) {
    return x;
};
var withExceptT = function (dictFunctor) {
    return function (f) {
        return function (v) {
            var mapLeft = function (v1) {
                return function (v2) {
                    if (v2 instanceof Data_Either.Right) {
                        return new Data_Either.Right(v2.value0);
                    };
                    if (v2 instanceof Data_Either.Left) {
                        return new Data_Either.Left(v1(v2.value0));
                    };
                    throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 42, column 3 - line 42, column 32): " + [ v1.constructor.name, v2.constructor.name ]);
                };
            };
            return ExceptT(Data_Functor.map(dictFunctor)(mapLeft(f))(v));
        };
    };
};
var runExceptT = function (v) {
    return v;
};
var newtypeExceptT = new Data_Newtype.Newtype(function (n) {
    return n;
}, ExceptT);
var monadTransExceptT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
        return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v));
        });
    };
});
var mapExceptT = function (f) {
    return function (v) {
        return f(v);
    };
};
var functorExceptT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
    });
};
var except = function (dictApplicative) {
    return function ($96) {
        return ExceptT(Control_Applicative.pure(dictApplicative)($96));
    };
};
var monadExceptT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeExceptT(dictMonad);
    }, function () {
        return bindExceptT(dictMonad);
    });
};
var bindExceptT = function (dictMonad) {
    return new Control_Bind.Bind(function () {
        return applyExceptT(dictMonad);
    }, function (v) {
        return function (k) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function ($97) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($97));
            })(function (a) {
                var v1 = k(a);
                return v1;
            }));
        };
    });
};
var applyExceptT = function (dictMonad) {
    return new Control_Apply.Apply(function () {
        return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
    }, Control_Monad.ap(monadExceptT(dictMonad)));
};
var applicativeExceptT = function (dictMonad) {
    return new Control_Applicative.Applicative(function () {
        return applyExceptT(dictMonad);
    }, function ($98) {
        return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($98)));
    });
};
var monadAskExceptT = function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadExceptT(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderExceptT = function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskExceptT(dictMonadReader.MonadAsk0());
    }, function (f) {
        return mapExceptT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
    });
};
var monadContExceptT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadExceptT(dictMonadCont.Monad0());
    }, function (f) {
        return ExceptT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
            var v = f(function (a) {
                return ExceptT(c(new Data_Either.Right(a)));
            });
            return v;
        }));
    });
};
var monadEffectExceptT = function (dictMonadEffect) {
    return new Effect_Class.MonadEffect(function () {
        return monadExceptT(dictMonadEffect.Monad0());
    }, function ($99) {
        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadEffect.Monad0())(Effect_Class.liftEffect(dictMonadEffect)($99));
    });
};
var monadRecExceptT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadExceptT(dictMonadRec.Monad0());
    }, function (f) {
        return function ($100) {
            return ExceptT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())((function () {
                    var v = f(a);
                    return v;
                })())(function (m$prime) {
                    return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
                        if (m$prime instanceof Data_Either.Left) {
                            return new Control_Monad_Rec_Class.Done(new Data_Either.Left(m$prime.value0));
                        };
                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {
                            return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
                        };
                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {
                            return new Control_Monad_Rec_Class.Done(new Data_Either.Right(m$prime.value0.value0));
                        };
                        throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 74, column 14 - line 77, column 43): " + [ m$prime.constructor.name ]);
                    })());
                });
            })($100));
        };
    });
};
var monadStateExceptT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadExceptT(dictMonadState.Monad0());
    }, function (f) {
        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
    });
};
var monadTellExceptT = function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadExceptT(dictMonadTell.Monad0());
    }, function ($101) {
        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($101));
    });
};
var monadWriterExceptT = function (dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
        return monadTellExceptT(dictMonadWriter.MonadTell0());
    }, mapExceptT(function (m) {
        return Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
            return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(Data_Functor.map(Data_Either.functorEither)(function (r) {
                return new Data_Tuple.Tuple(r, v.value1);
            })(v.value0));
        });
    }), mapExceptT(function (m) {
        return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(m)(function (v) {
            return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())((function () {
                if (v instanceof Data_Either.Left) {
                    return new Data_Tuple.Tuple(new Data_Either.Left(v.value0), Control_Category.identity(Control_Category.categoryFn));
                };
                if (v instanceof Data_Either.Right) {
                    return new Data_Tuple.Tuple(new Data_Either.Right(v.value0.value0), v.value0.value1);
                };
                throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 136, column 10 - line 138, column 44): " + [ v.constructor.name ]);
            })());
        }));
    }));
};
var monadThrowExceptT = function (dictMonad) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
        return monadExceptT(dictMonad);
    }, function ($102) {
        return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($102)));
    });
};
var monadErrorExceptT = function (dictMonad) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadThrowExceptT(dictMonad);
    }, function (v) {
        return function (k) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function (a) {
                var v1 = k(a);
                return v1;
            })(function ($103) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($103));
            }));
        };
    });
};
var altExceptT = function (dictSemigroup) {
    return function (dictMonad) {
        return new Control_Alt.Alt(function () {
            return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
        }, function (v) {
            return function (v1) {
                return Control_Bind.bind(dictMonad.Bind1())(v)(function (v2) {
                    if (v2 instanceof Data_Either.Right) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v2.value0));
                    };
                    if (v2 instanceof Data_Either.Left) {
                        return Control_Bind.bind(dictMonad.Bind1())(v1)(function (v3) {
                            if (v3 instanceof Data_Either.Right) {
                                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v3.value0));
                            };
                            if (v3 instanceof Data_Either.Left) {
                                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(v2.value0)(v3.value0)));
                            };
                            throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 86, column 9 - line 88, column 49): " + [ v3.constructor.name ]);
                        });
                    };
                    throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 82, column 5 - line 88, column 49): " + [ v2.constructor.name ]);
                });
            };
        });
    };
};
var plusExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Plus.Plus(function () {
            return altExceptT(dictMonoid.Semigroup0())(dictMonad);
        }, Control_Monad_Error_Class.throwError(monadThrowExceptT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
    };
};
var alternativeExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Alternative.Alternative(function () {
            return applicativeExceptT(dictMonad);
        }, function () {
            return plusExceptT(dictMonoid)(dictMonad);
        });
    };
};
var monadZeroExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_MonadZero.MonadZero(function () {
            return alternativeExceptT(dictMonoid)(dictMonad);
        }, function () {
            return monadExceptT(dictMonad);
        });
    };
};
var monadPlusExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_MonadPlus.MonadPlus(function () {
            return monadZeroExceptT(dictMonoid)(dictMonad);
        });
    };
};
module.exports = {
    ExceptT: ExceptT,
    runExceptT: runExceptT,
    withExceptT: withExceptT,
    mapExceptT: mapExceptT,
    except: except,
    newtypeExceptT: newtypeExceptT,
    functorExceptT: functorExceptT,
    applyExceptT: applyExceptT,
    applicativeExceptT: applicativeExceptT,
    bindExceptT: bindExceptT,
    monadExceptT: monadExceptT,
    monadRecExceptT: monadRecExceptT,
    altExceptT: altExceptT,
    plusExceptT: plusExceptT,
    alternativeExceptT: alternativeExceptT,
    monadPlusExceptT: monadPlusExceptT,
    monadZeroExceptT: monadZeroExceptT,
    monadTransExceptT: monadTransExceptT,
    monadEffectExceptT: monadEffectExceptT,
    monadContExceptT: monadContExceptT,
    monadThrowExceptT: monadThrowExceptT,
    monadErrorExceptT: monadErrorExceptT,
    monadAskExceptT: monadAskExceptT,
    monadReaderExceptT: monadReaderExceptT,
    monadStateExceptT: monadStateExceptT,
    monadTellExceptT: monadTellExceptT,
    monadWriterExceptT: monadWriterExceptT
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Monad.Cont.Class/index.js":26,"../Control.Monad.Error.Class/index.js":28,"../Control.Monad.Reader.Class/index.js":40,"../Control.Monad.Rec.Class/index.js":43,"../Control.Monad.State.Class/index.js":48,"../Control.Monad.Trans.Class/index.js":52,"../Control.Monad.Writer.Class/index.js":53,"../Control.Monad/index.js":55,"../Control.MonadPlus/index.js":56,"../Control.MonadZero/index.js":57,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Either/index.js":131,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Semigroup/index.js":248,"../Data.Tuple/index.js":283,"../Effect.Class/index.js":298,"../Prelude/index.js":385}],30:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Prelude = require("../Prelude/index.js");
var withExcept = Control_Monad_Except_Trans.withExceptT(Data_Identity.functorIdentity);
var runExcept = function ($0) {
    return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0));
};
var mapExcept = function (f) {
    return Control_Monad_Except_Trans.mapExceptT(function ($1) {
        return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($1)));
    });
};
module.exports = {
    runExcept: runExcept,
    mapExcept: mapExcept,
    withExcept: withExcept
};

},{"../Control.Monad.Error.Class/index.js":28,"../Control.Monad.Except.Trans/index.js":29,"../Control.Semigroupoid/index.js":61,"../Data.Either/index.js":131,"../Data.Identity/index.js":163,"../Data.Newtype/index.js":220,"../Prelude/index.js":385}],31:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Prelude = require("../Prelude/index.js");
var Completed = (function () {
    function Completed(value0) {
        this.value0 = value0;
    };
    Completed.create = function (value0) {
        return new Completed(value0);
    };
    return Completed;
})();
var Failed = (function () {
    function Failed(value0) {
        this.value0 = value0;
    };
    Failed.create = function (value0) {
        return new Failed(value0);
    };
    return Failed;
})();
var Killed = (function () {
    function Killed(value0) {
        this.value0 = value0;
    };
    Killed.create = function (value0) {
        return new Killed(value0);
    };
    return Killed;
})();
var MonadFork = function (Functor1, Monad0, fork, join, suspend) {
    this.Functor1 = Functor1;
    this.Monad0 = Monad0;
    this.fork = fork;
    this.join = join;
    this.suspend = suspend;
};
var MonadKill = function (MonadFork0, MonadThrow1, kill) {
    this.MonadFork0 = MonadFork0;
    this.MonadThrow1 = MonadThrow1;
    this.kill = kill;
};
var MonadBracket = function (MonadError1, MonadKill0, bracket, never, uninterruptible) {
    this.MonadError1 = MonadError1;
    this.MonadKill0 = MonadKill0;
    this.bracket = bracket;
    this.never = never;
    this.uninterruptible = uninterruptible;
};
var uninterruptible = function (dict) {
    return dict.uninterruptible;
};
var suspend = function (dict) {
    return dict.suspend;
};
var never = function (dict) {
    return dict.never;
};
var monadForkAff = new MonadFork(function () {
    return Effect_Aff.functorFiber;
}, function () {
    return Effect_Aff.monadAff;
}, Effect_Aff.forkAff, Effect_Aff.joinFiber, Effect_Aff.suspendAff);
var monadKillAff = new MonadKill(function () {
    return monadForkAff;
}, function () {
    return Effect_Aff.monadThrowAff;
}, Effect_Aff.killFiber);
var monadBracketAff = new MonadBracket(function () {
    return Effect_Aff.monadErrorAff;
}, function () {
    return monadKillAff;
}, function (acquire) {
    return function (release) {
        return function (run) {
            return Effect_Aff.generalBracket(acquire)({
                completed: function ($11) {
                    return release(Completed.create($11));
                },
                failed: function ($12) {
                    return release(Failed.create($12));
                },
                killed: function ($13) {
                    return release(Killed.create($13));
                }
            })(run);
        };
    };
}, Effect_Aff.never, Effect_Aff.invincible);
var kill = function (dict) {
    return dict.kill;
};
var join = function (dict) {
    return dict.join;
};
var fork = function (dict) {
    return dict.fork;
};
var monadForkReaderT = function (dictMonadFork) {
    return new MonadFork(dictMonadFork.Functor1, function () {
        return Control_Monad_Reader_Trans.monadReaderT(dictMonadFork.Monad0());
    }, function (v) {
        return function ($14) {
            return fork(dictMonadFork)(v($14));
        };
    }, function ($15) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonadFork.Monad0())(join(dictMonadFork)($15));
    }, function (v) {
        return function ($16) {
            return suspend(dictMonadFork)(v($16));
        };
    });
};
var monadKillReaderT = function (dictMonadKill) {
    return new MonadKill(function () {
        return monadForkReaderT(dictMonadKill.MonadFork0());
    }, function () {
        return Control_Monad_Reader_Trans.monadThrowReaderT(dictMonadKill.MonadThrow1());
    }, function (e) {
        return function ($17) {
            return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)((dictMonadKill.MonadThrow1()).Monad0())(kill(dictMonadKill)(e)($17));
        };
    });
};
var bracket = function (dict) {
    return dict.bracket;
};
var monadBracketReaderT = function (dictMonadBracket) {
    return new MonadBracket(function () {
        return Control_Monad_Reader_Trans.monadErrorReaderT(dictMonadBracket.MonadError1());
    }, function () {
        return monadKillReaderT(dictMonadBracket.MonadKill0());
    }, function (v) {
        return function (release) {
            return function (run) {
                return function (r) {
                    return bracket(dictMonadBracket)(v(r))(function (c) {
                        return function (a) {
                            return Control_Monad_Reader_Trans.runReaderT(release(c)(a))(r);
                        };
                    })(function (a) {
                        return Control_Monad_Reader_Trans.runReaderT(run(a))(r);
                    });
                };
            };
        };
    }, Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(((dictMonadBracket.MonadError1()).MonadThrow0()).Monad0())(never(dictMonadBracket)), function (k) {
        return function (r) {
            return uninterruptible(dictMonadBracket)(Control_Monad_Reader_Trans.runReaderT(k)(r));
        };
    });
};
module.exports = {
    bracket: bracket,
    fork: fork,
    join: join,
    kill: kill,
    never: never,
    suspend: suspend,
    uninterruptible: uninterruptible,
    MonadFork: MonadFork,
    MonadKill: MonadKill,
    Completed: Completed,
    Failed: Failed,
    Killed: Killed,
    MonadBracket: MonadBracket,
    monadForkAff: monadForkAff,
    monadForkReaderT: monadForkReaderT,
    monadKillAff: monadKillAff,
    monadKillReaderT: monadKillReaderT,
    monadBracketAff: monadBracketAff,
    monadBracketReaderT: monadBracketReaderT
};

},{"../Control.Monad.Error.Class/index.js":28,"../Control.Monad.Reader.Trans/index.js":41,"../Control.Monad.Trans.Class/index.js":52,"../Control.Semigroupoid/index.js":61,"../Effect.Aff/index.js":297,"../Prelude/index.js":385}],32:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Exists = require("../Data.Exists/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Prelude = require("../Prelude/index.js");
var Bound = (function () {
    function Bound(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Bound.create = function (value0) {
        return function (value1) {
            return new Bound(value0, value1);
        };
    };
    return Bound;
})();
var FreeT = (function () {
    function FreeT(value0) {
        this.value0 = value0;
    };
    FreeT.create = function (value0) {
        return new FreeT(value0);
    };
    return FreeT;
})();
var Bind = (function () {
    function Bind(value0) {
        this.value0 = value0;
    };
    Bind.create = function (value0) {
        return new Bind(value0);
    };
    return Bind;
})();
var monadTransFreeT = function (dictFunctor) {
    return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
        return function (ma) {
            return new FreeT(function (v) {
                return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Either.Left.create)(ma);
            });
        };
    });
};
var freeT = FreeT.create;
var bound = function (m) {
    return function (f) {
        return new Bind(Data_Exists.mkExists(new Bound(m, f)));
    };
};
var functorFreeT = function (dictFunctor) {
    return function (dictFunctor1) {
        return new Data_Functor.Functor(function (f) {
            return function (v) {
                if (v instanceof FreeT) {
                    return new FreeT(function (v1) {
                        return Data_Functor.map(dictFunctor1)(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(f)(Data_Functor.map(dictFunctor)(Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f))))(v.value0(Data_Unit.unit));
                    });
                };
                if (v instanceof Bind) {
                    return Data_Exists.runExists(function (v1) {
                        return bound(v1.value0)(function ($104) {
                            return Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f)(v1.value1($104));
                        });
                    })(v.value0);
                };
                throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 57, column 1 - line 57, column 71): " + [ f.constructor.name, v.constructor.name ]);
            };
        });
    };
};
var bimapFreeT = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (nf) {
            return function (nm) {
                return function (v) {
                    if (v instanceof Bind) {
                        return Data_Exists.runExists(function (v1) {
                            return bound(function ($105) {
                                return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm)(v1.value0($105));
                            })(function ($106) {
                                return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm)(v1.value1($106));
                            });
                        })(v.value0);
                    };
                    if (v instanceof FreeT) {
                        return new FreeT(function (v1) {
                            return Data_Functor.map(dictFunctor1)(Data_Functor.map(Data_Either.functorEither)(function ($107) {
                                return nf(Data_Functor.map(dictFunctor)(bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm))($107));
                            }))(nm(v.value0(Data_Unit.unit)));
                        });
                    };
                    throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 118, column 1 - line 118, column 109): " + [ nf.constructor.name, nm.constructor.name, v.constructor.name ]);
                };
            };
        };
    };
};
var hoistFreeT = function (dictFunctor) {
    return function (dictFunctor1) {
        return bimapFreeT(dictFunctor)(dictFunctor1)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var interpret = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (nf) {
            return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(Control_Category.identity(Control_Category.categoryFn));
        };
    };
};
var monadFreeT = function (dictFunctor) {
    return function (dictMonad) {
        return new Control_Monad.Monad(function () {
            return applicativeFreeT(dictFunctor)(dictMonad);
        }, function () {
            return bindFreeT(dictFunctor)(dictMonad);
        });
    };
};
var bindFreeT = function (dictFunctor) {
    return function (dictMonad) {
        return new Control_Bind.Bind(function () {
            return applyFreeT(dictFunctor)(dictMonad);
        }, function (v) {
            return function (f) {
                if (v instanceof Bind) {
                    return Data_Exists.runExists(function (v1) {
                        return bound(v1.value0)(function (x) {
                            return bound(function (v2) {
                                return v1.value1(x);
                            })(f);
                        });
                    })(v.value0);
                };
                return bound(function (v1) {
                    return v;
                })(f);
            };
        });
    };
};
var applyFreeT = function (dictFunctor) {
    return function (dictMonad) {
        return new Control_Apply.Apply(function () {
            return functorFreeT(dictFunctor)(((dictMonad.Bind1()).Apply0()).Functor0());
        }, Control_Monad.ap(monadFreeT(dictFunctor)(dictMonad)));
    };
};
var applicativeFreeT = function (dictFunctor) {
    return function (dictMonad) {
        return new Control_Applicative.Applicative(function () {
            return applyFreeT(dictFunctor)(dictMonad);
        }, function (a) {
            return new FreeT(function (v) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(a));
            });
        });
    };
};
var liftFreeT = function (dictFunctor) {
    return function (dictMonad) {
        return function (fa) {
            return new FreeT(function (v) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor)(Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad)))(fa)));
            });
        };
    };
};
var resume = function (dictFunctor) {
    return function (dictMonadRec) {
        var go = function (v) {
            if (v instanceof FreeT) {
                return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(v.value0(Data_Unit.unit));
            };
            if (v instanceof Bind) {
                return Data_Exists.runExists(function (v1) {
                    var v2 = v1.value0(Data_Unit.unit);
                    if (v2 instanceof FreeT) {
                        return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(v2.value0(Data_Unit.unit))(function (v3) {
                            if (v3 instanceof Data_Either.Left) {
                                return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(v1.value1(v3.value0)));
                            };
                            if (v3 instanceof Data_Either.Right) {
                                return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(new Data_Either.Right(Data_Functor.map(dictFunctor)(function (h) {
                                    return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(h)(v1.value1);
                                })(v3.value0))));
                            };
                            throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 52, column 20 - line 54, column 67): " + [ v3.constructor.name ]);
                        });
                    };
                    if (v2 instanceof Bind) {
                        return Data_Exists.runExists(function (v3) {
                            return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value0(Data_Unit.unit))(function (z) {
                                return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value1(z))(v1.value1);
                            })));
                        })(v2.value0);
                    };
                    throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 50, column 5 - line 55, column 98): " + [ v2.constructor.name ]);
                })(v.value0);
            };
            throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 47, column 3 - line 47, column 75): " + [ v.constructor.name ]);
        };
        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
    };
};
var runFreeT = function (dictFunctor) {
    return function (dictMonadRec) {
        return function (interp) {
            var go = function (v) {
                if (v instanceof Data_Either.Left) {
                    return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(v.value0));
                };
                if (v instanceof Data_Either.Right) {
                    return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(interp(v.value0));
                };
                throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 126, column 3 - line 126, column 63): " + [ v.constructor.name ]);
            };
            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(Control_Bind.composeKleisliFlipped((dictMonadRec.Monad0()).Bind1())(go)(resume(dictFunctor)(dictMonadRec)));
        };
    };
};
var semigroupFreeT = function (dictFunctor) {
    return function (dictMonad) {
        return function (dictSemigroup) {
            return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyFreeT(dictFunctor)(dictMonad))(Data_Semigroup.append(dictSemigroup)));
        };
    };
};
var monadAskFreeT = function (dictFunctor) {
    return function (dictMonadAsk) {
        return new Control_Monad_Reader_Class.MonadAsk(function () {
            return monadFreeT(dictFunctor)(dictMonadAsk.Monad0());
        }, Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
    };
};
var monadEffectFreeT = function (dictFunctor) {
    return function (dictMonadEffect) {
        return new Effect_Class.MonadEffect(function () {
            return monadFreeT(dictFunctor)(dictMonadEffect.Monad0());
        }, function ($108) {
            return Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadEffect.Monad0())(Effect_Class.liftEffect(dictMonadEffect)($108));
        });
    };
};
var monadStateFreeT = function (dictFunctor) {
    return function (dictMonadState) {
        return new Control_Monad_State_Class.MonadState(function () {
            return monadFreeT(dictFunctor)(dictMonadState.Monad0());
        }, function ($109) {
            return Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)($109));
        });
    };
};
var monadTellFreeT = function (dictFunctor) {
    return function (dictMonadTell) {
        return new Control_Monad_Writer_Class.MonadTell(function () {
            return monadFreeT(dictFunctor)(dictMonadTell.Monad0());
        }, function ($110) {
            return Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($110));
        });
    };
};
var monadThrowFreeT = function (dictFunctor) {
    return function (dictMonadThrow) {
        return new Control_Monad_Error_Class.MonadThrow(function () {
            return monadFreeT(dictFunctor)(dictMonadThrow.Monad0());
        }, function ($111) {
            return Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)($111));
        });
    };
};
var monadRecFreeT = function (dictFunctor) {
    return function (dictMonad) {
        return new Control_Monad_Rec_Class.MonadRec(function () {
            return monadFreeT(dictFunctor)(dictMonad);
        }, function (f) {
            var go = function (s) {
                return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonad))(f(s))(function (v) {
                    if (v instanceof Control_Monad_Rec_Class.Loop) {
                        return go(v.value0);
                    };
                    if (v instanceof Control_Monad_Rec_Class.Done) {
                        return Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(v.value0);
                    };
                    throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 80, column 15 - line 82, column 25): " + [ v.constructor.name ]);
                });
            };
            return go;
        });
    };
};
var monoidFreeT = function (dictFunctor) {
    return function (dictMonad) {
        return function (dictMonoid) {
            return new Data_Monoid.Monoid(function () {
                return semigroupFreeT(dictFunctor)(dictMonad)(dictMonoid.Semigroup0());
            }, Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(Data_Monoid.mempty(dictMonoid)));
        };
    };
};
module.exports = {
    freeT: freeT,
    liftFreeT: liftFreeT,
    hoistFreeT: hoistFreeT,
    interpret: interpret,
    bimapFreeT: bimapFreeT,
    resume: resume,
    runFreeT: runFreeT,
    functorFreeT: functorFreeT,
    applyFreeT: applyFreeT,
    applicativeFreeT: applicativeFreeT,
    bindFreeT: bindFreeT,
    monadFreeT: monadFreeT,
    monadTransFreeT: monadTransFreeT,
    monadRecFreeT: monadRecFreeT,
    semigroupFreeT: semigroupFreeT,
    monoidFreeT: monoidFreeT,
    monadEffectFreeT: monadEffectFreeT,
    monadAskFreeT: monadAskFreeT,
    monadTellFreeT: monadTellFreeT,
    monadStateFreeT: monadStateFreeT,
    monadThrowFreeT: monadThrowFreeT
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Monad.Error.Class/index.js":28,"../Control.Monad.Reader.Class/index.js":40,"../Control.Monad.Rec.Class/index.js":43,"../Control.Monad.State.Class/index.js":48,"../Control.Monad.Trans.Class/index.js":52,"../Control.Monad.Writer.Class/index.js":53,"../Control.Monad/index.js":55,"../Control.Semigroupoid/index.js":61,"../Data.Bifunctor/index.js":106,"../Data.Either/index.js":131,"../Data.Exists/index.js":138,"../Data.Functor/index.js":153,"../Data.Monoid/index.js":218,"../Data.Semigroup/index.js":248,"../Data.Unit/index.js":289,"../Effect.Class/index.js":298,"../Prelude/index.js":385}],33:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_CatList = require("../Data.CatList/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var ExpF = function (x) {
    return x;
};
var Free = (function () {
    function Free(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Free.create = function (value0) {
        return function (value1) {
            return new Free(value0, value1);
        };
    };
    return Free;
})();
var Return = (function () {
    function Return(value0) {
        this.value0 = value0;
    };
    Return.create = function (value0) {
        return new Return(value0);
    };
    return Return;
})();
var Bind = (function () {
    function Bind(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Bind.create = function (value0) {
        return function (value1) {
            return new Bind(value0, value1);
        };
    };
    return Bind;
})();
var toView = function ($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
        var runExpF = function (v2) {
            return v2;
        };
        var concatF = function (v2) {
            return function (r) {
                return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
            };
        };
        if (v.value0 instanceof Return) {
            var v2 = Data_CatList.uncons(v.value1);
            if (v2 instanceof Data_Maybe.Nothing) {
                $tco_done = true;
                return new Return(v.value0.value0);
            };
            if (v2 instanceof Data_Maybe.Just) {
                $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
                return;
            };
            throw new Error("Failed pattern match at Control.Monad.Free (line 220, column 7 - line 224, column 64): " + [ v2.constructor.name ]);
        };
        if (v.value0 instanceof Bind) {
            $tco_done = true;
            return new Bind(v.value0.value0, function (a) {
                return concatF(v.value0.value1(a))(v.value1);
            });
        };
        throw new Error("Failed pattern match at Control.Monad.Free (line 218, column 3 - line 226, column 56): " + [ v.value0.constructor.name ]);
    };
    while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
    };
    return $tco_result;
};
var runFreeM = function (dictFunctor) {
    return function (dictMonadRec) {
        return function (k) {
            var go = function (f) {
                var v = toView(f);
                if (v instanceof Return) {
                    return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(v.value0));
                };
                if (v instanceof Bind) {
                    return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(k(Data_Functor.map(dictFunctor)(v.value1)(v.value0)));
                };
                throw new Error("Failed pattern match at Control.Monad.Free (line 187, column 10 - line 189, column 37): " + [ v.constructor.name ]);
            };
            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
        };
    };
};
var runFree = function (dictFunctor) {
    return function (k) {
        var go = function ($copy_f) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(f) {
                var v = toView(f);
                if (v instanceof Return) {
                    $tco_done = true;
                    return v.value0;
                };
                if (v instanceof Bind) {
                    $copy_f = k(Data_Functor.map(dictFunctor)(v.value1)(v.value0));
                    return;
                };
                throw new Error("Failed pattern match at Control.Monad.Free (line 171, column 10 - line 173, column 33): " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($copy_f);
            };
            return $tco_result;
        };
        return go;
    };
};
var resume$prime = function (k) {
    return function (j) {
        return function (f) {
            var v = toView(f);
            if (v instanceof Return) {
                return j(v.value0);
            };
            if (v instanceof Bind) {
                return k(v.value0)(v.value1);
            };
            throw new Error("Failed pattern match at Control.Monad.Free (line 206, column 17 - line 208, column 20): " + [ v.constructor.name ]);
        };
    };
};
var resume = function (dictFunctor) {
    return resume$prime(function (g) {
        return function (i) {
            return new Data_Either.Left(Data_Functor.map(dictFunctor)(i)(g));
        };
    })(Data_Either.Right.create);
};
var fromView = function (f) {
    return new Free(f, Data_CatList.empty);
};
var wrap = function (f) {
    return fromView(new Bind(f, Unsafe_Coerce.unsafeCoerce));
};
var suspendF = function (dictApplicative) {
    return function (f) {
        return wrap(Control_Applicative.pure(dictApplicative)(f));
    };
};
var freeMonad = new Control_Monad.Monad(function () {
    return freeApplicative;
}, function () {
    return freeBind;
});
var freeFunctor = new Data_Functor.Functor(function (k) {
    return function (f) {
        return Control_Bind.bindFlipped(freeBind)(function ($118) {
            return Control_Applicative.pure(freeApplicative)(k($118));
        })(f);
    };
});
var freeBind = new Control_Bind.Bind(function () {
    return freeApply;
}, function (v) {
    return function (k) {
        return new Free(v.value0, Data_CatList.snoc(v.value1)(k));
    };
});
var freeApply = new Control_Apply.Apply(function () {
    return freeFunctor;
}, Control_Monad.ap(freeMonad));
var freeApplicative = new Control_Applicative.Applicative(function () {
    return freeApply;
}, function ($119) {
    return fromView(Return.create($119));
});
var freeMonadRec = new Control_Monad_Rec_Class.MonadRec(function () {
    return freeMonad;
}, function (k) {
    return function (a) {
        return Control_Bind.bind(freeBind)(k(a))(function (v) {
            if (v instanceof Control_Monad_Rec_Class.Loop) {
                return Control_Monad_Rec_Class.tailRecM(freeMonadRec)(k)(v.value0);
            };
            if (v instanceof Control_Monad_Rec_Class.Done) {
                return Control_Applicative.pure(freeApplicative)(v.value0);
            };
            throw new Error("Failed pattern match at Control.Monad.Free (line 85, column 26 - line 87, column 21): " + [ v.constructor.name ]);
        });
    };
});
var liftF = function (f) {
    return fromView(new Bind(f, function ($120) {
        return Control_Applicative.pure(freeApplicative)($120);
    }));
};
var freeMonadTrans = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return liftF;
});
var substFree = function (k) {
    var go = function (f) {
        var v = toView(f);
        if (v instanceof Return) {
            return Control_Applicative.pure(freeApplicative)(v.value0);
        };
        if (v instanceof Bind) {
            return Control_Bind.bind(freeBind)(k(v.value0))(Data_Functor.map(Data_Functor.functorFn)(go)(v.value1));
        };
        throw new Error("Failed pattern match at Control.Monad.Free (line 161, column 10 - line 163, column 33): " + [ v.constructor.name ]);
    };
    return go;
};
var hoistFree = function (k) {
    return substFree(function ($121) {
        return liftF(k($121));
    });
};
var foldableFree = function (dictFunctor) {
    return function (dictFoldable) {
        return new Data_Foldable.Foldable(function (dictMonoid) {
            return function (f) {
                var go = function ($122) {
                    return (function (v) {
                        if (v instanceof Data_Either.Left) {
                            return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(go)(v.value0);
                        };
                        if (v instanceof Data_Either.Right) {
                            return f(v.value0);
                        };
                        throw new Error("Failed pattern match at Control.Monad.Free (line 92, column 21 - line 94, column 21): " + [ v.constructor.name ]);
                    })(resume(dictFunctor)($122));
                };
                return go;
            };
        }, function (f) {
            var go = function (r) {
                return function ($123) {
                    return (function (v) {
                        if (v instanceof Data_Either.Left) {
                            return Data_Foldable.foldl(dictFoldable)(go)(r)(v.value0);
                        };
                        if (v instanceof Data_Either.Right) {
                            return f(r)(v.value0);
                        };
                        throw new Error("Failed pattern match at Control.Monad.Free (line 97, column 23 - line 99, column 23): " + [ v.constructor.name ]);
                    })(resume(dictFunctor)($123));
                };
            };
            return go;
        }, function (f) {
            var go = function (r) {
                return function ($124) {
                    return (function (v) {
                        if (v instanceof Data_Either.Left) {
                            return Data_Foldable.foldr(dictFoldable)(Data_Function.flip(go))(r)(v.value0);
                        };
                        if (v instanceof Data_Either.Right) {
                            return f(v.value0)(r);
                        };
                        throw new Error("Failed pattern match at Control.Monad.Free (line 102, column 23 - line 104, column 23): " + [ v.constructor.name ]);
                    })(resume(dictFunctor)($124));
                };
            };
            return go;
        });
    };
};
var traversableFree = function (dictTraversable) {
    return new Data_Traversable.Traversable(function () {
        return foldableFree(dictTraversable.Functor0())(dictTraversable.Foldable1());
    }, function () {
        return freeFunctor;
    }, function (dictApplicative) {
        return function (tma) {
            return Data_Traversable.traverse(traversableFree(dictTraversable))(dictApplicative)(Control_Category.identity(Control_Category.categoryFn))(tma);
        };
    }, function (dictApplicative) {
        return function (f) {
            var go = function ($125) {
                return (function (v) {
                    if (v instanceof Data_Either.Left) {
                        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(function ($126) {
                            return Control_Bind.join(freeBind)(liftF($126));
                        })(Data_Traversable.traverse(dictTraversable)(dictApplicative)(go)(v.value0));
                    };
                    if (v instanceof Data_Either.Right) {
                        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Control_Applicative.pure(freeApplicative))(f(v.value0));
                    };
                    throw new Error("Failed pattern match at Control.Monad.Free (line 109, column 21 - line 111, column 30): " + [ v.constructor.name ]);
                })(resume(dictTraversable.Functor0())($125));
            };
            return go;
        };
    });
};
var foldFree = function (dictMonadRec) {
    return function (k) {
        var go = function (f) {
            var v = toView(f);
            if (v instanceof Return) {
                return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(v.value0));
            };
            if (v instanceof Bind) {
                return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(function ($127) {
                    return Control_Monad_Rec_Class.Loop.create(v.value1($127));
                })(k(v.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Free (line 151, column 10 - line 153, column 37): " + [ v.constructor.name ]);
        };
        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
    };
};
var eqFree = function (dictFunctor) {
    return function (dictEq1) {
        return function (dictEq) {
            return new Data_Eq.Eq(function (x) {
                return function (y) {
                    var v = resume(dictFunctor)(y);
                    var v1 = resume(dictFunctor)(x);
                    if (v1 instanceof Data_Either.Left && v instanceof Data_Either.Left) {
                        return Data_Eq.eq1(dictEq1)(eqFree(dictFunctor)(dictEq1)(dictEq))(v1.value0)(v.value0);
                    };
                    if (v1 instanceof Data_Either.Right && v instanceof Data_Either.Right) {
                        return Data_Eq.eq(dictEq)(v1.value0)(v.value0);
                    };
                    return false;
                };
            });
        };
    };
};
var ordFree = function (dictFunctor) {
    return function (dictOrd1) {
        return function (dictOrd) {
            return new Data_Ord.Ord(function () {
                return eqFree(dictFunctor)(dictOrd1.Eq10())(dictOrd.Eq0());
            }, function (x) {
                return function (y) {
                    var v = resume(dictFunctor)(y);
                    var v1 = resume(dictFunctor)(x);
                    if (v1 instanceof Data_Either.Left && v instanceof Data_Either.Left) {
                        return Data_Ord.compare1(dictOrd1)(ordFree(dictFunctor)(dictOrd1)(dictOrd))(v1.value0)(v.value0);
                    };
                    if (v1 instanceof Data_Either.Left) {
                        return Data_Ordering.LT.value;
                    };
                    if (v instanceof Data_Either.Left) {
                        return Data_Ordering.GT.value;
                    };
                    if (v1 instanceof Data_Either.Right && v instanceof Data_Either.Right) {
                        return Data_Ord.compare(dictOrd)(v1.value0)(v.value0);
                    };
                    throw new Error("Failed pattern match at Control.Monad.Free (line 55, column 17 - line 59, column 36): " + [ v1.constructor.name, v.constructor.name ]);
                };
            });
        };
    };
};
var eq1Free = function (dictFunctor) {
    return function (dictEq1) {
        return new Data_Eq.Eq1(function (dictEq) {
            return Data_Eq.eq(eqFree(dictFunctor)(dictEq1)(dictEq));
        });
    };
};
var ord1Free = function (dictFunctor) {
    return function (dictOrd1) {
        return function (dictOrd) {
            return new Data_Ord.Ord1(function () {
                return eq1Free(dictFunctor)(dictOrd1.Eq10());
            }, function (dictOrd2) {
                return Data_Ord.compare(ordFree(dictFunctor)(dictOrd1)(dictOrd2));
            });
        };
    };
};
module.exports = {
    suspendF: suspendF,
    wrap: wrap,
    liftF: liftF,
    hoistFree: hoistFree,
    foldFree: foldFree,
    substFree: substFree,
    runFree: runFree,
    runFreeM: runFreeM,
    resume: resume,
    "resume'": resume$prime,
    eqFree: eqFree,
    eq1Free: eq1Free,
    ordFree: ordFree,
    ord1Free: ord1Free,
    freeFunctor: freeFunctor,
    freeBind: freeBind,
    freeApplicative: freeApplicative,
    freeApply: freeApply,
    freeMonad: freeMonad,
    freeMonadTrans: freeMonadTrans,
    freeMonadRec: freeMonadRec,
    foldableFree: foldableFree,
    traversableFree: traversableFree
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Monad.Rec.Class/index.js":43,"../Control.Monad.Trans.Class/index.js":52,"../Control.Monad/index.js":55,"../Control.Semigroupoid/index.js":61,"../Data.CatList/index.js":114,"../Data.Either/index.js":131,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Semigroup/index.js":248,"../Data.Traversable/index.js":281,"../Data.Tuple/index.js":283,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425}],34:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Prelude = require("../Prelude/index.js");
var MonadGen = function (Monad0, chooseBool, chooseFloat, chooseInt, resize, sized) {
    this.Monad0 = Monad0;
    this.chooseBool = chooseBool;
    this.chooseFloat = chooseFloat;
    this.chooseInt = chooseInt;
    this.resize = resize;
    this.sized = sized;
};
var sized = function (dict) {
    return dict.sized;
};
var resize = function (dict) {
    return dict.resize;
};
var chooseInt = function (dict) {
    return dict.chooseInt;
};
var chooseFloat = function (dict) {
    return dict.chooseFloat;
};
var chooseBool = function (dict) {
    return dict.chooseBool;
};
module.exports = {
    chooseBool: chooseBool,
    chooseFloat: chooseFloat,
    chooseInt: chooseInt,
    resize: resize,
    sized: sized,
    MonadGen: MonadGen
};

},{"../Prelude/index.js":385}],35:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Gen = require("../Control.Monad.Gen/index.js");
var Control_Monad_Gen_Class = require("../Control.Monad.Gen.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_NonEmpty = require("../Data.NonEmpty/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Prelude = require("../Prelude/index.js");
var genTuple = function (dictApply) {
    return Control_Apply.lift2(dictApply)(Data_Tuple.Tuple.create);
};
var genNonEmpty = function (dictMonadRec) {
    return function (dictMonadGen) {
        return function (dictUnfoldable) {
            return function (gen) {
                return Control_Apply.apply(((dictMonadGen.Monad0()).Bind1()).Apply0())(Data_Functor.map((((dictMonadGen.Monad0()).Bind1()).Apply0()).Functor0())(Data_NonEmpty.NonEmpty.create)(gen))(Control_Monad_Gen_Class.resize(dictMonadGen)(function (v) {
                    return v - 1 | 0;
                })(Control_Monad_Gen.unfoldable(dictMonadRec)(dictMonadGen)(dictUnfoldable)(gen)));
            };
        };
    };
};
var genMaybe$prime = function (dictMonadGen) {
    return function (bias) {
        return function (gen) {
            return Control_Bind.bind((dictMonadGen.Monad0()).Bind1())(Control_Monad_Gen_Class.chooseFloat(dictMonadGen)(0.0)(1.0))(function (v) {
                var $13 = v < bias;
                if ($13) {
                    return Data_Functor.map((((dictMonadGen.Monad0()).Bind1()).Apply0()).Functor0())(Data_Maybe.Just.create)(gen);
                };
                return Control_Applicative.pure((dictMonadGen.Monad0()).Applicative0())(Data_Maybe.Nothing.value);
            });
        };
    };
};
var genMaybe = function (dictMonadGen) {
    return genMaybe$prime(dictMonadGen)(0.75);
};
var genIdentity = function (dictFunctor) {
    return Data_Functor.map(dictFunctor)(Data_Identity.Identity);
};
var genEither$prime = function (dictMonadGen) {
    return function (bias) {
        return function (genA) {
            return function (genB) {
                return Control_Bind.bind((dictMonadGen.Monad0()).Bind1())(Control_Monad_Gen_Class.chooseFloat(dictMonadGen)(0.0)(1.0))(function (v) {
                    var $15 = v < bias;
                    if ($15) {
                        return Data_Functor.map((((dictMonadGen.Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Left.create)(genA);
                    };
                    return Data_Functor.map((((dictMonadGen.Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(genB);
                });
            };
        };
    };
};
var genEither = function (dictMonadGen) {
    return genEither$prime(dictMonadGen)(0.5);
};
module.exports = {
    genEither: genEither,
    "genEither'": genEither$prime,
    genIdentity: genIdentity,
    genMaybe: genMaybe,
    "genMaybe'": genMaybe$prime,
    genTuple: genTuple,
    genNonEmpty: genNonEmpty
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Monad.Gen.Class/index.js":34,"../Control.Monad.Gen/index.js":36,"../Control.Monad.Rec.Class/index.js":43,"../Data.Either/index.js":131,"../Data.Functor/index.js":153,"../Data.Identity/index.js":163,"../Data.Maybe/index.js":210,"../Data.NonEmpty/index.js":221,"../Data.Ord/index.js":229,"../Data.Ring/index.js":242,"../Data.Tuple/index.js":283,"../Data.Unfoldable/index.js":285,"../Prelude/index.js":385}],36:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Gen_Class = require("../Control.Monad.Gen.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Prelude = require("../Prelude/index.js");
var Cons = (function () {
    function Cons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Cons.create = function (value0) {
        return function (value1) {
            return new Cons(value0, value1);
        };
    };
    return Cons;
})();
var Nil = (function () {
    function Nil() {

    };
    Nil.value = new Nil();
    return Nil;
})();
var FreqSemigroup = function (x) {
    return x;
};
var AtIndex = function (x) {
    return x;
};
var unfoldable = function (dictMonadRec) {
    return function (dictMonadGen) {
        return function (dictUnfoldable) {
            return function (gen) {
                var unfold = function (v) {
                    if (v instanceof Nil) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (v instanceof Cons) {
                        return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, v.value1));
                    };
                    throw new Error("Failed pattern match at Control.Monad.Gen (line 101, column 12 - line 103, column 35): " + [ v.constructor.name ]);
                };
                var loopGen = function (v) {
                    if (v.value1 === 0) {
                        return Control_Applicative.pure((dictMonadGen.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(v.value0));
                    };
                    return Control_Bind.bind((dictMonadGen.Monad0()).Bind1())(gen)(function (v1) {
                        return Control_Applicative.pure((dictMonadGen.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(new Cons(v1, v.value0), v.value1 - 1 | 0)));
                    });
                };
                return Data_Functor.map((((dictMonadGen.Monad0()).Bind1()).Apply0()).Functor0())(Data_Unfoldable.unfoldr(dictUnfoldable)(unfold))(Control_Monad_Gen_Class.sized(dictMonadGen)(function ($61) {
                    return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(loopGen)(Data_Tuple.Tuple.create(Nil.value)($61));
                }));
            };
        };
    };
};
var semigroupFreqSemigroup = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return function (pos) {
            var v2 = v(pos);
            if (v2.value0 instanceof Data_Maybe.Just) {
                return v1(v2.value0.value0);
            };
            return v2;
        };
    };
});
var semigroupAtIndex = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return function (i) {
            var $48 = i <= 0;
            if ($48) {
                return v(i);
            };
            return v1(i - 1 | 0);
        };
    };
});
var getFreqVal = function (v) {
    return function ($62) {
        return Data_Tuple.snd(v($62));
    };
};
var getAtIndex = function (v) {
    return v;
};
var freqSemigroup = function (v) {
    return function (pos) {
        var $52 = pos >= v.value0;
        if ($52) {
            return new Data_Tuple.Tuple(new Data_Maybe.Just(pos - v.value0), v.value1);
        };
        return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, v.value1);
    };
};
var frequency = function (dictMonadGen) {
    return function (dictFoldable1) {
        return function (xs) {
            var total = Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeAdditive)(Data_Newtype.newtypeAdditive)(Data_Monoid_Additive.Additive)(Data_Foldable.foldMap(dictFoldable1.Foldable0())(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringNumber)))(Data_Tuple.fst)(xs);
            return Control_Bind.bind((dictMonadGen.Monad0()).Bind1())(Control_Monad_Gen_Class.chooseFloat(dictMonadGen)(0.0)(total))(getFreqVal(Data_Semigroup_Foldable.foldMap1(dictFoldable1)(semigroupFreqSemigroup)(freqSemigroup)(xs)));
        };
    };
};
var filtered = function (dictMonadRec) {
    return function (dictMonadGen) {
        return function (gen) {
            var go = function (v) {
                return Data_Functor.mapFlipped((((dictMonadGen.Monad0()).Bind1()).Apply0()).Functor0())(gen)(function (a) {
                    if (a instanceof Data_Maybe.Nothing) {
                        return new Control_Monad_Rec_Class.Loop(Data_Unit.unit);
                    };
                    if (a instanceof Data_Maybe.Just) {
                        return new Control_Monad_Rec_Class.Done(a.value0);
                    };
                    throw new Error("Failed pattern match at Control.Monad.Gen (line 117, column 24 - line 119, column 23): " + [ a.constructor.name ]);
                });
            };
            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go)(Data_Unit.unit);
        };
    };
};
var suchThat = function (dictMonadRec) {
    return function (dictMonadGen) {
        return function (gen) {
            return function (pred) {
                return filtered(dictMonadRec)(dictMonadGen)(Data_Functor.mapFlipped((((dictMonadGen.Monad0()).Bind1()).Apply0()).Functor0())(gen)(function (a) {
                    var $57 = pred(a);
                    if ($57) {
                        return new Data_Maybe.Just(a);
                    };
                    return Data_Maybe.Nothing.value;
                }));
            };
        };
    };
};
var choose = function (dictMonadGen) {
    return function (genA) {
        return function (genB) {
            return Control_Bind.bind((dictMonadGen.Monad0()).Bind1())(Control_Monad_Gen_Class.chooseBool(dictMonadGen))(function (v) {
                if (v) {
                    return genA;
                };
                return genB;
            });
        };
    };
};
var atIndex = function ($63) {
    return AtIndex(Data_Function["const"]($63));
};
var fromIndex = function (dictFoldable1) {
    return function (i) {
        return function (xs) {
            return getAtIndex(Data_Semigroup_Foldable.foldMap1(dictFoldable1)(semigroupAtIndex)(atIndex)(xs))(i);
        };
    };
};
var elements = function (dictMonadGen) {
    return function (dictFoldable1) {
        return function (xs) {
            return Control_Bind.bind((dictMonadGen.Monad0()).Bind1())(Control_Monad_Gen_Class.chooseInt(dictMonadGen)(0)(Data_Foldable.length(dictFoldable1.Foldable0())(Data_Semiring.semiringInt)(xs) - 1 | 0))(function (v) {
                return Control_Applicative.pure((dictMonadGen.Monad0()).Applicative0())(fromIndex(dictFoldable1)(v)(xs));
            });
        };
    };
};
var oneOf = function (dictMonadGen) {
    return function (dictFoldable1) {
        return function (xs) {
            return Control_Bind.bind((dictMonadGen.Monad0()).Bind1())(Control_Monad_Gen_Class.chooseInt(dictMonadGen)(0)(Data_Foldable.length(dictFoldable1.Foldable0())(Data_Semiring.semiringInt)(xs) - 1 | 0))(function (v) {
                return fromIndex(dictFoldable1)(v)(xs);
            });
        };
    };
};
module.exports = {
    choose: choose,
    oneOf: oneOf,
    frequency: frequency,
    elements: elements,
    unfoldable: unfoldable,
    suchThat: suchThat,
    filtered: filtered
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Control.Monad.Gen.Class/index.js":34,"../Control.Monad.Rec.Class/index.js":43,"../Control.Semigroupoid/index.js":61,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Monoid.Additive/index.js":212,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Ring/index.js":242,"../Data.Semigroup.Foldable/index.js":244,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Tuple/index.js":283,"../Data.Unfoldable/index.js":285,"../Data.Unit/index.js":289,"../Prelude/index.js":385}],37:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Lazy = require("../Data.Lazy/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Prelude = require("../Prelude/index.js");
var Yield = (function () {
    function Yield(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Yield.create = function (value0) {
        return function (value1) {
            return new Yield(value0, value1);
        };
    };
    return Yield;
})();
var Skip = (function () {
    function Skip(value0) {
        this.value0 = value0;
    };
    Skip.create = function (value0) {
        return new Skip(value0);
    };
    return Skip;
})();
var Done = (function () {
    function Done() {

    };
    Done.value = new Done();
    return Done;
})();
var ListT = function (x) {
    return x;
};
var wrapLazy = function (dictApplicative) {
    return function (v) {
        return ListT(Control_Applicative.pure(dictApplicative)(new Skip(v)));
    };
};
var wrapEffect = function (dictFunctor) {
    return function (v) {
        return ListT(Data_Functor.map(dictFunctor)(function ($187) {
            return Skip.create(Data_Lazy.defer(Data_Function["const"]($187)));
        })(v));
    };
};
var unfold = function (dictMonad) {
    return function (f) {
        return function (z) {
            var g = function (v) {
                if (v instanceof Data_Maybe.Just) {
                    return new Yield(v.value0.value1, Data_Lazy.defer(function (v1) {
                        return unfold(dictMonad)(f)(v.value0.value0);
                    }));
                };
                if (v instanceof Data_Maybe.Nothing) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans (line 130, column 3 - line 130, column 60): " + [ v.constructor.name ]);
            };
            return ListT(Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(g)(f(z)));
        };
    };
};
var uncons = function (dictMonad) {
    return function (v) {
        var g = function (v1) {
            if (v1 instanceof Yield) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Just.create(new Data_Tuple.Tuple(v1.value0, Data_Lazy.force(v1.value1))));
            };
            if (v1 instanceof Skip) {
                return uncons(dictMonad)(Data_Lazy.force(v1.value0));
            };
            if (v1 instanceof Done) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value);
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans (line 195, column 3 - line 195, column 50): " + [ v1.constructor.name ]);
        };
        return Control_Bind.bind(dictMonad.Bind1())(v)(g);
    };
};
var tail = function (dictMonad) {
    return function (l) {
        return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.snd))(uncons(dictMonad)(l));
    };
};
var stepMap = function (dictFunctor) {
    return function (f) {
        return function (v) {
            return ListT(Data_Functor.map(dictFunctor)(f)(v));
        };
    };
};
var takeWhile = function (dictApplicative) {
    return function (f) {
        var g = function (v) {
            if (v instanceof Yield) {
                var $101 = f(v.value0);
                if ($101) {
                    return new Yield(v.value0, Data_Functor.map(Data_Lazy.functorLazy)(takeWhile(dictApplicative)(f))(v.value1));
                };
                return Done.value;
            };
            if (v instanceof Skip) {
                return Skip.create(Data_Functor.map(Data_Lazy.functorLazy)(takeWhile(dictApplicative)(f))(v.value0));
            };
            if (v instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans (line 154, column 3 - line 154, column 68): " + [ v.constructor.name ]);
        };
        return stepMap((dictApplicative.Apply0()).Functor0())(g);
    };
};
var scanl = function (dictMonad) {
    return function (f) {
        return function (b) {
            return function (l) {
                var g = function (v) {
                    var h = function (v1) {
                        if (v1 instanceof Yield) {
                            var b$prime$prime = f(v.value0)(v1.value0);
                            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(b$prime$prime, Data_Lazy.force(v1.value1)), v.value0));
                        };
                        if (v1 instanceof Skip) {
                            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0, Data_Lazy.force(v1.value0)), v.value0));
                        };
                        if (v1 instanceof Done) {
                            return Data_Maybe.Nothing.value;
                        };
                        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 248, column 5 - line 248, column 78): " + [ v1.constructor.name ]);
                    };
                    return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(h)(v.value1);
                };
                return unfold(dictMonad)(g)(new Data_Tuple.Tuple(b, l));
            };
        };
    };
};
var prepend$prime = function (dictApplicative) {
    return function (h) {
        return function (t) {
            return ListT(Control_Applicative.pure(dictApplicative)(new Yield(h, t)));
        };
    };
};
var prepend = function (dictApplicative) {
    return function (h) {
        return function (t) {
            return prepend$prime(dictApplicative)(h)(Data_Lazy.defer(Data_Function["const"](t)));
        };
    };
};
var nil = function (dictApplicative) {
    return ListT(Control_Applicative.pure(dictApplicative)(Done.value));
};
var singleton = function (dictApplicative) {
    return function (a) {
        return prepend(dictApplicative)(a)(nil(dictApplicative));
    };
};
var take = function (dictApplicative) {
    return function (v) {
        return function (fa) {
            if (v === 0) {
                return nil(dictApplicative);
            };
            var f = function (v1) {
                if (v1 instanceof Yield) {
                    return new Yield(v1.value0, Data_Functor.map(Data_Lazy.functorLazy)(take(dictApplicative)(v - 1 | 0))(v1.value1));
                };
                if (v1 instanceof Skip) {
                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(take(dictApplicative)(v))(v1.value0));
                };
                if (v1 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans (line 147, column 3 - line 147, column 47): " + [ v1.constructor.name ]);
            };
            return stepMap((dictApplicative.Apply0()).Functor0())(f)(fa);
        };
    };
};
var zipWith$prime = function (dictMonad) {
    return function (f) {
        var g = function (v) {
            return function (v1) {
                if (v1 instanceof Data_Maybe.Nothing) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(nil(dictMonad.Applicative0()));
                };
                if (v instanceof Data_Maybe.Nothing) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(nil(dictMonad.Applicative0()));
                };
                if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
                    return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Function.flip(prepend$prime(dictMonad.Applicative0()))(Data_Lazy.defer(function (v2) {
                        return zipWith$prime(dictMonad)(f)(v.value0.value1)(v1.value0.value1);
                    })))(f(v.value0.value0)(v1.value0.value0));
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans (line 260, column 3 - line 260, column 25): " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        var loop = function (fa) {
            return function (fb) {
                return wrapEffect(((dictMonad.Bind1()).Apply0()).Functor0())(Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(fa))(function (v) {
                    return Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(fb))(function (v1) {
                        return g(v)(v1);
                    });
                }));
            };
        };
        return loop;
    };
};
var zipWith = function (dictMonad) {
    return function (f) {
        var g = function (a) {
            return function (b) {
                return Control_Applicative.pure(dictMonad.Applicative0())(f(a)(b));
            };
        };
        return zipWith$prime(dictMonad)(g);
    };
};
var newtypeListT = new Data_Newtype.Newtype(function (n) {
    return n;
}, ListT);
var mapMaybe = function (dictFunctor) {
    return function (f) {
        var g = function (v) {
            if (v instanceof Yield) {
                return Data_Maybe.fromMaybe(Skip.create)(Data_Functor.map(Data_Maybe.functorMaybe)(Yield.create)(f(v.value0)))(Data_Functor.map(Data_Lazy.functorLazy)(mapMaybe(dictFunctor)(f))(v.value1));
            };
            if (v instanceof Skip) {
                return Skip.create(Data_Functor.map(Data_Lazy.functorLazy)(mapMaybe(dictFunctor)(f))(v.value0));
            };
            if (v instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans (line 183, column 3 - line 183, column 72): " + [ v.constructor.name ]);
        };
        return stepMap(dictFunctor)(g);
    };
};
var iterate = function (dictMonad) {
    return function (f) {
        return function (a) {
            var g = function (x) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Maybe.Just(new Data_Tuple.Tuple(f(x), x)));
            };
            return unfold(dictMonad)(g)(a);
        };
    };
};
var repeat = function (dictMonad) {
    return iterate(dictMonad)(Control_Category.identity(Control_Category.categoryFn));
};
var head = function (dictMonad) {
    return function (l) {
        return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.fst))(uncons(dictMonad)(l));
    };
};
var functorListT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        var g = function (v) {
            if (v instanceof Yield) {
                return new Yield(f(v.value0), Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(functorListT(dictFunctor))(f))(v.value1));
            };
            if (v instanceof Skip) {
                return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(functorListT(dictFunctor))(f))(v.value0));
            };
            if (v instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans (line 280, column 5 - line 280, column 48): " + [ v.constructor.name ]);
        };
        return stepMap(dictFunctor)(g);
    });
};
var fromEffect = function (dictApplicative) {
    return function (fa) {
        return ListT(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Function.flip(Yield.create)(Data_Lazy.defer(function (v) {
            return nil(dictApplicative);
        })))(fa));
    };
};
var monadTransListT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return fromEffect(dictMonad.Applicative0());
});
var foldlRec$prime = function (dictMonadRec) {
    return function (f) {
        var loop = function (b) {
            return function (l) {
                var g = function (v) {
                    if (v instanceof Data_Maybe.Nothing) {
                        return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(b));
                    };
                    if (v instanceof Data_Maybe.Just) {
                        return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(f(b)(v.value0.value0))(function (b$prime) {
                            return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop({
                                a: b$prime,
                                b: v.value0.value1
                            }));
                        });
                    };
                    throw new Error("Failed pattern match at Control.Monad.List.Trans (line 221, column 5 - line 221, column 45): " + [ v.constructor.name ]);
                };
                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(uncons(dictMonadRec.Monad0())(l))(g);
            };
        };
        return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(loop);
    };
};
var runListTRec = function (dictMonadRec) {
    return foldlRec$prime(dictMonadRec)(function (v) {
        return function (v1) {
            return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(Data_Unit.unit);
        };
    })(Data_Unit.unit);
};
var foldlRec = function (dictMonadRec) {
    return function (f) {
        var loop = function (b) {
            return function (l) {
                var g = function (v) {
                    if (v instanceof Data_Maybe.Nothing) {
                        return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(b));
                    };
                    if (v instanceof Data_Maybe.Just) {
                        return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop({
                            a: f(b)(v.value0.value0),
                            b: v.value0.value1
                        }));
                    };
                    throw new Error("Failed pattern match at Control.Monad.List.Trans (line 239, column 7 - line 239, column 47): " + [ v.constructor.name ]);
                };
                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(uncons(dictMonadRec.Monad0())(l))(g);
            };
        };
        return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(loop);
    };
};
var foldl$prime = function (dictMonad) {
    return function (f) {
        var loop = function (b) {
            return function (l) {
                var g = function (v) {
                    if (v instanceof Data_Maybe.Nothing) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(b);
                    };
                    if (v instanceof Data_Maybe.Just) {
                        return Control_Bind.bind(dictMonad.Bind1())(f(b)(v.value0.value0))(Data_Function.flip(loop)(v.value0.value1));
                    };
                    throw new Error("Failed pattern match at Control.Monad.List.Trans (line 212, column 5 - line 212, column 35): " + [ v.constructor.name ]);
                };
                return Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(l))(g);
            };
        };
        return loop;
    };
};
var runListT = function (dictMonad) {
    return foldl$prime(dictMonad)(function (v) {
        return function (v1) {
            return Control_Applicative.pure(dictMonad.Applicative0())(Data_Unit.unit);
        };
    })(Data_Unit.unit);
};
var foldl = function (dictMonad) {
    return function (f) {
        var loop = function (b) {
            return function (l) {
                var g = function (v) {
                    if (v instanceof Data_Maybe.Nothing) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(b);
                    };
                    if (v instanceof Data_Maybe.Just) {
                        return loop(f(b)(v.value0.value0))(v.value0.value1);
                    };
                    throw new Error("Failed pattern match at Control.Monad.List.Trans (line 229, column 5 - line 229, column 35): " + [ v.constructor.name ]);
                };
                return Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(l))(g);
            };
        };
        return loop;
    };
};
var filter = function (dictFunctor) {
    return function (f) {
        var g = function (v) {
            if (v instanceof Yield) {
                var s$prime = Data_Functor.map(Data_Lazy.functorLazy)(filter(dictFunctor)(f))(v.value1);
                var $154 = f(v.value0);
                if ($154) {
                    return new Yield(v.value0, s$prime);
                };
                return new Skip(s$prime);
            };
            if (v instanceof Skip) {
                var s$prime = Data_Functor.map(Data_Lazy.functorLazy)(filter(dictFunctor)(f))(v.value0);
                return new Skip(s$prime);
            };
            if (v instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans (line 176, column 3 - line 176, column 80): " + [ v.constructor.name ]);
        };
        return stepMap(dictFunctor)(g);
    };
};
var dropWhile = function (dictApplicative) {
    return function (f) {
        var g = function (v) {
            if (v instanceof Yield) {
                var $159 = f(v.value0);
                if ($159) {
                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(dropWhile(dictApplicative)(f))(v.value1));
                };
                return new Yield(v.value0, v.value1);
            };
            if (v instanceof Skip) {
                return Skip.create(Data_Functor.map(Data_Lazy.functorLazy)(dropWhile(dictApplicative)(f))(v.value0));
            };
            if (v instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans (line 169, column 3 - line 169, column 70): " + [ v.constructor.name ]);
        };
        return stepMap((dictApplicative.Apply0()).Functor0())(g);
    };
};
var drop = function (dictApplicative) {
    return function (v) {
        return function (fa) {
            if (v === 0) {
                return fa;
            };
            var f = function (v1) {
                if (v1 instanceof Yield) {
                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(drop(dictApplicative)(v - 1 | 0))(v1.value1));
                };
                if (v1 instanceof Skip) {
                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(drop(dictApplicative)(v))(v1.value0));
                };
                if (v1 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans (line 162, column 3 - line 162, column 44): " + [ v1.constructor.name ]);
            };
            return stepMap((dictApplicative.Apply0()).Functor0())(f)(fa);
        };
    };
};
var cons = function (dictApplicative) {
    return function (lh) {
        return function (t) {
            return ListT(Control_Applicative.pure(dictApplicative)(new Yield(Data_Lazy.force(lh), t)));
        };
    };
};
var unfoldable1ListT = function (dictMonad) {
    return new Data_Unfoldable1.Unfoldable1(function (f) {
        return function (b) {
            var go = function (v) {
                if (v.value1 instanceof Data_Maybe.Nothing) {
                    return singleton(dictMonad.Applicative0())(v.value0);
                };
                if (v.value1 instanceof Data_Maybe.Just) {
                    return cons(dictMonad.Applicative0())(Control_Applicative.pure(Data_Lazy.applicativeLazy)(v.value0))(Data_Lazy.defer(function (v1) {
                        return go(f(v.value1.value0));
                    }));
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans (line 294, column 12 - line 296, column 67): " + [ v.constructor.name ]);
            };
            return go(f(b));
        };
    });
};
var unfoldableListT = function (dictMonad) {
    return new Data_Unfoldable.Unfoldable(function () {
        return unfoldable1ListT(dictMonad);
    }, function (f) {
        return function (b) {
            var go = function (v) {
                if (v instanceof Data_Maybe.Nothing) {
                    return nil(dictMonad.Applicative0());
                };
                if (v instanceof Data_Maybe.Just) {
                    return cons(dictMonad.Applicative0())(Control_Applicative.pure(Data_Lazy.applicativeLazy)(v.value0.value0))(Data_Lazy.defer(function (v1) {
                        return go(f(v.value0.value1));
                    }));
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans (line 287, column 12 - line 289, column 67): " + [ v.constructor.name ]);
            };
            return go(f(b));
        };
    });
};
var semigroupListT = function (dictApplicative) {
    return new Data_Semigroup.Semigroup(concat(dictApplicative));
};
var concat = function (dictApplicative) {
    return function (x) {
        return function (y) {
            var f = function (v) {
                if (v instanceof Yield) {
                    return new Yield(v.value0, Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
                        return Data_Semigroup.append(semigroupListT(dictApplicative))(v1)(y);
                    })(v.value1));
                };
                if (v instanceof Skip) {
                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
                        return Data_Semigroup.append(semigroupListT(dictApplicative))(v1)(y);
                    })(v.value0));
                };
                if (v instanceof Done) {
                    return new Skip(Data_Lazy.defer(Data_Function["const"](y)));
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans (line 106, column 3 - line 106, column 43): " + [ v.constructor.name ]);
            };
            return stepMap((dictApplicative.Apply0()).Functor0())(f)(x);
        };
    };
};
var monoidListT = function (dictApplicative) {
    return new Data_Monoid.Monoid(function () {
        return semigroupListT(dictApplicative);
    }, nil(dictApplicative));
};
var catMaybes = function (dictFunctor) {
    return mapMaybe(dictFunctor)(Control_Category.identity(Control_Category.categoryFn));
};
var monadListT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeListT(dictMonad);
    }, function () {
        return bindListT(dictMonad);
    });
};
var bindListT = function (dictMonad) {
    return new Control_Bind.Bind(function () {
        return applyListT(dictMonad);
    }, function (fa) {
        return function (f) {
            var g = function (v) {
                if (v instanceof Yield) {
                    var h = function (s$prime) {
                        return Data_Semigroup.append(semigroupListT(dictMonad.Applicative0()))(f(v.value0))(Control_Bind.bind(bindListT(dictMonad))(s$prime)(f));
                    };
                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(h)(v.value1));
                };
                if (v instanceof Skip) {
                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
                        return Control_Bind.bind(bindListT(dictMonad))(v1)(f);
                    })(v.value0));
                };
                if (v instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans (line 306, column 5 - line 308, column 31): " + [ v.constructor.name ]);
            };
            return stepMap(((dictMonad.Bind1()).Apply0()).Functor0())(g)(fa);
        };
    });
};
var applyListT = function (dictMonad) {
    return new Control_Apply.Apply(function () {
        return functorListT(((dictMonad.Bind1()).Apply0()).Functor0());
    }, Control_Monad.ap(monadListT(dictMonad)));
};
var applicativeListT = function (dictMonad) {
    return new Control_Applicative.Applicative(function () {
        return applyListT(dictMonad);
    }, singleton(dictMonad.Applicative0()));
};
var monadEffectListT = function (dictMonadEffect) {
    return new Effect_Class.MonadEffect(function () {
        return monadListT(dictMonadEffect.Monad0());
    }, function ($188) {
        return Control_Monad_Trans_Class.lift(monadTransListT)(dictMonadEffect.Monad0())(Effect_Class.liftEffect(dictMonadEffect)($188));
    });
};
var altListT = function (dictApplicative) {
    return new Control_Alt.Alt(function () {
        return functorListT((dictApplicative.Apply0()).Functor0());
    }, concat(dictApplicative));
};
var plusListT = function (dictMonad) {
    return new Control_Plus.Plus(function () {
        return altListT(dictMonad.Applicative0());
    }, nil(dictMonad.Applicative0()));
};
var alternativeListT = function (dictMonad) {
    return new Control_Alternative.Alternative(function () {
        return applicativeListT(dictMonad);
    }, function () {
        return plusListT(dictMonad);
    });
};
var monadZeroListT = function (dictMonad) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeListT(dictMonad);
    }, function () {
        return monadListT(dictMonad);
    });
};
var monadPlusListT = function (dictMonad) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZeroListT(dictMonad);
    });
};
module.exports = {
    ListT: ListT,
    Yield: Yield,
    Skip: Skip,
    Done: Done,
    catMaybes: catMaybes,
    cons: cons,
    drop: drop,
    dropWhile: dropWhile,
    filter: filter,
    foldl: foldl,
    foldlRec: foldlRec,
    "foldl'": foldl$prime,
    "foldlRec'": foldlRec$prime,
    fromEffect: fromEffect,
    head: head,
    iterate: iterate,
    mapMaybe: mapMaybe,
    nil: nil,
    prepend: prepend,
    "prepend'": prepend$prime,
    repeat: repeat,
    runListT: runListT,
    runListTRec: runListTRec,
    scanl: scanl,
    singleton: singleton,
    tail: tail,
    take: take,
    takeWhile: takeWhile,
    uncons: uncons,
    unfold: unfold,
    wrapEffect: wrapEffect,
    wrapLazy: wrapLazy,
    zipWith: zipWith,
    "zipWith'": zipWith$prime,
    newtypeListT: newtypeListT,
    semigroupListT: semigroupListT,
    monoidListT: monoidListT,
    functorListT: functorListT,
    unfoldableListT: unfoldableListT,
    unfoldable1ListT: unfoldable1ListT,
    applyListT: applyListT,
    applicativeListT: applicativeListT,
    bindListT: bindListT,
    monadListT: monadListT,
    monadTransListT: monadTransListT,
    altListT: altListT,
    plusListT: plusListT,
    alternativeListT: alternativeListT,
    monadZeroListT: monadZeroListT,
    monadPlusListT: monadPlusListT,
    monadEffectListT: monadEffectListT
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Monad.Rec.Class/index.js":43,"../Control.Monad.Trans.Class/index.js":52,"../Control.Monad/index.js":55,"../Control.MonadPlus/index.js":56,"../Control.MonadZero/index.js":57,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Lazy/index.js":171,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Tuple/index.js":283,"../Data.Unfoldable/index.js":285,"../Data.Unfoldable1/index.js":287,"../Data.Unit/index.js":289,"../Effect.Class/index.js":298,"../Prelude/index.js":385}],38:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Prelude = require("../Prelude/index.js");
var MaybeT = function (x) {
    return x;
};
var runMaybeT = function (v) {
    return v;
};
var newtypeMaybeT = new Data_Newtype.Newtype(function (n) {
    return n;
}, MaybeT);
var monadTransMaybeT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function ($75) {
        return MaybeT(Control_Monad.liftM1(dictMonad)(Data_Maybe.Just.create)($75));
    };
});
var mapMaybeT = function (f) {
    return function (v) {
        return f(v);
    };
};
var functorMaybeT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v);
        };
    });
};
var monadMaybeT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeMaybeT(dictMonad);
    }, function () {
        return bindMaybeT(dictMonad);
    });
};
var bindMaybeT = function (dictMonad) {
    return new Control_Bind.Bind(function () {
        return applyMaybeT(dictMonad);
    }, function (v) {
        return function (f) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
                if (v1 instanceof Data_Maybe.Nothing) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value);
                };
                if (v1 instanceof Data_Maybe.Just) {
                    var v2 = f(v1.value0);
                    return v2;
                };
                throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 54, column 11 - line 56, column 42): " + [ v1.constructor.name ]);
            });
        };
    });
};
var applyMaybeT = function (dictMonad) {
    return new Control_Apply.Apply(function () {
        return functorMaybeT(((dictMonad.Bind1()).Apply0()).Functor0());
    }, Control_Monad.ap(monadMaybeT(dictMonad)));
};
var applicativeMaybeT = function (dictMonad) {
    return new Control_Applicative.Applicative(function () {
        return applyMaybeT(dictMonad);
    }, function ($76) {
        return MaybeT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Just.create($76)));
    });
};
var monadAskMaybeT = function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadMaybeT(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderMaybeT = function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskMaybeT(dictMonadReader.MonadAsk0());
    }, function (f) {
        return mapMaybeT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
    });
};
var monadContMaybeT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadMaybeT(dictMonadCont.Monad0());
    }, function (f) {
        return MaybeT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
            var v = f(function (a) {
                return MaybeT(c(new Data_Maybe.Just(a)));
            });
            return v;
        }));
    });
};
var monadEffectMaybe = function (dictMonadEffect) {
    return new Effect_Class.MonadEffect(function () {
        return monadMaybeT(dictMonadEffect.Monad0());
    }, function ($77) {
        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadEffect.Monad0())(Effect_Class.liftEffect(dictMonadEffect)($77));
    });
};
var monadRecMaybeT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadMaybeT(dictMonadRec.Monad0());
    }, function (f) {
        return function ($78) {
            return MaybeT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())((function () {
                    var v = f(a);
                    return v;
                })())(function (m$prime) {
                    return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
                        if (m$prime instanceof Data_Maybe.Nothing) {
                            return new Control_Monad_Rec_Class.Done(Data_Maybe.Nothing.value);
                        };
                        if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {
                            return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
                        };
                        if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {
                            return new Control_Monad_Rec_Class.Done(new Data_Maybe.Just(m$prime.value0.value0));
                        };
                        throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 84, column 16 - line 87, column 43): " + [ m$prime.constructor.name ]);
                    })());
                });
            })($78));
        };
    });
};
var monadStateMaybeT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadMaybeT(dictMonadState.Monad0());
    }, function (f) {
        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
    });
};
var monadTellMaybeT = function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadMaybeT(dictMonadTell.Monad0());
    }, function ($79) {
        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($79));
    });
};
var monadWriterMaybeT = function (dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
        return monadTellMaybeT(dictMonadWriter.MonadTell0());
    }, mapMaybeT(function (m) {
        return Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
            return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(Data_Functor.map(Data_Maybe.functorMaybe)(function (r) {
                return new Data_Tuple.Tuple(r, v.value1);
            })(v.value0));
        });
    }), mapMaybeT(function (m) {
        return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(m)(function (v) {
            return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())((function () {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Control_Category.identity(Control_Category.categoryFn));
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Tuple.Tuple(new Data_Maybe.Just(v.value0.value0), v.value0.value1);
                };
                throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 121, column 10 - line 123, column 42): " + [ v.constructor.name ]);
            })());
        }));
    }));
};
var monadThrowMaybeT = function (dictMonadThrow) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
        return monadMaybeT(dictMonadThrow.Monad0());
    }, function (e) {
        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
    });
};
var monadErrorMaybeT = function (dictMonadError) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadThrowMaybeT(dictMonadError.MonadThrow0());
    }, function (v) {
        return function (h) {
            return MaybeT(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (a) {
                var v1 = h(a);
                return v1;
            }));
        };
    });
};
var altMaybeT = function (dictMonad) {
    return new Control_Alt.Alt(function () {
        return functorMaybeT(((dictMonad.Bind1()).Apply0()).Functor0());
    }, function (v) {
        return function (v1) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(function (v2) {
                if (v2 instanceof Data_Maybe.Nothing) {
                    return v1;
                };
                return Control_Applicative.pure(dictMonad.Applicative0())(v2);
            });
        };
    });
};
var plusMaybeT = function (dictMonad) {
    return new Control_Plus.Plus(function () {
        return altMaybeT(dictMonad);
    }, Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value));
};
var alternativeMaybeT = function (dictMonad) {
    return new Control_Alternative.Alternative(function () {
        return applicativeMaybeT(dictMonad);
    }, function () {
        return plusMaybeT(dictMonad);
    });
};
var monadZeroMaybeT = function (dictMonad) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeMaybeT(dictMonad);
    }, function () {
        return monadMaybeT(dictMonad);
    });
};
var monadPlusMaybeT = function (dictMonad) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZeroMaybeT(dictMonad);
    });
};
module.exports = {
    MaybeT: MaybeT,
    runMaybeT: runMaybeT,
    mapMaybeT: mapMaybeT,
    newtypeMaybeT: newtypeMaybeT,
    functorMaybeT: functorMaybeT,
    applyMaybeT: applyMaybeT,
    applicativeMaybeT: applicativeMaybeT,
    bindMaybeT: bindMaybeT,
    monadMaybeT: monadMaybeT,
    monadTransMaybeT: monadTransMaybeT,
    altMaybeT: altMaybeT,
    plusMaybeT: plusMaybeT,
    alternativeMaybeT: alternativeMaybeT,
    monadPlusMaybeT: monadPlusMaybeT,
    monadZeroMaybeT: monadZeroMaybeT,
    monadRecMaybeT: monadRecMaybeT,
    monadEffectMaybe: monadEffectMaybe,
    monadContMaybeT: monadContMaybeT,
    monadThrowMaybeT: monadThrowMaybeT,
    monadErrorMaybeT: monadErrorMaybeT,
    monadAskMaybeT: monadAskMaybeT,
    monadReaderMaybeT: monadReaderMaybeT,
    monadStateMaybeT: monadStateMaybeT,
    monadTellMaybeT: monadTellMaybeT,
    monadWriterMaybeT: monadWriterMaybeT
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Monad.Cont.Class/index.js":26,"../Control.Monad.Error.Class/index.js":28,"../Control.Monad.Reader.Class/index.js":40,"../Control.Monad.Rec.Class/index.js":43,"../Control.Monad.State.Class/index.js":48,"../Control.Monad.Trans.Class/index.js":52,"../Control.Monad.Writer.Class/index.js":53,"../Control.Monad/index.js":55,"../Control.MonadPlus/index.js":56,"../Control.MonadZero/index.js":57,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Newtype/index.js":220,"../Data.Tuple/index.js":283,"../Effect.Class/index.js":298,"../Prelude/index.js":385}],39:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Prelude = require("../Prelude/index.js");
var RWSResult = (function () {
    function RWSResult(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    RWSResult.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new RWSResult(value0, value1, value2);
            };
        };
    };
    return RWSResult;
})();
var RWST = function (x) {
    return x;
};
var withRWST = function (f) {
    return function (m) {
        return function (r) {
            return function (s) {
                return Data_Tuple.uncurry(m)(f(r)(s));
            };
        };
    };
};
var runRWST = function (v) {
    return v;
};
var newtypeRWST = new Data_Newtype.Newtype(function (n) {
    return n;
}, RWST);
var monadTransRWST = function (dictMonoid) {
    return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
        return function (m) {
            return function (v) {
                return function (s) {
                    return Control_Bind.bind(dictMonad.Bind1())(m)(function (a) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
                    });
                };
            };
        };
    });
};
var mapRWST = function (f) {
    return function (v) {
        return function (r) {
            return function (s) {
                return f(v(r)(s));
            };
        };
    };
};
var lazyRWST = new Control_Lazy.Lazy(function (f) {
    return function (r) {
        return function (s) {
            var v = f(Data_Unit.unit);
            return v(r)(s);
        };
    };
});
var functorRWST = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return function (r) {
                return function (s) {
                    return Data_Functor.map(dictFunctor)(function (v1) {
                        return new RWSResult(v1.value0, f(v1.value1), v1.value2);
                    })(v(r)(s));
                };
            };
        };
    });
};
var execRWST = function (dictMonad) {
    return function (v) {
        return function (r) {
            return function (s) {
                return Control_Bind.bind(dictMonad.Bind1())(v(r)(s))(function (v1) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value2));
                });
            };
        };
    };
};
var evalRWST = function (dictMonad) {
    return function (v) {
        return function (r) {
            return function (s) {
                return Control_Bind.bind(dictMonad.Bind1())(v(r)(s))(function (v1) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value1, v1.value2));
                });
            };
        };
    };
};
var applyRWST = function (dictBind) {
    return function (dictMonoid) {
        return new Control_Apply.Apply(function () {
            return functorRWST((dictBind.Apply0()).Functor0());
        }, function (v) {
            return function (v1) {
                return function (r) {
                    return function (s) {
                        return Control_Bind.bind(dictBind)(v(r)(s))(function (v2) {
                            return Data_Functor.mapFlipped((dictBind.Apply0()).Functor0())(v1(r)(v2.value0))(function (v3) {
                                return new RWSResult(v3.value0, v2.value1(v3.value1), Data_Semigroup.append(dictMonoid.Semigroup0())(v2.value2)(v3.value2));
                            });
                        });
                    };
                };
            };
        });
    };
};
var bindRWST = function (dictBind) {
    return function (dictMonoid) {
        return new Control_Bind.Bind(function () {
            return applyRWST(dictBind)(dictMonoid);
        }, function (v) {
            return function (f) {
                return function (r) {
                    return function (s) {
                        return Control_Bind.bind(dictBind)(v(r)(s))(function (v1) {
                            var v2 = f(v1.value1);
                            return Data_Functor.mapFlipped((dictBind.Apply0()).Functor0())(v2(r)(v1.value0))(function (v3) {
                                return new RWSResult(v3.value0, v3.value1, Data_Semigroup.append(dictMonoid.Semigroup0())(v1.value2)(v3.value2));
                            });
                        });
                    };
                };
            };
        });
    };
};
var applicativeRWST = function (dictMonad) {
    return function (dictMonoid) {
        return new Control_Applicative.Applicative(function () {
            return applyRWST(dictMonad.Bind1())(dictMonoid);
        }, function (a) {
            return function (v) {
                return function (s) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
                };
            };
        });
    };
};
var monadRWST = function (dictMonad) {
    return function (dictMonoid) {
        return new Control_Monad.Monad(function () {
            return applicativeRWST(dictMonad)(dictMonoid);
        }, function () {
            return bindRWST(dictMonad.Bind1())(dictMonoid);
        });
    };
};
var monadAskRWST = function (dictMonad) {
    return function (dictMonoid) {
        return new Control_Monad_Reader_Class.MonadAsk(function () {
            return monadRWST(dictMonad)(dictMonoid);
        }, function (r) {
            return function (s) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, r, Data_Monoid.mempty(dictMonoid)));
            };
        });
    };
};
var monadReaderRWST = function (dictMonad) {
    return function (dictMonoid) {
        return new Control_Monad_Reader_Class.MonadReader(function () {
            return monadAskRWST(dictMonad)(dictMonoid);
        }, function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return m(f(r))(s);
                    };
                };
            };
        });
    };
};
var monadEffectRWS = function (dictMonoid) {
    return function (dictMonadEffect) {
        return new Effect_Class.MonadEffect(function () {
            return monadRWST(dictMonadEffect.Monad0())(dictMonoid);
        }, function ($155) {
            return Control_Monad_Trans_Class.lift(monadTransRWST(dictMonoid))(dictMonadEffect.Monad0())(Effect_Class.liftEffect(dictMonadEffect)($155));
        });
    };
};
var monadRecRWST = function (dictMonadRec) {
    return function (dictMonoid) {
        return new Control_Monad_Rec_Class.MonadRec(function () {
            return monadRWST(dictMonadRec.Monad0())(dictMonoid);
        }, function (k) {
            return function (a) {
                var k$prime = function (r) {
                    return function (v) {
                        var v1 = k(v.value1);
                        return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(v1(r)(v.value0))(function (v2) {
                            return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
                                if (v2.value1 instanceof Control_Monad_Rec_Class.Loop) {
                                    return new Control_Monad_Rec_Class.Loop(new RWSResult(v2.value0, v2.value1.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value2)(v2.value2)));
                                };
                                if (v2.value1 instanceof Control_Monad_Rec_Class.Done) {
                                    return new Control_Monad_Rec_Class.Done(new RWSResult(v2.value0, v2.value1.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value2)(v2.value2)));
                                };
                                throw new Error("Failed pattern match at Control.Monad.RWS.Trans (line 127, column 16 - line 129, column 68): " + [ v2.value1.constructor.name ]);
                            })());
                        });
                    };
                };
                return function (r) {
                    return function (s) {
                        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
                    };
                };
            };
        });
    };
};
var monadStateRWST = function (dictMonad) {
    return function (dictMonoid) {
        return new Control_Monad_State_Class.MonadState(function () {
            return monadRWST(dictMonad)(dictMonoid);
        }, function (f) {
            return function (v) {
                return function (s) {
                    var v1 = f(s);
                    return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(v1.value1, v1.value0, Data_Monoid.mempty(dictMonoid)));
                };
            };
        });
    };
};
var monadTellRWST = function (dictMonad) {
    return function (dictMonoid) {
        return new Control_Monad_Writer_Class.MonadTell(function () {
            return monadRWST(dictMonad)(dictMonoid);
        }, function (w) {
            return function (v) {
                return function (s) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, Data_Unit.unit, w));
                };
            };
        });
    };
};
var monadWriterRWST = function (dictMonad) {
    return function (dictMonoid) {
        return new Control_Monad_Writer_Class.MonadWriter(function () {
            return monadTellRWST(dictMonad)(dictMonoid);
        }, function (m) {
            return function (r) {
                return function (s) {
                    return Control_Bind.bind(dictMonad.Bind1())(m(r)(s))(function (v) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(v.value0, new Data_Tuple.Tuple(v.value1, v.value2), v.value2));
                    });
                };
            };
        }, function (m) {
            return function (r) {
                return function (s) {
                    return Control_Bind.bind(dictMonad.Bind1())(m(r)(s))(function (v) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(v.value0, v.value1.value0, v.value1.value1(v.value2)));
                    });
                };
            };
        });
    };
};
var monadThrowRWST = function (dictMonadThrow) {
    return function (dictMonoid) {
        return new Control_Monad_Error_Class.MonadThrow(function () {
            return monadRWST(dictMonadThrow.Monad0())(dictMonoid);
        }, function (e) {
            return Control_Monad_Trans_Class.lift(monadTransRWST(dictMonoid))(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
        });
    };
};
var monadErrorRWST = function (dictMonadError) {
    return function (dictMonoid) {
        return new Control_Monad_Error_Class.MonadError(function () {
            return monadThrowRWST(dictMonadError.MonadThrow0())(dictMonoid);
        }, function (m) {
            return function (h) {
                return RWST(function (r) {
                    return function (s) {
                        return Control_Monad_Error_Class.catchError(dictMonadError)(m(r)(s))(function (e) {
                            var v = h(e);
                            return v(r)(s);
                        });
                    };
                });
            };
        });
    };
};
var altRWST = function (dictAlt) {
    return new Control_Alt.Alt(function () {
        return functorRWST(dictAlt.Functor0());
    }, function (v) {
        return function (v1) {
            return RWST(function (r) {
                return function (s) {
                    return Control_Alt.alt(dictAlt)(v(r)(s))(v1(r)(s));
                };
            });
        };
    });
};
var plusRWST = function (dictPlus) {
    return new Control_Plus.Plus(function () {
        return altRWST(dictPlus.Alt0());
    }, function (v) {
        return function (v1) {
            return Control_Plus.empty(dictPlus);
        };
    });
};
var alternativeRWST = function (dictMonoid) {
    return function (dictAlternative) {
        return function (dictMonad) {
            return new Control_Alternative.Alternative(function () {
                return applicativeRWST(dictMonad)(dictMonoid);
            }, function () {
                return plusRWST(dictAlternative.Plus1());
            });
        };
    };
};
module.exports = {
    RWSResult: RWSResult,
    RWST: RWST,
    runRWST: runRWST,
    evalRWST: evalRWST,
    execRWST: execRWST,
    mapRWST: mapRWST,
    withRWST: withRWST,
    newtypeRWST: newtypeRWST,
    functorRWST: functorRWST,
    applyRWST: applyRWST,
    altRWST: altRWST,
    alternativeRWST: alternativeRWST,
    bindRWST: bindRWST,
    applicativeRWST: applicativeRWST,
    monadRWST: monadRWST,
    monadTransRWST: monadTransRWST,
    lazyRWST: lazyRWST,
    monadEffectRWS: monadEffectRWS,
    monadAskRWST: monadAskRWST,
    monadReaderRWST: monadReaderRWST,
    monadStateRWST: monadStateRWST,
    monadTellRWST: monadTellRWST,
    monadWriterRWST: monadWriterRWST,
    monadThrowRWST: monadThrowRWST,
    monadErrorRWST: monadErrorRWST,
    monadRecRWST: monadRecRWST,
    plusRWST: plusRWST
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Lazy/index.js":25,"../Control.Monad.Error.Class/index.js":28,"../Control.Monad.Reader.Class/index.js":40,"../Control.Monad.Rec.Class/index.js":43,"../Control.Monad.State.Class/index.js":48,"../Control.Monad.Trans.Class/index.js":52,"../Control.Monad.Writer.Class/index.js":53,"../Control.Monad/index.js":55,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Semigroup/index.js":248,"../Data.Tuple/index.js":283,"../Data.Unit/index.js":289,"../Effect.Class/index.js":298,"../Prelude/index.js":385}],40:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Prelude = require("../Prelude/index.js");
var MonadAsk = function (Monad0, ask) {
    this.Monad0 = Monad0;
    this.ask = ask;
};
var MonadReader = function (MonadAsk0, local) {
    this.MonadAsk0 = MonadAsk0;
    this.local = local;
};
var monadAskFun = new MonadAsk(function () {
    return Control_Monad.monadFn;
}, Control_Category.identity(Control_Category.categoryFn));
var monadReaderFun = new MonadReader(function () {
    return monadAskFun;
}, Control_Semigroupoid.composeFlipped(Control_Semigroupoid.semigroupoidFn));
var local = function (dict) {
    return dict.local;
};
var ask = function (dict) {
    return dict.ask;
};
var asks = function (dictMonadAsk) {
    return function (f) {
        return Data_Functor.map((((dictMonadAsk.Monad0()).Bind1()).Apply0()).Functor0())(f)(ask(dictMonadAsk));
    };
};
module.exports = {
    ask: ask,
    local: local,
    MonadAsk: MonadAsk,
    asks: asks,
    MonadReader: MonadReader,
    monadAskFun: monadAskFun,
    monadReaderFun: monadReaderFun
};

},{"../Control.Category/index.js":14,"../Control.Monad/index.js":55,"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Prelude/index.js":385}],41:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Distributive = require("../Data.Distributive/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Prelude = require("../Prelude/index.js");
var ReaderT = function (x) {
    return x;
};
var withReaderT = function (f) {
    return function (v) {
        return function ($66) {
            return v(f($66));
        };
    };
};
var runReaderT = function (v) {
    return v;
};
var newtypeReaderT = new Data_Newtype.Newtype(function (n) {
    return n;
}, ReaderT);
var monadTransReaderT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function ($67) {
        return ReaderT(Data_Function["const"]($67));
    };
});
var mapReaderT = function (f) {
    return function (v) {
        return function ($68) {
            return f(v($68));
        };
    };
};
var functorReaderT = function (dictFunctor) {
    return new Data_Functor.Functor(function ($69) {
        return mapReaderT(Data_Functor.map(dictFunctor)($69));
    });
};
var distributiveReaderT = function (dictDistributive) {
    return new Data_Distributive.Distributive(function () {
        return functorReaderT(dictDistributive.Functor0());
    }, function (dictFunctor) {
        return function (f) {
            return function ($70) {
                return Data_Distributive.distribute(distributiveReaderT(dictDistributive))(dictFunctor)(Data_Functor.map(dictFunctor)(f)($70));
            };
        };
    }, function (dictFunctor) {
        return function (a) {
            return function (e) {
                return Data_Distributive.collect(dictDistributive)(dictFunctor)(function (r) {
                    return r(e);
                })(a);
            };
        };
    });
};
var applyReaderT = function (dictApply) {
    return new Control_Apply.Apply(function () {
        return functorReaderT(dictApply.Functor0());
    }, function (v) {
        return function (v1) {
            return function (r) {
                return Control_Apply.apply(dictApply)(v(r))(v1(r));
            };
        };
    });
};
var bindReaderT = function (dictBind) {
    return new Control_Bind.Bind(function () {
        return applyReaderT(dictBind.Apply0());
    }, function (v) {
        return function (k) {
            return function (r) {
                return Control_Bind.bind(dictBind)(v(r))(function (a) {
                    var v1 = k(a);
                    return v1(r);
                });
            };
        };
    });
};
var semigroupReaderT = function (dictApply) {
    return function (dictSemigroup) {
        return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyReaderT(dictApply))(Data_Semigroup.append(dictSemigroup)));
    };
};
var applicativeReaderT = function (dictApplicative) {
    return new Control_Applicative.Applicative(function () {
        return applyReaderT(dictApplicative.Apply0());
    }, function ($71) {
        return ReaderT(Data_Function["const"](Control_Applicative.pure(dictApplicative)($71)));
    });
};
var monadReaderT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeReaderT(dictMonad.Applicative0());
    }, function () {
        return bindReaderT(dictMonad.Bind1());
    });
};
var monadAskReaderT = function (dictMonad) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadReaderT(dictMonad);
    }, Control_Applicative.pure(dictMonad.Applicative0()));
};
var monadReaderReaderT = function (dictMonad) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskReaderT(dictMonad);
    }, withReaderT);
};
var monadContReaderT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadReaderT(dictMonadCont.Monad0());
    }, function (f) {
        return function (r) {
            return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
                var v = f(function ($72) {
                    return ReaderT(Data_Function["const"](c($72)));
                });
                return v(r);
            });
        };
    });
};
var monadEffectReader = function (dictMonadEffect) {
    return new Effect_Class.MonadEffect(function () {
        return monadReaderT(dictMonadEffect.Monad0());
    }, function ($73) {
        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadEffect.Monad0())(Effect_Class.liftEffect(dictMonadEffect)($73));
    });
};
var monadRecReaderT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadReaderT(dictMonadRec.Monad0());
    }, function (k) {
        return function (a) {
            var k$prime = function (r) {
                return function (a$prime) {
                    var v = k(a$prime);
                    return Control_Bind.bindFlipped((dictMonadRec.Monad0()).Bind1())(Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0()))(v(r));
                };
            };
            return function (r) {
                return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(a);
            };
        };
    });
};
var monadStateReaderT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadReaderT(dictMonadState.Monad0());
    }, function ($74) {
        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)($74));
    });
};
var monadTellReaderT = function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadReaderT(dictMonadTell.Monad0());
    }, function ($75) {
        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($75));
    });
};
var monadWriterReaderT = function (dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
        return monadTellReaderT(dictMonadWriter.MonadTell0());
    }, mapReaderT(Control_Monad_Writer_Class.listen(dictMonadWriter)), mapReaderT(Control_Monad_Writer_Class.pass(dictMonadWriter)));
};
var monadThrowReaderT = function (dictMonadThrow) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
        return monadReaderT(dictMonadThrow.Monad0());
    }, function ($76) {
        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)($76));
    });
};
var monadErrorReaderT = function (dictMonadError) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadThrowReaderT(dictMonadError.MonadThrow0());
    }, function (v) {
        return function (h) {
            return function (r) {
                return Control_Monad_Error_Class.catchError(dictMonadError)(v(r))(function (e) {
                    var v1 = h(e);
                    return v1(r);
                });
            };
        };
    });
};
var monoidReaderT = function (dictApplicative) {
    return function (dictMonoid) {
        return new Data_Monoid.Monoid(function () {
            return semigroupReaderT(dictApplicative.Apply0())(dictMonoid.Semigroup0());
        }, Control_Applicative.pure(applicativeReaderT(dictApplicative))(Data_Monoid.mempty(dictMonoid)));
    };
};
var altReaderT = function (dictAlt) {
    return new Control_Alt.Alt(function () {
        return functorReaderT(dictAlt.Functor0());
    }, function (v) {
        return function (v1) {
            return function (r) {
                return Control_Alt.alt(dictAlt)(v(r))(v1(r));
            };
        };
    });
};
var plusReaderT = function (dictPlus) {
    return new Control_Plus.Plus(function () {
        return altReaderT(dictPlus.Alt0());
    }, Data_Function["const"](Control_Plus.empty(dictPlus)));
};
var alternativeReaderT = function (dictAlternative) {
    return new Control_Alternative.Alternative(function () {
        return applicativeReaderT(dictAlternative.Applicative0());
    }, function () {
        return plusReaderT(dictAlternative.Plus1());
    });
};
var monadZeroReaderT = function (dictMonadZero) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeReaderT(dictMonadZero.Alternative1());
    }, function () {
        return monadReaderT(dictMonadZero.Monad0());
    });
};
var monadPlusReaderT = function (dictMonadPlus) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZeroReaderT(dictMonadPlus.MonadZero0());
    });
};
module.exports = {
    ReaderT: ReaderT,
    runReaderT: runReaderT,
    withReaderT: withReaderT,
    mapReaderT: mapReaderT,
    newtypeReaderT: newtypeReaderT,
    functorReaderT: functorReaderT,
    applyReaderT: applyReaderT,
    applicativeReaderT: applicativeReaderT,
    altReaderT: altReaderT,
    plusReaderT: plusReaderT,
    alternativeReaderT: alternativeReaderT,
    bindReaderT: bindReaderT,
    monadReaderT: monadReaderT,
    monadZeroReaderT: monadZeroReaderT,
    semigroupReaderT: semigroupReaderT,
    monoidReaderT: monoidReaderT,
    monadPlusReaderT: monadPlusReaderT,
    monadTransReaderT: monadTransReaderT,
    monadEffectReader: monadEffectReader,
    monadContReaderT: monadContReaderT,
    monadThrowReaderT: monadThrowReaderT,
    monadErrorReaderT: monadErrorReaderT,
    monadAskReaderT: monadAskReaderT,
    monadReaderReaderT: monadReaderReaderT,
    monadStateReaderT: monadStateReaderT,
    monadTellReaderT: monadTellReaderT,
    monadWriterReaderT: monadWriterReaderT,
    distributiveReaderT: distributiveReaderT,
    monadRecReaderT: monadRecReaderT
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Monad.Cont.Class/index.js":26,"../Control.Monad.Error.Class/index.js":28,"../Control.Monad.Reader.Class/index.js":40,"../Control.Monad.Rec.Class/index.js":43,"../Control.Monad.State.Class/index.js":48,"../Control.Monad.Trans.Class/index.js":52,"../Control.Monad.Writer.Class/index.js":53,"../Control.Monad/index.js":55,"../Control.MonadPlus/index.js":56,"../Control.MonadZero/index.js":57,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Distributive/index.js":128,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Semigroup/index.js":248,"../Effect.Class/index.js":298,"../Prelude/index.js":385}],42:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Prelude = require("../Prelude/index.js");
var withReader = Control_Monad_Reader_Trans.withReaderT;
var runReader = function (v) {
    return function ($2) {
        return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(v($2));
    };
};
var mapReader = function (f) {
    return Control_Monad_Reader_Trans.mapReaderT(function ($3) {
        return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($3)));
    });
};
module.exports = {
    runReader: runReader,
    mapReader: mapReader,
    withReader: withReader
};

},{"../Control.Monad.Reader.Class/index.js":40,"../Control.Monad.Reader.Trans/index.js":41,"../Control.Semigroupoid/index.js":61,"../Data.Function/index.js":145,"../Data.Identity/index.js":163,"../Data.Newtype/index.js":220,"../Prelude/index.js":385}],43:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var Loop = (function () {
    function Loop(value0) {
        this.value0 = value0;
    };
    Loop.create = function (value0) {
        return new Loop(value0);
    };
    return Loop;
})();
var Done = (function () {
    function Done(value0) {
        this.value0 = value0;
    };
    Done.create = function (value0) {
        return new Done(value0);
    };
    return Done;
})();
var MonadRec = function (Monad0, tailRecM) {
    this.Monad0 = Monad0;
    this.tailRecM = tailRecM;
};
var tailRecM = function (dict) {
    return dict.tailRecM;
};
var tailRecM2 = function (dictMonadRec) {
    return function (f) {
        return function (a) {
            return function (b) {
                return tailRecM(dictMonadRec)(function (o) {
                    return f(o.a)(o.b);
                })({
                    a: a,
                    b: b
                });
            };
        };
    };
};
var tailRecM3 = function (dictMonadRec) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return tailRecM(dictMonadRec)(function (o) {
                        return f(o.a)(o.b)(o.c);
                    })({
                        a: a,
                        b: b,
                        c: c
                    });
                };
            };
        };
    };
};
var tailRec = function (f) {
    var go = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Loop) {
                $copy_v = f(v.value0);
                return;
            };
            if (v instanceof Done) {
                $tco_done = true;
                return v.value0;
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 91, column 3 - line 91, column 25): " + [ v.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return function ($53) {
        return go(f($53));
    };
};
var monadRecMaybe = new MonadRec(function () {
    return Data_Maybe.monadMaybe;
}, function (f) {
    return function (a0) {
        var g = function (v) {
            if (v instanceof Data_Maybe.Nothing) {
                return new Done(Data_Maybe.Nothing.value);
            };
            if (v instanceof Data_Maybe.Just && v.value0 instanceof Loop) {
                return new Loop(f(v.value0.value0));
            };
            if (v instanceof Data_Maybe.Just && v.value0 instanceof Done) {
                return new Done(new Data_Maybe.Just(v.value0.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 127, column 7 - line 127, column 31): " + [ v.constructor.name ]);
        };
        return tailRec(g)(f(a0));
    };
});
var monadRecIdentity = new MonadRec(function () {
    return Data_Identity.monadIdentity;
}, function (f) {
    var runIdentity = function (v) {
        return v;
    };
    return function ($54) {
        return Data_Identity.Identity(tailRec(function ($55) {
            return runIdentity(f($55));
        })($54));
    };
});
var monadRecFunction = new MonadRec(function () {
    return Control_Monad.monadFn;
}, function (f) {
    return function (a0) {
        return function (e) {
            return tailRec(function (a) {
                return f(a)(e);
            })(a0);
        };
    };
});
var monadRecEither = new MonadRec(function () {
    return Data_Either.monadEither;
}, function (f) {
    return function (a0) {
        var g = function (v) {
            if (v instanceof Data_Either.Left) {
                return new Done(new Data_Either.Left(v.value0));
            };
            if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {
                return new Loop(f(v.value0.value0));
            };
            if (v instanceof Data_Either.Right && v.value0 instanceof Done) {
                return new Done(new Data_Either.Right(v.value0.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 119, column 7 - line 119, column 33): " + [ v.constructor.name ]);
        };
        return tailRec(g)(f(a0));
    };
});
var monadRecEffect = new MonadRec(function () {
    return Effect.monadEffect;
}, function (f) {
    return function (a) {
        var fromDone = function (v) {
            if (v instanceof Done) {
                return v.value0;
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 111, column 30 - line 111, column 44): " + [ v.constructor.name ]);
        };
        return function __do() {
            var v = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(f(a))();
            (function () {
                while (!(function __do() {
                    var v1 = Effect_Ref.read(v)();
                    if (v1 instanceof Loop) {
                        var v2 = f(v1.value0)();
                        var v3 = Effect_Ref.write(v2)(v)();
                        return false;
                    };
                    if (v1 instanceof Done) {
                        return true;
                    };
                    throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 102, column 22 - line 107, column 28): " + [ v1.constructor.name ]);
                })()) {

                };
                return {};
            })();
            return Data_Functor.map(Effect.functorEffect)(fromDone)(Effect_Ref.read(v))();
        };
    };
});
var functorStep = new Data_Functor.Functor(function (f) {
    return function (m) {
        if (m instanceof Loop) {
            return new Loop(m.value0);
        };
        if (m instanceof Done) {
            return new Done(f(m.value0));
        };
        throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 25, column 8 - line 25, column 48): " + [ m.constructor.name ]);
    };
});
var forever = function (dictMonadRec) {
    return function (ma) {
        return tailRecM(dictMonadRec)(function (u) {
            return Data_Functor.voidRight((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(new Loop(u))(ma);
        })(Data_Unit.unit);
    };
};
var bifunctorStep = new Data_Bifunctor.Bifunctor(function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Loop) {
                return new Loop(v(v2.value0));
            };
            if (v2 instanceof Done) {
                return new Done(v1(v2.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 27, column 1 - line 27, column 41): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
});
module.exports = {
    Loop: Loop,
    Done: Done,
    MonadRec: MonadRec,
    tailRec: tailRec,
    tailRecM: tailRecM,
    tailRecM2: tailRecM2,
    tailRecM3: tailRecM3,
    forever: forever,
    functorStep: functorStep,
    bifunctorStep: bifunctorStep,
    monadRecIdentity: monadRecIdentity,
    monadRecEffect: monadRecEffect,
    monadRecFunction: monadRecFunction,
    monadRecEither: monadRecEither,
    monadRecMaybe: monadRecMaybe
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Control.Monad/index.js":55,"../Control.Semigroupoid/index.js":61,"../Data.Bifunctor/index.js":106,"../Data.Either/index.js":131,"../Data.Functor/index.js":153,"../Data.Identity/index.js":163,"../Data.Maybe/index.js":210,"../Data.Unit/index.js":289,"../Effect.Ref/index.js":306,"../Effect/index.js":312,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385}],44:[function(require,module,exports){
"use strict";

exports.map_ = function (f) {
  return function (a) {
    return function () {
      return f(a());
    };
  };
};

exports.pure_ = function (a) {
  return function () {
    return a;
  };
};

exports.bind_ = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.run = function (f) {
  return f();
};

exports["while"] = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
    };
  };
};

exports["for"] = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreach = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};

exports.new = function (val) {
  return function () {
    return { value: val };
  };
};

exports.read = function (ref) {
  return function () {
    return ref.value;
  };
};

exports["modify'"] = function (f) {
  return function (ref) {
    return function () {
      var t = f(ref.value);
      ref.value = t.state;
      return t.value;
    };
  };
};

exports.write = function (a) {
  return function (ref) {
    return function () {
      return ref.value = a; // eslint-disable-line no-return-assign
    };
  };
};

},{}],45:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var modify = function (f) {
    return $foreign["modify'"](function (s) {
        var s$prime = f(s);
        return {
            state: s$prime,
            value: s$prime
        };
    });
};
var functorST = new Data_Functor.Functor($foreign.map_);
var monadST = new Control_Monad.Monad(function () {
    return applicativeST;
}, function () {
    return bindST;
});
var bindST = new Control_Bind.Bind(function () {
    return applyST;
}, $foreign.bind_);
var applyST = new Control_Apply.Apply(function () {
    return functorST;
}, Control_Monad.ap(monadST));
var applicativeST = new Control_Applicative.Applicative(function () {
    return applyST;
}, $foreign.pure_);
var monadRecST = new Control_Monad_Rec_Class.MonadRec(function () {
    return monadST;
}, function (f) {
    return function (a) {
        var isLooping = function (v) {
            if (v instanceof Control_Monad_Rec_Class.Loop) {
                return true;
            };
            return false;
        };
        var fromDone = function (v) {
            if (v instanceof Control_Monad_Rec_Class.Done) {
                return v.value0;
            };
            throw new Error("Failed pattern match at Control.Monad.ST.Internal (line 54, column 32 - line 54, column 46): " + [ v.constructor.name ]);
        };
        return Control_Bind.bind(bindST)(Control_Bind.bindFlipped(bindST)($foreign["new"])(f(a)))(function (v) {
            return Control_Bind.discard(Control_Bind.discardUnit)(bindST)($foreign["while"](Data_Functor.map(functorST)(isLooping)($foreign.read(v)))(Control_Bind.bind(bindST)($foreign.read(v))(function (v1) {
                if (v1 instanceof Control_Monad_Rec_Class.Loop) {
                    return Control_Bind.bind(bindST)(f(v1.value0))(function (v2) {
                        return Data_Functor["void"](functorST)($foreign.write(v2)(v));
                    });
                };
                if (v1 instanceof Control_Monad_Rec_Class.Done) {
                    return Control_Applicative.pure(applicativeST)(Data_Unit.unit);
                };
                throw new Error("Failed pattern match at Control.Monad.ST.Internal (line 46, column 18 - line 50, column 28): " + [ v1.constructor.name ]);
            })))(function () {
                return Data_Functor.map(functorST)(fromDone)($foreign.read(v));
            });
        });
    };
});
module.exports = {
    modify: modify,
    functorST: functorST,
    applyST: applyST,
    applicativeST: applicativeST,
    bindST: bindST,
    monadST: monadST,
    monadRecST: monadRecST,
    map_: $foreign.map_,
    pure_: $foreign.pure_,
    bind_: $foreign.bind_,
    run: $foreign.run,
    "while": $foreign["while"],
    "for": $foreign["for"],
    foreach: $foreign.foreach,
    "new": $foreign["new"],
    read: $foreign.read,
    "modify'": $foreign["modify'"],
    write: $foreign.write
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Monad.Rec.Class/index.js":43,"../Control.Monad/index.js":55,"../Data.Functor/index.js":153,"../Data.Unit/index.js":289,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385,"./foreign.js":44}],46:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");
module.exports = {};

},{"../Control.Monad.ST.Internal/index.js":45}],47:[function(require,module,exports){
arguments[4][46][0].apply(exports,arguments)
},{"../Control.Monad.ST.Internal/index.js":45,"dup":46}],48:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Prelude = require("../Prelude/index.js");
var MonadState = function (Monad0, state) {
    this.Monad0 = Monad0;
    this.state = state;
};
var state = function (dict) {
    return dict.state;
};
var put = function (dictMonadState) {
    return function (s) {
        return state(dictMonadState)(function (v) {
            return new Data_Tuple.Tuple(Data_Unit.unit, s);
        });
    };
};
var modify_ = function (dictMonadState) {
    return function (f) {
        return state(dictMonadState)(function (s) {
            return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
        });
    };
};
var modify = function (dictMonadState) {
    return function (f) {
        return state(dictMonadState)(function (s) {
            var s$prime = f(s);
            return new Data_Tuple.Tuple(s$prime, s$prime);
        });
    };
};
var gets = function (dictMonadState) {
    return function (f) {
        return state(dictMonadState)(function (s) {
            return new Data_Tuple.Tuple(f(s), s);
        });
    };
};
var get = function (dictMonadState) {
    return state(dictMonadState)(function (s) {
        return new Data_Tuple.Tuple(s, s);
    });
};
module.exports = {
    state: state,
    MonadState: MonadState,
    get: get,
    gets: gets,
    put: put,
    modify: modify,
    modify_: modify_
};

},{"../Data.Tuple/index.js":283,"../Data.Unit/index.js":289,"../Prelude/index.js":385}],49:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Prelude = require("../Prelude/index.js");
var StateT = function (x) {
    return x;
};
var withStateT = function (f) {
    return function (v) {
        return function ($107) {
            return v(f($107));
        };
    };
};
var runStateT = function (v) {
    return v;
};
var newtypeStateT = new Data_Newtype.Newtype(function (n) {
    return n;
}, StateT);
var monadTransStateT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
        return function (s) {
            return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v, s));
            });
        };
    };
});
var mapStateT = function (f) {
    return function (v) {
        return function ($108) {
            return f(v($108));
        };
    };
};
var lazyStateT = new Control_Lazy.Lazy(function (f) {
    return function (s) {
        var v = f(Data_Unit.unit);
        return v(s);
    };
});
var functorStateT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return function (s) {
                return Data_Functor.map(dictFunctor)(function (v1) {
                    return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
                })(v(s));
            };
        };
    });
};
var execStateT = function (dictFunctor) {
    return function (v) {
        return function (s) {
            return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v(s));
        };
    };
};
var evalStateT = function (dictFunctor) {
    return function (v) {
        return function (s) {
            return Data_Functor.map(dictFunctor)(Data_Tuple.fst)(v(s));
        };
    };
};
var monadStateT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeStateT(dictMonad);
    }, function () {
        return bindStateT(dictMonad);
    });
};
var bindStateT = function (dictMonad) {
    return new Control_Bind.Bind(function () {
        return applyStateT(dictMonad);
    }, function (v) {
        return function (f) {
            return function (s) {
                return Control_Bind.bind(dictMonad.Bind1())(v(s))(function (v1) {
                    var v3 = f(v1.value0);
                    return v3(v1.value1);
                });
            };
        };
    });
};
var applyStateT = function (dictMonad) {
    return new Control_Apply.Apply(function () {
        return functorStateT(((dictMonad.Bind1()).Apply0()).Functor0());
    }, Control_Monad.ap(monadStateT(dictMonad)));
};
var applicativeStateT = function (dictMonad) {
    return new Control_Applicative.Applicative(function () {
        return applyStateT(dictMonad);
    }, function (a) {
        return function (s) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, s));
        };
    });
};
var monadAskStateT = function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadStateT(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderStateT = function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskStateT(dictMonadReader.MonadAsk0());
    }, function ($109) {
        return mapStateT(Control_Monad_Reader_Class.local(dictMonadReader)($109));
    });
};
var monadContStateT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadStateT(dictMonadCont.Monad0());
    }, function (f) {
        return function (s) {
            return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
                var v = f(function (a) {
                    return function (s$prime) {
                        return c(new Data_Tuple.Tuple(a, s$prime));
                    };
                });
                return v(s);
            });
        };
    });
};
var monadEffectState = function (dictMonadEffect) {
    return new Effect_Class.MonadEffect(function () {
        return monadStateT(dictMonadEffect.Monad0());
    }, function ($110) {
        return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadEffect.Monad0())(Effect_Class.liftEffect(dictMonadEffect)($110));
    });
};
var monadRecStateT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadStateT(dictMonadRec.Monad0());
    }, function (f) {
        return function (a) {
            var f$prime = function (v) {
                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())((function () {
                    var v1 = f(v.value0);
                    return v1;
                })()(v.value1))(function (v1) {
                    return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
                        if (v1.value0 instanceof Control_Monad_Rec_Class.Loop) {
                            return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v1.value0.value0, v1.value1));
                        };
                        if (v1.value0 instanceof Control_Monad_Rec_Class.Done) {
                            return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v1.value0.value0, v1.value1));
                        };
                        throw new Error("Failed pattern match at Control.Monad.State.Trans (line 87, column 16 - line 89, column 40): " + [ v1.value0.constructor.name ]);
                    })());
                });
            };
            return function (s) {
                return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, s));
            };
        };
    });
};
var monadStateStateT = function (dictMonad) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadStateT(dictMonad);
    }, function (f) {
        return StateT(function ($111) {
            return Control_Applicative.pure(dictMonad.Applicative0())(f($111));
        });
    });
};
var monadTellStateT = function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadStateT(dictMonadTell.Monad0());
    }, function ($112) {
        return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($112));
    });
};
var monadWriterStateT = function (dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
        return monadTellStateT(dictMonadWriter.MonadTell0());
    }, function (m) {
        return function (s) {
            return Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m(s)))(function (v) {
                return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
            });
        };
    }, function (m) {
        return function (s) {
            return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(m(s))(function (v) {
                return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
            }));
        };
    });
};
var monadThrowStateT = function (dictMonadThrow) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
        return monadStateT(dictMonadThrow.Monad0());
    }, function (e) {
        return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
    });
};
var monadErrorStateT = function (dictMonadError) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadThrowStateT(dictMonadError.MonadThrow0());
    }, function (v) {
        return function (h) {
            return function (s) {
                return Control_Monad_Error_Class.catchError(dictMonadError)(v(s))(function (e) {
                    var v1 = h(e);
                    return v1(s);
                });
            };
        };
    });
};
var altStateT = function (dictMonad) {
    return function (dictAlt) {
        return new Control_Alt.Alt(function () {
            return functorStateT(dictAlt.Functor0());
        }, function (v) {
            return function (v1) {
                return function (s) {
                    return Control_Alt.alt(dictAlt)(v(s))(v1(s));
                };
            };
        });
    };
};
var plusStateT = function (dictMonad) {
    return function (dictPlus) {
        return new Control_Plus.Plus(function () {
            return altStateT(dictMonad)(dictPlus.Alt0());
        }, function (v) {
            return Control_Plus.empty(dictPlus);
        });
    };
};
var alternativeStateT = function (dictMonad) {
    return function (dictAlternative) {
        return new Control_Alternative.Alternative(function () {
            return applicativeStateT(dictMonad);
        }, function () {
            return plusStateT(dictMonad)(dictAlternative.Plus1());
        });
    };
};
var monadZeroStateT = function (dictMonadZero) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeStateT(dictMonadZero.Monad0())(dictMonadZero.Alternative1());
    }, function () {
        return monadStateT(dictMonadZero.Monad0());
    });
};
var monadPlusStateT = function (dictMonadPlus) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZeroStateT(dictMonadPlus.MonadZero0());
    });
};
module.exports = {
    StateT: StateT,
    runStateT: runStateT,
    evalStateT: evalStateT,
    execStateT: execStateT,
    mapStateT: mapStateT,
    withStateT: withStateT,
    newtypeStateT: newtypeStateT,
    functorStateT: functorStateT,
    applyStateT: applyStateT,
    applicativeStateT: applicativeStateT,
    altStateT: altStateT,
    plusStateT: plusStateT,
    alternativeStateT: alternativeStateT,
    bindStateT: bindStateT,
    monadStateT: monadStateT,
    monadRecStateT: monadRecStateT,
    monadZeroStateT: monadZeroStateT,
    monadPlusStateT: monadPlusStateT,
    monadTransStateT: monadTransStateT,
    lazyStateT: lazyStateT,
    monadEffectState: monadEffectState,
    monadContStateT: monadContStateT,
    monadThrowStateT: monadThrowStateT,
    monadErrorStateT: monadErrorStateT,
    monadAskStateT: monadAskStateT,
    monadReaderStateT: monadReaderStateT,
    monadStateStateT: monadStateStateT,
    monadTellStateT: monadTellStateT,
    monadWriterStateT: monadWriterStateT
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Lazy/index.js":25,"../Control.Monad.Cont.Class/index.js":26,"../Control.Monad.Error.Class/index.js":28,"../Control.Monad.Reader.Class/index.js":40,"../Control.Monad.Rec.Class/index.js":43,"../Control.Monad.State.Class/index.js":48,"../Control.Monad.Trans.Class/index.js":52,"../Control.Monad.Writer.Class/index.js":53,"../Control.Monad/index.js":55,"../Control.MonadPlus/index.js":56,"../Control.MonadZero/index.js":57,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Newtype/index.js":220,"../Data.Tuple/index.js":283,"../Data.Unit/index.js":289,"../Effect.Class/index.js":298,"../Prelude/index.js":385}],50:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_State_Trans = require("../Control.Monad.State.Trans/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var withState = Control_Monad_State_Trans.withStateT;
var runState = function (v) {
    return function ($16) {
        return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(v($16));
    };
};
var mapState = function (f) {
    return Control_Monad_State_Trans.mapStateT(function ($17) {
        return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($17)));
    });
};
var execState = function (v) {
    return function (s) {
        var v1 = v(s);
        return v1.value1;
    };
};
var evalState = function (v) {
    return function (s) {
        var v1 = v(s);
        return v1.value0;
    };
};
module.exports = {
    runState: runState,
    evalState: evalState,
    execState: execState,
    mapState: mapState,
    withState: withState
};

},{"../Control.Monad.State.Class/index.js":48,"../Control.Monad.State.Trans/index.js":49,"../Control.Semigroupoid/index.js":61,"../Data.Identity/index.js":163,"../Data.Newtype/index.js":220,"../Data.Tuple/index.js":283,"../Prelude/index.js":385}],51:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Monad_Free = require("../Control.Monad.Free/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Prelude = require("../Prelude/index.js");
var runTrampoline = Control_Monad_Free.runFree(Data_Functor.functorFn)(function (v) {
    return v(Data_Unit.unit);
});
var done = Control_Applicative.pure(Control_Monad_Free.freeApplicative);
var delay = Control_Monad_Free.liftF;
module.exports = {
    done: done,
    delay: delay,
    runTrampoline: runTrampoline
};

},{"../Control.Applicative/index.js":7,"../Control.Monad.Free/index.js":33,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Unit/index.js":289,"../Prelude/index.js":385}],52:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Prelude = require("../Prelude/index.js");
var MonadTrans = function (lift) {
    this.lift = lift;
};
var lift = function (dict) {
    return dict.lift;
};
module.exports = {
    lift: lift,
    MonadTrans: MonadTrans
};

},{"../Prelude/index.js":385}],53:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var MonadTell = function (Monad0, tell) {
    this.Monad0 = Monad0;
    this.tell = tell;
};
var MonadWriter = function (MonadTell0, listen, pass) {
    this.MonadTell0 = MonadTell0;
    this.listen = listen;
    this.pass = pass;
};
var tell = function (dict) {
    return dict.tell;
};
var pass = function (dict) {
    return dict.pass;
};
var listen = function (dict) {
    return dict.listen;
};
var listens = function (dictMonadWriter) {
    return function (f) {
        return function (m) {
            return Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(listen(dictMonadWriter)(m))(function (v) {
                return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(new Data_Tuple.Tuple(v.value0, f(v.value1)));
            });
        };
    };
};
var censor = function (dictMonadWriter) {
    return function (f) {
        return function (m) {
            return pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(m)(function (v) {
                return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(new Data_Tuple.Tuple(v, f));
            }));
        };
    };
};
module.exports = {
    listen: listen,
    pass: pass,
    tell: tell,
    MonadTell: MonadTell,
    MonadWriter: MonadWriter,
    listens: listens,
    censor: censor
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Data.Function/index.js":145,"../Data.Tuple/index.js":283,"../Prelude/index.js":385}],54:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Prelude = require("../Prelude/index.js");
var WriterT = function (x) {
    return x;
};
var runWriterT = function (v) {
    return v;
};
var newtypeWriterT = new Data_Newtype.Newtype(function (n) {
    return n;
}, WriterT);
var monadTransWriterT = function (dictMonoid) {
    return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
        return function (m) {
            return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v, Data_Monoid.mempty(dictMonoid)));
            });
        };
    });
};
var mapWriterT = function (f) {
    return function (v) {
        return f(v);
    };
};
var functorWriterT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return mapWriterT(Data_Functor.map(dictFunctor)(function (v) {
            return new Data_Tuple.Tuple(f(v.value0), v.value1);
        }));
    });
};
var execWriterT = function (dictFunctor) {
    return function (v) {
        return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v);
    };
};
var applyWriterT = function (dictSemigroup) {
    return function (dictApply) {
        return new Control_Apply.Apply(function () {
            return functorWriterT(dictApply.Functor0());
        }, function (v) {
            return function (v1) {
                var k = function (v3) {
                    return function (v4) {
                        return new Data_Tuple.Tuple(v3.value0(v4.value0), Data_Semigroup.append(dictSemigroup)(v3.value1)(v4.value1));
                    };
                };
                return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(k)(v))(v1);
            };
        });
    };
};
var bindWriterT = function (dictSemigroup) {
    return function (dictBind) {
        return new Control_Bind.Bind(function () {
            return applyWriterT(dictSemigroup)(dictBind.Apply0());
        }, function (v) {
            return function (k) {
                return WriterT(Control_Bind.bind(dictBind)(v)(function (v1) {
                    var v2 = k(v1.value0);
                    return Data_Functor.map((dictBind.Apply0()).Functor0())(function (v3) {
                        return new Data_Tuple.Tuple(v3.value0, Data_Semigroup.append(dictSemigroup)(v1.value1)(v3.value1));
                    })(v2);
                }));
            };
        });
    };
};
var applicativeWriterT = function (dictMonoid) {
    return function (dictApplicative) {
        return new Control_Applicative.Applicative(function () {
            return applyWriterT(dictMonoid.Semigroup0())(dictApplicative.Apply0());
        }, function (a) {
            return WriterT(Control_Applicative.pure(dictApplicative)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
        });
    };
};
var monadWriterT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Monad.Monad(function () {
            return applicativeWriterT(dictMonoid)(dictMonad.Applicative0());
        }, function () {
            return bindWriterT(dictMonoid.Semigroup0())(dictMonad.Bind1());
        });
    };
};
var monadAskWriterT = function (dictMonoid) {
    return function (dictMonadAsk) {
        return new Control_Monad_Reader_Class.MonadAsk(function () {
            return monadWriterT(dictMonoid)(dictMonadAsk.Monad0());
        }, Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
    };
};
var monadReaderWriterT = function (dictMonoid) {
    return function (dictMonadReader) {
        return new Control_Monad_Reader_Class.MonadReader(function () {
            return monadAskWriterT(dictMonoid)(dictMonadReader.MonadAsk0());
        }, function (f) {
            return mapWriterT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
        });
    };
};
var monadContWriterT = function (dictMonoid) {
    return function (dictMonadCont) {
        return new Control_Monad_Cont_Class.MonadCont(function () {
            return monadWriterT(dictMonoid)(dictMonadCont.Monad0());
        }, function (f) {
            return WriterT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
                var v = f(function (a) {
                    return WriterT(c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
                });
                return v;
            }));
        });
    };
};
var monadEffectWriter = function (dictMonoid) {
    return function (dictMonadEffect) {
        return new Effect_Class.MonadEffect(function () {
            return monadWriterT(dictMonoid)(dictMonadEffect.Monad0());
        }, function ($123) {
            return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadEffect.Monad0())(Effect_Class.liftEffect(dictMonadEffect)($123));
        });
    };
};
var monadRecWriterT = function (dictMonoid) {
    return function (dictMonadRec) {
        return new Control_Monad_Rec_Class.MonadRec(function () {
            return monadWriterT(dictMonoid)(dictMonadRec.Monad0());
        }, function (f) {
            return function (a) {
                var f$prime = function (v) {
                    return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())((function () {
                        var v1 = f(v.value0);
                        return v1;
                    })())(function (v1) {
                        return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
                            if (v1.value0 instanceof Control_Monad_Rec_Class.Loop) {
                                return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v1.value0.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value1)(v1.value1)));
                            };
                            if (v1.value0 instanceof Control_Monad_Rec_Class.Done) {
                                return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v1.value0.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value1)(v1.value1)));
                            };
                            throw new Error("Failed pattern match at Control.Monad.Writer.Trans (line 83, column 16 - line 85, column 47): " + [ v1.value0.constructor.name ]);
                        })());
                    });
                };
                return WriterT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
            };
        });
    };
};
var monadStateWriterT = function (dictMonoid) {
    return function (dictMonadState) {
        return new Control_Monad_State_Class.MonadState(function () {
            return monadWriterT(dictMonoid)(dictMonadState.Monad0());
        }, function (f) {
            return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
        });
    };
};
var monadTellWriterT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Monad_Writer_Class.MonadTell(function () {
            return monadWriterT(dictMonoid)(dictMonad);
        }, function ($124) {
            return WriterT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Tuple.Tuple.create(Data_Unit.unit)($124)));
        });
    };
};
var monadWriterWriterT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Monad_Writer_Class.MonadWriter(function () {
            return monadTellWriterT(dictMonoid)(dictMonad);
        }, function (v) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0, v1.value1), v1.value1));
            });
        }, function (v) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0.value0, v1.value0.value1(v1.value1)));
            });
        });
    };
};
var monadThrowWriterT = function (dictMonoid) {
    return function (dictMonadThrow) {
        return new Control_Monad_Error_Class.MonadThrow(function () {
            return monadWriterT(dictMonoid)(dictMonadThrow.Monad0());
        }, function (e) {
            return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
        });
    };
};
var monadErrorWriterT = function (dictMonoid) {
    return function (dictMonadError) {
        return new Control_Monad_Error_Class.MonadError(function () {
            return monadThrowWriterT(dictMonoid)(dictMonadError.MonadThrow0());
        }, function (v) {
            return function (h) {
                return WriterT(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (e) {
                    var v1 = h(e);
                    return v1;
                }));
            };
        });
    };
};
var altWriterT = function (dictAlt) {
    return new Control_Alt.Alt(function () {
        return functorWriterT(dictAlt.Functor0());
    }, function (v) {
        return function (v1) {
            return Control_Alt.alt(dictAlt)(v)(v1);
        };
    });
};
var plusWriterT = function (dictPlus) {
    return new Control_Plus.Plus(function () {
        return altWriterT(dictPlus.Alt0());
    }, Control_Plus.empty(dictPlus));
};
var alternativeWriterT = function (dictMonoid) {
    return function (dictAlternative) {
        return new Control_Alternative.Alternative(function () {
            return applicativeWriterT(dictMonoid)(dictAlternative.Applicative0());
        }, function () {
            return plusWriterT(dictAlternative.Plus1());
        });
    };
};
var monadZeroWriterT = function (dictMonoid) {
    return function (dictMonadZero) {
        return new Control_MonadZero.MonadZero(function () {
            return alternativeWriterT(dictMonoid)(dictMonadZero.Alternative1());
        }, function () {
            return monadWriterT(dictMonoid)(dictMonadZero.Monad0());
        });
    };
};
var monadPlusWriterT = function (dictMonoid) {
    return function (dictMonadPlus) {
        return new Control_MonadPlus.MonadPlus(function () {
            return monadZeroWriterT(dictMonoid)(dictMonadPlus.MonadZero0());
        });
    };
};
module.exports = {
    WriterT: WriterT,
    runWriterT: runWriterT,
    execWriterT: execWriterT,
    mapWriterT: mapWriterT,
    newtypeWriterT: newtypeWriterT,
    functorWriterT: functorWriterT,
    applyWriterT: applyWriterT,
    applicativeWriterT: applicativeWriterT,
    altWriterT: altWriterT,
    plusWriterT: plusWriterT,
    alternativeWriterT: alternativeWriterT,
    bindWriterT: bindWriterT,
    monadWriterT: monadWriterT,
    monadRecWriterT: monadRecWriterT,
    monadZeroWriterT: monadZeroWriterT,
    monadPlusWriterT: monadPlusWriterT,
    monadTransWriterT: monadTransWriterT,
    monadEffectWriter: monadEffectWriter,
    monadContWriterT: monadContWriterT,
    monadThrowWriterT: monadThrowWriterT,
    monadErrorWriterT: monadErrorWriterT,
    monadAskWriterT: monadAskWriterT,
    monadReaderWriterT: monadReaderWriterT,
    monadStateWriterT: monadStateWriterT,
    monadTellWriterT: monadTellWriterT,
    monadWriterWriterT: monadWriterWriterT
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Monad.Cont.Class/index.js":26,"../Control.Monad.Error.Class/index.js":28,"../Control.Monad.Reader.Class/index.js":40,"../Control.Monad.Rec.Class/index.js":43,"../Control.Monad.State.Class/index.js":48,"../Control.Monad.Trans.Class/index.js":52,"../Control.Monad.Writer.Class/index.js":53,"../Control.Monad/index.js":55,"../Control.MonadPlus/index.js":56,"../Control.MonadZero/index.js":57,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Semigroup/index.js":248,"../Data.Tuple/index.js":283,"../Data.Unit/index.js":289,"../Effect.Class/index.js":298,"../Prelude/index.js":385}],55:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Monad = function (Applicative0, Bind1) {
    this.Applicative0 = Applicative0;
    this.Bind1 = Bind1;
};
var whenM = function (dictMonad) {
    return function (mb) {
        return function (m) {
            return Control_Bind.bind(dictMonad.Bind1())(mb)(function (v) {
                return Control_Applicative.when(dictMonad.Applicative0())(v)(m);
            });
        };
    };
};
var unlessM = function (dictMonad) {
    return function (mb) {
        return function (m) {
            return Control_Bind.bind(dictMonad.Bind1())(mb)(function (v) {
                return Control_Applicative.unless(dictMonad.Applicative0())(v)(m);
            });
        };
    };
};
var monadFn = new Monad(function () {
    return Control_Applicative.applicativeFn;
}, function () {
    return Control_Bind.bindFn;
});
var monadArray = new Monad(function () {
    return Control_Applicative.applicativeArray;
}, function () {
    return Control_Bind.bindArray;
});
var liftM1 = function (dictMonad) {
    return function (f) {
        return function (a) {
            return Control_Bind.bind(dictMonad.Bind1())(a)(function (v) {
                return Control_Applicative.pure(dictMonad.Applicative0())(f(v));
            });
        };
    };
};
var ap = function (dictMonad) {
    return function (f) {
        return function (a) {
            return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                });
            });
        };
    };
};
module.exports = {
    Monad: Monad,
    liftM1: liftM1,
    ap: ap,
    whenM: whenM,
    unlessM: unlessM,
    monadFn: monadFn,
    monadArray: monadArray
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Data.Functor/index.js":153,"../Data.Unit/index.js":289}],56:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var MonadPlus = function (MonadZero0) {
    this.MonadZero0 = MonadZero0;
};
var monadPlusArray = new MonadPlus(function () {
    return Control_MonadZero.monadZeroArray;
});
module.exports = {
    MonadPlus: MonadPlus,
    monadPlusArray: monadPlusArray
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Monad/index.js":55,"../Control.MonadZero/index.js":57,"../Control.Plus/index.js":60,"../Data.Functor/index.js":153}],57:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var MonadZero = function (Alternative1, Monad0) {
    this.Alternative1 = Alternative1;
    this.Monad0 = Monad0;
};
var monadZeroArray = new MonadZero(function () {
    return Control_Alternative.alternativeArray;
}, function () {
    return Control_Monad.monadArray;
});
var guard = function (dictMonadZero) {
    return function (v) {
        if (v) {
            return Control_Applicative.pure((dictMonadZero.Alternative1()).Applicative0())(Data_Unit.unit);
        };
        if (!v) {
            return Control_Plus.empty((dictMonadZero.Alternative1()).Plus1());
        };
        throw new Error("Failed pattern match at Control.MonadZero (line 54, column 1 - line 54, column 52): " + [ v.constructor.name ]);
    };
};
module.exports = {
    MonadZero: MonadZero,
    guard: guard,
    monadZeroArray: monadZeroArray
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Monad/index.js":55,"../Control.Plus/index.js":60,"../Data.Functor/index.js":153,"../Data.Unit/index.js":289}],58:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Cont_Trans = require("../Control.Monad.Cont.Trans/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Control_Monad_Maybe_Trans = require("../Control.Monad.Maybe.Trans/index.js");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");
var Control_Monad_Writer_Trans = require("../Control.Monad.Writer.Trans/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Compose = require("../Data.Functor.Compose/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Prelude = require("../Prelude/index.js");
var ParCont = function (x) {
    return x;
};
var Parallel = function (Applicative1, Monad0, parallel, sequential) {
    this.Applicative1 = Applicative1;
    this.Monad0 = Monad0;
    this.parallel = parallel;
    this.sequential = sequential;
};
var sequential = function (dict) {
    return dict.sequential;
};
var parallel = function (dict) {
    return dict.parallel;
};
var newtypeParCont = new Data_Newtype.Newtype(function (n) {
    return n;
}, ParCont);
var monadParWriterT = function (dictMonoid) {
    return function (dictParallel) {
        return new Parallel(function () {
            return Control_Monad_Writer_Trans.applicativeWriterT(dictMonoid)(dictParallel.Applicative1());
        }, function () {
            return Control_Monad_Writer_Trans.monadWriterT(dictMonoid)(dictParallel.Monad0());
        }, Control_Monad_Writer_Trans.mapWriterT(parallel(dictParallel)), Control_Monad_Writer_Trans.mapWriterT(sequential(dictParallel)));
    };
};
var monadParReaderT = function (dictParallel) {
    return new Parallel(function () {
        return Control_Monad_Reader_Trans.applicativeReaderT(dictParallel.Applicative1());
    }, function () {
        return Control_Monad_Reader_Trans.monadReaderT(dictParallel.Monad0());
    }, Control_Monad_Reader_Trans.mapReaderT(parallel(dictParallel)), Control_Monad_Reader_Trans.mapReaderT(sequential(dictParallel)));
};
var monadParMaybeT = function (dictParallel) {
    return new Parallel(function () {
        return Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Maybe.applicativeMaybe);
    }, function () {
        return Control_Monad_Maybe_Trans.monadMaybeT(dictParallel.Monad0());
    }, function (v) {
        return parallel(dictParallel)(v);
    }, function (v) {
        return sequential(dictParallel)(v);
    });
};
var monadParExceptT = function (dictParallel) {
    return new Parallel(function () {
        return Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Either.applicativeEither);
    }, function () {
        return Control_Monad_Except_Trans.monadExceptT(dictParallel.Monad0());
    }, function (v) {
        return parallel(dictParallel)(v);
    }, function (v) {
        return sequential(dictParallel)(v);
    });
};
var monadParParCont = function (dictMonadEffect) {
    return new Parallel(function () {
        return applicativeParCont(dictMonadEffect);
    }, function () {
        return Control_Monad_Cont_Trans.monadContT(dictMonadEffect.Monad0());
    }, ParCont, function (v) {
        return v;
    });
};
var functorParCont = function (dictMonadEffect) {
    return new Data_Functor.Functor(function (f) {
        return function ($54) {
            return parallel(monadParParCont(dictMonadEffect))(Data_Functor.map(Control_Monad_Cont_Trans.functorContT((((dictMonadEffect.Monad0()).Bind1()).Apply0()).Functor0()))(f)(sequential(monadParParCont(dictMonadEffect))($54)));
        };
    });
};
var applyParCont = function (dictMonadEffect) {
    return new Control_Apply.Apply(function () {
        return functorParCont(dictMonadEffect);
    }, function (v) {
        return function (v1) {
            return ParCont(function (k) {
                return Control_Bind.bind((dictMonadEffect.Monad0()).Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (v2) {
                    return Control_Bind.bind((dictMonadEffect.Monad0()).Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (v3) {
                        return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEffect.Monad0()).Bind1())(Control_Monad_Cont_Trans.runContT(v)(function (a) {
                            return Control_Bind.bind((dictMonadEffect.Monad0()).Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(v3)))(function (v4) {
                                if (v4 instanceof Data_Maybe.Nothing) {
                                    return Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(new Data_Maybe.Just(a))(v2));
                                };
                                if (v4 instanceof Data_Maybe.Just) {
                                    return k(a(v4.value0));
                                };
                                throw new Error("Failed pattern match at Control.Parallel.Class (line 71, column 7 - line 73, column 26): " + [ v4.constructor.name ]);
                            });
                        }))(function () {
                            return Control_Monad_Cont_Trans.runContT(v1)(function (b) {
                                return Control_Bind.bind((dictMonadEffect.Monad0()).Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(v2)))(function (v4) {
                                    if (v4 instanceof Data_Maybe.Nothing) {
                                        return Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(new Data_Maybe.Just(b))(v3));
                                    };
                                    if (v4 instanceof Data_Maybe.Just) {
                                        return k(v4.value0(b));
                                    };
                                    throw new Error("Failed pattern match at Control.Parallel.Class (line 77, column 7 - line 79, column 26): " + [ v4.constructor.name ]);
                                });
                            });
                        });
                    });
                });
            });
        };
    });
};
var applicativeParCont = function (dictMonadEffect) {
    return new Control_Applicative.Applicative(function () {
        return applyParCont(dictMonadEffect);
    }, function ($55) {
        return parallel(monadParParCont(dictMonadEffect))(Control_Applicative.pure(Control_Monad_Cont_Trans.applicativeContT((dictMonadEffect.Monad0()).Applicative0()))($55));
    });
};
var altParCont = function (dictMonadEffect) {
    return new Control_Alt.Alt(function () {
        return functorParCont(dictMonadEffect);
    }, function (v) {
        return function (v1) {
            return ParCont(function (k) {
                return Control_Bind.bind((dictMonadEffect.Monad0()).Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref["new"](false)))(function (v2) {
                    return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEffect.Monad0()).Bind1())(Control_Monad_Cont_Trans.runContT(v)(function (a) {
                        return Control_Bind.bind((dictMonadEffect.Monad0()).Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(v2)))(function (v3) {
                            if (v3) {
                                return Control_Applicative.pure((dictMonadEffect.Monad0()).Applicative0())(Data_Unit.unit);
                            };
                            return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEffect.Monad0()).Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(true)(v2)))(function () {
                                return k(a);
                            });
                        });
                    }))(function () {
                        return Control_Monad_Cont_Trans.runContT(v1)(function (a) {
                            return Control_Bind.bind((dictMonadEffect.Monad0()).Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(v2)))(function (v3) {
                                if (v3) {
                                    return Control_Applicative.pure((dictMonadEffect.Monad0()).Applicative0())(Data_Unit.unit);
                                };
                                return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEffect.Monad0()).Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(true)(v2)))(function () {
                                    return k(a);
                                });
                            });
                        });
                    });
                });
            });
        };
    });
};
var plusParCont = function (dictMonadEffect) {
    return new Control_Plus.Plus(function () {
        return altParCont(dictMonadEffect);
    }, ParCont(function (v) {
        return Control_Applicative.pure((dictMonadEffect.Monad0()).Applicative0())(Data_Unit.unit);
    }));
};
var alternativeParCont = function (dictMonadEffect) {
    return new Control_Alternative.Alternative(function () {
        return applicativeParCont(dictMonadEffect);
    }, function () {
        return plusParCont(dictMonadEffect);
    });
};
module.exports = {
    parallel: parallel,
    sequential: sequential,
    Parallel: Parallel,
    ParCont: ParCont,
    monadParExceptT: monadParExceptT,
    monadParReaderT: monadParReaderT,
    monadParWriterT: monadParWriterT,
    monadParMaybeT: monadParMaybeT,
    newtypeParCont: newtypeParCont,
    functorParCont: functorParCont,
    applyParCont: applyParCont,
    applicativeParCont: applicativeParCont,
    altParCont: altParCont,
    plusParCont: plusParCont,
    alternativeParCont: alternativeParCont,
    monadParParCont: monadParParCont
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Monad.Cont.Trans/index.js":27,"../Control.Monad.Except.Trans/index.js":29,"../Control.Monad.Maybe.Trans/index.js":38,"../Control.Monad.Reader.Trans/index.js":41,"../Control.Monad.Writer.Trans/index.js":54,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Either/index.js":131,"../Data.Function/index.js":145,"../Data.Functor.Compose/index.js":147,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Newtype/index.js":220,"../Data.Unit/index.js":289,"../Effect.Class/index.js":298,"../Effect.Ref/index.js":306,"../Prelude/index.js":385}],59:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Prelude = require("../Prelude/index.js");
var parTraverse_ = function (dictParallel) {
    return function (dictFoldable) {
        return function (f) {
            return function ($17) {
                return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)(function ($18) {
                    return Control_Parallel_Class.parallel(dictParallel)(f($18));
                })($17));
            };
        };
    };
};
var parTraverse = function (dictParallel) {
    return function (dictTraversable) {
        return function (f) {
            return function ($19) {
                return Control_Parallel_Class.sequential(dictParallel)(Data_Traversable.traverse(dictTraversable)(dictParallel.Applicative1())(function ($20) {
                    return Control_Parallel_Class.parallel(dictParallel)(f($20));
                })($19));
            };
        };
    };
};
var parSequence_ = function (dictParallel) {
    return function (dictFoldable) {
        return parTraverse_(dictParallel)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var parSequence = function (dictParallel) {
    return function (dictTraversable) {
        return parTraverse(dictParallel)(dictTraversable)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var parOneOfMap = function (dictParallel) {
    return function (dictAlternative) {
        return function (dictFoldable) {
            return function (dictFunctor) {
                return function (f) {
                    return function ($21) {
                        return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.oneOfMap(dictFoldable)(dictAlternative.Plus1())(function ($22) {
                            return Control_Parallel_Class.parallel(dictParallel)(f($22));
                        })($21));
                    };
                };
            };
        };
    };
};
var parOneOf = function (dictParallel) {
    return function (dictAlternative) {
        return function (dictFoldable) {
            return function (dictFunctor) {
                return function ($23) {
                    return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.oneOfMap(dictFoldable)(dictAlternative.Plus1())(Control_Parallel_Class.parallel(dictParallel))($23));
                };
            };
        };
    };
};
var parApply = function (dictParallel) {
    return function (mf) {
        return function (ma) {
            return Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply((dictParallel.Applicative1()).Apply0())(Control_Parallel_Class.parallel(dictParallel)(mf))(Control_Parallel_Class.parallel(dictParallel)(ma)));
        };
    };
};
module.exports = {
    parApply: parApply,
    parTraverse: parTraverse,
    parTraverse_: parTraverse_,
    parSequence: parSequence,
    parSequence_: parSequence_,
    parOneOf: parOneOf,
    parOneOfMap: parOneOfMap
};

},{"../Control.Alternative/index.js":5,"../Control.Apply/index.js":9,"../Control.Category/index.js":14,"../Control.Parallel.Class/index.js":58,"../Control.Semigroupoid/index.js":61,"../Data.Foldable/index.js":141,"../Data.Traversable/index.js":281,"../Prelude/index.js":385}],60:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Plus = function (Alt0, empty) {
    this.Alt0 = Alt0;
    this.empty = empty;
};
var plusArray = new Plus(function () {
    return Control_Alt.altArray;
}, [  ]);
var empty = function (dict) {
    return dict.empty;
};
module.exports = {
    Plus: Plus,
    empty: empty,
    plusArray: plusArray
};

},{"../Control.Alt/index.js":4,"../Data.Functor/index.js":153}],61:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Semigroupoid = function (compose) {
    this.compose = compose;
};
var semigroupoidFn = new Semigroupoid(function (f) {
    return function (g) {
        return function (x) {
            return f(g(x));
        };
    };
});
var compose = function (dict) {
    return dict.compose;
};
var composeFlipped = function (dictSemigroupoid) {
    return function (f) {
        return function (g) {
            return compose(dictSemigroupoid)(g)(f);
        };
    };
};
module.exports = {
    compose: compose,
    Semigroupoid: Semigroupoid,
    composeFlipped: composeFlipped,
    semigroupoidFn: semigroupoidFn
};

},{}],62:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var ButtonButton = (function () {
    function ButtonButton() {

    };
    ButtonButton.value = new ButtonButton();
    return ButtonButton;
})();
var ButtonSubmit = (function () {
    function ButtonSubmit() {

    };
    ButtonSubmit.value = new ButtonSubmit();
    return ButtonSubmit;
})();
var ButtonReset = (function () {
    function ButtonReset() {

    };
    ButtonReset.value = new ButtonReset();
    return ButtonReset;
})();
var renderButtonType = function (v) {
    if (v instanceof ButtonButton) {
        return "button";
    };
    if (v instanceof ButtonSubmit) {
        return "submit";
    };
    if (v instanceof ButtonReset) {
        return "reset";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.ButtonType (line 9, column 20 - line 12, column 18): " + [ v.constructor.name ]);
};
module.exports = {
    ButtonButton: ButtonButton,
    ButtonSubmit: ButtonSubmit,
    ButtonReset: ButtonReset,
    renderButtonType: renderButtonType
};

},{}],63:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Anonymous = (function () {
    function Anonymous() {

    };
    Anonymous.value = new Anonymous();
    return Anonymous;
})();
var UseCredentials = (function () {
    function UseCredentials() {

    };
    UseCredentials.value = new UseCredentials();
    return UseCredentials;
})();
var renderCrossOriginValue = function (v) {
    if (v instanceof Anonymous) {
        return "anonymous";
    };
    if (v instanceof UseCredentials) {
        return "use-credentials";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.CrossOriginValue (line 8, column 26 - line 10, column 21): " + [ v.constructor.name ]);
};
module.exports = {
    Anonymous: Anonymous,
    UseCredentials: UseCredentials,
    renderCrossOriginValue: renderCrossOriginValue
};

},{}],64:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var DirLTR = (function () {
    function DirLTR() {

    };
    DirLTR.value = new DirLTR();
    return DirLTR;
})();
var DirRTL = (function () {
    function DirRTL() {

    };
    DirRTL.value = new DirRTL();
    return DirRTL;
})();
var DirAuto = (function () {
    function DirAuto() {

    };
    DirAuto.value = new DirAuto();
    return DirAuto;
})();
var renderDirValue = function (v) {
    if (v instanceof DirLTR) {
        return "ltr";
    };
    if (v instanceof DirRTL) {
        return "rtl";
    };
    if (v instanceof DirAuto) {
        return "auto";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.DirValue (line 9, column 18 - line 12, column 14): " + [ v.constructor.name ]);
};
module.exports = {
    DirLTR: DirLTR,
    DirRTL: DirRTL,
    DirAuto: DirAuto,
    renderDirValue: renderDirValue
};

},{}],65:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var POST = (function () {
    function POST() {

    };
    POST.value = new POST();
    return POST;
})();
var GET = (function () {
    function GET() {

    };
    GET.value = new GET();
    return GET;
})();
var renderFormMethod = function (v) {
    if (v instanceof POST) {
        return "post";
    };
    if (v instanceof GET) {
        return "get";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.FormMethod (line 8, column 20 - line 10, column 10): " + [ v.constructor.name ]);
};
module.exports = {
    POST: POST,
    GET: GET,
    renderFormMethod: renderFormMethod
};

},{}],66:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var InputButton = (function () {
    function InputButton() {

    };
    InputButton.value = new InputButton();
    return InputButton;
})();
var InputCheckbox = (function () {
    function InputCheckbox() {

    };
    InputCheckbox.value = new InputCheckbox();
    return InputCheckbox;
})();
var InputColor = (function () {
    function InputColor() {

    };
    InputColor.value = new InputColor();
    return InputColor;
})();
var InputDate = (function () {
    function InputDate() {

    };
    InputDate.value = new InputDate();
    return InputDate;
})();
var InputDatetimeLocal = (function () {
    function InputDatetimeLocal() {

    };
    InputDatetimeLocal.value = new InputDatetimeLocal();
    return InputDatetimeLocal;
})();
var InputEmail = (function () {
    function InputEmail() {

    };
    InputEmail.value = new InputEmail();
    return InputEmail;
})();
var InputFile = (function () {
    function InputFile() {

    };
    InputFile.value = new InputFile();
    return InputFile;
})();
var InputHidden = (function () {
    function InputHidden() {

    };
    InputHidden.value = new InputHidden();
    return InputHidden;
})();
var InputImage = (function () {
    function InputImage() {

    };
    InputImage.value = new InputImage();
    return InputImage;
})();
var InputMonth = (function () {
    function InputMonth() {

    };
    InputMonth.value = new InputMonth();
    return InputMonth;
})();
var InputNumber = (function () {
    function InputNumber() {

    };
    InputNumber.value = new InputNumber();
    return InputNumber;
})();
var InputPassword = (function () {
    function InputPassword() {

    };
    InputPassword.value = new InputPassword();
    return InputPassword;
})();
var InputRadio = (function () {
    function InputRadio() {

    };
    InputRadio.value = new InputRadio();
    return InputRadio;
})();
var InputRange = (function () {
    function InputRange() {

    };
    InputRange.value = new InputRange();
    return InputRange;
})();
var InputReset = (function () {
    function InputReset() {

    };
    InputReset.value = new InputReset();
    return InputReset;
})();
var InputSearch = (function () {
    function InputSearch() {

    };
    InputSearch.value = new InputSearch();
    return InputSearch;
})();
var InputSubmit = (function () {
    function InputSubmit() {

    };
    InputSubmit.value = new InputSubmit();
    return InputSubmit;
})();
var InputTel = (function () {
    function InputTel() {

    };
    InputTel.value = new InputTel();
    return InputTel;
})();
var InputText = (function () {
    function InputText() {

    };
    InputText.value = new InputText();
    return InputText;
})();
var InputTime = (function () {
    function InputTime() {

    };
    InputTime.value = new InputTime();
    return InputTime;
})();
var InputUrl = (function () {
    function InputUrl() {

    };
    InputUrl.value = new InputUrl();
    return InputUrl;
})();
var InputWeek = (function () {
    function InputWeek() {

    };
    InputWeek.value = new InputWeek();
    return InputWeek;
})();
var renderInputType = function (v) {
    if (v instanceof InputButton) {
        return "button";
    };
    if (v instanceof InputCheckbox) {
        return "checkbox";
    };
    if (v instanceof InputColor) {
        return "color";
    };
    if (v instanceof InputDate) {
        return "date";
    };
    if (v instanceof InputDatetimeLocal) {
        return "datetime-local";
    };
    if (v instanceof InputEmail) {
        return "email";
    };
    if (v instanceof InputFile) {
        return "file";
    };
    if (v instanceof InputHidden) {
        return "hidden";
    };
    if (v instanceof InputImage) {
        return "image";
    };
    if (v instanceof InputMonth) {
        return "month";
    };
    if (v instanceof InputNumber) {
        return "number";
    };
    if (v instanceof InputPassword) {
        return "password";
    };
    if (v instanceof InputRadio) {
        return "radio";
    };
    if (v instanceof InputRange) {
        return "range";
    };
    if (v instanceof InputReset) {
        return "reset";
    };
    if (v instanceof InputSearch) {
        return "search";
    };
    if (v instanceof InputSubmit) {
        return "submit";
    };
    if (v instanceof InputTel) {
        return "tel";
    };
    if (v instanceof InputText) {
        return "text";
    };
    if (v instanceof InputTime) {
        return "time";
    };
    if (v instanceof InputUrl) {
        return "url";
    };
    if (v instanceof InputWeek) {
        return "week";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.InputType (line 28, column 19 - line 50, column 16): " + [ v.constructor.name ]);
};
module.exports = {
    InputButton: InputButton,
    InputCheckbox: InputCheckbox,
    InputColor: InputColor,
    InputDate: InputDate,
    InputDatetimeLocal: InputDatetimeLocal,
    InputEmail: InputEmail,
    InputFile: InputFile,
    InputHidden: InputHidden,
    InputImage: InputImage,
    InputMonth: InputMonth,
    InputNumber: InputNumber,
    InputPassword: InputPassword,
    InputRadio: InputRadio,
    InputRange: InputRange,
    InputReset: InputReset,
    InputSearch: InputSearch,
    InputSubmit: InputSubmit,
    InputTel: InputTel,
    InputText: InputText,
    InputTime: InputTime,
    InputUrl: InputUrl,
    InputWeek: InputWeek,
    renderInputType: renderInputType
};

},{}],67:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var KindSubtitles = (function () {
    function KindSubtitles() {

    };
    KindSubtitles.value = new KindSubtitles();
    return KindSubtitles;
})();
var KindCaptions = (function () {
    function KindCaptions() {

    };
    KindCaptions.value = new KindCaptions();
    return KindCaptions;
})();
var KindDescriptions = (function () {
    function KindDescriptions() {

    };
    KindDescriptions.value = new KindDescriptions();
    return KindDescriptions;
})();
var KindChapters = (function () {
    function KindChapters() {

    };
    KindChapters.value = new KindChapters();
    return KindChapters;
})();
var KindMetadata = (function () {
    function KindMetadata() {

    };
    KindMetadata.value = new KindMetadata();
    return KindMetadata;
})();
var renderKindValue = function (v) {
    if (v instanceof KindSubtitles) {
        return "subtitles";
    };
    if (v instanceof KindCaptions) {
        return "captions";
    };
    if (v instanceof KindDescriptions) {
        return "descriptions";
    };
    if (v instanceof KindChapters) {
        return "chapters";
    };
    if (v instanceof KindMetadata) {
        return "metadata";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.KindValue (line 11, column 19 - line 16, column 19): " + [ v.constructor.name ]);
};
module.exports = {
    KindSubtitles: KindSubtitles,
    KindCaptions: KindCaptions,
    KindDescriptions: KindDescriptions,
    KindChapters: KindChapters,
    KindMetadata: KindMetadata,
    renderKindValue: renderKindValue
};

},{}],68:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var MenuList = (function () {
    function MenuList() {

    };
    MenuList.value = new MenuList();
    return MenuList;
})();
var MenuContext = (function () {
    function MenuContext() {

    };
    MenuContext.value = new MenuContext();
    return MenuContext;
})();
var MenuToolbar = (function () {
    function MenuToolbar() {

    };
    MenuToolbar.value = new MenuToolbar();
    return MenuToolbar;
})();
var renderMenuType = function (v) {
    if (v instanceof MenuList) {
        return "list";
    };
    if (v instanceof MenuContext) {
        return "context";
    };
    if (v instanceof MenuToolbar) {
        return "toolbar";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.MenuType (line 9, column 18 - line 12, column 18): " + [ v.constructor.name ]);
};
module.exports = {
    MenuList: MenuList,
    MenuContext: MenuContext,
    MenuToolbar: MenuToolbar,
    renderMenuType: renderMenuType
};

},{}],69:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var MenuitemCommand = (function () {
    function MenuitemCommand() {

    };
    MenuitemCommand.value = new MenuitemCommand();
    return MenuitemCommand;
})();
var MenuitemCheckbox = (function () {
    function MenuitemCheckbox() {

    };
    MenuitemCheckbox.value = new MenuitemCheckbox();
    return MenuitemCheckbox;
})();
var MenuitemRadio = (function () {
    function MenuitemRadio() {

    };
    MenuitemRadio.value = new MenuitemRadio();
    return MenuitemRadio;
})();
var renderMenuitemType = function (v) {
    if (v instanceof MenuitemCommand) {
        return "command";
    };
    if (v instanceof MenuitemCheckbox) {
        return "checkbox";
    };
    if (v instanceof MenuitemRadio) {
        return "radio";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.MenuitemType (line 9, column 22 - line 12, column 20): " + [ v.constructor.name ]);
};
module.exports = {
    MenuitemCommand: MenuitemCommand,
    MenuitemCheckbox: MenuitemCheckbox,
    MenuitemRadio: MenuitemRadio,
    renderMenuitemType: renderMenuitemType
};

},{}],70:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var On = (function () {
    function On() {

    };
    On.value = new On();
    return On;
})();
var Off = (function () {
    function Off() {

    };
    Off.value = new Off();
    return Off;
})();
var renderOnOff = function (v) {
    if (v instanceof On) {
        return "on";
    };
    if (v instanceof Off) {
        return "off";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.OnOff (line 8, column 15 - line 10, column 10): " + [ v.constructor.name ]);
};
module.exports = {
    On: On,
    Off: Off,
    renderOnOff: renderOnOff
};

},{}],71:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Uppercase = (function () {
    function Uppercase() {

    };
    Uppercase.value = new Uppercase();
    return Uppercase;
})();
var Lowercase = (function () {
    function Lowercase() {

    };
    Lowercase.value = new Lowercase();
    return Lowercase;
})();
var NumeralDecimal = (function () {
    function NumeralDecimal() {

    };
    NumeralDecimal.value = new NumeralDecimal();
    return NumeralDecimal;
})();
var NumeralRoman = (function () {
    function NumeralRoman(value0) {
        this.value0 = value0;
    };
    NumeralRoman.create = function (value0) {
        return new NumeralRoman(value0);
    };
    return NumeralRoman;
})();
var OrderedListNumeric = (function () {
    function OrderedListNumeric(value0) {
        this.value0 = value0;
    };
    OrderedListNumeric.create = function (value0) {
        return new OrderedListNumeric(value0);
    };
    return OrderedListNumeric;
})();
var OrderedListAlphabetic = (function () {
    function OrderedListAlphabetic(value0) {
        this.value0 = value0;
    };
    OrderedListAlphabetic.create = function (value0) {
        return new OrderedListAlphabetic(value0);
    };
    return OrderedListAlphabetic;
})();
var renderOrderedListType = function (v) {
    if (v instanceof OrderedListNumeric && v.value0 instanceof NumeralDecimal) {
        return "1";
    };
    if (v instanceof OrderedListNumeric && (v.value0 instanceof NumeralRoman && v.value0.value0 instanceof Lowercase)) {
        return "i";
    };
    if (v instanceof OrderedListNumeric && (v.value0 instanceof NumeralRoman && v.value0.value0 instanceof Uppercase)) {
        return "I";
    };
    if (v instanceof OrderedListAlphabetic && v.value0 instanceof Lowercase) {
        return "a";
    };
    if (v instanceof OrderedListAlphabetic && v.value0 instanceof Uppercase) {
        return "A";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.OrderedListType (line 16, column 25 - line 21, column 38): " + [ v.constructor.name ]);
};
module.exports = {
    Uppercase: Uppercase,
    Lowercase: Lowercase,
    NumeralDecimal: NumeralDecimal,
    NumeralRoman: NumeralRoman,
    OrderedListNumeric: OrderedListNumeric,
    OrderedListAlphabetic: OrderedListAlphabetic,
    renderOrderedListType: renderOrderedListType
};

},{}],72:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var PreloadNone = (function () {
    function PreloadNone() {

    };
    PreloadNone.value = new PreloadNone();
    return PreloadNone;
})();
var PreloadAuto = (function () {
    function PreloadAuto() {

    };
    PreloadAuto.value = new PreloadAuto();
    return PreloadAuto;
})();
var PreloadMetadata = (function () {
    function PreloadMetadata() {

    };
    PreloadMetadata.value = new PreloadMetadata();
    return PreloadMetadata;
})();
var renderPreloadValue = function (v) {
    if (v instanceof PreloadNone) {
        return "none";
    };
    if (v instanceof PreloadAuto) {
        return "auto";
    };
    if (v instanceof PreloadMetadata) {
        return "metadata";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.PreloadValue (line 9, column 22 - line 12, column 22): " + [ v.constructor.name ]);
};
module.exports = {
    PreloadNone: PreloadNone,
    PreloadAuto: PreloadAuto,
    PreloadMetadata: PreloadMetadata,
    renderPreloadValue: renderPreloadValue
};

},{}],73:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var ScopeRow = (function () {
    function ScopeRow() {

    };
    ScopeRow.value = new ScopeRow();
    return ScopeRow;
})();
var ScopeCol = (function () {
    function ScopeCol() {

    };
    ScopeCol.value = new ScopeCol();
    return ScopeCol;
})();
var ScopeRowGroup = (function () {
    function ScopeRowGroup() {

    };
    ScopeRowGroup.value = new ScopeRowGroup();
    return ScopeRowGroup;
})();
var ScopeColGroup = (function () {
    function ScopeColGroup() {

    };
    ScopeColGroup.value = new ScopeColGroup();
    return ScopeColGroup;
})();
var ScopeAuto = (function () {
    function ScopeAuto() {

    };
    ScopeAuto.value = new ScopeAuto();
    return ScopeAuto;
})();
var renderScopeValue = function (v) {
    if (v instanceof ScopeRow) {
        return "row";
    };
    if (v instanceof ScopeCol) {
        return "col";
    };
    if (v instanceof ScopeRowGroup) {
        return "rowgroup";
    };
    if (v instanceof ScopeColGroup) {
        return "colgroup";
    };
    if (v instanceof ScopeAuto) {
        return "auto";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.ScopeValue (line 11, column 20 - line 16, column 16): " + [ v.constructor.name ]);
};
module.exports = {
    ScopeRow: ScopeRow,
    ScopeCol: ScopeCol,
    ScopeRowGroup: ScopeRowGroup,
    ScopeColGroup: ScopeColGroup,
    ScopeAuto: ScopeAuto,
    renderScopeValue: renderScopeValue
};

},{}],74:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Any = (function () {
    function Any() {

    };
    Any.value = new Any();
    return Any;
})();
var Step = (function () {
    function Step(value0) {
        this.value0 = value0;
    };
    Step.create = function (value0) {
        return new Step(value0);
    };
    return Step;
})();
var renderStepValue = function (v) {
    if (v instanceof Any) {
        return "any";
    };
    if (v instanceof Step) {
        return Data_Show.show(Data_Show.showNumber)(v.value0);
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.StepValue (line 10, column 19 - line 12, column 18): " + [ v.constructor.name ]);
};
module.exports = {
    Any: Any,
    Step: Step,
    renderStepValue: renderStepValue
};

},{"../Data.Show/index.js":254,"../Prelude/index.js":385}],75:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Hard = (function () {
    function Hard() {

    };
    Hard.value = new Hard();
    return Hard;
})();
var Soft = (function () {
    function Soft() {

    };
    Soft.value = new Soft();
    return Soft;
})();
var renderWrapValue = function (v) {
    if (v instanceof Hard) {
        return "hard";
    };
    if (v instanceof Soft) {
        return "soft";
    };
    throw new Error("Failed pattern match at DOM.HTML.Indexed.WrapValue (line 8, column 19 - line 10, column 11): " + [ v.constructor.name ]);
};
module.exports = {
    Hard: Hard,
    Soft: Soft,
    renderWrapValue: renderWrapValue
};

},{}],76:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var DOM_HTML_Indexed_ButtonType = require("../DOM.HTML.Indexed.ButtonType/index.js");
var DOM_HTML_Indexed_CrossOriginValue = require("../DOM.HTML.Indexed.CrossOriginValue/index.js");
var DOM_HTML_Indexed_DirValue = require("../DOM.HTML.Indexed.DirValue/index.js");
var DOM_HTML_Indexed_FormMethod = require("../DOM.HTML.Indexed.FormMethod/index.js");
var DOM_HTML_Indexed_InputType = require("../DOM.HTML.Indexed.InputType/index.js");
var DOM_HTML_Indexed_KindValue = require("../DOM.HTML.Indexed.KindValue/index.js");
var DOM_HTML_Indexed_MenuType = require("../DOM.HTML.Indexed.MenuType/index.js");
var DOM_HTML_Indexed_MenuitemType = require("../DOM.HTML.Indexed.MenuitemType/index.js");
var DOM_HTML_Indexed_OnOff = require("../DOM.HTML.Indexed.OnOff/index.js");
var DOM_HTML_Indexed_OrderedListType = require("../DOM.HTML.Indexed.OrderedListType/index.js");
var DOM_HTML_Indexed_PreloadValue = require("../DOM.HTML.Indexed.PreloadValue/index.js");
var DOM_HTML_Indexed_ScopeValue = require("../DOM.HTML.Indexed.ScopeValue/index.js");
var DOM_HTML_Indexed_StepValue = require("../DOM.HTML.Indexed.StepValue/index.js");
var DOM_HTML_Indexed_WrapValue = require("../DOM.HTML.Indexed.WrapValue/index.js");
var Data_DateTime = require("../Data.DateTime/index.js");
var Data_MediaType = require("../Data.MediaType/index.js");
var Web_Clipboard_ClipboardEvent = require("../Web.Clipboard.ClipboardEvent/index.js");
var Web_Event_Event = require("../Web.Event.Event/index.js");
var Web_HTML_Event_DragEvent = require("../Web.HTML.Event.DragEvent/index.js");
var Web_TouchEvent = require("../Web.TouchEvent/index.js");
var Web_UIEvent_FocusEvent = require("../Web.UIEvent.FocusEvent/index.js");
var Web_UIEvent_KeyboardEvent = require("../Web.UIEvent.KeyboardEvent/index.js");
var Web_UIEvent_MouseEvent = require("../Web.UIEvent.MouseEvent/index.js");
var Web_UIEvent_WheelEvent = require("../Web.UIEvent.WheelEvent/index.js");
module.exports = {};

},{"../DOM.HTML.Indexed.ButtonType/index.js":62,"../DOM.HTML.Indexed.CrossOriginValue/index.js":63,"../DOM.HTML.Indexed.DirValue/index.js":64,"../DOM.HTML.Indexed.FormMethod/index.js":65,"../DOM.HTML.Indexed.InputType/index.js":66,"../DOM.HTML.Indexed.KindValue/index.js":67,"../DOM.HTML.Indexed.MenuType/index.js":68,"../DOM.HTML.Indexed.MenuitemType/index.js":69,"../DOM.HTML.Indexed.OnOff/index.js":70,"../DOM.HTML.Indexed.OrderedListType/index.js":71,"../DOM.HTML.Indexed.PreloadValue/index.js":72,"../DOM.HTML.Indexed.ScopeValue/index.js":73,"../DOM.HTML.Indexed.StepValue/index.js":74,"../DOM.HTML.Indexed.WrapValue/index.js":75,"../Data.DateTime/index.js":127,"../Data.MediaType/index.js":211,"../Web.Clipboard.ClipboardEvent/index.js":430,"../Web.Event.Event/index.js":465,"../Web.HTML.Event.DragEvent/index.js":480,"../Web.TouchEvent/index.js":623,"../Web.UIEvent.FocusEvent/index.js":626,"../Web.UIEvent.KeyboardEvent/index.js":629,"../Web.UIEvent.MouseEvent/index.js":632,"../Web.UIEvent.WheelEvent/index.js":637}],77:[function(require,module,exports){
"use strict";

function id(x) {
  return x;
}

exports.fromBoolean = id;
exports.fromNumber = id;
exports.fromString = id;
exports.fromArray = id;
exports.fromObject = id;

exports.jsonNull = null;

exports.stringify = function (j) {
  return JSON.stringify(j);
};

var objToString = Object.prototype.toString;
var objKeys = Object.keys;

function isArray(a) {
  return objToString.call(a) === "[object Array]";
}

exports._caseJson = function (isNull, isBool, isNum, isStr, isArr, isObj, j) {
  if (j == null) return isNull();
  else if (typeof j === "boolean") return isBool(j);
  else if (typeof j === "number") return isNum(j);
  else if (typeof j === "string") return isStr(j);
  else if (objToString.call(j) === "[object Array]")
    return isArr(j);
  else return isObj(j);
};

exports._compare = function _compare (EQ, GT, LT, a, b) {
  if (a == null) {
    if (b == null) return EQ;
    else return LT;
  } else if (typeof a === "boolean") {
    if (typeof b === "boolean") {
      // boolean / boolean
      if (a === b) return EQ;
      else if (a === false) return LT;
      else return GT;
    } else if (b == null) return GT;
    else return LT;
  } else if (typeof a === "number") {
    if (typeof b === "number") {
      if (a === b) return EQ;
      else if (a < b) return LT;
      else return GT;
    } else if (b == null) return GT;
    else if (typeof b === "boolean") return GT;
    else return LT;
  } else if (typeof a === "string") {
    if (typeof b === "string") {
      if (a === b) return EQ;
      else if (a < b) return LT;
      else return GT;
    } else if (b == null) return GT;
    else if (typeof b === "boolean") return GT;
    else if (typeof b === "number") return GT;
    else return LT;
  } else if (isArray(a)) {
    if (isArray(b)) {
      for (var i = 0; i < Math.min(a.length, b.length); i++) {
        var ca = _compare(EQ, GT, LT, a[i], b[i]);
        if (ca !== EQ) return ca;
      }
      if (a.length === b.length) return EQ;
      else if (a.length < b.length) return LT;
      else return GT;
    } else if (b == null) return GT;
    else if (typeof b === "boolean") return GT;
    else if (typeof b === "number") return GT;
    else if (typeof b === "string") return GT;
    else return LT;
  } else {
    if (b == null) return GT;
    else if (typeof b === "boolean") return GT;
    else if (typeof b === "number") return GT;
    else if (typeof b === "string") return GT;
    else if (isArray(b)) return GT;
    else {
      var akeys = objKeys(a);
      var bkeys = objKeys(b);
      if (akeys.length < bkeys.length) return LT;
      else if (akeys.length > bkeys.length) return GT;
      var keys = akeys.concat(bkeys).sort();
      for (var j = 0; j < keys.length; j++) {
        var k = keys[j];
        if (a[k] === undefined) return LT;
        else if (b[k] === undefined) return GT;
        var ck = _compare(EQ, GT, LT, a[k], b[k]);
        if (ck !== EQ) return ck;
      }
      return EQ;
    }
  }
};

},{}],78:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Foreign_Object = require("../Foreign.Object/index.js");
var Prelude = require("../Prelude/index.js");
var verbJsonType = function (def) {
    return function (f) {
        return function (g) {
            return g(def)(f);
        };
    };
};
var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
var jsonZero = $foreign.fromNumber(0.0);
var jsonTrue = $foreign.fromBoolean(true);
var jsonSingletonObject = function (key) {
    return function (val) {
        return $foreign.fromObject(Foreign_Object.singleton(key)(val));
    };
};
var jsonSingletonArray = function (j) {
    return $foreign.fromArray([ j ]);
};
var jsonFalse = $foreign.fromBoolean(false);
var jsonEmptyString = $foreign.fromString("");
var jsonEmptyObject = $foreign.fromObject(Foreign_Object.empty);
var jsonEmptyArray = $foreign.fromArray([  ]);
var isJsonType = verbJsonType(false)(Data_Function["const"](true));
var ordJson = new Data_Ord.Ord(function () {
    return eqJson;
}, function (a) {
    return function (b) {
        return $foreign["_compare"](Data_Ordering.EQ.value, Data_Ordering.GT.value, Data_Ordering.LT.value, a, b);
    };
});
var eqJson = new Data_Eq.Eq(function (j1) {
    return function (j2) {
        return Data_Eq.eq(Data_Ordering.eqOrdering)(Data_Ord.compare(ordJson)(j1)(j2))(Data_Ordering.EQ.value);
    };
});
var eqJNull = new Data_Eq.Eq(function (v) {
    return function (v1) {
        return true;
    };
});
var ordJNull = new Data_Ord.Ord(function () {
    return eqJNull;
}, function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
var caseJsonString = function (d) {
    return function (f) {
        return function (j) {
            return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), j);
        };
    };
};
var isString = isJsonType(caseJsonString);
var toString = toJsonType(caseJsonString);
var caseJsonObject = function (d) {
    return function (f) {
        return function (j) {
            return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, j);
        };
    };
};
var isObject = isJsonType(caseJsonObject);
var toObject = toJsonType(caseJsonObject);
var caseJsonNumber = function (d) {
    return function (f) {
        return function (j) {
            return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
        };
    };
};
var isNumber = isJsonType(caseJsonNumber);
var toNumber = toJsonType(caseJsonNumber);
var caseJsonNull = function (d) {
    return function (f) {
        return function (j) {
            return $foreign["_caseJson"](f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
        };
    };
};
var isNull = isJsonType(caseJsonNull);
var toNull = toJsonType(caseJsonNull);
var caseJsonBoolean = function (d) {
    return function (f) {
        return function (j) {
            return $foreign["_caseJson"](Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
        };
    };
};
var isBoolean = isJsonType(caseJsonBoolean);
var toBoolean = toJsonType(caseJsonBoolean);
var caseJsonArray = function (d) {
    return function (f) {
        return function (j) {
            return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), j);
        };
    };
};
var isArray = isJsonType(caseJsonArray);
var toArray = toJsonType(caseJsonArray);
var caseJson = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (json) {
                            return $foreign["_caseJson"](a, b, c, d, e, f, json);
                        };
                    };
                };
            };
        };
    };
};
module.exports = {
    caseJson: caseJson,
    caseJsonNull: caseJsonNull,
    caseJsonBoolean: caseJsonBoolean,
    caseJsonNumber: caseJsonNumber,
    caseJsonString: caseJsonString,
    caseJsonArray: caseJsonArray,
    caseJsonObject: caseJsonObject,
    isNull: isNull,
    isBoolean: isBoolean,
    isNumber: isNumber,
    isString: isString,
    isArray: isArray,
    isObject: isObject,
    toNull: toNull,
    toBoolean: toBoolean,
    toNumber: toNumber,
    toString: toString,
    toArray: toArray,
    toObject: toObject,
    jsonTrue: jsonTrue,
    jsonFalse: jsonFalse,
    jsonZero: jsonZero,
    jsonEmptyString: jsonEmptyString,
    jsonEmptyArray: jsonEmptyArray,
    jsonSingletonArray: jsonSingletonArray,
    jsonEmptyObject: jsonEmptyObject,
    jsonSingletonObject: jsonSingletonObject,
    eqJson: eqJson,
    ordJson: ordJson,
    fromBoolean: $foreign.fromBoolean,
    fromNumber: $foreign.fromNumber,
    fromString: $foreign.fromString,
    fromArray: $foreign.fromArray,
    fromObject: $foreign.fromObject,
    jsonNull: $foreign.jsonNull,
    stringify: $foreign.stringify
};

},{"../Data.Eq/index.js":135,"../Data.Function.Uncurried/index.js":144,"../Data.Function/index.js":145,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Foreign.Object/index.js":318,"../Prelude/index.js":385,"./foreign.js":77}],79:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Map = require("../Data.Map/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_NonEmpty = require("../Data.NonEmpty/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Set = require("../Data.Set/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_String = require("../Data.String/index.js");
var Data_String_CodePoints = require("../Data.String.CodePoints/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Foreign_Object = require("../Foreign.Object/index.js");
var Prelude = require("../Prelude/index.js");
var Record = require("../Record/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var DecodeJson = function (decodeJson) {
    this.decodeJson = decodeJson;
};
var GDecodeJson = function (gDecodeJson) {
    this.gDecodeJson = gDecodeJson;
};
var gDecodeJsonNil = new GDecodeJson(function (v) {
    return function (v1) {
        return new Data_Either.Right({});
    };
});
var gDecodeJson = function (dict) {
    return dict.gDecodeJson;
};
var decodeVoid = new DecodeJson(function (v) {
    return new Data_Either.Left("Value cannot be Void");
});
var decodeRecord = function (dictGDecodeJson) {
    return function (dictRowToList) {
        return new DecodeJson(function (json) {
            var v = Data_Argonaut_Core.toObject(json);
            if (v instanceof Data_Maybe.Just) {
                return gDecodeJson(dictGDecodeJson)(v.value0)(Type_Data_RowList.RLProxy.value);
            };
            if (v instanceof Data_Maybe.Nothing) {
                return new Data_Either.Left("Could not convert JSON to object");
            };
            throw new Error("Failed pattern match at Data.Argonaut.Decode.Class (line 128, column 5 - line 132, column 1): " + [ v.constructor.name ]);
        });
    };
};
var decodeJsonString = new DecodeJson(Data_Argonaut_Core.caseJsonString(new Data_Either.Left("Value is not a String"))(Data_Either.Right.create));
var decodeJsonNumber = new DecodeJson(Data_Argonaut_Core.caseJsonNumber(new Data_Either.Left("Value is not a Number"))(Data_Either.Right.create));
var decodeJsonNull = new DecodeJson(Data_Argonaut_Core.caseJsonNull(new Data_Either.Left("Value is not a null"))(Data_Function["const"](new Data_Either.Right(Data_Unit.unit))));
var decodeJsonJson = new DecodeJson(Data_Either.Right.create);
var decodeJsonBoolean = new DecodeJson(Data_Argonaut_Core.caseJsonBoolean(new Data_Either.Left("Value is not a Boolean"))(Data_Either.Right.create));
var decodeJson = function (dict) {
    return dict.decodeJson;
};
var decodeJsonChar = new DecodeJson(function (j) {
    return Control_Bind.bindFlipped(Data_Either.bindEither)(Data_Maybe.maybe(Data_Either.Left.create("Expected character but found: " + Data_Argonaut_Core.stringify(j)))(Data_Either.Right.create))(Data_Functor.map(Data_Either.functorEither)(Data_String_CodePoints.codePointAt(0))(decodeJson(decodeJsonString)(j)));
});
var decodeJsonInt = new DecodeJson(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(function ($62) {
    return Data_Maybe.maybe(new Data_Either.Left("Value is not an integer"))(Data_Either.Right.create)(Data_Int.fromNumber($62));
})(decodeJson(decodeJsonNumber)));
var decodeJsonMaybe = function (dictDecodeJson) {
    return new DecodeJson(function (j) {
        if (Data_Argonaut_Core.isNull(j)) {
            return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
        };
        if (Data_Boolean.otherwise) {
            return Data_Functor.map(Data_Either.functorEither)(Data_Maybe.Just.create)(decodeJson(dictDecodeJson)(j));
        };
        throw new Error("Failed pattern match at Data.Argonaut.Decode.Class (line 30, column 1 - line 30, column 65): " + [ j.constructor.name ]);
    });
};
var gDecodeJsonCons = function (dictDecodeJson) {
    return function (dictGDecodeJson) {
        return function (dictIsSymbol) {
            return function (dictCons) {
                return function (dictLacks) {
                    return new GDecodeJson(function (object) {
                        return function (v) {
                            var fieldName = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                            return Control_Bind.bind(Data_Either.bindEither)(gDecodeJson(dictGDecodeJson)(object)(Type_Data_RowList.RLProxy.value))(function (v1) {
                                var v2 = Foreign_Object.lookup(fieldName)(object);
                                if (v2 instanceof Data_Maybe.Just) {
                                    return Control_Bind.bind(Data_Either.bindEither)(decodeJson(dictDecodeJson)(v2.value0))(function (v3) {
                                        return Data_Either.Right.create(Record.insert(dictIsSymbol)(dictLacks)(dictCons)(Data_Symbol.SProxy.value)(v3)(v1));
                                    });
                                };
                                if (v2 instanceof Data_Maybe.Nothing) {
                                    return Data_Either.Left.create("JSON was missing expected field: " + fieldName);
                                };
                                throw new Error("Failed pattern match at Data.Argonaut.Decode.Class (line 155, column 5 - line 161, column 55): " + [ v2.constructor.name ]);
                            });
                        };
                    });
                };
            };
        };
    };
};
var decodeJObject = function ($63) {
    return Data_Maybe.maybe(new Data_Either.Left("Value is not an Object"))(Data_Either.Right.create)(Data_Argonaut_Core.toObject($63));
};
var decodeJsonEither = function (dictDecodeJson) {
    return function (dictDecodeJson1) {
        return new DecodeJson(function (json) {
            return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
                return "Couldn't decode Either: " + v;
            })(Control_Bind.bind(Data_Either.bindEither)(decodeJObject(json))(function (obj) {
                return Control_Bind.bind(Data_Either.bindEither)(Data_Maybe.maybe(new Data_Either.Left("Expected field 'tag'"))(Data_Either.Right.create)(Foreign_Object.lookup("tag")(obj)))(function (v) {
                    return Control_Bind.bind(Data_Either.bindEither)(Data_Maybe.maybe(new Data_Either.Left("Expected field 'value'"))(Data_Either.Right.create)(Foreign_Object.lookup("value")(obj)))(function (v1) {
                        var v2 = Data_Argonaut_Core.toString(v);
                        if (v2 instanceof Data_Maybe.Just && v2.value0 === "Right") {
                            return Data_Functor.map(Data_Either.functorEither)(Data_Either.Right.create)(decodeJson(dictDecodeJson1)(v1));
                        };
                        if (v2 instanceof Data_Maybe.Just && v2.value0 === "Left") {
                            return Data_Functor.map(Data_Either.functorEither)(Data_Either.Left.create)(decodeJson(dictDecodeJson)(v1));
                        };
                        return new Data_Either.Left("'tag' field was not \"Left\" or \"Right\"");
                    });
                });
            }));
        });
    };
};
var decodeJArray = function ($64) {
    return Data_Maybe.maybe(new Data_Either.Left("Value is not an Array"))(Data_Either.Right.create)(Data_Argonaut_Core.toArray($64));
};
var decodeJsonNonEmptyArray = function (dictDecodeJson) {
    return new DecodeJson(function ($65) {
        return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
            return "Couldn't decode NonEmpty Array: " + v;
        })(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Data_NonEmpty.traversableNonEmpty(Data_Traversable.traversableArray))(Data_Either.applicativeEither)(decodeJson(dictDecodeJson)))(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(function ($66) {
            return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
                return "JSON Array" + v;
            })(Data_Bifunctor.rmap(Data_Either.bifunctorEither)(function (x) {
                return new Data_NonEmpty.NonEmpty(x.head, x.tail);
            })(Data_Either.note(" is empty")(Data_Array.uncons($66))));
        })(decodeJArray))($65));
    });
};
var decodeJsonNonEmptyList = function (dictDecodeJson) {
    return new DecodeJson(function ($67) {
        return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
            return "Couldn't decode NonEmpty List: " + v;
        })(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Data_NonEmpty.traversableNonEmpty(Data_List_Types.traversableList))(Data_Either.applicativeEither)(decodeJson(dictDecodeJson)))(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(function ($68) {
            return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
                return "JSON Array" + v;
            })(Data_Bifunctor.rmap(Data_Either.bifunctorEither)(function (x) {
                return new Data_NonEmpty.NonEmpty(x.head, x.tail);
            })(Data_Either.note(" is empty")(Data_List.uncons($68))));
        })(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Either.functorEither)(Data_List.fromFoldable(Data_Foldable.foldableArray)))(decodeJArray)))($67));
    });
};
var decodeList = function (dictDecodeJson) {
    return new DecodeJson(function ($69) {
        return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
            return "Couldn't decode List: " + v;
        })(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Data_List_Types.traversableList)(Data_Either.applicativeEither)(decodeJson(dictDecodeJson)))(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Either.functorEither)(Data_List.fromFoldable(Data_Foldable.foldableArray)))(decodeJArray))($69));
    });
};
var decodeJsonTuple = function (dictDecodeJson) {
    return function (dictDecodeJson1) {
        return new DecodeJson(function (j) {
            var f = function (v) {
                if (v instanceof Data_List_Types.Cons && (v.value1 instanceof Data_List_Types.Cons && v.value1.value1 instanceof Data_List_Types.Nil)) {
                    return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Data_Tuple.Tuple.create)(decodeJson(dictDecodeJson)(v.value0)))(decodeJson(dictDecodeJson1)(v.value1.value0));
                };
                return new Data_Either.Left("Couldn't decode Tuple");
            };
            return Control_Bind.bind(Data_Either.bindEither)(decodeJson(decodeList(decodeJsonJson))(j))(f);
        });
    };
};
var decodeMap = function (dictOrd) {
    return function (dictDecodeJson) {
        return function (dictDecodeJson1) {
            return new DecodeJson(function ($70) {
                return Data_Functor.map(Data_Either.functorEither)(Data_Map_Internal.fromFoldable(dictOrd)(Data_List_Types.foldableList))(decodeJson(decodeList(decodeJsonTuple(dictDecodeJson)(dictDecodeJson1)))($70));
            });
        };
    };
};
var decodeSet = function (dictOrd) {
    return function (dictDecodeJson) {
        return new DecodeJson(function ($71) {
            return Data_Functor.map(Data_Either.functorEither)(Data_Set.fromFoldable(Data_List_Types.foldableList)(dictOrd))(decodeJson(decodeList(dictDecodeJson))($71));
        });
    };
};
var decodeForeignObject = function (dictDecodeJson) {
    return new DecodeJson(function ($72) {
        return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
            return "Couldn't decode ForeignObject: " + v;
        })(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Foreign_Object.traversableObject)(Data_Either.applicativeEither)(decodeJson(dictDecodeJson)))(decodeJObject)($72));
    });
};
var decodeArray = function (dictDecodeJson) {
    return new DecodeJson((function () {
        var msg = function (i) {
            return function (m) {
                return "Failed at index " + (Data_Show.show(Data_Show.showInt)(i) + ("): " + m));
            };
        };
        var f = function (i) {
            return function ($73) {
                return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(msg(i))(decodeJson(dictDecodeJson)($73));
            };
        };
        return function ($74) {
            return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
                return "Couldn't decode Array (" + v;
            })(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_TraversableWithIndex.traverseWithIndex(Data_TraversableWithIndex.traversableWithIndexArray)(Data_Either.applicativeEither)(f))(decodeJArray)($74));
        };
    })());
};
module.exports = {
    decodeJson: decodeJson,
    gDecodeJson: gDecodeJson,
    DecodeJson: DecodeJson,
    decodeJArray: decodeJArray,
    decodeJObject: decodeJObject,
    GDecodeJson: GDecodeJson,
    decodeJsonMaybe: decodeJsonMaybe,
    decodeJsonTuple: decodeJsonTuple,
    decodeJsonEither: decodeJsonEither,
    decodeJsonNull: decodeJsonNull,
    decodeJsonBoolean: decodeJsonBoolean,
    decodeJsonNumber: decodeJsonNumber,
    decodeJsonInt: decodeJsonInt,
    decodeJsonString: decodeJsonString,
    decodeJsonJson: decodeJsonJson,
    decodeJsonNonEmptyArray: decodeJsonNonEmptyArray,
    decodeJsonNonEmptyList: decodeJsonNonEmptyList,
    decodeJsonChar: decodeJsonChar,
    decodeForeignObject: decodeForeignObject,
    decodeArray: decodeArray,
    decodeList: decodeList,
    decodeSet: decodeSet,
    decodeMap: decodeMap,
    decodeVoid: decodeVoid,
    decodeRecord: decodeRecord,
    gDecodeJsonNil: gDecodeJsonNil,
    gDecodeJsonCons: gDecodeJsonCons
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Semigroupoid/index.js":61,"../Data.Argonaut.Core/index.js":78,"../Data.Array/index.js":99,"../Data.Bifunctor/index.js":106,"../Data.Boolean/index.js":110,"../Data.Either/index.js":131,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Int/index.js":167,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Map.Internal/index.js":206,"../Data.Map/index.js":207,"../Data.Maybe/index.js":210,"../Data.NonEmpty/index.js":221,"../Data.Semigroup/index.js":248,"../Data.Set/index.js":252,"../Data.Show/index.js":254,"../Data.String.CodePoints/index.js":256,"../Data.String/index.js":272,"../Data.Symbol/index.js":274,"../Data.Traversable/index.js":281,"../Data.TraversableWithIndex/index.js":282,"../Data.Tuple/index.js":283,"../Data.Unit/index.js":289,"../Foreign.Object/index.js":318,"../Prelude/index.js":385,"../Record/index.js":391,"../Type.Data.RowList/index.js":418}],80:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");
var Data_Argonaut_Decode_Class = require("../Data.Argonaut.Decode.Class/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Foreign_Object = require("../Foreign.Object/index.js");
var Prelude = require("../Prelude/index.js");
var elaborateFailure = function (s) {
    return function (e) {
        var msg = function (m) {
            return "Failed to decode key '" + (s + ("': " + m));
        };
        return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(msg)(e);
    };
};
var getField = function (dictDecodeJson) {
    return function (o) {
        return function (s) {
            return Data_Maybe.maybe(Data_Either.Left.create("Expected field " + Data_Show.show(Data_Show.showString)(s)))(function ($9) {
                return elaborateFailure(s)(Data_Argonaut_Decode_Class.decodeJson(dictDecodeJson)($9));
            })(Foreign_Object.lookup(s)(o));
        };
    };
};
var getFieldDeprecated = function (dictWarn) {
    return function (dictDecodeJson) {
        return getField(dictDecodeJson);
    };
};
var getFieldOptional = function (dictDecodeJson) {
    return function (o) {
        return function (s) {
            var decode = function (json) {
                return Data_Functor.map(Data_Either.functorEither)(Data_Maybe.Just.create)(elaborateFailure(s)(Data_Argonaut_Decode_Class.decodeJson(dictDecodeJson)(json)));
            };
            return Data_Maybe.maybe(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value))(decode)(Foreign_Object.lookup(s)(o));
        };
    };
};
var getFieldOptionalDeprecated = function (dictWarn) {
    return function (dictDecodeJson) {
        return getFieldOptional(dictDecodeJson);
    };
};
var getFieldOptional$prime = function (dictDecodeJson) {
    return function (o) {
        return function (s) {
            var decode = function (json) {
                var $8 = Data_Argonaut_Core.isNull(json);
                if ($8) {
                    return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
                };
                return Data_Functor.map(Data_Either.functorEither)(Data_Maybe.Just.create)(elaborateFailure(s)(Data_Argonaut_Decode_Class.decodeJson(dictDecodeJson)(json)));
            };
            return Data_Maybe.maybe(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value))(decode)(Foreign_Object.lookup(s)(o));
        };
    };
};
var defaultField = function (parser) {
    return function ($$default) {
        return Data_Functor.map(Data_Either.functorEither)(Data_Maybe.fromMaybe($$default))(parser);
    };
};
var defaultFieldDeprecated = function (dictWarn) {
    return defaultField;
};
module.exports = {
    getField: getField,
    getFieldDeprecated: getFieldDeprecated,
    getFieldOptional: getFieldOptional,
    getFieldOptionalDeprecated: getFieldOptionalDeprecated,
    "getFieldOptional'": getFieldOptional$prime,
    defaultField: defaultField,
    defaultFieldDeprecated: defaultFieldDeprecated
};

},{"../Control.Applicative/index.js":7,"../Control.Semigroupoid/index.js":61,"../Data.Argonaut.Core/index.js":78,"../Data.Argonaut.Decode.Class/index.js":79,"../Data.Bifunctor/index.js":106,"../Data.Either/index.js":131,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Foreign.Object/index.js":318,"../Prelude/index.js":385}],81:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Argonaut_Decode_Class = require("../Data.Argonaut.Decode.Class/index.js");
var Data_Argonaut_Decode_Combinators = require("../Data.Argonaut.Decode.Combinators/index.js");
module.exports = {};

},{"../Data.Argonaut.Decode.Class/index.js":79,"../Data.Argonaut.Decode.Combinators/index.js":80}],82:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Map = require("../Data.Map/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_NonEmpty = require("../Data.NonEmpty/index.js");
var Data_Set = require("../Data.Set/index.js");
var Data_String = require("../Data.String/index.js");
var Data_String_CodePoints = require("../Data.String.CodePoints/index.js");
var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Void = require("../Data.Void/index.js");
var Foreign_Object = require("../Foreign.Object/index.js");
var Prelude = require("../Prelude/index.js");
var Record = require("../Record/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var EncodeJson = function (encodeJson) {
    this.encodeJson = encodeJson;
};
var GEncodeJson = function (gEncodeJson) {
    this.gEncodeJson = gEncodeJson;
};
var gEncodeJsonNil = new GEncodeJson(function (v) {
    return function (v1) {
        return Foreign_Object.empty;
    };
});
var gEncodeJson = function (dict) {
    return dict.gEncodeJson;
};
var encodeVoid = new EncodeJson(Data_Void.absurd);
var encodeRecord = function (dictGEncodeJson) {
    return function (dictRowToList) {
        return new EncodeJson(function (rec) {
            return Data_Argonaut_Core.fromObject(gEncodeJson(dictGEncodeJson)(rec)(Type_Data_RowList.RLProxy.value));
        });
    };
};
var encodeJsonUnit = new EncodeJson(Data_Function["const"](Data_Argonaut_Core.jsonNull));
var encodeJsonJson = new EncodeJson(Control_Category.identity(Control_Category.categoryFn));
var encodeJsonJString = new EncodeJson(Data_Argonaut_Core.fromString);
var encodeJsonJNumber = new EncodeJson(Data_Argonaut_Core.fromNumber);
var encodeJsonJBoolean = new EncodeJson(Data_Argonaut_Core.fromBoolean);
var encodeJsonInt = new EncodeJson(function ($40) {
    return Data_Argonaut_Core.fromNumber(Data_Int.toNumber($40));
});
var encodeJson = function (dict) {
    return dict.encodeJson;
};
var encodeJsonArray = function (dictEncodeJson) {
    return new EncodeJson(function (json) {
        return Data_Argonaut_Core.fromArray(Data_Functor.map(Data_Functor.functorArray)(encodeJson(dictEncodeJson))(json));
    });
};
var encodeJsonChar = new EncodeJson(function ($41) {
    return encodeJson(encodeJsonJString)(Data_String_CodeUnits.singleton($41));
});
var encodeJsonCodePoint = new EncodeJson(function ($42) {
    return encodeJson(encodeJsonJString)(Data_String_CodePoints.singleton($42));
});
var encodeJsonEither = function (dictEncodeJson) {
    return function (dictEncodeJson1) {
        return new EncodeJson((function () {
            var obj = function (dictEncodeJson2) {
                return function (tag) {
                    return function (x) {
                        return Data_Argonaut_Core.fromObject(Foreign_Object.fromFoldable(Data_List_Types.foldableList)(new Data_List_Types.Cons(new Data_Tuple.Tuple("tag", Data_Argonaut_Core.fromString(tag)), new Data_List_Types.Cons(new Data_Tuple.Tuple("value", encodeJson(dictEncodeJson2)(x)), Data_List_Types.Nil.value))));
                    };
                };
            };
            return Data_Either.either(obj(dictEncodeJson)("Left"))(obj(dictEncodeJson1)("Right"));
        })());
    };
};
var encodeJsonList = function (dictEncodeJson) {
    return new EncodeJson(function ($43) {
        return Data_Argonaut_Core.fromArray(Data_Functor.map(Data_Functor.functorArray)(encodeJson(dictEncodeJson))(Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray)($43)));
    });
};
var encodeJsonMaybe = function (dictEncodeJson) {
    return new EncodeJson(function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Data_Argonaut_Core.jsonNull;
        };
        if (v instanceof Data_Maybe.Just) {
            return encodeJson(dictEncodeJson)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Argonaut.Encode.Class (line 29, column 1 - line 29, column 65): " + [ v.constructor.name ]);
    });
};
var encodeJsonNonEmptyArray = function (dictEncodeJson) {
    return new EncodeJson(function (v) {
        return encodeJson(encodeJsonArray(dictEncodeJson))(Data_Array.cons(v.value0)(v.value1));
    });
};
var encodeJsonNonEmptyList = function (dictEncodeJson) {
    return new EncodeJson(function (v) {
        return encodeJson(encodeJsonMaybe(encodeJsonList(dictEncodeJson)))(Data_List.insertAt(0)(v.value0)(v.value1));
    });
};
var encodeJsonTuple = function (dictEncodeJson) {
    return function (dictEncodeJson1) {
        return new EncodeJson(function (v) {
            return encodeJson(encodeJsonArray(encodeJsonJson))([ encodeJson(dictEncodeJson)(v.value0), encodeJson(dictEncodeJson1)(v.value1) ]);
        });
    };
};
var encodeMap = function (dictOrd) {
    return function (dictEncodeJson) {
        return function (dictEncodeJson1) {
            return new EncodeJson(function ($44) {
                return encodeJson(encodeJsonList(encodeJsonTuple(dictEncodeJson)(dictEncodeJson1)))(Data_Map_Internal.toUnfoldable(Data_List_Types.unfoldableList)($44));
            });
        };
    };
};
var encodeSet = function (dictOrd) {
    return function (dictEncodeJson) {
        return new EncodeJson(function ($45) {
            return encodeJson(encodeJsonList(dictEncodeJson))(Data_Set.toUnfoldable(Data_List_Types.unfoldableList)($45));
        });
    };
};
var gEncodeJsonCons = function (dictEncodeJson) {
    return function (dictGEncodeJson) {
        return function (dictIsSymbol) {
            return function (dictCons) {
                return new GEncodeJson(function (row) {
                    return function (v) {
                        return Foreign_Object.insert(Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value))(encodeJson(dictEncodeJson)(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(row)))(gEncodeJson(dictGEncodeJson)(row)(Type_Data_RowList.RLProxy.value));
                    };
                });
            };
        };
    };
};
var encodeForeignObject = function (dictEncodeJson) {
    return new EncodeJson(function ($46) {
        return Data_Argonaut_Core.fromObject(Data_Functor.map(Foreign_Object.functorObject)(encodeJson(dictEncodeJson))($46));
    });
};
module.exports = {
    encodeJson: encodeJson,
    gEncodeJson: gEncodeJson,
    EncodeJson: EncodeJson,
    GEncodeJson: GEncodeJson,
    encodeJsonMaybe: encodeJsonMaybe,
    encodeJsonTuple: encodeJsonTuple,
    encodeJsonEither: encodeJsonEither,
    encodeJsonUnit: encodeJsonUnit,
    encodeJsonJBoolean: encodeJsonJBoolean,
    encodeJsonJNumber: encodeJsonJNumber,
    encodeJsonInt: encodeJsonInt,
    encodeJsonJString: encodeJsonJString,
    encodeJsonJson: encodeJsonJson,
    encodeJsonCodePoint: encodeJsonCodePoint,
    encodeJsonNonEmptyArray: encodeJsonNonEmptyArray,
    encodeJsonNonEmptyList: encodeJsonNonEmptyList,
    encodeJsonChar: encodeJsonChar,
    encodeJsonArray: encodeJsonArray,
    encodeJsonList: encodeJsonList,
    encodeForeignObject: encodeForeignObject,
    encodeSet: encodeSet,
    encodeMap: encodeMap,
    encodeVoid: encodeVoid,
    encodeRecord: encodeRecord,
    gEncodeJsonNil: gEncodeJsonNil,
    gEncodeJsonCons: gEncodeJsonCons
};

},{"../Control.Category/index.js":14,"../Control.Semigroupoid/index.js":61,"../Data.Argonaut.Core/index.js":78,"../Data.Array/index.js":99,"../Data.Either/index.js":131,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Int/index.js":167,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Map.Internal/index.js":206,"../Data.Map/index.js":207,"../Data.Maybe/index.js":210,"../Data.NonEmpty/index.js":221,"../Data.Set/index.js":252,"../Data.String.CodePoints/index.js":256,"../Data.String.CodeUnits/index.js":258,"../Data.String/index.js":272,"../Data.Symbol/index.js":274,"../Data.Tuple/index.js":283,"../Data.Unfoldable/index.js":285,"../Data.Void/index.js":291,"../Foreign.Object/index.js":318,"../Prelude/index.js":385,"../Record/index.js":391,"../Type.Data.RowList/index.js":418}],83:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");
var Data_Argonaut_Encode_Class = require("../Data.Argonaut.Encode.Class/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Foreign_Object = require("../Foreign.Object/index.js");
var Prelude = require("../Prelude/index.js");
var extend = function (dictEncodeJson) {
    return function (v) {
        return function ($11) {
            return Data_Argonaut_Core.caseJsonObject(Data_Argonaut_Core.jsonSingletonObject(v.value0)(v.value1))(function ($12) {
                return Data_Argonaut_Core.fromObject(Foreign_Object.insert(v.value0)(v.value1)($12));
            })(Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson)($11));
        };
    };
};
var extendOptional = function (dictEncodeJson) {
    return function (v) {
        if (v instanceof Data_Maybe.Just) {
            return extend(dictEncodeJson)(v.value0);
        };
        if (v instanceof Data_Maybe.Nothing) {
            return Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson);
        };
        throw new Error("Failed pattern match at Data.Argonaut.Encode.Combinators (line 54, column 1 - line 54, column 83): " + [ v.constructor.name ]);
    };
};
var assoc = function (dictEncodeJson) {
    return function (k) {
        return function ($13) {
            return Data_Tuple.Tuple.create(k)(Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson)($13));
        };
    };
};
var assocOptional = function (dictEncodeJson) {
    return function (k) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function ($14) {
            return assoc(Data_Argonaut_Encode_Class.encodeJsonJson)(k)(Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson)($14));
        });
    };
};
module.exports = {
    assoc: assoc,
    assocOptional: assocOptional,
    extend: extend,
    extendOptional: extendOptional
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Argonaut.Core/index.js":78,"../Data.Argonaut.Encode.Class/index.js":82,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Tuple/index.js":283,"../Foreign.Object/index.js":318,"../Prelude/index.js":385}],84:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Argonaut_Encode_Class = require("../Data.Argonaut.Encode.Class/index.js");
var Data_Argonaut_Encode_Combinators = require("../Data.Argonaut.Encode.Combinators/index.js");
module.exports = {};

},{"../Data.Argonaut.Encode.Class/index.js":82,"../Data.Argonaut.Encode.Combinators/index.js":83}],85:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");
var Data_Argonaut_Decode = require("../Data.Argonaut.Decode/index.js");
var Data_Argonaut_Decode_Class = require("../Data.Argonaut.Decode.Class/index.js");
var Data_Argonaut_Encode = require("../Data.Argonaut.Encode/index.js");
var Data_Argonaut_Encode_Class = require("../Data.Argonaut.Encode.Class/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Foreign_Object = require("../Foreign.Object/index.js");
var Prelude = require("../Prelude/index.js");
var JsonPrim = function (x) {
    return x;
};
var JCursorTop = (function () {
    function JCursorTop() {

    };
    JCursorTop.value = new JCursorTop();
    return JCursorTop;
})();
var JField = (function () {
    function JField(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    JField.create = function (value0) {
        return function (value1) {
            return new JField(value0, value1);
        };
    };
    return JField;
})();
var JIndex = (function () {
    function JIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    JIndex.create = function (value0) {
        return function (value1) {
            return new JIndex(value0, value1);
        };
    };
    return JIndex;
})();
var showJCursor = new Data_Show.Show(function (v) {
    if (v instanceof JCursorTop) {
        return "JCursorTop";
    };
    if (v instanceof JField) {
        return "(JField " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showJCursor)(v.value1) + ")")));
    };
    if (v instanceof JIndex) {
        return "(JIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showJCursor)(v.value1) + ")")));
    };
    throw new Error("Failed pattern match at Data.Argonaut.JCursor (line 26, column 1 - line 26, column 37): " + [ v.constructor.name ]);
});
var semigroupJCursor = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        if (v1 instanceof JCursorTop) {
            return v;
        };
        if (v instanceof JCursorTop) {
            return v1;
        };
        if (v instanceof JField) {
            return new JField(v.value0, Data_Semigroup.append(semigroupJCursor)(v.value1)(v1));
        };
        if (v instanceof JIndex) {
            return new JIndex(v.value0, Data_Semigroup.append(semigroupJCursor)(v.value1)(v1));
        };
        throw new Error("Failed pattern match at Data.Argonaut.JCursor (line 36, column 1 - line 36, column 47): " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var runJsonPrim = function (v) {
    return v;
};
var showJsonPrim = new Data_Show.Show(function (p) {
    return runJsonPrim(p)(Data_Show.show(Data_Unit.showUnit))(Data_Show.show(Data_Show.showBoolean))(Data_Show.show(Data_Show.showNumber))(Data_Show.show(Data_Show.showString));
});
var print = function (v) {
    if (v instanceof JCursorTop) {
        return "";
    };
    if (v instanceof JField) {
        return "." + (v.value0 + Data_Show.show(showJCursor)(v.value1));
    };
    if (v instanceof JIndex) {
        return "[" + (Data_Show.show(Data_Show.showInt)(v.value0) + ("]" + Data_Show.show(showJCursor)(v.value1)));
    };
    throw new Error("Failed pattern match at Data.Argonaut.JCursor (line 31, column 1 - line 31, column 27): " + [ v.constructor.name ]);
};
var primToJson = function (p) {
    return runJsonPrim(p)(Data_Function["const"](Data_Argonaut_Core.jsonNull))(Data_Argonaut_Core.fromBoolean)(Data_Argonaut_Core.fromNumber)(Data_Argonaut_Core.fromString);
};
var primStr = function (v) {
    return function (v1) {
        return function (v2) {
            return function (v3) {
                return function (f) {
                    return f(v);
                };
            };
        };
    };
};
var primNum = function (v) {
    return function (v1) {
        return function (v2) {
            return function (f) {
                return function (v3) {
                    return f(v);
                };
            };
        };
    };
};
var primNull = function (f) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                return f(Data_Unit.unit);
            };
        };
    };
};
var primBool = function (v) {
    return function (v1) {
        return function (f) {
            return function (v2) {
                return function (v3) {
                    return f(v);
                };
            };
        };
    };
};
var toPrims = (function () {
    var objFn = function (obj) {
        var f = function (v) {
            return Data_Functor.map(Data_List_Types.functorList)(function (t) {
                return new Data_Tuple.Tuple(new JField(v.value0, Data_Tuple.fst(t)), Data_Tuple.snd(t));
            })(toPrims(v.value1));
        };
        return Control_Bind.bind(Data_List_Types.bindList)(Foreign_Object.toUnfoldable(Data_List_Types.unfoldableList)(obj))(f);
    };
    var mkTop = function (p) {
        return Data_List.singleton(new Data_Tuple.Tuple(JCursorTop.value, p));
    };
    var nullFn = function (v) {
        return mkTop(primNull);
    };
    var numFn = function (n) {
        return mkTop(primNum(n));
    };
    var strFn = function (s) {
        return mkTop(primStr(s));
    };
    var boolFn = function (b) {
        return mkTop(primBool(b));
    };
    var arrFn$prime = function (v) {
        return Data_List.fromFoldable(Data_List_Types.foldableList)(Data_Functor.map(Data_List_Types.functorList)(function (t) {
            return new Data_Tuple.Tuple(new JIndex(v.value0, Data_Tuple.fst(t)), Data_Tuple.snd(t));
        })(toPrims(v.value1)));
    };
    var arrFn = function (arr) {
        var zipped = Data_List.zipWith(Data_Tuple.Tuple.create)(Data_List.range(0)(Data_Array.length(arr) - 1 | 0))(Data_List.fromFoldable(Data_Foldable.foldableArray)(arr));
        return Control_Bind.bind(Data_List_Types.bindList)(zipped)(arrFn$prime);
    };
    return Data_Argonaut_Core.caseJson(nullFn)(boolFn)(numFn)(strFn)(arrFn)(objFn);
})();
var monoidJCursor = new Data_Monoid.Monoid(function () {
    return semigroupJCursor;
}, JCursorTop.value);
var inferEmpty = function (v) {
    if (v instanceof JCursorTop) {
        return Data_Argonaut_Core.jsonNull;
    };
    if (v instanceof JField) {
        return Data_Argonaut_Core.jsonEmptyObject;
    };
    if (v instanceof JIndex) {
        return Data_Argonaut_Core.jsonEmptyArray;
    };
    throw new Error("Failed pattern match at Data.Argonaut.JCursor (line 109, column 1 - line 109, column 32): " + [ v.constructor.name ]);
};
var fail = function (dictShow) {
    return function (x) {
        return Data_Either.Left.create("Expected String or Number but found: " + Data_Show.show(dictShow)(x));
    };
};
var eqJCursor = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof JCursorTop && y instanceof JCursorTop) {
            return true;
        };
        if (x instanceof JField && y instanceof JField) {
            return x.value0 === y.value0 && Data_Eq.eq(eqJCursor)(x.value1)(y.value1);
        };
        if (x instanceof JIndex && y instanceof JIndex) {
            return x.value0 === y.value0 && Data_Eq.eq(eqJCursor)(x.value1)(y.value1);
        };
        return false;
    };
});
var ordJCursor = new Data_Ord.Ord(function () {
    return eqJCursor;
}, function (x) {
    return function (y) {
        if (x instanceof JCursorTop && y instanceof JCursorTop) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof JCursorTop) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof JCursorTop) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof JField && y instanceof JField) {
            var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(ordJCursor)(x.value1)(y.value1);
        };
        if (x instanceof JField) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof JField) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof JIndex && y instanceof JIndex) {
            var v = Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(ordJCursor)(x.value1)(y.value1);
        };
        throw new Error("Failed pattern match at Data.Argonaut.JCursor (line 24, column 8 - line 24, column 42): " + [ x.constructor.name, y.constructor.name ]);
    };
});
var encodeJsonJCursor = new Data_Argonaut_Encode_Class.EncodeJson((function () {
    var loop = function (v) {
        if (v instanceof JCursorTop) {
            return [  ];
        };
        if (v instanceof JField) {
            return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(v.value0) ])(loop(v.value1));
        };
        if (v instanceof JIndex) {
            return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonInt)(v.value0) ])(loop(v.value1));
        };
        throw new Error("Failed pattern match at Data.Argonaut.JCursor (line 47, column 5 - line 47, column 25): " + [ v.constructor.name ]);
    };
    return function ($151) {
        return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonArray(Data_Argonaut_Encode_Class.encodeJsonJson))(loop($151));
    };
})());
var downIndex = function (i) {
    var downIndex$prime = function (v) {
        if (v instanceof JCursorTop) {
            return new JIndex(i, JCursorTop.value);
        };
        if (v instanceof JField) {
            return new JField(v.value0, downIndex$prime(v.value1));
        };
        if (v instanceof JIndex) {
            return new JIndex(v.value0, downIndex$prime(v.value1));
        };
        throw new Error("Failed pattern match at Data.Argonaut.JCursor (line 100, column 3 - line 100, column 46): " + [ v.constructor.name ]);
    };
    return downIndex$prime;
};
var downField = function (i) {
    var downField$prime = function (v) {
        if (v instanceof JCursorTop) {
            return new JField(i, JCursorTop.value);
        };
        if (v instanceof JField) {
            return new JField(v.value0, downField$prime(v.value1));
        };
        if (v instanceof JIndex) {
            return new JIndex(v.value0, downField$prime(v.value1));
        };
        throw new Error("Failed pattern match at Data.Argonaut.JCursor (line 94, column 3 - line 94, column 46): " + [ v.constructor.name ]);
    };
    return downField$prime;
};
var insideOut = function (v) {
    if (v instanceof JCursorTop) {
        return JCursorTop.value;
    };
    if (v instanceof JField) {
        return downField(v.value0)(insideOut(v.value1));
    };
    if (v instanceof JIndex) {
        return downIndex(v.value0)(insideOut(v.value1));
    };
    throw new Error("Failed pattern match at Data.Argonaut.JCursor (line 87, column 1 - line 87, column 32): " + [ v.constructor.name ]);
};
var decodeJsonJCursor = new Data_Argonaut_Decode_Class.DecodeJson(function (j) {
    var goNum = function (c) {
        return function ($152) {
            return Data_Maybe.maybe(new Data_Either.Left("Not an Int"))(function ($153) {
                return Data_Either.Right.create(Data_Function.flip(JIndex.create)(c)($153));
            })(Data_Int.fromNumber($152));
        };
    };
    var loop = function (arr) {
        return Data_Maybe.maybe(new Data_Either.Right(JCursorTop.value))(goLoop)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(Data_Array.head(arr)))(Data_Array.tail(arr)));
    };
    var goLoop = function (v) {
        return Control_Bind.bind(Data_Either.bindEither)(loop(v.value1))(function (v1) {
            return Data_Argonaut_Core.caseJson(fail(Data_Unit.showUnit))(fail(Data_Show.showBoolean))(goNum(v1))(function ($154) {
                return Data_Either.Right.create(Data_Function.flip(JField.create)(v1)($154));
            })(function ($155) {
                return fail(Data_Show.showArray(Data_Show.showString))(Data_Functor.map(Data_Functor.functorArray)(Data_Argonaut_Core.stringify)($155));
            })(function ($156) {
                return fail(Foreign_Object.showObject(Data_Show.showString))(Data_Functor.map(Foreign_Object.functorObject)(Data_Argonaut_Core.stringify)($156));
            })(v.value0);
        });
    };
    return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonJson))(j))(loop);
});
var cursorSet = function (v) {
    return function (v1) {
        if (v instanceof JCursorTop) {
            return function ($157) {
                return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Function["const"](v1)($157));
            };
        };
        if (v instanceof JField) {
            var mergeObjs = function (m) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function ($158) {
                    return Data_Argonaut_Core.fromObject(Data_Function.flip(Foreign_Object.insert(v.value0))(m)($158));
                })(cursorSet(v.value1)(v1)(Data_Maybe.fromMaybe(inferEmpty(v.value1))(Foreign_Object.lookup(v.value0)(m))));
            };
            var defaultObj = Data_Functor.map(Data_Maybe.functorMaybe)(function ($159) {
                return Data_Argonaut_Core.fromObject(Foreign_Object.singleton(v.value0)($159));
            })(cursorSet(v.value1)(v1)(inferEmpty(v.value1)));
            return Data_Argonaut_Core.caseJsonObject(defaultObj)(mergeObjs);
        };
        if (v instanceof JIndex) {
            var setArr = function ($copy_xs) {
                return function ($copy_i$prime) {
                    return function ($copy_v$prime) {
                        var $tco_var_xs = $copy_xs;
                        var $tco_var_i$prime = $copy_i$prime;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(xs, i$prime, v$prime) {
                            var len = Data_Array.length(xs);
                            var $138 = i$prime < 0;
                            if ($138) {
                                $tco_done = true;
                                return Data_Maybe.Nothing.value;
                            };
                            var $139 = i$prime >= len;
                            if ($139) {
                                $tco_var_xs = Data_Semigroup.append(Data_Semigroup.semigroupArray)(xs)(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)((i$prime - len | 0) + 1 | 0)(Data_Argonaut_Core.jsonNull));
                                $tco_var_i$prime = i$prime;
                                $copy_v$prime = v$prime;
                                return;
                            };
                            $tco_done = true;
                            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Argonaut_Core.fromArray)(Data_Array.updateAt(i$prime)(v$prime)(xs));
                        };
                        while (!$tco_done) {
                            $tco_result = $tco_loop($tco_var_xs, $tco_var_i$prime, $copy_v$prime);
                        };
                        return $tco_result;
                    };
                };
            };
            var mergeArrs = function (a) {
                return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(setArr(a)(v.value0))(cursorSet(v.value1)(v1)(Data_Maybe.fromMaybe(inferEmpty(v.value1))(Data_Array.index(a)(v.value0))));
            };
            var defaultArr = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Argonaut_Core.fromArray)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Function.flip(Data_Array.updateAt(v.value0))(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(v.value0 + 1 | 0)(Data_Argonaut_Core.jsonNull)))(cursorSet(v.value1)(v1)(inferEmpty(v.value1))));
            return Data_Argonaut_Core.caseJsonArray(defaultArr)(mergeArrs);
        };
        throw new Error("Failed pattern match at Data.Argonaut.JCursor (line 114, column 1 - line 114, column 57): " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var fromPrims = function (lst) {
    var f = function (j) {
        return function (v) {
            return Control_Bind.bind(Data_Maybe.bindMaybe)(j)(cursorSet(v.value0)(primToJson(v.value1)));
        };
    };
    return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(Data_Functor.map(Data_Maybe.functorMaybe)(function ($160) {
        return inferEmpty(Data_Tuple.fst($160));
    })(Data_List.head(lst)))(lst);
};
var cursorGet = function (v) {
    if (v instanceof JCursorTop) {
        return Data_Maybe.Just.create;
    };
    if (v instanceof JField) {
        return Data_Argonaut_Core.caseJsonObject(Data_Maybe.Nothing.value)(Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(cursorGet(v.value1))(Foreign_Object.lookup(v.value0)));
    };
    if (v instanceof JIndex) {
        return Data_Argonaut_Core.caseJsonArray(Data_Maybe.Nothing.value)(Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(cursorGet(v.value1))(function (v1) {
            return Data_Array.index(v1)(v.value0);
        }));
    };
    throw new Error("Failed pattern match at Data.Argonaut.JCursor (line 104, column 1 - line 104, column 47): " + [ v.constructor.name ]);
};
module.exports = {
    JCursorTop: JCursorTop,
    JField: JField,
    JIndex: JIndex,
    print: print,
    JsonPrim: JsonPrim,
    runJsonPrim: runJsonPrim,
    primNull: primNull,
    primBool: primBool,
    primNum: primNum,
    primStr: primStr,
    primToJson: primToJson,
    insideOut: insideOut,
    downField: downField,
    downIndex: downIndex,
    cursorGet: cursorGet,
    inferEmpty: inferEmpty,
    cursorSet: cursorSet,
    toPrims: toPrims,
    fromPrims: fromPrims,
    fail: fail,
    eqJCursor: eqJCursor,
    ordJCursor: ordJCursor,
    showJCursor: showJCursor,
    semigroupJCursor: semigroupJCursor,
    monoidJCursor: monoidJCursor,
    encodeJsonJCursor: encodeJsonJCursor,
    showJsonPrim: showJsonPrim,
    decodeJsonJCursor: decodeJsonJCursor
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Semigroupoid/index.js":61,"../Data.Argonaut.Core/index.js":78,"../Data.Argonaut.Decode.Class/index.js":79,"../Data.Argonaut.Decode/index.js":81,"../Data.Argonaut.Encode.Class/index.js":82,"../Data.Argonaut.Encode/index.js":84,"../Data.Array/index.js":99,"../Data.Either/index.js":131,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Int/index.js":167,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.Tuple/index.js":283,"../Data.Unfoldable/index.js":285,"../Data.Unit/index.js":289,"../Foreign.Object/index.js":318,"../Prelude/index.js":385}],86:[function(require,module,exports){
"use strict";

exports._jsonParser = function (fail, succ, s) {
  try {
    return succ(JSON.parse(s));
  }
  catch (e) {
    return fail(e.message);
  }
};

},{}],87:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");
var jsonParser = function (j) {
    return $foreign["_jsonParser"](Data_Either.Left.create, Data_Either.Right.create, j);
};
module.exports = {
    jsonParser: jsonParser
};

},{"../Data.Argonaut.Core/index.js":78,"../Data.Either/index.js":131,"../Data.Function.Uncurried/index.js":144,"./foreign.js":86}],88:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Lens = require("../Data.Lens/index.js");
var Data_Lens_Prism = require("../Data.Lens.Prism/index.js");
var Foreign_Object = require("../Foreign.Object/index.js");
var Prelude = require("../Prelude/index.js");
var _String = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Argonaut_Core.fromString)(Data_Argonaut_Core.toString)(dictChoice);
};
var _Object = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Argonaut_Core.fromObject)(Data_Argonaut_Core.toObject)(dictChoice);
};
var _Number = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Argonaut_Core.fromNumber)(Data_Argonaut_Core.toNumber)(dictChoice);
};
var _Null = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Function["const"](Data_Argonaut_Core.jsonNull))(Data_Argonaut_Core.toNull)(dictChoice);
};
var _Boolean = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Argonaut_Core.fromBoolean)(Data_Argonaut_Core.toBoolean)(dictChoice);
};
var _Array = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Argonaut_Core.fromArray)(Data_Argonaut_Core.toArray)(dictChoice);
};
module.exports = {
    "_Null": _Null,
    "_Boolean": _Boolean,
    "_Number": _Number,
    "_String": _String,
    "_Array": _Array,
    "_Object": _Object
};

},{"../Data.Argonaut.Core/index.js":78,"../Data.Function/index.js":145,"../Data.Lens.Prism/index.js":195,"../Data.Lens/index.js":199,"../Foreign.Object/index.js":318,"../Prelude/index.js":385}],89:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");
var Data_Lens = require("../Data.Lens/index.js");
var Data_Lens_Fold = require("../Data.Lens.Fold/index.js");
var Prelude = require("../Prelude/index.js");
var _JsonString = function (dictWander) {
    return function ($6) {
        return Control_Category.identity(Control_Category.categoryFn)(Data_Lens_Fold.filtered(dictWander.Choice1())(Data_Argonaut_Core.isString)($6));
    };
};
var _JsonObject = function (dictWander) {
    return function ($7) {
        return Control_Category.identity(Control_Category.categoryFn)(Data_Lens_Fold.filtered(dictWander.Choice1())(Data_Argonaut_Core.isObject)($7));
    };
};
var _JsonNumber = function (dictWander) {
    return function ($8) {
        return Control_Category.identity(Control_Category.categoryFn)(Data_Lens_Fold.filtered(dictWander.Choice1())(Data_Argonaut_Core.isNumber)($8));
    };
};
var _JsonNull = function (dictWander) {
    return function ($9) {
        return Control_Category.identity(Control_Category.categoryFn)(Data_Lens_Fold.filtered(dictWander.Choice1())(Data_Argonaut_Core.isNull)($9));
    };
};
var _JsonBoolean = function (dictWander) {
    return function ($10) {
        return Control_Category.identity(Control_Category.categoryFn)(Data_Lens_Fold.filtered(dictWander.Choice1())(Data_Argonaut_Core.isBoolean)($10));
    };
};
var _JsonArray = function (dictWander) {
    return function ($11) {
        return Control_Category.identity(Control_Category.categoryFn)(Data_Lens_Fold.filtered(dictWander.Choice1())(Data_Argonaut_Core.isArray)($11));
    };
};
module.exports = {
    "_JsonNull": _JsonNull,
    "_JsonBoolean": _JsonBoolean,
    "_JsonNumber": _JsonNumber,
    "_JsonString": _JsonString,
    "_JsonArray": _JsonArray,
    "_JsonObject": _JsonObject
};

},{"../Control.Category/index.js":14,"../Control.Semigroupoid/index.js":61,"../Data.Argonaut.Core/index.js":78,"../Data.Lens.Fold/index.js":173,"../Data.Lens/index.js":199,"../Prelude/index.js":385}],90:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");
var Data_Argonaut_Decode = require("../Data.Argonaut.Decode/index.js");
var Data_Argonaut_Encode = require("../Data.Argonaut.Encode/index.js");
var Data_Argonaut_JCursor = require("../Data.Argonaut.JCursor/index.js");
var Data_Argonaut_Parser = require("../Data.Argonaut.Parser/index.js");
var Data_Argonaut_Prisms = require("../Data.Argonaut.Prisms/index.js");
var Data_Argonaut_Traversals = require("../Data.Argonaut.Traversals/index.js");
module.exports = {};

},{"../Data.Argonaut.Core/index.js":78,"../Data.Argonaut.Decode/index.js":81,"../Data.Argonaut.Encode/index.js":84,"../Data.Argonaut.JCursor/index.js":85,"../Data.Argonaut.Parser/index.js":87,"../Data.Argonaut.Prisms/index.js":88,"../Data.Argonaut.Traversals/index.js":89}],91:[function(require,module,exports){
"use strict";

exports.fold1Impl = function (f) {
  return function (xs) {
    var acc = xs[0];
    var len = xs.length;
    for (var i = 1; i < len; i++) {
      acc = f(acc)(xs[i]);
    }
    return acc;
  };
};

exports.traverse1Impl = function () {
  function Cont(fn) {
    this.fn = fn;
  }

  var emptyList = {};

  var ConsCell = function (head, tail) {
    this.head = head;
    this.tail = tail;
  };

  function finalCell(head) {
    return new ConsCell(head, emptyList);
  }

  function consList(x) {
    return function (xs) {
      return new ConsCell(x, xs);
    };
  }

  function listToArray(list) {
    var arr = [];
    var xs = list;
    while (xs !== emptyList) {
      arr.push(xs.head);
      xs = xs.tail;
    }
    return arr;
  }

  return function (apply) {
    return function (map) {
      return function (f) {
        var buildFrom = function (x, ys) {
          return apply(map(consList)(f(x)))(ys);
        };

        var go = function (acc, currentLen, xs) {
          if (currentLen === 0) {
            return acc;
          } else {
            var last = xs[currentLen - 1];
            return new Cont(function () {
              var built = go(buildFrom(last, acc), currentLen - 1, xs);
              return built;
            });
          }
        };

        return function (array) {
          var acc = map(finalCell)(f(array[array.length - 1]));
          var result = go(acc, array.length - 1, array);
          while (result instanceof Cont) {
            result = result.fn();
          }

          return map(listToArray)(result);
        };
      };
    };
  };
}();

},{}],92:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");
var Prelude = require("../Prelude/index.js");
var NonEmptyArray = function (x) {
    return x;
};
var unfoldable1NonEmptyArray = Data_Unfoldable1.unfoldable1Array;
var traversableWithIndexNonEmptyArray = Data_TraversableWithIndex.traversableWithIndexArray;
var traversableNonEmptyArray = Data_Traversable.traversableArray;
var showNonEmptyArray = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(NonEmptyArray " + (Data_Show.show(Data_Show.showArray(dictShow))(v) + ")");
    });
};
var semigroupNonEmptyArray = Data_Semigroup.semigroupArray;
var ordNonEmptyArray = function (dictOrd) {
    return Data_Ord.ordArray(dictOrd);
};
var ord1NonEmptyArray = Data_Ord.ord1Array;
var monadNonEmptyArray = Control_Monad.monadArray;
var functorWithIndexNonEmptyArray = Data_FunctorWithIndex.functorWithIndexArray;
var functorNonEmptyArray = Data_Functor.functorArray;
var foldableWithIndexNonEmptyArray = Data_FoldableWithIndex.foldableWithIndexArray;
var foldableNonEmptyArray = Data_Foldable.foldableArray;
var foldable1NonEmptyArray = new Data_Semigroup_Foldable.Foldable1(function () {
    return foldableNonEmptyArray;
}, function (dictSemigroup) {
    return $foreign.fold1Impl(Data_Semigroup.append(dictSemigroup));
}, function (dictSemigroup) {
    return Data_Semigroup_Foldable.foldMap1Default(foldable1NonEmptyArray)(functorNonEmptyArray)(dictSemigroup);
});
var traversable1NonEmptyArray = new Data_Semigroup_Traversable.Traversable1(function () {
    return foldable1NonEmptyArray;
}, function () {
    return traversableNonEmptyArray;
}, function (dictApply) {
    return Data_Semigroup_Traversable.sequence1Default(traversable1NonEmptyArray)(dictApply);
}, function (dictApply) {
    return $foreign.traverse1Impl(Control_Apply.apply(dictApply))(Data_Functor.map(dictApply.Functor0()));
});
var eqNonEmptyArray = function (dictEq) {
    return Data_Eq.eqArray(dictEq);
};
var eq1NonEmptyArray = Data_Eq.eq1Array;
var bindNonEmptyArray = Control_Bind.bindArray;
var applyNonEmptyArray = Control_Apply.applyArray;
var applicativeNonEmptyArray = Control_Applicative.applicativeArray;
var altNonEmptyArray = Control_Alt.altArray;
module.exports = {
    showNonEmptyArray: showNonEmptyArray,
    eqNonEmptyArray: eqNonEmptyArray,
    eq1NonEmptyArray: eq1NonEmptyArray,
    ordNonEmptyArray: ordNonEmptyArray,
    ord1NonEmptyArray: ord1NonEmptyArray,
    semigroupNonEmptyArray: semigroupNonEmptyArray,
    functorNonEmptyArray: functorNonEmptyArray,
    functorWithIndexNonEmptyArray: functorWithIndexNonEmptyArray,
    foldableNonEmptyArray: foldableNonEmptyArray,
    foldableWithIndexNonEmptyArray: foldableWithIndexNonEmptyArray,
    foldable1NonEmptyArray: foldable1NonEmptyArray,
    unfoldable1NonEmptyArray: unfoldable1NonEmptyArray,
    traversableNonEmptyArray: traversableNonEmptyArray,
    traversableWithIndexNonEmptyArray: traversableWithIndexNonEmptyArray,
    traversable1NonEmptyArray: traversable1NonEmptyArray,
    applyNonEmptyArray: applyNonEmptyArray,
    applicativeNonEmptyArray: applicativeNonEmptyArray,
    bindNonEmptyArray: bindNonEmptyArray,
    monadNonEmptyArray: monadNonEmptyArray,
    altNonEmptyArray: altNonEmptyArray
};

},{"../Control.Alt/index.js":4,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Monad/index.js":55,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.FoldableWithIndex/index.js":142,"../Data.Functor/index.js":153,"../Data.FunctorWithIndex/index.js":155,"../Data.Ord/index.js":229,"../Data.Semigroup.Foldable/index.js":244,"../Data.Semigroup.Traversable/index.js":246,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Data.Traversable/index.js":281,"../Data.TraversableWithIndex/index.js":282,"../Data.Unfoldable1/index.js":287,"../Prelude/index.js":385,"./foreign.js":91}],93:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Array_NonEmpty_Internal = require("../Data.Array.NonEmpty.Internal/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_NonEmpty = require("../Data.NonEmpty/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var unsafeFromArrayF = Unsafe_Coerce.unsafeCoerce;
var unsafeFromArray = Unsafe_Coerce.unsafeCoerce;
var toArray = Unsafe_Coerce.unsafeCoerce;
var unionBy$prime = function (eq) {
    return function (xs) {
        return function ($39) {
            return unsafeFromArray(Data_Array.unionBy(eq)(toArray(xs))($39));
        };
    };
};
var union$prime = function (dictEq) {
    return unionBy$prime(Data_Eq.eq(dictEq));
};
var unionBy = function (eq) {
    return function (xs) {
        return function ($40) {
            return unionBy$prime(eq)(xs)(toArray($40));
        };
    };
};
var union = function (dictEq) {
    return unionBy(Data_Eq.eq(dictEq));
};
var unzip = function ($41) {
    return Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(unsafeFromArray)(unsafeFromArray)(Data_Array.unzip(toArray($41)));
};
var updateAt = function (i) {
    return function (x) {
        return function ($42) {
            return unsafeFromArrayF(Data_Array.updateAt(i)(x)(toArray($42)));
        };
    };
};
var zip = function (xs) {
    return function (ys) {
        return unsafeFromArray(Data_Array.zip(toArray(xs))(toArray(ys)));
    };
};
var zipWith = function (f) {
    return function (xs) {
        return function (ys) {
            return unsafeFromArray(Data_Array.zipWith(f)(toArray(xs))(toArray(ys)));
        };
    };
};
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return unsafeFromArrayF(Data_Array.zipWithA(dictApplicative)(f)(toArray(xs))(toArray(ys)));
            };
        };
    };
};
var some = function (dictAlternative) {
    return function (dictLazy) {
        return function ($43) {
            return unsafeFromArrayF(Data_Array.some(dictAlternative)(dictLazy)($43));
        };
    };
};
var snoc$prime = function (xs) {
    return function (x) {
        return unsafeFromArray(Data_Array.snoc(xs)(x));
    };
};
var snoc = function (xs) {
    return function (x) {
        return unsafeFromArray(Data_Array.snoc(toArray(xs))(x));
    };
};
var singleton = function ($44) {
    return unsafeFromArray(Data_Array.singleton($44));
};
var replicate = function (i) {
    return function (x) {
        return unsafeFromArray(Data_Array.replicate(Data_Ord.max(Data_Ord.ordInt)(1)(i))(x));
    };
};
var range = function (x) {
    return function (y) {
        return unsafeFromArray(Data_Array.range(x)(y));
    };
};
var modifyAt = function (i) {
    return function (f) {
        return function ($45) {
            return unsafeFromArrayF(Data_Array.modifyAt(i)(f)(toArray($45)));
        };
    };
};
var intersectBy$prime = function (eq) {
    return function (xs) {
        return Data_Array.intersectBy(eq)(toArray(xs));
    };
};
var intersectBy = function (eq) {
    return function (xs) {
        return function ($46) {
            return intersectBy$prime(eq)(xs)(toArray($46));
        };
    };
};
var intersect$prime = function (dictEq) {
    return intersectBy$prime(Data_Eq.eq(dictEq));
};
var intersect = function (dictEq) {
    return intersectBy(Data_Eq.eq(dictEq));
};
var insertAt = function (i) {
    return function (x) {
        return function ($47) {
            return unsafeFromArrayF(Data_Array.insertAt(i)(x)(toArray($47)));
        };
    };
};
var fromFoldable1 = function (dictFoldable1) {
    return function ($48) {
        return unsafeFromArray(Data_Array.fromFoldable(dictFoldable1.Foldable0())($48));
    };
};
var fromArray = function (xs) {
    if (Data_Array.length(xs) > 0) {
        return new Data_Maybe.Just(unsafeFromArray(xs));
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Array.NonEmpty (line 134, column 1 - line 134, column 58): " + [ xs.constructor.name ]);
};
var fromFoldable = function (dictFoldable) {
    return function ($49) {
        return fromArray(Data_Array.fromFoldable(dictFoldable)($49));
    };
};
var difference$prime = function (dictEq) {
    return function (xs) {
        return Data_Array.difference(dictEq)(toArray(xs));
    };
};
var cons$prime = function (x) {
    return function (xs) {
        return unsafeFromArray(Data_Array.cons(x)(xs));
    };
};
var fromNonEmpty = function (v) {
    return cons$prime(v.value0)(v.value1);
};
var concatMap = Data_Function.flip(Control_Bind.bind(Data_Array_NonEmpty_Internal.bindNonEmptyArray));
var concat = function ($50) {
    return unsafeFromArray(Data_Array.concat(toArray(Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(toArray)($50))));
};
var appendArray = function (xs) {
    return function (ys) {
        return unsafeFromArray(Data_Semigroup.append(Data_Semigroup.semigroupArray)(toArray(xs))(ys));
    };
};
var alterAt = function (i) {
    return function (f) {
        return function ($51) {
            return Data_Array.alterAt(i)(f)(toArray($51));
        };
    };
};
var adaptMaybe = function (f) {
    return function ($52) {
        return Data_Maybe.fromJust()(f(toArray($52)));
    };
};
var head = adaptMaybe(Data_Array.head);
var init = adaptMaybe(Data_Array.init);
var last = adaptMaybe(Data_Array.last);
var tail = adaptMaybe(Data_Array.tail);
var uncons = adaptMaybe(Data_Array.uncons);
var toNonEmpty = function ($53) {
    return (function (v) {
        return new Data_NonEmpty.NonEmpty(v.head, v.tail);
    })(uncons($53));
};
var unsnoc = adaptMaybe(Data_Array.unsnoc);
var adaptAny = function (f) {
    return function ($54) {
        return f(toArray($54));
    };
};
var catMaybes = adaptAny(Data_Array.catMaybes);
var $$delete = function (dictEq) {
    return function (x) {
        return adaptAny(Data_Array["delete"](dictEq)(x));
    };
};
var deleteAt = function (i) {
    return adaptAny(Data_Array.deleteAt(i));
};
var deleteBy = function (f) {
    return function (x) {
        return adaptAny(Data_Array.deleteBy(f)(x));
    };
};
var difference = function (dictEq) {
    return function (xs) {
        return adaptAny(difference$prime(dictEq)(xs));
    };
};
var drop = function (i) {
    return adaptAny(Data_Array.drop(i));
};
var dropEnd = function (i) {
    return adaptAny(Data_Array.dropEnd(i));
};
var dropWhile = function (f) {
    return adaptAny(Data_Array.dropWhile(f));
};
var elemIndex = function (dictEq) {
    return function (x) {
        return adaptAny(Data_Array.elemIndex(dictEq)(x));
    };
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return adaptAny(Data_Array.elemLastIndex(dictEq)(x));
    };
};
var filter = function (f) {
    return adaptAny(Data_Array.filter(f));
};
var filterA = function (dictApplicative) {
    return function (f) {
        return adaptAny(Data_Array.filterA(dictApplicative)(f));
    };
};
var findIndex = function (x) {
    return adaptAny(Data_Array.findIndex(x));
};
var findLastIndex = function (x) {
    return adaptAny(Data_Array.findLastIndex(x));
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (acc) {
            return adaptAny(Data_Array.foldM(dictMonad)(f)(acc));
        };
    };
};
var foldRecM = function (dictMonadRec) {
    return function (f) {
        return function (acc) {
            return adaptAny(Data_Array.foldRecM(dictMonadRec)(f)(acc));
        };
    };
};
var index = adaptAny(Data_Array.index);
var length = adaptAny(Data_Array.length);
var mapMaybe = function (f) {
    return adaptAny(Data_Array.mapMaybe(f));
};
var partition = function (f) {
    return adaptAny(Data_Array.partition(f));
};
var slice = function (start) {
    return function (end) {
        return adaptAny(Data_Array.slice(start)(end));
    };
};
var span = function (f) {
    return adaptAny(Data_Array.span(f));
};
var take = function (i) {
    return adaptAny(Data_Array.take(i));
};
var takeEnd = function (i) {
    return adaptAny(Data_Array.takeEnd(i));
};
var takeWhile = function (f) {
    return adaptAny(Data_Array.takeWhile(f));
};
var toUnfoldable = function (dictUnfoldable) {
    return adaptAny(Data_Array.toUnfoldable(dictUnfoldable));
};
var unsafeAdapt = function (f) {
    return function ($55) {
        return unsafeFromArray(adaptAny(f)($55));
    };
};
var cons = function (x) {
    return unsafeAdapt(Data_Array.cons(x));
};
var insert = function (dictOrd) {
    return function (x) {
        return unsafeAdapt(Data_Array.insert(dictOrd)(x));
    };
};
var insertBy = function (f) {
    return function (x) {
        return unsafeAdapt(Data_Array.insertBy(f)(x));
    };
};
var modifyAtIndices = function (dictFoldable) {
    return function (is) {
        return function (f) {
            return unsafeAdapt(Data_Array.modifyAtIndices(dictFoldable)(is)(f));
        };
    };
};
var nub = function (dictOrd) {
    return unsafeAdapt(Data_Array.nub(dictOrd));
};
var nubBy = function (f) {
    return unsafeAdapt(Data_Array.nubBy(f));
};
var nubByEq = function (f) {
    return unsafeAdapt(Data_Array.nubByEq(f));
};
var nubEq = function (dictEq) {
    return unsafeAdapt(Data_Array.nubEq(dictEq));
};
var reverse = unsafeAdapt(Data_Array.reverse);
var sort = function (dictOrd) {
    return unsafeAdapt(Data_Array.sort(dictOrd));
};
var sortBy = function (f) {
    return unsafeAdapt(Data_Array.sortBy(f));
};
var sortWith = function (dictOrd) {
    return function (f) {
        return unsafeAdapt(Data_Array.sortWith(dictOrd)(f));
    };
};
var updateAtIndices = function (dictFoldable) {
    return function (pairs) {
        return unsafeAdapt(Data_Array.updateAtIndices(dictFoldable)(pairs));
    };
};
var unsafeIndex = function (dictPartial) {
    return adaptAny(Data_Array.unsafeIndex(dictPartial));
};
var toUnfoldable1 = function (dictUnfoldable1) {
    return function (xs) {
        var len = length(xs);
        var f = function (i) {
            return Data_Tuple.Tuple.create(unsafeIndex()(xs)(i))((function () {
                var $38 = i < (len - 1 | 0);
                if ($38) {
                    return new Data_Maybe.Just(i + 1 | 0);
                };
                return Data_Maybe.Nothing.value;
            })());
        };
        return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(f)(0);
    };
};
module.exports = {
    fromArray: fromArray,
    fromNonEmpty: fromNonEmpty,
    toArray: toArray,
    toNonEmpty: toNonEmpty,
    fromFoldable: fromFoldable,
    fromFoldable1: fromFoldable1,
    toUnfoldable: toUnfoldable,
    toUnfoldable1: toUnfoldable1,
    singleton: singleton,
    range: range,
    replicate: replicate,
    some: some,
    length: length,
    cons: cons,
    "cons'": cons$prime,
    snoc: snoc,
    "snoc'": snoc$prime,
    appendArray: appendArray,
    insert: insert,
    insertBy: insertBy,
    head: head,
    last: last,
    tail: tail,
    init: init,
    uncons: uncons,
    unsnoc: unsnoc,
    index: index,
    elemIndex: elemIndex,
    elemLastIndex: elemLastIndex,
    findIndex: findIndex,
    findLastIndex: findLastIndex,
    insertAt: insertAt,
    deleteAt: deleteAt,
    updateAt: updateAt,
    updateAtIndices: updateAtIndices,
    modifyAt: modifyAt,
    modifyAtIndices: modifyAtIndices,
    alterAt: alterAt,
    reverse: reverse,
    concat: concat,
    concatMap: concatMap,
    filter: filter,
    partition: partition,
    filterA: filterA,
    mapMaybe: mapMaybe,
    catMaybes: catMaybes,
    sort: sort,
    sortBy: sortBy,
    sortWith: sortWith,
    slice: slice,
    take: take,
    takeEnd: takeEnd,
    takeWhile: takeWhile,
    drop: drop,
    dropEnd: dropEnd,
    dropWhile: dropWhile,
    span: span,
    nub: nub,
    nubBy: nubBy,
    nubEq: nubEq,
    nubByEq: nubByEq,
    union: union,
    "union'": union$prime,
    unionBy: unionBy,
    "unionBy'": unionBy$prime,
    "delete": $$delete,
    deleteBy: deleteBy,
    difference: difference,
    "difference'": difference$prime,
    intersect: intersect,
    "intersect'": intersect$prime,
    intersectBy: intersectBy,
    "intersectBy'": intersectBy$prime,
    zipWith: zipWith,
    zipWithA: zipWithA,
    zip: zip,
    unzip: unzip,
    foldM: foldM,
    foldRecM: foldRecM,
    unsafeIndex: unsafeIndex
};

},{"../Control.Alternative/index.js":5,"../Control.Bind/index.js":13,"../Control.Lazy/index.js":25,"../Control.Monad.Rec.Class/index.js":43,"../Control.Semigroupoid/index.js":61,"../Data.Array.NonEmpty.Internal/index.js":92,"../Data.Array/index.js":99,"../Data.Bifunctor/index.js":106,"../Data.Boolean/index.js":110,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.NonEmpty/index.js":221,"../Data.Ord/index.js":229,"../Data.Ring/index.js":242,"../Data.Semigroup.Foldable/index.js":244,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Tuple/index.js":283,"../Data.Unfoldable/index.js":285,"../Data.Unfoldable1/index.js":287,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425}],94:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Array = require("../Data.Array/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Prelude = require("../Prelude/index.js");
var tail = function (dictPartial) {
    return function (xs) {
        return Data_Array.slice(1)(Data_Array.length(xs))(xs);
    };
};
var last = function (dictPartial) {
    return function (xs) {
        return xs[Data_Array.length(xs) - 1 | 0];
    };
};
var init = function (dictPartial) {
    return function (xs) {
        return Data_Array.slice(0)(Data_Array.length(xs) - 1 | 0)(xs);
    };
};
var head = function (dictPartial) {
    return function (xs) {
        return xs[0];
    };
};
module.exports = {
    head: head,
    tail: tail,
    last: last,
    init: init
};

},{"../Data.Array/index.js":99,"../Data.Ring/index.js":242,"../Prelude/index.js":385}],95:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_ST = require("../Control.Monad.ST/index.js");
var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");
var Control_Monad_ST_Ref = require("../Control.Monad.ST.Ref/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Array_ST = require("../Data.Array.ST/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Prelude = require("../Prelude/index.js");
var Iterator = (function () {
    function Iterator(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Iterator.create = function (value0) {
        return function (value1) {
            return new Iterator(value0, value1);
        };
    };
    return Iterator;
})();
var peek = function (v) {
    return function __do() {
        var v1 = Control_Monad_ST_Internal.read(v.value1)();
        return v.value0(v1);
    };
};
var next = function (v) {
    return function __do() {
        var v1 = Control_Monad_ST_Internal.read(v.value1)();
        var v2 = Control_Monad_ST_Internal.modify(function (v2) {
            return v2 + 1 | 0;
        })(v.value1)();
        return v.value0(v1);
    };
};
var pushWhile = function (p) {
    return function (iter) {
        return function (array) {
            return function __do() {
                var v = Control_Monad_ST_Internal["new"](false)();
                while (Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST_Internal.read(v))()) {
                    (function __do() {
                        var v1 = peek(iter)();
                        if (v1 instanceof Data_Maybe.Just && p(v1.value0)) {
                            var v2 = Data_Array_ST.push(v1.value0)(array)();
                            return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(next(iter))();
                        };
                        return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Control_Monad_ST_Internal.write(true)(v))();
                    })();
                };
                return {};
            };
        };
    };
};
var pushAll = pushWhile(Data_Function["const"](true));
var iterator = function (f) {
    return Data_Functor.map(Control_Monad_ST_Internal.functorST)(Iterator.create(f))(Control_Monad_ST_Internal["new"](0));
};
var iterate = function (iter) {
    return function (f) {
        return function __do() {
            var v = Control_Monad_ST_Internal["new"](false)();
            while (Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST_Internal.read(v))()) {
                (function __do() {
                    var v1 = next(iter)();
                    if (v1 instanceof Data_Maybe.Just) {
                        return f(v1.value0)();
                    };
                    if (v1 instanceof Data_Maybe.Nothing) {
                        return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Control_Monad_ST_Internal.write(true)(v))();
                    };
                    throw new Error("Failed pattern match at Data.Array.ST.Iterator (line 42, column 5 - line 44, column 47): " + [ v1.constructor.name ]);
                })();
            };
            return {};
        };
    };
};
var exhausted = function ($27) {
    return Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_Maybe.isNothing)(peek($27));
};
module.exports = {
    iterator: iterator,
    iterate: iterate,
    next: next,
    peek: peek,
    exhausted: exhausted,
    pushWhile: pushWhile,
    pushAll: pushAll
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Control.Monad.ST.Internal/index.js":45,"../Control.Monad.ST.Ref/index.js":46,"../Control.Monad.ST/index.js":47,"../Control.Semigroupoid/index.js":61,"../Data.Array.ST/index.js":97,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Maybe/index.js":210,"../Data.Semiring/index.js":251,"../Prelude/index.js":385}],96:[function(require,module,exports){
"use strict";

exports.empty = function () {
  return [];
};

exports.peekImpl = function (just) {
  return function (nothing) {
    return function (i) {
      return function (xs) {
        return function () {
          return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
        };
      };
    };
  };
};

exports.poke = function (i) {
  return function (a) {
    return function (xs) {
      return function () {
        var ret = i >= 0 && i < xs.length;
        if (ret) xs[i] = a;
        return ret;
      };
    };
  };
};

exports.pushAll = function (as) {
  return function (xs) {
    return function () {
      return xs.push.apply(xs, as);
    };
  };
};

exports.splice = function (i) {
  return function (howMany) {
    return function (bs) {
      return function (xs) {
        return function () {
          return xs.splice.apply(xs, [i, howMany].concat(bs));
        };
      };
    };
  };
};

exports.copyImpl = function (xs) {
  return function () {
    return xs.slice();
  };
};

exports.sortByImpl = function (comp) {
  return function (xs) {
    return function () {
      return xs.sort(function (x, y) {
        return comp(x)(y);
      });
    };
  };
};

exports.toAssocArray = function (xs) {
  return function () {
    var n = xs.length;
    var as = new Array(n);
    for (var i = 0; i < n; i++) as[i] = { value: xs[i], index: i };
    return as;
  };
};

},{}],97:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_ST = require("../Control.Monad.ST/index.js");
var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var unsafeThaw = function ($11) {
    return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)($11);
};
var unsafeFreeze = function ($12) {
    return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)($12);
};
var thaw = $foreign.copyImpl;
var withArray = function (f) {
    return function (xs) {
        return function __do() {
            var v = thaw(xs)();
            var v1 = f(v)();
            return unsafeFreeze(v)();
        };
    };
};
var sortBy = function (comp) {
    var comp$prime = function (x) {
        return function (y) {
            var v = comp(x)(y);
            if (v instanceof Data_Ordering.GT) {
                return 1;
            };
            if (v instanceof Data_Ordering.EQ) {
                return 0;
            };
            if (v instanceof Data_Ordering.LT) {
                return -1 | 0;
            };
            throw new Error("Failed pattern match at Data.Array.ST (line 94, column 15 - line 99, column 1): " + [ v.constructor.name ]);
        };
    };
    return $foreign.sortByImpl(comp$prime);
};
var sortWith = function (dictOrd) {
    return function (f) {
        return sortBy(Data_Ord.comparing(dictOrd)(f));
    };
};
var sort = function (dictOrd) {
    return sortBy(Data_Ord.compare(dictOrd));
};
var run = function (st) {
    return Control_Bind.bind(Control_Monad_ST_Internal.bindST)(st)(unsafeFreeze)();
};
var push = function (a) {
    return $foreign.pushAll([ a ]);
};
var peek = $foreign.peekImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var modify = function (i) {
    return function (f) {
        return function (xs) {
            return function __do() {
                var v = peek(i)(xs)();
                if (v instanceof Data_Maybe.Just) {
                    return $foreign.poke(i)(f(v.value0))(xs)();
                };
                if (v instanceof Data_Maybe.Nothing) {
                    return false;
                };
                throw new Error("Failed pattern match at Data.Array.ST (line 156, column 3 - line 158, column 26): " + [ v.constructor.name ]);
            };
        };
    };
};
var freeze = $foreign.copyImpl;
module.exports = {
    run: run,
    withArray: withArray,
    peek: peek,
    push: push,
    modify: modify,
    sort: sort,
    sortBy: sortBy,
    sortWith: sortWith,
    freeze: freeze,
    thaw: thaw,
    unsafeFreeze: unsafeFreeze,
    unsafeThaw: unsafeThaw,
    empty: $foreign.empty,
    poke: $foreign.poke,
    pushAll: $foreign.pushAll,
    splice: $foreign.splice,
    toAssocArray: $foreign.toAssocArray
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Control.Monad.ST.Internal/index.js":45,"../Control.Monad.ST/index.js":47,"../Control.Semigroupoid/index.js":61,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Ring/index.js":242,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"./foreign.js":96}],98:[function(require,module,exports){
"use strict";

//------------------------------------------------------------------------------
// Array creation --------------------------------------------------------------
//------------------------------------------------------------------------------

exports.range = function (start) {
  return function (end) {
    var step = start > end ? -1 : 1;
    var result = new Array(step * (end - start) + 1);
    var i = start, n = 0;
    while (i !== end) {
      result[n++] = i;
      i += step;
    }
    result[n] = i;
    return result;
  };
};

var replicateFill = function (count) {
  return function (value) {
    if (count < 1) {
      return [];
    }
    var result = new Array(count);
    return result.fill(value);
  };
};

var replicatePolyfill = function (count) {
  return function (value) {
    var result = [];
    var n = 0;
    for (var i = 0; i < count; i++) {
      result[n++] = value;
    }
    return result;
  };
};

// In browsers that have Array.prototype.fill we use it, as it's faster.
exports.replicate = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;

exports.fromFoldableImpl = (function () {
  function Cons(head, tail) {
    this.head = head;
    this.tail = tail;
  }
  var emptyList = {};

  function curryCons(head) {
    return function (tail) {
      return new Cons(head, tail);
    };
  }

  function listToArray(list) {
    var result = [];
    var count = 0;
    var xs = list;
    while (xs !== emptyList) {
      result[count++] = xs.head;
      xs = xs.tail;
    }
    return result;
  }

  return function (foldr) {
    return function (xs) {
      return listToArray(foldr(curryCons)(emptyList)(xs));
    };
  };
})();

//------------------------------------------------------------------------------
// Array size ------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.length = function (xs) {
  return xs.length;
};

//------------------------------------------------------------------------------
// Extending arrays ------------------------------------------------------------
//------------------------------------------------------------------------------

exports.cons = function (e) {
  return function (l) {
    return [e].concat(l);
  };
};

exports.snoc = function (l) {
  return function (e) {
    var l1 = l.slice();
    l1.push(e);
    return l1;
  };
};

//------------------------------------------------------------------------------
// Non-indexed reads -----------------------------------------------------------
//------------------------------------------------------------------------------

exports["uncons'"] = function (empty) {
  return function (next) {
    return function (xs) {
      return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
    };
  };
};

//------------------------------------------------------------------------------
// Indexed operations ----------------------------------------------------------
//------------------------------------------------------------------------------

exports.indexImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
      };
    };
  };
};

exports.findIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = 0, l = xs.length; i < l; i++) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports.findLastIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = xs.length - 1; i >= 0; i--) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports._insertAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i > l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 0, a);
          return just(l1);
        };
      };
    };
  };
};

exports._deleteAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (l) {
        if (i < 0 || i >= l.length) return nothing;
        var l1 = l.slice();
        l1.splice(i, 1);
        return just(l1);
      };
    };
  };
};

exports._updateAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1[i] = a;
          return just(l1);
        };
      };
    };
  };
};

//------------------------------------------------------------------------------
// Transformations -------------------------------------------------------------
//------------------------------------------------------------------------------

exports.reverse = function (l) {
  return l.slice().reverse();
};

exports.concat = function (xss) {
  if (xss.length <= 10000) {
    // This method is faster, but it crashes on big arrays.
    // So we use it when can and fallback to simple variant otherwise.
    return Array.prototype.concat.apply([], xss);
  }

  var result = [];
  for (var i = 0, l = xss.length; i < l; i++) {
    var xs = xss[i];
    for (var j = 0, m = xs.length; j < m; j++) {
      result.push(xs[j]);
    }
  }
  return result;
};

exports.filter = function (f) {
  return function (xs) {
    return xs.filter(f);
  };
};

exports.partition = function (f) {
  return function (xs) {
    var yes = [];
    var no  = [];
    for (var i = 0; i < xs.length; i++) {
      var x = xs[i];
      if (f(x))
        yes.push(x);
      else
        no.push(x);
    }
    return { yes: yes, no: no };
  };
};

//------------------------------------------------------------------------------
// Sorting ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.sortImpl = function (f) {
  return function (l) {
    return l.slice().sort(function (x, y) {
      return f(x)(y);
    });
  };
};

//------------------------------------------------------------------------------
// Subarrays -------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.slice = function (s) {
  return function (e) {
    return function (l) {
      return l.slice(s, e);
    };
  };
};

exports.take = function (n) {
  return function (l) {
    return n < 1 ? [] : l.slice(0, n);
  };
};

exports.drop = function (n) {
  return function (l) {
    return n < 1 ? l : l.slice(n);
  };
};

//------------------------------------------------------------------------------
// Zipping ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.zipWith = function (f) {
  return function (xs) {
    return function (ys) {
      var l = xs.length < ys.length ? xs.length : ys.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(xs[i])(ys[i]);
      }
      return result;
    };
  };
};

//------------------------------------------------------------------------------
// Partial ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.unsafeIndexImpl = function (xs) {
  return function (n) {
    return xs[n];
  };
};

},{}],99:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_ST = require("../Control.Monad.ST/index.js");
var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Array_NonEmpty_Internal = require("../Data.Array.NonEmpty.Internal/index.js");
var Data_Array_ST = require("../Data.Array.ST/index.js");
var Data_Array_ST_Iterator = require("../Data.Array.ST.Iterator/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictApplicative)($foreign.zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
var updateAtIndices = function (dictFoldable) {
    return function (us) {
        return function (xs) {
            return Data_Array_ST.withArray(function (res) {
                return Data_Foldable.traverse_(Control_Monad_ST_Internal.applicativeST)(dictFoldable)(function (v) {
                    return Data_Array_ST.poke(v.value0)(v.value1)(res);
                })(us);
            })(xs)();
        };
    };
};
var updateAt = $foreign["_updateAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unsafeIndex = function (dictPartial) {
    return $foreign.unsafeIndexImpl;
};
var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
    return function (xs) {
        return new Data_Maybe.Just({
            head: x,
            tail: xs
        });
    };
});
var toUnfoldable = function (dictUnfoldable) {
    return function (xs) {
        var len = $foreign.length(xs);
        var f = function (i) {
            if (i < len) {
                return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex()(xs)(i), i + 1 | 0));
            };
            if (Data_Boolean.otherwise) {
                return Data_Maybe.Nothing.value;
            };
            throw new Error("Failed pattern match at Data.Array (line 143, column 3 - line 145, column 26): " + [ i.constructor.name ]);
        };
        return Data_Unfoldable.unfoldr(dictUnfoldable)(f)(0);
    };
};
var takeEnd = function (n) {
    return function (xs) {
        return $foreign.drop($foreign.length(xs) - n | 0)(xs);
    };
};
var tail = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (v) {
    return function (xs) {
        return new Data_Maybe.Just(xs);
    };
});
var sortBy = function (comp) {
    return function (xs) {
        var comp$prime = function (x) {
            return function (y) {
                var v = comp(x)(y);
                if (v instanceof Data_Ordering.GT) {
                    return 1;
                };
                if (v instanceof Data_Ordering.EQ) {
                    return 0;
                };
                if (v instanceof Data_Ordering.LT) {
                    return -1 | 0;
                };
                throw new Error("Failed pattern match at Data.Array (line 702, column 15 - line 707, column 1): " + [ v.constructor.name ]);
            };
        };
        return $foreign.sortImpl(comp$prime)(xs);
    };
};
var sortWith = function (dictOrd) {
    return function (f) {
        return sortBy(Data_Ord.comparing(dictOrd)(f));
    };
};
var sort = function (dictOrd) {
    return function (xs) {
        return sortBy(Data_Ord.compare(dictOrd))(xs);
    };
};
var singleton = function (a) {
    return [ a ];
};
var $$null = function (xs) {
    return $foreign.length(xs) === 0;
};
var nubByEq = function (eq) {
    return function (xs) {
        var v = uncons(xs);
        if (v instanceof Data_Maybe.Just) {
            return $foreign.cons(v.value0.head)(nubByEq(eq)($foreign.filter(function (y) {
                return !eq(v.value0.head)(y);
            })(v.value0.tail)));
        };
        if (v instanceof Data_Maybe.Nothing) {
            return [  ];
        };
        throw new Error("Failed pattern match at Data.Array (line 930, column 3 - line 932, column 18): " + [ v.constructor.name ]);
    };
};
var nubEq = function (dictEq) {
    return nubByEq(Data_Eq.eq(dictEq));
};
var modifyAtIndices = function (dictFoldable) {
    return function (is) {
        return function (f) {
            return function (xs) {
                return Data_Array_ST.withArray(function (res) {
                    return Data_Foldable.traverse_(Control_Monad_ST_Internal.applicativeST)(dictFoldable)(function (i) {
                        return Data_Array_ST.modify(i)(f)(res);
                    })(is);
                })(xs)();
            };
        };
    };
};
var mapWithIndex = function (f) {
    return function (xs) {
        return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
    };
};
var some = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())($foreign.cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())([  ]));
        };
    };
};
var insertAt = $foreign["_insertAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var init = function (xs) {
    if ($$null(xs)) {
        return Data_Maybe.Nothing.value;
    };
    if (Data_Boolean.otherwise) {
        return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));
    };
    throw new Error("Failed pattern match at Data.Array (line 323, column 1 - line 323, column 45): " + [ xs.constructor.name ]);
};
var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var last = function (xs) {
    return index(xs)($foreign.length(xs) - 1 | 0);
};
var unsnoc = function (xs) {
    return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
        return function (v1) {
            return {
                init: v,
                last: v1
            };
        };
    })(init(xs)))(last(xs));
};
var modifyAt = function (i) {
    return function (f) {
        return function (xs) {
            var go = function (x) {
                return updateAt(i)(f(x))(xs);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
        };
    };
};
var span = function (p) {
    return function (arr) {
        var go = function ($copy_i) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(i) {
                var v = index(arr)(i);
                if (v instanceof Data_Maybe.Just) {
                    var $75 = p(v.value0);
                    if ($75) {
                        $copy_i = i + 1 | 0;
                        return;
                    };
                    $tco_done = true;
                    return new Data_Maybe.Just(i);
                };
                if (v instanceof Data_Maybe.Nothing) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.Array (line 834, column 5 - line 836, column 25): " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($copy_i);
            };
            return $tco_result;
        };
        var breakIndex = go(0);
        if (breakIndex instanceof Data_Maybe.Just && breakIndex.value0 === 0) {
            return {
                init: [  ],
                rest: arr
            };
        };
        if (breakIndex instanceof Data_Maybe.Just) {
            return {
                init: $foreign.slice(0)(breakIndex.value0)(arr),
                rest: $foreign.slice(breakIndex.value0)($foreign.length(arr))(arr)
            };
        };
        if (breakIndex instanceof Data_Maybe.Nothing) {
            return {
                init: arr,
                rest: [  ]
            };
        };
        throw new Error("Failed pattern match at Data.Array (line 821, column 3 - line 827, column 30): " + [ breakIndex.constructor.name ]);
    };
};
var takeWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).init;
    };
};
var unzip = function (xs) {
    return (function __do() {
        var v = Data_Array_ST.empty();
        var v1 = Data_Array_ST.empty();
        var v2 = Data_Array_ST_Iterator.iterator(function (v2) {
            return index(xs)(v2);
        })();
        Data_Array_ST_Iterator.iterate(v2)(function (v3) {
            return function __do() {
                Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(v3.value0)(v))();
                return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(v3.value1)(v1))();
            };
        })();
        var v3 = Data_Array_ST.unsafeFreeze(v)();
        var v4 = Data_Array_ST.unsafeFreeze(v1)();
        return new Data_Tuple.Tuple(v3, v4);
    })();
};
var head = function (xs) {
    return index(xs)(0);
};
var nubBy = function (comp) {
    return function (xs) {
        var indexedAndSorted = sortBy(function (x) {
            return function (y) {
                return comp(Data_Tuple.snd(x))(Data_Tuple.snd(y));
            };
        })(mapWithIndex(Data_Tuple.Tuple.create)(xs));
        var v = head(indexedAndSorted);
        if (v instanceof Data_Maybe.Nothing) {
            return [  ];
        };
        if (v instanceof Data_Maybe.Just) {
            return Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.snd)(sortWith(Data_Ord.ordInt)(Data_Tuple.fst)((function __do() {
                var v1 = Data_Array_ST.unsafeThaw(singleton(v.value0))();
                Control_Monad_ST_Internal.foreach(indexedAndSorted)(function (v2) {
                    return function __do() {
                        var v3 = Data_Functor.map(Control_Monad_ST_Internal.functorST)(function ($111) {
                            return Data_Tuple.snd((function ($112) {
                                return Data_Maybe.fromJust()(last($112));
                            })($111));
                        })(Data_Array_ST.unsafeFreeze(v1))();
                        return Control_Applicative.when(Control_Monad_ST_Internal.applicativeST)(Data_Eq.notEq(Data_Ordering.eqOrdering)(comp(v3)(v2.value1))(Data_Ordering.EQ.value))(Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(v2)(v1)))();
                    };
                })();
                return Data_Array_ST.unsafeFreeze(v1)();
            })()));
        };
        throw new Error("Failed pattern match at Data.Array (line 903, column 17 - line 911, column 29): " + [ v.constructor.name ]);
    };
};
var nub = function (dictOrd) {
    return nubBy(Data_Ord.compare(dictOrd));
};
var groupBy = function (op) {
    return function (xs) {
        return (function __do() {
            var v = Data_Array_ST.empty();
            var v1 = Data_Array_ST_Iterator.iterator(function (v1) {
                return index(xs)(v1);
            })();
            Data_Array_ST_Iterator.iterate(v1)(function (x) {
                return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(function __do() {
                    var v2 = Data_Array_ST.empty();
                    var v3 = Data_Array_ST.push(x)(v2)();
                    Data_Array_ST_Iterator.pushWhile(op(x))(v1)(v2)();
                    var v4 = Data_Array_ST.unsafeFreeze(v2)();
                    return Data_Array_ST.push(v4)(v)();
                });
            })();
            return Data_Array_ST.unsafeFreeze(v)();
        })();
    };
};
var group = function (dictEq) {
    return function (xs) {
        return groupBy(Data_Eq.eq(dictEq))(xs);
    };
};
var group$prime = function (dictOrd) {
    return function ($113) {
        return group(dictOrd.Eq0())(sort(dictOrd)($113));
    };
};
var fromFoldable = function (dictFoldable) {
    return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
};
var foldRecM = function (dictMonadRec) {
    return function (f) {
        return function (a) {
            return function (array) {
                var go = function (res) {
                    return function (i) {
                        if (i >= $foreign.length(array)) {
                            return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(res));
                        };
                        if (Data_Boolean.otherwise) {
                            return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(f(res)(unsafeIndex()(array)(i)))(function (v) {
                                return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop({
                                    a: v,
                                    b: i + 1 | 0
                                }));
                            });
                        };
                        throw new Error("Failed pattern match at Data.Array (line 1099, column 3 - line 1103, column 42): " + [ res.constructor.name, i.constructor.name ]);
                    };
                };
                return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(go)(a)(0);
            };
        };
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (a) {
            return $foreign["uncons'"](function (v) {
                return Control_Applicative.pure(dictMonad.Applicative0())(a);
            })(function (b) {
                return function (bs) {
                    return Control_Bind.bind(dictMonad.Bind1())(f(a)(b))(function (a$prime) {
                        return foldM(dictMonad)(f)(a$prime)(bs);
                    });
                };
            });
        };
    };
};
var findLastIndex = $foreign.findLastIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var insertBy = function (cmp) {
    return function (x) {
        return function (ys) {
            var i = Data_Maybe.maybe(0)(function (v) {
                return v + 1 | 0;
            })(findLastIndex(function (y) {
                return Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.GT.value);
            })(ys));
            return Data_Maybe.fromJust()(insertAt(i)(x)(ys));
        };
    };
};
var insert = function (dictOrd) {
    return insertBy(Data_Ord.compare(dictOrd));
};
var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var intersectBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return $foreign.filter(function (x) {
                return Data_Maybe.isJust(findIndex(eq(x))(ys));
            })(xs);
        };
    };
};
var intersect = function (dictEq) {
    return intersectBy(Data_Eq.eq(dictEq));
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var dropWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).rest;
    };
};
var dropEnd = function (n) {
    return function (xs) {
        return $foreign.take($foreign.length(xs) - n | 0)(xs);
    };
};
var deleteAt = $foreign["_deleteAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var deleteBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2.length === 0) {
                return [  ];
            };
            return Data_Maybe.maybe(v2)(function (i) {
                return Data_Maybe.fromJust()(deleteAt(i)(v2));
            })(findIndex(v(v1))(v2));
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(xs)(Data_Foldable.foldl(Data_Foldable.foldableArray)(Data_Function.flip(deleteBy(eq)))(nubByEq(eq)(ys))(xs));
        };
    };
};
var union = function (dictEq) {
    return unionBy(Data_Eq.eq(dictEq));
};
var $$delete = function (dictEq) {
    return deleteBy(Data_Eq.eq(dictEq));
};
var difference = function (dictEq) {
    return Data_Foldable.foldr(Data_Foldable.foldableArray)($$delete(dictEq));
};
var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
var mapMaybe = function (f) {
    return concatMap(function ($114) {
        return Data_Maybe.maybe([  ])(singleton)(f($114));
    });
};
var filterA = function (dictApplicative) {
    return function (p) {
        return function ($115) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(mapMaybe(function (v) {
                if (v.value1) {
                    return new Data_Maybe.Just(v.value0);
                };
                return Data_Maybe.Nothing.value;
            }))(Data_Traversable.traverse(Data_Traversable.traversableArray)(dictApplicative)(function (x) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Tuple.Tuple.create(x))(p(x));
            })($115));
        };
    };
};
var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));
var alterAt = function (i) {
    return function (f) {
        return function (xs) {
            var go = function (x) {
                var v = f(x);
                if (v instanceof Data_Maybe.Nothing) {
                    return deleteAt(i)(xs);
                };
                if (v instanceof Data_Maybe.Just) {
                    return updateAt(i)(v.value0)(xs);
                };
                throw new Error("Failed pattern match at Data.Array (line 544, column 10 - line 546, column 32): " + [ v.constructor.name ]);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
        };
    };
};
module.exports = {
    fromFoldable: fromFoldable,
    toUnfoldable: toUnfoldable,
    singleton: singleton,
    some: some,
    many: many,
    "null": $$null,
    insert: insert,
    insertBy: insertBy,
    head: head,
    last: last,
    tail: tail,
    init: init,
    uncons: uncons,
    unsnoc: unsnoc,
    index: index,
    elemIndex: elemIndex,
    elemLastIndex: elemLastIndex,
    findIndex: findIndex,
    findLastIndex: findLastIndex,
    insertAt: insertAt,
    deleteAt: deleteAt,
    updateAt: updateAt,
    updateAtIndices: updateAtIndices,
    modifyAt: modifyAt,
    modifyAtIndices: modifyAtIndices,
    alterAt: alterAt,
    concatMap: concatMap,
    filterA: filterA,
    mapMaybe: mapMaybe,
    catMaybes: catMaybes,
    mapWithIndex: mapWithIndex,
    sort: sort,
    sortBy: sortBy,
    sortWith: sortWith,
    takeEnd: takeEnd,
    takeWhile: takeWhile,
    dropEnd: dropEnd,
    dropWhile: dropWhile,
    span: span,
    group: group,
    "group'": group$prime,
    groupBy: groupBy,
    nub: nub,
    nubEq: nubEq,
    nubBy: nubBy,
    nubByEq: nubByEq,
    union: union,
    unionBy: unionBy,
    "delete": $$delete,
    deleteBy: deleteBy,
    difference: difference,
    intersect: intersect,
    intersectBy: intersectBy,
    zipWithA: zipWithA,
    zip: zip,
    unzip: unzip,
    foldM: foldM,
    foldRecM: foldRecM,
    unsafeIndex: unsafeIndex,
    range: $foreign.range,
    replicate: $foreign.replicate,
    length: $foreign.length,
    cons: $foreign.cons,
    snoc: $foreign.snoc,
    reverse: $foreign.reverse,
    concat: $foreign.concat,
    filter: $foreign.filter,
    partition: $foreign.partition,
    slice: $foreign.slice,
    take: $foreign.take,
    drop: $foreign.drop,
    zipWith: $foreign.zipWith
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Lazy/index.js":25,"../Control.Monad.Rec.Class/index.js":43,"../Control.Monad.ST.Internal/index.js":45,"../Control.Monad.ST/index.js":47,"../Control.Semigroupoid/index.js":61,"../Data.Array.NonEmpty.Internal/index.js":92,"../Data.Array.ST.Iterator/index.js":95,"../Data.Array.ST/index.js":97,"../Data.Boolean/index.js":110,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Traversable/index.js":281,"../Data.Tuple/index.js":283,"../Data.Unfoldable/index.js":285,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"./foreign.js":98}],100:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Bifunctor_Clown = require("../Data.Bifunctor.Clown/index.js");
var Data_Bifunctor_Flip = require("../Data.Bifunctor.Flip/index.js");
var Data_Bifunctor_Joker = require("../Data.Bifunctor.Joker/index.js");
var Data_Bifunctor_Product = require("../Data.Bifunctor.Product/index.js");
var Data_Bifunctor_Wrap = require("../Data.Bifunctor.Wrap/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");
var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");
var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");
var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Prelude = require("../Prelude/index.js");
var Bifoldable = function (bifoldMap, bifoldl, bifoldr) {
    this.bifoldMap = bifoldMap;
    this.bifoldl = bifoldl;
    this.bifoldr = bifoldr;
};
var bifoldr = function (dict) {
    return dict.bifoldr;
};
var bitraverse_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return function (f) {
            return function (g) {
                return bifoldr(dictBifoldable)(function ($97) {
                    return Control_Apply.applySecond(dictApplicative.Apply0())(f($97));
                })(function ($98) {
                    return Control_Apply.applySecond(dictApplicative.Apply0())(g($98));
                })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
            };
        };
    };
};
var bifor_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse_(dictBifoldable)(dictApplicative)(f)(g)(t);
                };
            };
        };
    };
};
var bisequence_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return bitraverse_(dictBifoldable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn));
    };
};
var bifoldl = function (dict) {
    return dict.bifoldl;
};
var bifoldableJoker = function (dictFoldable) {
    return new Bifoldable(function (dictMonoid) {
        return function (v) {
            return function (r) {
                return function (v1) {
                    return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(r)(v1);
                };
            };
        };
    }, function (v) {
        return function (r) {
            return function (u) {
                return function (v1) {
                    return Data_Foldable.foldl(dictFoldable)(r)(u)(v1);
                };
            };
        };
    }, function (v) {
        return function (r) {
            return function (u) {
                return function (v1) {
                    return Data_Foldable.foldr(dictFoldable)(r)(u)(v1);
                };
            };
        };
    });
};
var bifoldableClown = function (dictFoldable) {
    return new Bifoldable(function (dictMonoid) {
        return function (l) {
            return function (v) {
                return function (v1) {
                    return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(l)(v1);
                };
            };
        };
    }, function (l) {
        return function (v) {
            return function (u) {
                return function (v1) {
                    return Data_Foldable.foldl(dictFoldable)(l)(u)(v1);
                };
            };
        };
    }, function (l) {
        return function (v) {
            return function (u) {
                return function (v1) {
                    return Data_Foldable.foldr(dictFoldable)(l)(u)(v1);
                };
            };
        };
    });
};
var bifoldMapDefaultR = function (dictBifoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (g) {
                return bifoldr(dictBifoldable)(function ($99) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(f($99));
                })(function ($100) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(g($100));
                })(Data_Monoid.mempty(dictMonoid));
            };
        };
    };
};
var bifoldMapDefaultL = function (dictBifoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (g) {
                return bifoldl(dictBifoldable)(function (m) {
                    return function (a) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(m)(f(a));
                    };
                })(function (m) {
                    return function (b) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(m)(g(b));
                    };
                })(Data_Monoid.mempty(dictMonoid));
            };
        };
    };
};
var bifoldMap = function (dict) {
    return dict.bifoldMap;
};
var bifoldableFlip = function (dictBifoldable) {
    return new Bifoldable(function (dictMonoid) {
        return function (r) {
            return function (l) {
                return function (v) {
                    return bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v);
                };
            };
        };
    }, function (r) {
        return function (l) {
            return function (u) {
                return function (v) {
                    return bifoldl(dictBifoldable)(l)(r)(u)(v);
                };
            };
        };
    }, function (r) {
        return function (l) {
            return function (u) {
                return function (v) {
                    return bifoldr(dictBifoldable)(l)(r)(u)(v);
                };
            };
        };
    });
};
var bifoldableWrap = function (dictBifoldable) {
    return new Bifoldable(function (dictMonoid) {
        return function (l) {
            return function (r) {
                return function (v) {
                    return bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v);
                };
            };
        };
    }, function (l) {
        return function (r) {
            return function (u) {
                return function (v) {
                    return bifoldl(dictBifoldable)(l)(r)(u)(v);
                };
            };
        };
    }, function (l) {
        return function (r) {
            return function (u) {
                return function (v) {
                    return bifoldr(dictBifoldable)(l)(r)(u)(v);
                };
            };
        };
    });
};
var bifoldlDefault = function (dictBifoldable) {
    return function (f) {
        return function (g) {
            return function (z) {
                return function (p) {
                    return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(Data_Newtype.unwrap(Data_Newtype.newtypeDual)(bifoldMap(dictBifoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn)))(function ($101) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(f)($101)));
                    })(function ($102) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(g)($102)));
                    })(p)))(z);
                };
            };
        };
    };
};
var bifoldrDefault = function (dictBifoldable) {
    return function (f) {
        return function (g) {
            return function (z) {
                return function (p) {
                    return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(bifoldMap(dictBifoldable)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(function ($103) {
                        return Data_Monoid_Endo.Endo(f($103));
                    })(function ($104) {
                        return Data_Monoid_Endo.Endo(g($104));
                    })(p))(z);
                };
            };
        };
    };
};
var bifoldableProduct = function (dictBifoldable) {
    return function (dictBifoldable1) {
        return new Bifoldable(function (dictMonoid) {
            return function (l) {
                return function (r) {
                    return function (v) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v.value0))(bifoldMap(dictBifoldable1)(dictMonoid)(l)(r)(v.value1));
                    };
                };
            };
        }, function (l) {
            return function (r) {
                return function (u) {
                    return function (m) {
                        return bifoldlDefault(bifoldableProduct(dictBifoldable)(dictBifoldable1))(l)(r)(u)(m);
                    };
                };
            };
        }, function (l) {
            return function (r) {
                return function (u) {
                    return function (m) {
                        return bifoldrDefault(bifoldableProduct(dictBifoldable)(dictBifoldable1))(l)(r)(u)(m);
                    };
                };
            };
        });
    };
};
var bifold = function (dictBifoldable) {
    return function (dictMonoid) {
        return bifoldMap(dictBifoldable)(dictMonoid)(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn));
    };
};
var biany = function (dictBifoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function (q) {
                return function ($105) {
                    return Data_Newtype.unwrap(Data_Newtype.newtypeDisj)(bifoldMap(dictBifoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra.HeytingAlgebra0()))(function ($106) {
                        return Data_Monoid_Disj.Disj(p($106));
                    })(function ($107) {
                        return Data_Monoid_Disj.Disj(q($107));
                    })($105));
                };
            };
        };
    };
};
var biall = function (dictBifoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function (q) {
                return function ($108) {
                    return Data_Newtype.unwrap(Data_Newtype.newtypeConj)(bifoldMap(dictBifoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra.HeytingAlgebra0()))(function ($109) {
                        return Data_Monoid_Conj.Conj(p($109));
                    })(function ($110) {
                        return Data_Monoid_Conj.Conj(q($110));
                    })($108));
                };
            };
        };
    };
};
module.exports = {
    bifoldMap: bifoldMap,
    bifoldl: bifoldl,
    bifoldr: bifoldr,
    Bifoldable: Bifoldable,
    bifoldrDefault: bifoldrDefault,
    bifoldlDefault: bifoldlDefault,
    bifoldMapDefaultR: bifoldMapDefaultR,
    bifoldMapDefaultL: bifoldMapDefaultL,
    bifold: bifold,
    bitraverse_: bitraverse_,
    bifor_: bifor_,
    bisequence_: bisequence_,
    biany: biany,
    biall: biall,
    bifoldableClown: bifoldableClown,
    bifoldableJoker: bifoldableJoker,
    bifoldableFlip: bifoldableFlip,
    bifoldableProduct: bifoldableProduct,
    bifoldableWrap: bifoldableWrap
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Category/index.js":14,"../Control.Semigroupoid/index.js":61,"../Data.Bifunctor.Clown/index.js":101,"../Data.Bifunctor.Flip/index.js":102,"../Data.Bifunctor.Joker/index.js":103,"../Data.Bifunctor.Product/index.js":104,"../Data.Bifunctor.Wrap/index.js":105,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Monoid.Conj/index.js":213,"../Data.Monoid.Disj/index.js":214,"../Data.Monoid.Dual/index.js":215,"../Data.Monoid.Endo/index.js":216,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Semigroup/index.js":248,"../Data.Unit/index.js":289,"../Prelude/index.js":385}],101:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Biapplicative = require("../Control.Biapplicative/index.js");
var Control_Biapply = require("../Control.Biapply/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Clown = function (x) {
    return x;
};
var showClown = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Clown " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var ordClown = function (dictOrd) {
    return dictOrd;
};
var newtypeClown = new Data_Newtype.Newtype(function (n) {
    return n;
}, Clown);
var functorClown = new Data_Functor.Functor(function (v) {
    return function (v1) {
        return v1;
    };
});
var eqClown = function (dictEq) {
    return dictEq;
};
var bifunctorClown = function (dictFunctor) {
    return new Data_Bifunctor.Bifunctor(function (f) {
        return function (v) {
            return function (v1) {
                return Data_Functor.map(dictFunctor)(f)(v1);
            };
        };
    });
};
var biapplyClown = function (dictApply) {
    return new Control_Biapply.Biapply(function () {
        return bifunctorClown(dictApply.Functor0());
    }, function (v) {
        return function (v1) {
            return Control_Apply.apply(dictApply)(v)(v1);
        };
    });
};
var biapplicativeClown = function (dictApplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return biapplyClown(dictApplicative.Apply0());
    }, function (a) {
        return function (v) {
            return Control_Applicative.pure(dictApplicative)(a);
        };
    });
};
module.exports = {
    Clown: Clown,
    newtypeClown: newtypeClown,
    eqClown: eqClown,
    ordClown: ordClown,
    showClown: showClown,
    functorClown: functorClown,
    bifunctorClown: bifunctorClown,
    biapplyClown: biapplyClown,
    biapplicativeClown: biapplicativeClown
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Biapplicative/index.js":10,"../Control.Biapply/index.js":11,"../Data.Bifunctor/index.js":106,"../Data.Eq/index.js":135,"../Data.Functor/index.js":153,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Prelude/index.js":385}],102:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Biapplicative = require("../Control.Biapplicative/index.js");
var Control_Biapply = require("../Control.Biapply/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Flip = function (x) {
    return x;
};
var showFlip = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Flip " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var ordFlip = function (dictOrd) {
    return dictOrd;
};
var newtypeFlip = new Data_Newtype.Newtype(function (n) {
    return n;
}, Flip);
var functorFlip = function (dictBifunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return Data_Bifunctor.lmap(dictBifunctor)(f)(v);
        };
    });
};
var eqFlip = function (dictEq) {
    return dictEq;
};
var bifunctorFlip = function (dictBifunctor) {
    return new Data_Bifunctor.Bifunctor(function (f) {
        return function (g) {
            return function (v) {
                return Data_Bifunctor.bimap(dictBifunctor)(g)(f)(v);
            };
        };
    });
};
var biapplyFlip = function (dictBiapply) {
    return new Control_Biapply.Biapply(function () {
        return bifunctorFlip(dictBiapply.Bifunctor0());
    }, function (v) {
        return function (v1) {
            return Control_Biapply.biapply(dictBiapply)(v)(v1);
        };
    });
};
var biapplicativeFlip = function (dictBiapplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return biapplyFlip(dictBiapplicative.Biapply0());
    }, function (a) {
        return function (b) {
            return Control_Biapplicative.bipure(dictBiapplicative)(b)(a);
        };
    });
};
module.exports = {
    Flip: Flip,
    newtypeFlip: newtypeFlip,
    eqFlip: eqFlip,
    ordFlip: ordFlip,
    showFlip: showFlip,
    functorFlip: functorFlip,
    bifunctorFlip: bifunctorFlip,
    biapplyFlip: biapplyFlip,
    biapplicativeFlip: biapplicativeFlip
};

},{"../Control.Biapplicative/index.js":10,"../Control.Biapply/index.js":11,"../Data.Bifunctor/index.js":106,"../Data.Eq/index.js":135,"../Data.Functor/index.js":153,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Prelude/index.js":385}],103:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Biapplicative = require("../Control.Biapplicative/index.js");
var Control_Biapply = require("../Control.Biapply/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Joker = function (x) {
    return x;
};
var showJoker = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Joker " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var ordJoker = function (dictOrd) {
    return dictOrd;
};
var newtypeJoker = new Data_Newtype.Newtype(function (n) {
    return n;
}, Joker);
var functorJoker = function (dictFunctor) {
    return new Data_Functor.Functor(function (g) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(g)(v);
        };
    });
};
var eqJoker = function (dictEq) {
    return dictEq;
};
var bifunctorJoker = function (dictFunctor) {
    return new Data_Bifunctor.Bifunctor(function (v) {
        return function (g) {
            return function (v1) {
                return Data_Functor.map(dictFunctor)(g)(v1);
            };
        };
    });
};
var biapplyJoker = function (dictApply) {
    return new Control_Biapply.Biapply(function () {
        return bifunctorJoker(dictApply.Functor0());
    }, function (v) {
        return function (v1) {
            return Control_Apply.apply(dictApply)(v)(v1);
        };
    });
};
var biapplicativeJoker = function (dictApplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return biapplyJoker(dictApplicative.Apply0());
    }, function (v) {
        return function (b) {
            return Control_Applicative.pure(dictApplicative)(b);
        };
    });
};
module.exports = {
    Joker: Joker,
    newtypeJoker: newtypeJoker,
    eqJoker: eqJoker,
    ordJoker: ordJoker,
    showJoker: showJoker,
    functorJoker: functorJoker,
    bifunctorJoker: bifunctorJoker,
    biapplyJoker: biapplyJoker,
    biapplicativeJoker: biapplicativeJoker
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Biapplicative/index.js":10,"../Control.Biapply/index.js":11,"../Data.Bifunctor/index.js":106,"../Data.Eq/index.js":135,"../Data.Functor/index.js":153,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Prelude/index.js":385}],104:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Biapplicative = require("../Control.Biapplicative/index.js");
var Control_Biapply = require("../Control.Biapply/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Product = (function () {
    function Product(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Product.create = function (value0) {
        return function (value1) {
            return new Product(value0, value1);
        };
    };
    return Product;
})();
var showProduct = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            return "(Product " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var eqProduct = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
            };
        });
    };
};
var ordProduct = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqProduct(dictOrd.Eq0())(dictOrd1.Eq0());
        }, function (x) {
            return function (y) {
                var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                if (v instanceof Data_Ordering.LT) {
                    return Data_Ordering.LT.value;
                };
                if (v instanceof Data_Ordering.GT) {
                    return Data_Ordering.GT.value;
                };
                return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
            };
        });
    };
};
var bifunctorProduct = function (dictBifunctor) {
    return function (dictBifunctor1) {
        return new Data_Bifunctor.Bifunctor(function (f) {
            return function (g) {
                return function (v) {
                    return new Product(Data_Bifunctor.bimap(dictBifunctor)(f)(g)(v.value0), Data_Bifunctor.bimap(dictBifunctor1)(f)(g)(v.value1));
                };
            };
        });
    };
};
var biapplyProduct = function (dictBiapply) {
    return function (dictBiapply1) {
        return new Control_Biapply.Biapply(function () {
            return bifunctorProduct(dictBiapply.Bifunctor0())(dictBiapply1.Bifunctor0());
        }, function (v) {
            return function (v1) {
                return new Product(Control_Biapply.biapply(dictBiapply)(v.value0)(v1.value0), Control_Biapply.biapply(dictBiapply1)(v.value1)(v1.value1));
            };
        });
    };
};
var biapplicativeProduct = function (dictBiapplicative) {
    return function (dictBiapplicative1) {
        return new Control_Biapplicative.Biapplicative(function () {
            return biapplyProduct(dictBiapplicative.Biapply0())(dictBiapplicative1.Biapply0());
        }, function (a) {
            return function (b) {
                return new Product(Control_Biapplicative.bipure(dictBiapplicative)(a)(b), Control_Biapplicative.bipure(dictBiapplicative1)(a)(b));
            };
        });
    };
};
module.exports = {
    Product: Product,
    eqProduct: eqProduct,
    ordProduct: ordProduct,
    showProduct: showProduct,
    bifunctorProduct: bifunctorProduct,
    biapplyProduct: biapplyProduct,
    biapplicativeProduct: biapplicativeProduct
};

},{"../Control.Biapplicative/index.js":10,"../Control.Biapply/index.js":11,"../Data.Bifunctor/index.js":106,"../Data.Eq/index.js":135,"../Data.HeytingAlgebra/index.js":162,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Prelude/index.js":385}],105:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Biapplicative = require("../Control.Biapplicative/index.js");
var Control_Biapply = require("../Control.Biapply/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Wrap = function (x) {
    return x;
};
var showWrap = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Wrap " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var ordWrap = function (dictOrd) {
    return dictOrd;
};
var newtypeWrap = new Data_Newtype.Newtype(function (n) {
    return n;
}, Wrap);
var functorWrap = function (dictBifunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return Data_Bifunctor.rmap(dictBifunctor)(f)(v);
        };
    });
};
var eqWrap = function (dictEq) {
    return dictEq;
};
var bifunctorWrap = function (dictBifunctor) {
    return new Data_Bifunctor.Bifunctor(function (f) {
        return function (g) {
            return function (v) {
                return Data_Bifunctor.bimap(dictBifunctor)(f)(g)(v);
            };
        };
    });
};
var biapplyWrap = function (dictBiapply) {
    return new Control_Biapply.Biapply(function () {
        return bifunctorWrap(dictBiapply.Bifunctor0());
    }, function (v) {
        return function (v1) {
            return Control_Biapply.biapply(dictBiapply)(v)(v1);
        };
    });
};
var biapplicativeWrap = function (dictBiapplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return biapplyWrap(dictBiapplicative.Biapply0());
    }, function (a) {
        return function (b) {
            return Control_Biapplicative.bipure(dictBiapplicative)(a)(b);
        };
    });
};
module.exports = {
    Wrap: Wrap,
    newtypeWrap: newtypeWrap,
    eqWrap: eqWrap,
    ordWrap: ordWrap,
    showWrap: showWrap,
    functorWrap: functorWrap,
    bifunctorWrap: bifunctorWrap,
    biapplyWrap: biapplyWrap,
    biapplicativeWrap: biapplicativeWrap
};

},{"../Control.Biapplicative/index.js":10,"../Control.Biapply/index.js":11,"../Data.Bifunctor/index.js":106,"../Data.Eq/index.js":135,"../Data.Functor/index.js":153,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Prelude/index.js":385}],106:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Bifunctor = function (bimap) {
    this.bimap = bimap;
};
var bimap = function (dict) {
    return dict.bimap;
};
var lmap = function (dictBifunctor) {
    return function (f) {
        return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var rmap = function (dictBifunctor) {
    return bimap(dictBifunctor)(Control_Category.identity(Control_Category.categoryFn));
};
module.exports = {
    bimap: bimap,
    Bifunctor: Bifunctor,
    lmap: lmap,
    rmap: rmap
};

},{"../Control.Category/index.js":14}],107:[function(require,module,exports){
// module Data.BigInt

var bigInt = require("big-integer");

exports["fromBase'"] = function(just) {
  return function(nothing) {
    return function(b) {
      return function(s) {
        try {
          var x = bigInt(s, b);
          return just(x);
        } catch (err) {
          return nothing;
        }
      };
    };
  };
};

function truncate(n) {
  if (n > 0) return Math.floor(n);
  return Math.ceil(n);
}

exports["fromNumber'"] = function(just) {
  return function(nothing) {
      return function(n) {
        try {
          var x = bigInt(truncate(n));
          return just(x);
        } catch (err) {
          return nothing;
        }
      };
  };
};

exports.fromInt = function(n) {
  return bigInt(n);
};

exports.toBase = function(base) {
  return function (x) {
    return x.toString(base);
  };
};

exports.toNumber = function(x) {
  return x.toJSNumber();
};

exports.biAdd = function(x) {
  return function(y) {
    return x.add(y);
  };
};

exports.biMul = function(x) {
  return function(y) {
    return x.multiply(y);
  };
};

exports.biSub = function(x) {
  return function(y) {
    return x.minus(y);
  };
};

exports.biMod = function(x) {
  return function(y) {
    return x.mod(y);
  };
};

exports.biDiv = function(x) {
  return function(y) {
    return x.divide(y);
  };
};

exports.biEquals = function(x) {
  return function(y) {
    return x.equals(y);
  };
};

exports.biCompare = function(x) {
  return function(y) {
    return x.compare(y);
  };
};

exports.abs = function(x) {
  return x.abs();
};

exports.even = function(x) {
  return x.isEven();
};

exports.odd = function(x) {
  return x.isOdd();
};

exports.prime = function(x) {
  return x.isPrime();
};

exports.pow = function(x) {
  return function(y) {
    return x.pow(y);
  };
};

exports.not = function(x) {
  return x.not();
  };

exports.or = function(x) {
  return function(y) {
    return x.or(y);
  };
};

exports.xor = function(x) {
  return function(y) {
    return x.xor(y);
  };
};

exports.and = function(x) {
  return function(y) {
    return x.and(y);
  };
};

exports.shl = function(x) {
  return function(n) {
    return x.shiftLeft(n);
  };
};

exports.shr = function(x) {
  return function(n) {
    return x.shiftRight(n);
  };
};

exports.digitsInBase = function(radix) {
  return function(x) {
    return x.toArray(radix);
  };
};

},{"big-integer":1}],108:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Array_NonEmpty = require("../Data.Array.NonEmpty/index.js");
var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_String_NonEmpty = require("../Data.String.NonEmpty/index.js");
var Data_String_NonEmpty_Internal = require("../Data.String.NonEmpty.Internal/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var toString = $foreign.toBase(10);
var toBase$prime = function (i) {
    return function (bi) {
        return Data_Maybe.fromJust()(Data_String_NonEmpty_Internal.fromString($foreign.toBase(i)(bi)));
    };
};
var toNonEmptyString = toBase$prime(10);
var showBigInt = new Data_Show.Show(function (x) {
    return "fromString \"" + (toString(x) + "\"");
});
var semiringBigInt = new Data_Semiring.Semiring($foreign.biAdd, $foreign.biMul, $foreign.fromInt(1), $foreign.fromInt(0));
var ringBigInt = new Data_Ring.Ring(function () {
    return semiringBigInt;
}, $foreign.biSub);
var rem = $foreign.biMod;
var quot = $foreign.biDiv;
var fromNumber = $foreign["fromNumber'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var fromBase = $foreign["fromBase'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var fromString = fromBase(10);
var eqBigInt = new Data_Eq.Eq($foreign.biEquals);
var ordBigInt = new Data_Ord.Ord(function () {
    return eqBigInt;
}, function (x) {
    return function (y) {
        var v = $foreign.biCompare(x)(y);
        if (v === 1) {
            return Data_Ordering.GT.value;
        };
        if (v === 0) {
            return Data_Ordering.EQ.value;
        };
        return Data_Ordering.LT.value;
    };
});
var commutativeRingBigInt = new Data_CommutativeRing.CommutativeRing(function () {
    return ringBigInt;
});
var euclideanRingBigInt = new Data_EuclideanRing.EuclideanRing(function () {
    return commutativeRingBigInt;
}, function ($4) {
    return Data_Int.floor($foreign.toNumber($foreign.abs($4)));
}, function (x) {
    return function (y) {
        return $foreign.biDiv(Data_Ring.sub(ringBigInt)(x)(Data_EuclideanRing.mod(euclideanRingBigInt)(x)(y)))(y);
    };
}, function (x) {
    return function (y) {
        var yy = $foreign.abs(y);
        return $foreign.biMod(Data_Semiring.add(semiringBigInt)($foreign.biMod(x)(yy))(yy))(yy);
    };
});
module.exports = {
    fromString: fromString,
    fromBase: fromBase,
    fromNumber: fromNumber,
    toString: toString,
    toNonEmptyString: toNonEmptyString,
    "toBase'": toBase$prime,
    quot: quot,
    rem: rem,
    eqBigInt: eqBigInt,
    ordBigInt: ordBigInt,
    showBigInt: showBigInt,
    semiringBigInt: semiringBigInt,
    ringBigInt: ringBigInt,
    commutativeRingBigInt: commutativeRingBigInt,
    euclideanRingBigInt: euclideanRingBigInt,
    fromInt: $foreign.fromInt,
    toBase: $foreign.toBase,
    digitsInBase: $foreign.digitsInBase,
    abs: $foreign.abs,
    even: $foreign.even,
    odd: $foreign.odd,
    prime: $foreign.prime,
    pow: $foreign.pow,
    not: $foreign.not,
    or: $foreign.or,
    xor: $foreign.xor,
    and: $foreign.and,
    shl: $foreign.shl,
    shr: $foreign.shr,
    toNumber: $foreign.toNumber
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Array.NonEmpty/index.js":93,"../Data.CommutativeRing/index.js":118,"../Data.Eq/index.js":135,"../Data.EuclideanRing/index.js":137,"../Data.Function/index.js":145,"../Data.Int/index.js":167,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.String.NonEmpty.Internal/index.js":264,"../Data.String.NonEmpty/index.js":265,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385,"./foreign.js":107}],109:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Category = require("../Control.Category/index.js");
var Data_Bifoldable = require("../Data.Bifoldable/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Bifunctor_Clown = require("../Data.Bifunctor.Clown/index.js");
var Data_Bifunctor_Flip = require("../Data.Bifunctor.Flip/index.js");
var Data_Bifunctor_Joker = require("../Data.Bifunctor.Joker/index.js");
var Data_Bifunctor_Product = require("../Data.Bifunctor.Product/index.js");
var Data_Bifunctor_Wrap = require("../Data.Bifunctor.Wrap/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Prelude = require("../Prelude/index.js");
var Bitraversable = function (Bifoldable1, Bifunctor0, bisequence, bitraverse) {
    this.Bifoldable1 = Bifoldable1;
    this.Bifunctor0 = Bifunctor0;
    this.bisequence = bisequence;
    this.bitraverse = bitraverse;
};
var bitraverse = function (dict) {
    return dict.bitraverse;
};
var lfor = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return bitraverse(dictBitraversable)(dictApplicative)(f)(Control_Applicative.pure(dictApplicative))(t);
            };
        };
    };
};
var ltraverse = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (f) {
            return bitraverse(dictBitraversable)(dictApplicative)(f)(Control_Applicative.pure(dictApplicative));
        };
    };
};
var rfor = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return bitraverse(dictBitraversable)(dictApplicative)(Control_Applicative.pure(dictApplicative))(f)(t);
            };
        };
    };
};
var rtraverse = function (dictBitraversable) {
    return function (dictApplicative) {
        return bitraverse(dictBitraversable)(dictApplicative)(Control_Applicative.pure(dictApplicative));
    };
};
var bitraversableJoker = function (dictTraversable) {
    return new Bitraversable(function () {
        return Data_Bifoldable.bifoldableJoker(dictTraversable.Foldable1());
    }, function () {
        return Data_Bifunctor_Joker.bifunctorJoker(dictTraversable.Functor0());
    }, function (dictApplicative) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Joker.Joker)(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v));
        };
    }, function (dictApplicative) {
        return function (v) {
            return function (r) {
                return function (v1) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Joker.Joker)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(r)(v1));
                };
            };
        };
    });
};
var bitraversableClown = function (dictTraversable) {
    return new Bitraversable(function () {
        return Data_Bifoldable.bifoldableClown(dictTraversable.Foldable1());
    }, function () {
        return Data_Bifunctor_Clown.bifunctorClown(dictTraversable.Functor0());
    }, function (dictApplicative) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Clown.Clown)(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v));
        };
    }, function (dictApplicative) {
        return function (l) {
            return function (v) {
                return function (v1) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Clown.Clown)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(l)(v1));
                };
            };
        };
    });
};
var bisequenceDefault = function (dictBitraversable) {
    return function (dictApplicative) {
        return bitraverse(dictBitraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn));
    };
};
var bisequence = function (dict) {
    return dict.bisequence;
};
var bitraversableFlip = function (dictBitraversable) {
    return new Bitraversable(function () {
        return Data_Bifoldable.bifoldableFlip(dictBitraversable.Bifoldable1());
    }, function () {
        return Data_Bifunctor_Flip.bifunctorFlip(dictBitraversable.Bifunctor0());
    }, function (dictApplicative) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Flip.Flip)(bisequence(dictBitraversable)(dictApplicative)(v));
        };
    }, function (dictApplicative) {
        return function (r) {
            return function (l) {
                return function (v) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Flip.Flip)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v));
                };
            };
        };
    });
};
var bitraversableProduct = function (dictBitraversable) {
    return function (dictBitraversable1) {
        return new Bitraversable(function () {
            return Data_Bifoldable.bifoldableProduct(dictBitraversable.Bifoldable1())(dictBitraversable1.Bifoldable1());
        }, function () {
            return Data_Bifunctor_Product.bifunctorProduct(dictBitraversable.Bifunctor0())(dictBitraversable1.Bifunctor0());
        }, function (dictApplicative) {
            return function (v) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Product.Product.create)(bisequence(dictBitraversable)(dictApplicative)(v.value0)))(bisequence(dictBitraversable1)(dictApplicative)(v.value1));
            };
        }, function (dictApplicative) {
            return function (l) {
                return function (r) {
                    return function (v) {
                        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Product.Product.create)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v.value0)))(bitraverse(dictBitraversable1)(dictApplicative)(l)(r)(v.value1));
                    };
                };
            };
        });
    };
};
var bitraversableWrap = function (dictBitraversable) {
    return new Bitraversable(function () {
        return Data_Bifoldable.bifoldableWrap(dictBitraversable.Bifoldable1());
    }, function () {
        return Data_Bifunctor_Wrap.bifunctorWrap(dictBitraversable.Bifunctor0());
    }, function (dictApplicative) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Wrap.Wrap)(bisequence(dictBitraversable)(dictApplicative)(v));
        };
    }, function (dictApplicative) {
        return function (l) {
            return function (r) {
                return function (v) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Wrap.Wrap)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v));
                };
            };
        };
    });
};
var bitraverseDefault = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (f) {
            return function (g) {
                return function (t) {
                    return bisequence(dictBitraversable)(dictApplicative)(Data_Bifunctor.bimap(dictBitraversable.Bifunctor0())(f)(g)(t));
                };
            };
        };
    };
};
var bifor = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse(dictBitraversable)(dictApplicative)(f)(g)(t);
                };
            };
        };
    };
};
module.exports = {
    Bitraversable: Bitraversable,
    bitraverse: bitraverse,
    bisequence: bisequence,
    bitraverseDefault: bitraverseDefault,
    bisequenceDefault: bisequenceDefault,
    ltraverse: ltraverse,
    rtraverse: rtraverse,
    bifor: bifor,
    lfor: lfor,
    rfor: rfor,
    bitraversableClown: bitraversableClown,
    bitraversableJoker: bitraversableJoker,
    bitraversableFlip: bitraversableFlip,
    bitraversableProduct: bitraversableProduct,
    bitraversableWrap: bitraversableWrap
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Category/index.js":14,"../Data.Bifoldable/index.js":100,"../Data.Bifunctor.Clown/index.js":101,"../Data.Bifunctor.Flip/index.js":102,"../Data.Bifunctor.Joker/index.js":103,"../Data.Bifunctor.Product/index.js":104,"../Data.Bifunctor.Wrap/index.js":105,"../Data.Bifunctor/index.js":106,"../Data.Functor/index.js":153,"../Data.Traversable/index.js":281,"../Prelude/index.js":385}],110:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var otherwise = true;
module.exports = {
    otherwise: otherwise
};

},{}],111:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var BooleanAlgebra = function (HeytingAlgebra0) {
    this.HeytingAlgebra0 = HeytingAlgebra0;
};
var BooleanAlgebraRecord = function (HeytingAlgebraRecord0) {
    this.HeytingAlgebraRecord0 = HeytingAlgebraRecord0;
};
var booleanAlgebraUnit = new BooleanAlgebra(function () {
    return Data_HeytingAlgebra.heytingAlgebraUnit;
});
var booleanAlgebraRecordNil = new BooleanAlgebraRecord(function () {
    return Data_HeytingAlgebra.heytingAlgebraRecordNil;
});
var booleanAlgebraRecordCons = function (dictIsSymbol) {
    return function (dictCons) {
        return function (dictBooleanAlgebraRecord) {
            return function (dictBooleanAlgebra) {
                return new BooleanAlgebraRecord(function () {
                    return Data_HeytingAlgebra.heytingAlgebraRecordCons(dictIsSymbol)(dictCons)(dictBooleanAlgebraRecord.HeytingAlgebraRecord0())(dictBooleanAlgebra.HeytingAlgebra0());
                });
            };
        };
    };
};
var booleanAlgebraRecord = function (dictRowToList) {
    return function (dictBooleanAlgebraRecord) {
        return new BooleanAlgebra(function () {
            return Data_HeytingAlgebra.heytingAlgebraRecord(dictRowToList)(dictBooleanAlgebraRecord.HeytingAlgebraRecord0());
        });
    };
};
var booleanAlgebraFn = function (dictBooleanAlgebra) {
    return new BooleanAlgebra(function () {
        return Data_HeytingAlgebra.heytingAlgebraFunction(dictBooleanAlgebra.HeytingAlgebra0());
    });
};
var booleanAlgebraBoolean = new BooleanAlgebra(function () {
    return Data_HeytingAlgebra.heytingAlgebraBoolean;
});
module.exports = {
    BooleanAlgebra: BooleanAlgebra,
    BooleanAlgebraRecord: BooleanAlgebraRecord,
    booleanAlgebraBoolean: booleanAlgebraBoolean,
    booleanAlgebraUnit: booleanAlgebraUnit,
    booleanAlgebraFn: booleanAlgebraFn,
    booleanAlgebraRecord: booleanAlgebraRecord,
    booleanAlgebraRecordNil: booleanAlgebraRecordNil,
    booleanAlgebraRecordCons: booleanAlgebraRecordCons
};

},{"../Data.HeytingAlgebra/index.js":162,"../Data.Symbol/index.js":274,"../Data.Unit/index.js":289}],112:[function(require,module,exports){
"use strict";

exports.topInt = 2147483647;
exports.bottomInt = -2147483648;

exports.topChar = String.fromCharCode(65535);
exports.bottomChar = String.fromCharCode(0);

exports.topNumber = Number.POSITIVE_INFINITY;
exports.bottomNumber = Number.NEGATIVE_INFINITY;

},{}],113:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Bounded = function (Ord0, bottom, top) {
    this.Ord0 = Ord0;
    this.bottom = bottom;
    this.top = top;
};
var top = function (dict) {
    return dict.top;
};
var boundedUnit = new Bounded(function () {
    return Data_Ord.ordUnit;
}, Data_Unit.unit, Data_Unit.unit);
var boundedOrdering = new Bounded(function () {
    return Data_Ord.ordOrdering;
}, Data_Ordering.LT.value, Data_Ordering.GT.value);
var boundedNumber = new Bounded(function () {
    return Data_Ord.ordNumber;
}, $foreign.bottomNumber, $foreign.topNumber);
var boundedInt = new Bounded(function () {
    return Data_Ord.ordInt;
}, $foreign.bottomInt, $foreign.topInt);
var boundedChar = new Bounded(function () {
    return Data_Ord.ordChar;
}, $foreign.bottomChar, $foreign.topChar);
var boundedBoolean = new Bounded(function () {
    return Data_Ord.ordBoolean;
}, false, true);
var bottom = function (dict) {
    return dict.bottom;
};
module.exports = {
    Bounded: Bounded,
    bottom: bottom,
    top: top,
    boundedBoolean: boundedBoolean,
    boundedInt: boundedInt,
    boundedChar: boundedChar,
    boundedOrdering: boundedOrdering,
    boundedUnit: boundedUnit,
    boundedNumber: boundedNumber
};

},{"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Unit/index.js":289,"./foreign.js":112}],114:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_CatQueue = require("../Data.CatQueue/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");
var Prelude = require("../Prelude/index.js");
var CatNil = (function () {
    function CatNil() {

    };
    CatNil.value = new CatNil();
    return CatNil;
})();
var CatCons = (function () {
    function CatCons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    CatCons.create = function (value0) {
        return function (value1) {
            return new CatCons(value0, value1);
        };
    };
    return CatCons;
})();
var showCatList = function (dictShow) {
    return new Data_Show.Show(function (v) {
        if (v instanceof CatNil) {
            return "CatNil";
        };
        if (v instanceof CatCons) {
            return "(CatList " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(Data_CatQueue.showCatQueue(showCatList(dictShow)))(v.value1) + ")")));
        };
        throw new Error("Failed pattern match at Data.CatList (line 148, column 1 - line 148, column 51): " + [ v.constructor.name ]);
    });
};
var $$null = function (v) {
    if (v instanceof CatNil) {
        return true;
    };
    return false;
};
var link = function (v) {
    return function (v1) {
        if (v instanceof CatNil) {
            return v1;
        };
        if (v1 instanceof CatNil) {
            return v;
        };
        if (v instanceof CatCons) {
            return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(v1));
        };
        throw new Error("Failed pattern match at Data.CatList (line 109, column 1 - line 109, column 54): " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var foldr = function (k) {
    return function (b) {
        return function (q) {
            var foldl = function ($copy_v) {
                return function ($copy_c) {
                    return function ($copy_v1) {
                        var $tco_var_v = $copy_v;
                        var $tco_var_c = $copy_c;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(v, c, v1) {
                            if (v1 instanceof Data_List_Types.Nil) {
                                $tco_done = true;
                                return c;
                            };
                            if (v1 instanceof Data_List_Types.Cons) {
                                $tco_var_v = v;
                                $tco_var_c = v(c)(v1.value0);
                                $copy_v1 = v1.value1;
                                return;
                            };
                            throw new Error("Failed pattern match at Data.CatList (line 125, column 3 - line 125, column 59): " + [ v.constructor.name, c.constructor.name, v1.constructor.name ]);
                        };
                        while (!$tco_done) {
                            $tco_result = $tco_loop($tco_var_v, $tco_var_c, $copy_v1);
                        };
                        return $tco_result;
                    };
                };
            };
            var go = function ($copy_xs) {
                return function ($copy_ys) {
                    var $tco_var_xs = $copy_xs;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(xs, ys) {
                        var v = Data_CatQueue.uncons(xs);
                        if (v instanceof Data_Maybe.Nothing) {
                            $tco_done = true;
                            return foldl(function (x) {
                                return function (i) {
                                    return i(x);
                                };
                            })(b)(ys);
                        };
                        if (v instanceof Data_Maybe.Just) {
                            $tco_var_xs = v.value0.value1;
                            $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);
                            return;
                        };
                        throw new Error("Failed pattern match at Data.CatList (line 121, column 14 - line 123, column 67): " + [ v.constructor.name ]);
                    };
                    while (!$tco_done) {
                        $tco_result = $tco_loop($tco_var_xs, $copy_ys);
                    };
                    return $tco_result;
                };
            };
            return go(q)(Data_List_Types.Nil.value);
        };
    };
};
var uncons = function (v) {
    if (v instanceof CatNil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof CatCons) {
        return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, (function () {
            var $44 = Data_CatQueue["null"](v.value1);
            if ($44) {
                return CatNil.value;
            };
            return foldr(link)(CatNil.value)(v.value1);
        })()));
    };
    throw new Error("Failed pattern match at Data.CatList (line 100, column 1 - line 100, column 61): " + [ v.constructor.name ]);
};
var foldableCatList = new Data_Foldable.Foldable(function (dictMonoid) {
    return Data_Foldable.foldMapDefaultL(foldableCatList)(dictMonoid);
}, function (f) {
    var go = function ($copy_acc) {
        return function ($copy_q) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, q) {
                var v = uncons(q);
                if (v instanceof Data_Maybe.Just) {
                    $tco_var_acc = f(acc)(v.value0.value0);
                    $copy_q = v.value0.value1;
                    return;
                };
                if (v instanceof Data_Maybe.Nothing) {
                    $tco_done = true;
                    return acc;
                };
                throw new Error("Failed pattern match at Data.CatList (line 157, column 16 - line 159, column 22): " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_q);
            };
            return $tco_result;
        };
    };
    return go;
}, function (f) {
    return function (s) {
        return function (l) {
            return Data_Foldable.foldrDefault(foldableCatList)(f)(s)(l);
        };
    };
});
var length = Data_Foldable.length(foldableCatList)(Data_Semiring.semiringInt);
var foldMap = function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof CatNil) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof CatCons) {
                var d = (function () {
                    var $53 = Data_CatQueue["null"](v.value1);
                    if ($53) {
                        return CatNil.value;
                    };
                    return foldr(link)(CatNil.value)(v.value1);
                })();
                return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(foldMap(dictMonoid)(f)(d));
            };
            throw new Error("Failed pattern match at Data.CatList (line 135, column 1 - line 135, column 62): " + [ f.constructor.name, v.constructor.name ]);
        };
    };
};
var empty = CatNil.value;
var append = link;
var cons = function (a) {
    return function (cat) {
        return append(new CatCons(a, Data_CatQueue.empty))(cat);
    };
};
var functorCatList = new Data_Functor.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof CatNil) {
            return CatNil.value;
        };
        if (v1 instanceof CatCons) {
            var d = (function () {
                var $58 = Data_CatQueue["null"](v1.value1);
                if ($58) {
                    return CatNil.value;
                };
                return foldr(link)(CatNil.value)(v1.value1);
            })();
            return cons(v(v1.value0))(Data_Functor.map(functorCatList)(v)(d));
        };
        throw new Error("Failed pattern match at Data.CatList (line 185, column 1 - line 185, column 43): " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var singleton = function (a) {
    return cons(a)(CatNil.value);
};
var traversableCatList = new Data_Traversable.Traversable(function () {
    return foldableCatList;
}, function () {
    return functorCatList;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof CatNil) {
            return Control_Applicative.pure(dictApplicative)(CatNil.value);
        };
        if (v instanceof CatCons) {
            var d = (function () {
                var $62 = Data_CatQueue["null"](v.value1);
                if ($62) {
                    return CatNil.value;
                };
                return foldr(link)(CatNil.value)(v.value1);
            })();
            return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(cons)(v.value0))(Data_Traversable.sequence(traversableCatList)(dictApplicative)(d));
        };
        throw new Error("Failed pattern match at Data.CatList (line 175, column 1 - line 175, column 51): " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof CatNil) {
                return Control_Applicative.pure(dictApplicative)(CatNil.value);
            };
            if (v1 instanceof CatCons) {
                var d = (function () {
                    var $67 = Data_CatQueue["null"](v1.value1);
                    if ($67) {
                        return CatNil.value;
                    };
                    return foldr(link)(CatNil.value)(v1.value1);
                })();
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(cons)(v(v1.value0)))(Data_Traversable.traverse(traversableCatList)(dictApplicative)(v)(d));
            };
            throw new Error("Failed pattern match at Data.CatList (line 175, column 1 - line 175, column 51): " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var semigroupCatList = new Data_Semigroup.Semigroup(append);
var monoidCatList = new Data_Monoid.Monoid(function () {
    return semigroupCatList;
}, CatNil.value);
var monadCatList = new Control_Monad.Monad(function () {
    return applicativeCatList;
}, function () {
    return bindCatList;
});
var bindCatList = new Control_Bind.Bind(function () {
    return applyCatList;
}, Data_Function.flip(foldMap(monoidCatList)));
var applyCatList = new Control_Apply.Apply(function () {
    return functorCatList;
}, Control_Monad.ap(monadCatList));
var applicativeCatList = new Control_Applicative.Applicative(function () {
    return applyCatList;
}, singleton);
var fromFoldable = function (dictFoldable) {
    return function (f) {
        return Data_Foldable.foldMap(dictFoldable)(monoidCatList)(singleton)(f);
    };
};
var snoc = function (cat) {
    return function (a) {
        return append(cat)(new CatCons(a, Data_CatQueue.empty));
    };
};
var unfoldable1CatList = new Data_Unfoldable1.Unfoldable1(function (f) {
    return function (b) {
        var go = function ($copy_source) {
            return function ($copy_memo) {
                var $tco_var_source = $copy_source;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(source, memo) {
                    var v = f(source);
                    if (v.value1 instanceof Data_Maybe.Nothing) {
                        $tco_done = true;
                        return snoc(memo)(v.value0);
                    };
                    if (v.value1 instanceof Data_Maybe.Just) {
                        $tco_var_source = v.value1.value0;
                        $copy_memo = snoc(memo)(v.value0);
                        return;
                    };
                    throw new Error("Failed pattern match at Data.CatList (line 171, column 24 - line 173, column 57): " + [ v.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_source, $copy_memo);
                };
                return $tco_result;
            };
        };
        return go(b)(CatNil.value);
    };
});
var unfoldableCatList = new Data_Unfoldable.Unfoldable(function () {
    return unfoldable1CatList;
}, function (f) {
    return function (b) {
        var go = function ($copy_source) {
            return function ($copy_memo) {
                var $tco_var_source = $copy_source;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(source, memo) {
                    var v = f(source);
                    if (v instanceof Data_Maybe.Nothing) {
                        $tco_done = true;
                        return memo;
                    };
                    if (v instanceof Data_Maybe.Just) {
                        $tco_var_source = v.value0.value1;
                        $copy_memo = snoc(memo)(v.value0.value0);
                        return;
                    };
                    throw new Error("Failed pattern match at Data.CatList (line 164, column 24 - line 166, column 57): " + [ v.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_source, $copy_memo);
                };
                return $tco_result;
            };
        };
        return go(b)(CatNil.value);
    };
});
var altCatList = new Control_Alt.Alt(function () {
    return functorCatList;
}, append);
var plusCatList = new Control_Plus.Plus(function () {
    return altCatList;
}, empty);
var alternativeCatList = new Control_Alternative.Alternative(function () {
    return applicativeCatList;
}, function () {
    return plusCatList;
});
var monadZeroCatList = new Control_MonadZero.MonadZero(function () {
    return alternativeCatList;
}, function () {
    return monadCatList;
});
var monadPlusCatList = new Control_MonadPlus.MonadPlus(function () {
    return monadZeroCatList;
});
module.exports = {
    CatNil: CatNil,
    CatCons: CatCons,
    empty: empty,
    "null": $$null,
    singleton: singleton,
    length: length,
    append: append,
    cons: cons,
    snoc: snoc,
    uncons: uncons,
    fromFoldable: fromFoldable,
    semigroupCatList: semigroupCatList,
    monoidCatList: monoidCatList,
    showCatList: showCatList,
    foldableCatList: foldableCatList,
    unfoldableCatList: unfoldableCatList,
    unfoldable1CatList: unfoldable1CatList,
    traversableCatList: traversableCatList,
    functorCatList: functorCatList,
    applyCatList: applyCatList,
    applicativeCatList: applicativeCatList,
    bindCatList: bindCatList,
    monadCatList: monadCatList,
    altCatList: altCatList,
    plusCatList: plusCatList,
    alternativeCatList: alternativeCatList,
    monadZeroCatList: monadZeroCatList,
    monadPlusCatList: monadPlusCatList
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Monad/index.js":55,"../Control.MonadPlus/index.js":56,"../Control.MonadZero/index.js":57,"../Control.Plus/index.js":60,"../Data.CatQueue/index.js":115,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.Traversable/index.js":281,"../Data.Tuple/index.js":283,"../Data.Unfoldable/index.js":285,"../Data.Unfoldable1/index.js":287,"../Prelude/index.js":385}],115:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");
var Prelude = require("../Prelude/index.js");
var CatQueue = (function () {
    function CatQueue(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    CatQueue.create = function (value0) {
        return function (value1) {
            return new CatQueue(value0, value1);
        };
    };
    return CatQueue;
})();
var unsnoc = function ($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
        if (v.value1 instanceof Data_List_Types.Cons) {
            $tco_done = true;
            return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value1.value0, new CatQueue(v.value0, v.value1.value1)));
        };
        if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return Data_Maybe.Nothing.value;
        };
        if (v.value1 instanceof Data_List_Types.Nil) {
            $copy_v = new CatQueue(Data_List_Types.Nil.value, Data_List.reverse(v.value0));
            return;
        };
        throw new Error("Failed pattern match at Data.CatQueue (line 93, column 1 - line 93, column 63): " + [ v.constructor.name ]);
    };
    while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
    };
    return $tco_result;
};
var uncons = function ($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
        if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return Data_Maybe.Nothing.value;
        };
        if (v.value0 instanceof Data_List_Types.Nil) {
            $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);
            return;
        };
        if (v.value0 instanceof Data_List_Types.Cons) {
            $tco_done = true;
            return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
        };
        throw new Error("Failed pattern match at Data.CatQueue (line 83, column 1 - line 83, column 63): " + [ v.constructor.name ]);
    };
    while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
    };
    return $tco_result;
};
var snoc = function (v) {
    return function (a) {
        return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));
    };
};
var showCatQueue = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(CatQueue " + (Data_Show.show(Data_List_Types.showList(dictShow))(v.value0) + (" " + (Data_Show.show(Data_List_Types.showList(dictShow))(v.value1) + ")")));
    });
};
var $$null = function (v) {
    if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
        return true;
    };
    return false;
};
var length = function (v) {
    return Data_List.length(v.value0) + Data_List.length(v.value1) | 0;
};
var functorCatQueue = new Data_Functor.Functor(function (f) {
    return function (v) {
        return new CatQueue(Data_Functor.map(Data_List_Types.functorList)(f)(v.value0), Data_Functor.map(Data_List_Types.functorList)(f)(v.value1));
    };
});
var foldableCatQueue = new Data_Foldable.Foldable(function (dictMonoid) {
    return Data_Foldable.foldMapDefaultL(foldableCatQueue)(dictMonoid);
}, function (f) {
    var go = function ($copy_acc) {
        return function ($copy_q) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, q) {
                var v = uncons(q);
                if (v instanceof Data_Maybe.Just) {
                    $tco_var_acc = f(acc)(v.value0.value0);
                    $copy_q = v.value0.value1;
                    return;
                };
                if (v instanceof Data_Maybe.Nothing) {
                    $tco_done = true;
                    return acc;
                };
                throw new Error("Failed pattern match at Data.CatQueue (line 148, column 16 - line 150, column 22): " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_q);
            };
            return $tco_result;
        };
    };
    return go;
}, function (f) {
    return Data_Foldable.foldrDefault(foldableCatQueue)(f);
});
var semigroupCatQueue = new Data_Semigroup.Semigroup(Data_Foldable.foldl(foldableCatQueue)(snoc));
var empty = new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
var monoidCatQueue = new Data_Monoid.Monoid(function () {
    return semigroupCatQueue;
}, empty);
var singleton = snoc(empty);
var fromFoldable = function (dictFoldable) {
    return function (f) {
        return Data_Foldable.foldMap(dictFoldable)(monoidCatQueue)(singleton)(f);
    };
};
var traversableCatQueue = new Data_Traversable.Traversable(function () {
    return foldableCatQueue;
}, function () {
    return functorCatQueue;
}, function (dictApplicative) {
    return Data_Traversable.sequenceDefault(traversableCatQueue)(dictApplicative);
}, function (dictApplicative) {
    return function (f) {
        return function ($100) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Foldable.foldl(foldableCatQueue)(snoc)(empty))(Data_Foldable.foldl(foldableCatQueue)(function (acc) {
                return function ($101) {
                    return Control_Apply.lift2(dictApplicative.Apply0())(snoc)(acc)(f($101));
                };
            })(Control_Applicative.pure(dictApplicative)(empty))($100));
        };
    };
});
var unfoldable1CatQueue = new Data_Unfoldable1.Unfoldable1(function (f) {
    return function (b) {
        var go = function ($copy_source) {
            return function ($copy_memo) {
                var $tco_var_source = $copy_source;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(source, memo) {
                    var v = f(source);
                    if (v.value1 instanceof Data_Maybe.Nothing) {
                        $tco_done = true;
                        return snoc(memo)(v.value0);
                    };
                    if (v.value1 instanceof Data_Maybe.Just) {
                        $tco_var_source = v.value1.value0;
                        $copy_memo = snoc(memo)(v.value0);
                        return;
                    };
                    throw new Error("Failed pattern match at Data.CatQueue (line 155, column 24 - line 157, column 57): " + [ v.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_source, $copy_memo);
                };
                return $tco_result;
            };
        };
        return go(b)(empty);
    };
});
var unfoldableCatQueue = new Data_Unfoldable.Unfoldable(function () {
    return unfoldable1CatQueue;
}, function (f) {
    return function (b) {
        var go = function ($copy_source) {
            return function ($copy_memo) {
                var $tco_var_source = $copy_source;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(source, memo) {
                    var v = f(source);
                    if (v instanceof Data_Maybe.Nothing) {
                        $tco_done = true;
                        return memo;
                    };
                    if (v instanceof Data_Maybe.Just) {
                        $tco_var_source = v.value0.value1;
                        $copy_memo = snoc(memo)(v.value0.value0);
                        return;
                    };
                    throw new Error("Failed pattern match at Data.CatQueue (line 162, column 24 - line 164, column 57): " + [ v.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_source, $copy_memo);
                };
                return $tco_result;
            };
        };
        return go(b)(empty);
    };
});
var cqEq = function (dictEq) {
    var elemEq = Data_Eq.eq(dictEq);
    var go = function ($copy_xs) {
        return function ($copy_ys) {
            var $tco_var_xs = $copy_xs;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(xs, ys) {
                var v = uncons(ys);
                var v1 = uncons(xs);
                if (v1 instanceof Data_Maybe.Just && (v instanceof Data_Maybe.Just && elemEq(v1.value0.value0)(v.value0.value0))) {
                    $tco_var_xs = v1.value0.value1;
                    $copy_ys = v.value0.value1;
                    return;
                };
                if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Nothing) {
                    $tco_done = true;
                    return true;
                };
                $tco_done = true;
                return false;
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_xs, $copy_ys);
            };
            return $tco_result;
        };
    };
    return go;
};
var eqCatQueue = function (dictEq) {
    return new Data_Eq.Eq(cqEq(dictEq));
};
var cqCompare = function (dictOrd) {
    var elemCompare = Data_Ord.compare(dictOrd);
    var go = function ($copy_xs) {
        return function ($copy_ys) {
            var $tco_var_xs = $copy_xs;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(xs, ys) {
                var v = uncons(ys);
                var v1 = uncons(xs);
                if (v1 instanceof Data_Maybe.Just && v instanceof Data_Maybe.Just) {
                    var v2 = elemCompare(v1.value0.value0)(v.value0.value0);
                    if (v2 instanceof Data_Ordering.EQ) {
                        $tco_var_xs = v1.value0.value1;
                        $copy_ys = v.value0.value1;
                        return;
                    };
                    $tco_done = true;
                    return v2;
                };
                if (v1 instanceof Data_Maybe.Just && v instanceof Data_Maybe.Nothing) {
                    $tco_done = true;
                    return Data_Ordering.GT.value;
                };
                if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Just) {
                    $tco_done = true;
                    return Data_Ordering.LT.value;
                };
                if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Nothing) {
                    $tco_done = true;
                    return Data_Ordering.EQ.value;
                };
                throw new Error("Failed pattern match at Data.CatQueue (line 118, column 16 - line 125, column 30): " + [ v1.constructor.name, v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_xs, $copy_ys);
            };
            return $tco_result;
        };
    };
    return go;
};
var ordCatQueue = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqCatQueue(dictOrd.Eq0());
    }, cqCompare(dictOrd));
};
var cons = function (a) {
    return function (v) {
        return new CatQueue(new Data_List_Types.Cons(a, v.value0), v.value1);
    };
};
var monadCatQueue = new Control_Monad.Monad(function () {
    return applicativeCatQueue;
}, function () {
    return bindCatQueue;
});
var bindCatQueue = new Control_Bind.Bind(function () {
    return applyCatQueue;
}, Data_Function.flip(Data_Foldable.foldMap(foldableCatQueue)(monoidCatQueue)));
var applyCatQueue = new Control_Apply.Apply(function () {
    return functorCatQueue;
}, Control_Monad.ap(monadCatQueue));
var applicativeCatQueue = new Control_Applicative.Applicative(function () {
    return applyCatQueue;
}, singleton);
var altCatQueue = new Control_Alt.Alt(function () {
    return functorCatQueue;
}, Data_Semigroup.append(semigroupCatQueue));
var plusCatQueue = new Control_Plus.Plus(function () {
    return altCatQueue;
}, empty);
var alternativeCatQueue = new Control_Alternative.Alternative(function () {
    return applicativeCatQueue;
}, function () {
    return plusCatQueue;
});
var monadZeroCatQueue = new Control_MonadZero.MonadZero(function () {
    return alternativeCatQueue;
}, function () {
    return monadCatQueue;
});
var monadPlusCatQueue = new Control_MonadPlus.MonadPlus(function () {
    return monadZeroCatQueue;
});
module.exports = {
    CatQueue: CatQueue,
    empty: empty,
    "null": $$null,
    singleton: singleton,
    length: length,
    cons: cons,
    snoc: snoc,
    uncons: uncons,
    unsnoc: unsnoc,
    fromFoldable: fromFoldable,
    eqCatQueue: eqCatQueue,
    ordCatQueue: ordCatQueue,
    semigroupCatQueue: semigroupCatQueue,
    monoidCatQueue: monoidCatQueue,
    showCatQueue: showCatQueue,
    foldableCatQueue: foldableCatQueue,
    unfoldable1CatQueue: unfoldable1CatQueue,
    unfoldableCatQueue: unfoldableCatQueue,
    traversableCatQueue: traversableCatQueue,
    functorCatQueue: functorCatQueue,
    applyCatQueue: applyCatQueue,
    applicativeCatQueue: applicativeCatQueue,
    bindCatQueue: bindCatQueue,
    monadCatQueue: monadCatQueue,
    altCatQueue: altCatQueue,
    plusCatQueue: plusCatQueue,
    alternativeCatQueue: alternativeCatQueue,
    monadZeroCatQueue: monadZeroCatQueue,
    monadPlusCatQueue: monadPlusCatQueue
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Monad/index.js":55,"../Control.MonadPlus/index.js":56,"../Control.MonadZero/index.js":57,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.Traversable/index.js":281,"../Data.Tuple/index.js":283,"../Data.Unfoldable/index.js":285,"../Data.Unfoldable1/index.js":287,"../Prelude/index.js":385}],116:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Monad_Gen = require("../Control.Monad.Gen/index.js");
var Control_Monad_Gen_Class = require("../Control.Monad.Gen.Class/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_NonEmpty = require("../Data.NonEmpty/index.js");
var Prelude = require("../Prelude/index.js");
var genUnicodeChar = function (dictMonadGen) {
    return Data_Functor.map((((dictMonadGen.Monad0()).Bind1()).Apply0()).Functor0())(Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar)))(Control_Monad_Gen_Class.chooseInt(dictMonadGen)(0)(65536));
};
var genDigitChar = function (dictMonadGen) {
    return Data_Functor.map((((dictMonadGen.Monad0()).Bind1()).Apply0()).Functor0())(Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar)))(Control_Monad_Gen_Class.chooseInt(dictMonadGen)(48)(57));
};
var genAsciiChar$prime = function (dictMonadGen) {
    return Data_Functor.map((((dictMonadGen.Monad0()).Bind1()).Apply0()).Functor0())(Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar)))(Control_Monad_Gen_Class.chooseInt(dictMonadGen)(0)(127));
};
var genAsciiChar = function (dictMonadGen) {
    return Data_Functor.map((((dictMonadGen.Monad0()).Bind1()).Apply0()).Functor0())(Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar)))(Control_Monad_Gen_Class.chooseInt(dictMonadGen)(32)(127));
};
var genAlphaUppercase = function (dictMonadGen) {
    return Data_Functor.map((((dictMonadGen.Monad0()).Bind1()).Apply0()).Functor0())(Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar)))(Control_Monad_Gen_Class.chooseInt(dictMonadGen)(65)(90));
};
var genAlphaLowercase = function (dictMonadGen) {
    return Data_Functor.map((((dictMonadGen.Monad0()).Bind1()).Apply0()).Functor0())(Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar)))(Control_Monad_Gen_Class.chooseInt(dictMonadGen)(97)(122));
};
var genAlpha = function (dictMonadGen) {
    return Control_Monad_Gen.oneOf(dictMonadGen)(Data_NonEmpty.foldable1NonEmpty(Data_Foldable.foldableArray))(new Data_NonEmpty.NonEmpty(genAlphaLowercase(dictMonadGen), [ genAlphaUppercase(dictMonadGen) ]));
};
module.exports = {
    genUnicodeChar: genUnicodeChar,
    genAsciiChar: genAsciiChar,
    "genAsciiChar'": genAsciiChar$prime,
    genDigitChar: genDigitChar,
    genAlpha: genAlpha,
    genAlphaLowercase: genAlphaLowercase,
    genAlphaUppercase: genAlphaUppercase
};

},{"../Control.Monad.Gen.Class/index.js":34,"../Control.Monad.Gen/index.js":36,"../Data.Bounded/index.js":113,"../Data.Enum/index.js":133,"../Data.Foldable/index.js":141,"../Data.Functor/index.js":153,"../Data.NonEmpty/index.js":221,"../Prelude/index.js":385}],117:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Enum = require("../Data.Enum/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var toCharCode = Data_Enum.fromEnum(Data_Enum.boundedEnumChar);
var fromCharCode = Data_Enum.toEnum(Data_Enum.boundedEnumChar);
module.exports = {
    toCharCode: toCharCode,
    fromCharCode: fromCharCode
};

},{"../Data.Enum/index.js":133,"../Data.Maybe/index.js":210}],118:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var CommutativeRing = function (Ring0) {
    this.Ring0 = Ring0;
};
var CommutativeRingRecord = function (RingRecord0) {
    this.RingRecord0 = RingRecord0;
};
var commutativeRingUnit = new CommutativeRing(function () {
    return Data_Ring.ringUnit;
});
var commutativeRingRecordNil = new CommutativeRingRecord(function () {
    return Data_Ring.ringRecordNil;
});
var commutativeRingRecordCons = function (dictIsSymbol) {
    return function (dictCons) {
        return function (dictCommutativeRingRecord) {
            return function (dictCommutativeRing) {
                return new CommutativeRingRecord(function () {
                    return Data_Ring.ringRecordCons(dictIsSymbol)(dictCons)(dictCommutativeRingRecord.RingRecord0())(dictCommutativeRing.Ring0());
                });
            };
        };
    };
};
var commutativeRingRecord = function (dictRowToList) {
    return function (dictCommutativeRingRecord) {
        return new CommutativeRing(function () {
            return Data_Ring.ringRecord(dictRowToList)(dictCommutativeRingRecord.RingRecord0());
        });
    };
};
var commutativeRingNumber = new CommutativeRing(function () {
    return Data_Ring.ringNumber;
});
var commutativeRingInt = new CommutativeRing(function () {
    return Data_Ring.ringInt;
});
var commutativeRingFn = function (dictCommutativeRing) {
    return new CommutativeRing(function () {
        return Data_Ring.ringFn(dictCommutativeRing.Ring0());
    });
};
module.exports = {
    CommutativeRing: CommutativeRing,
    CommutativeRingRecord: CommutativeRingRecord,
    commutativeRingInt: commutativeRingInt,
    commutativeRingNumber: commutativeRingNumber,
    commutativeRingUnit: commutativeRingUnit,
    commutativeRingFn: commutativeRingFn,
    commutativeRingRecord: commutativeRingRecord,
    commutativeRingRecordNil: commutativeRingRecordNil,
    commutativeRingRecordCons: commutativeRingRecordCons
};

},{"../Data.Ring/index.js":242,"../Data.Semiring/index.js":251,"../Data.Symbol/index.js":274,"../Data.Unit/index.js":289}],119:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Bifoldable = require("../Data.Bifoldable/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Bitraversable = require("../Data.Bitraversable/index.js");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Contravariant = require("../Data.Functor.Contravariant/index.js");
var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Prelude = require("../Prelude/index.js");
var Const = function (x) {
    return x;
};
var showConst = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Const " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringConst = function (dictSemiring) {
    return dictSemiring;
};
var semigroupoidConst = new Control_Semigroupoid.Semigroupoid(function (v) {
    return function (v1) {
        return v1;
    };
});
var semigroupConst = function (dictSemigroup) {
    return dictSemigroup;
};
var ringConst = function (dictRing) {
    return dictRing;
};
var ordConst = function (dictOrd) {
    return dictOrd;
};
var newtypeConst = new Data_Newtype.Newtype(function (n) {
    return n;
}, Const);
var monoidConst = function (dictMonoid) {
    return dictMonoid;
};
var heytingAlgebraConst = function (dictHeytingAlgebra) {
    return dictHeytingAlgebra;
};
var functorConst = new Data_Functor.Functor(function (f) {
    return function (m) {
        return m;
    };
});
var functorWithIndexConst = new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorConst;
}, function (v) {
    return function (v1) {
        return v1;
    };
});
var invariantConst = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorConst));
var foldableConst = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (v) {
        return function (v1) {
            return Data_Monoid.mempty(dictMonoid);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            return z;
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            return z;
        };
    };
});
var foldableWithIndexConst = new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableConst;
}, function (dictMonoid) {
    return function (v) {
        return function (v1) {
            return Data_Monoid.mempty(dictMonoid);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            return z;
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            return z;
        };
    };
});
var traversableConst = new Data_Traversable.Traversable(function () {
    return foldableConst;
}, function () {
    return functorConst;
}, function (dictApplicative) {
    return function (v) {
        return Control_Applicative.pure(dictApplicative)(v);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            return Control_Applicative.pure(dictApplicative)(v1);
        };
    };
});
var traversableWithIndexConst = new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexConst;
}, function () {
    return functorWithIndexConst;
}, function () {
    return traversableConst;
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            return Control_Applicative.pure(dictApplicative)(v1);
        };
    };
});
var euclideanRingConst = function (dictEuclideanRing) {
    return dictEuclideanRing;
};
var eqConst = function (dictEq) {
    return dictEq;
};
var eq1Const = function (dictEq) {
    return new Data_Eq.Eq1(function (dictEq1) {
        return Data_Eq.eq(eqConst(dictEq));
    });
};
var ord1Const = function (dictOrd) {
    return new Data_Ord.Ord1(function () {
        return eq1Const(dictOrd.Eq0());
    }, function (dictOrd1) {
        return Data_Ord.compare(ordConst(dictOrd));
    });
};
var contravariantConst = new Data_Functor_Contravariant.Contravariant(function (v) {
    return function (v1) {
        return v1;
    };
});
var commutativeRingConst = function (dictCommutativeRing) {
    return dictCommutativeRing;
};
var boundedConst = function (dictBounded) {
    return dictBounded;
};
var booleanAlgebraConst = function (dictBooleanAlgebra) {
    return dictBooleanAlgebra;
};
var bifunctorConst = new Data_Bifunctor.Bifunctor(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var bifoldableConst = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return function (v1) {
                return f(v1);
            };
        };
    };
}, function (f) {
    return function (v) {
        return function (z) {
            return function (v1) {
                return f(z)(v1);
            };
        };
    };
}, function (f) {
    return function (v) {
        return function (z) {
            return function (v1) {
                return f(v1)(z);
            };
        };
    };
});
var bitraversableConst = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableConst;
}, function () {
    return bifunctorConst;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Const)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return function (v1) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Const)(f(v1));
            };
        };
    };
});
var applyConst = function (dictSemigroup) {
    return new Control_Apply.Apply(function () {
        return functorConst;
    }, function (v) {
        return function (v1) {
            return Data_Semigroup.append(dictSemigroup)(v)(v1);
        };
    });
};
var applicativeConst = function (dictMonoid) {
    return new Control_Applicative.Applicative(function () {
        return applyConst(dictMonoid.Semigroup0());
    }, function (v) {
        return Data_Monoid.mempty(dictMonoid);
    });
};
module.exports = {
    Const: Const,
    newtypeConst: newtypeConst,
    eqConst: eqConst,
    eq1Const: eq1Const,
    ordConst: ordConst,
    ord1Const: ord1Const,
    boundedConst: boundedConst,
    showConst: showConst,
    semigroupoidConst: semigroupoidConst,
    semigroupConst: semigroupConst,
    monoidConst: monoidConst,
    semiringConst: semiringConst,
    ringConst: ringConst,
    euclideanRingConst: euclideanRingConst,
    commutativeRingConst: commutativeRingConst,
    heytingAlgebraConst: heytingAlgebraConst,
    booleanAlgebraConst: booleanAlgebraConst,
    functorConst: functorConst,
    bifunctorConst: bifunctorConst,
    functorWithIndexConst: functorWithIndexConst,
    invariantConst: invariantConst,
    contravariantConst: contravariantConst,
    applyConst: applyConst,
    applicativeConst: applicativeConst,
    foldableConst: foldableConst,
    foldableWithIndexConst: foldableWithIndexConst,
    bifoldableConst: bifoldableConst,
    traversableConst: traversableConst,
    traversableWithIndexConst: traversableWithIndexConst,
    bitraversableConst: bitraversableConst
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Semigroupoid/index.js":61,"../Data.Bifoldable/index.js":100,"../Data.Bifunctor/index.js":106,"../Data.Bitraversable/index.js":109,"../Data.BooleanAlgebra/index.js":111,"../Data.Bounded/index.js":113,"../Data.CommutativeRing/index.js":118,"../Data.Eq/index.js":135,"../Data.EuclideanRing/index.js":137,"../Data.Foldable/index.js":141,"../Data.FoldableWithIndex/index.js":142,"../Data.Functor.Contravariant/index.js":148,"../Data.Functor.Invariant/index.js":151,"../Data.Functor/index.js":153,"../Data.FunctorWithIndex/index.js":155,"../Data.HeytingAlgebra/index.js":162,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.Traversable/index.js":281,"../Data.TraversableWithIndex/index.js":282,"../Prelude/index.js":385}],120:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Distributive = require("../Data.Distributive/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Exists = require("../Data.Exists/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Prelude = require("../Prelude/index.js");
var CoyonedaF = (function () {
    function CoyonedaF(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    CoyonedaF.create = function (value0) {
        return function (value1) {
            return new CoyonedaF(value0, value1);
        };
    };
    return CoyonedaF;
})();
var Coyoneda = function (x) {
    return x;
};
var unCoyoneda = function (f) {
    return function (v) {
        return Data_Exists.runExists(function (v1) {
            return f(v1.value0)(v1.value1);
        })(v);
    };
};
var lowerCoyoneda = function (dictFunctor) {
    return unCoyoneda(Data_Functor.map(dictFunctor));
};
var foldableCoyoneda = function (dictFoldable) {
    return new Data_Foldable.Foldable(function (dictMonoid) {
        return function (f) {
            return unCoyoneda(function (k) {
                return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(function ($80) {
                    return f(k($80));
                });
            });
        };
    }, function (f) {
        return function (z) {
            return unCoyoneda(function (k) {
                return Data_Foldable.foldl(dictFoldable)(function (x) {
                    return function ($81) {
                        return f(x)(k($81));
                    };
                })(z);
            });
        };
    }, function (f) {
        return function (z) {
            return unCoyoneda(function (k) {
                return Data_Foldable.foldr(dictFoldable)(function ($82) {
                    return f(k($82));
                })(z);
            });
        };
    });
};
var foldable1Coyoneda = function (dictFoldable1) {
    return new Data_Semigroup_Foldable.Foldable1(function () {
        return foldableCoyoneda(dictFoldable1.Foldable0());
    }, function (dictSemigroup) {
        return unCoyoneda(function (k) {
            return Data_Semigroup_Foldable.foldMap1(dictFoldable1)(dictSemigroup)(k);
        });
    }, function (dictSemigroup) {
        return function (f) {
            return unCoyoneda(function (k) {
                return Data_Semigroup_Foldable.foldMap1(dictFoldable1)(dictSemigroup)(function ($83) {
                    return f(k($83));
                });
            });
        };
    });
};
var eqCoyoneda = function (dictFunctor) {
    return function (dictEq1) {
        return function (dictEq) {
            return new Data_Eq.Eq(function (x) {
                return function (y) {
                    return Data_Eq.eq1(dictEq1)(dictEq)(lowerCoyoneda(dictFunctor)(x))(lowerCoyoneda(dictFunctor)(y));
                };
            });
        };
    };
};
var ordCoyoneda = function (dictFunctor) {
    return function (dictOrd1) {
        return function (dictOrd) {
            return new Data_Ord.Ord(function () {
                return eqCoyoneda(dictFunctor)(dictOrd1.Eq10())(dictOrd.Eq0());
            }, function (x) {
                return function (y) {
                    return Data_Ord.compare1(dictOrd1)(dictOrd)(lowerCoyoneda(dictFunctor)(x))(lowerCoyoneda(dictFunctor)(y));
                };
            });
        };
    };
};
var eq1Coyoneda = function (dictFunctor) {
    return function (dictEq1) {
        return new Data_Eq.Eq1(function (dictEq) {
            return Data_Eq.eq(eqCoyoneda(dictFunctor)(dictEq1)(dictEq));
        });
    };
};
var ord1Coyoneda = function (dictFunctor) {
    return function (dictOrd1) {
        return new Data_Ord.Ord1(function () {
            return eq1Coyoneda(dictFunctor)(dictOrd1.Eq10());
        }, function (dictOrd) {
            return Data_Ord.compare(ordCoyoneda(dictFunctor)(dictOrd1)(dictOrd));
        });
    };
};
var coyoneda = function (k) {
    return function (fi) {
        return Coyoneda(Data_Exists.mkExists(new CoyonedaF(k, fi)));
    };
};
var functorCoyoneda = new Data_Functor.Functor(function (f) {
    return function (v) {
        return Data_Exists.runExists(function (v1) {
            return coyoneda(function ($84) {
                return f(v1.value0($84));
            })(v1.value1);
        })(v);
    };
});
var invatiantCoyoneda = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorCoyoneda));
var hoistCoyoneda = function (nat) {
    return function (v) {
        return Data_Exists.runExists(function (v1) {
            return coyoneda(v1.value0)(nat(v1.value1));
        })(v);
    };
};
var liftCoyoneda = coyoneda(Control_Category.identity(Control_Category.categoryFn));
var distributiveCoyoneda = function (dictDistributive) {
    return new Data_Distributive.Distributive(function () {
        return functorCoyoneda;
    }, function (dictFunctor) {
        return function (f) {
            return function ($85) {
                return liftCoyoneda(Data_Distributive.collect(dictDistributive)(dictFunctor)(function ($86) {
                    return lowerCoyoneda(dictDistributive.Functor0())(f($86));
                })($85));
            };
        };
    }, function (dictFunctor) {
        return function ($87) {
            return liftCoyoneda(Data_Distributive.collect(dictDistributive)(dictFunctor)(lowerCoyoneda(dictDistributive.Functor0()))($87));
        };
    });
};
var extendCoyoneda = function (dictExtend) {
    return new Control_Extend.Extend(function () {
        return functorCoyoneda;
    }, function (f) {
        return function (v) {
            return Data_Exists.runExists(function (v1) {
                return liftCoyoneda(Control_Extend.extend(dictExtend)(function ($88) {
                    return f(coyoneda(v1.value0)($88));
                })(v1.value1));
            })(v);
        };
    });
};
var monadTransCoyoneda = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return liftCoyoneda;
});
var traversableCoyoneda = function (dictTraversable) {
    return new Data_Traversable.Traversable(function () {
        return foldableCoyoneda(dictTraversable.Foldable1());
    }, function () {
        return functorCoyoneda;
    }, function (dictApplicative) {
        return unCoyoneda(function (k) {
            return function ($89) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(liftCoyoneda)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(k)($89));
            };
        });
    }, function (dictApplicative) {
        return function (f) {
            return unCoyoneda(function (k) {
                return function ($90) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(liftCoyoneda)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(function ($91) {
                        return f(k($91));
                    })($90));
                };
            });
        };
    });
};
var traversable1Coyoneda = function (dictTraversable1) {
    return new Data_Semigroup_Traversable.Traversable1(function () {
        return foldable1Coyoneda(dictTraversable1.Foldable10());
    }, function () {
        return traversableCoyoneda(dictTraversable1.Traversable1());
    }, function (dictApply) {
        return unCoyoneda(function (k) {
            return function ($92) {
                return Data_Functor.map(dictApply.Functor0())(liftCoyoneda)(Data_Semigroup_Traversable.sequence1(dictTraversable1)(dictApply)(Data_Functor.map((dictTraversable1.Traversable1()).Functor0())(k)($92)));
            };
        });
    }, function (dictApply) {
        return function (f) {
            return unCoyoneda(function (k) {
                return function ($93) {
                    return Data_Functor.map(dictApply.Functor0())(liftCoyoneda)(Data_Semigroup_Traversable.traverse1(dictTraversable1)(dictApply)(function ($94) {
                        return f(k($94));
                    })($93));
                };
            });
        };
    });
};
var comonadCoyoneda = function (dictComonad) {
    return new Control_Comonad.Comonad(function () {
        return extendCoyoneda(dictComonad.Extend0());
    }, function (v) {
        return Data_Exists.runExists(function (v1) {
            return v1.value0(Control_Comonad.extract(dictComonad)(v1.value1));
        })(v);
    });
};
var applyCoyoneda = function (dictApply) {
    return new Control_Apply.Apply(function () {
        return functorCoyoneda;
    }, function (f) {
        return function (g) {
            return liftCoyoneda(Control_Apply.apply(dictApply)(lowerCoyoneda(dictApply.Functor0())(f))(lowerCoyoneda(dictApply.Functor0())(g)));
        };
    });
};
var bindCoyoneda = function (dictBind) {
    return new Control_Bind.Bind(function () {
        return applyCoyoneda(dictBind.Apply0());
    }, function (v) {
        return function (f) {
            return liftCoyoneda(Data_Exists.runExists(function (v1) {
                return Control_Bind.bindFlipped(dictBind)(function ($95) {
                    return lowerCoyoneda((dictBind.Apply0()).Functor0())(f(v1.value0($95)));
                })(v1.value1);
            })(v));
        };
    });
};
var applicativeCoyoneda = function (dictApplicative) {
    return new Control_Applicative.Applicative(function () {
        return applyCoyoneda(dictApplicative.Apply0());
    }, function ($96) {
        return liftCoyoneda(Control_Applicative.pure(dictApplicative)($96));
    });
};
var monadCoyoneda = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeCoyoneda(dictMonad.Applicative0());
    }, function () {
        return bindCoyoneda(dictMonad.Bind1());
    });
};
var altCoyoneda = function (dictAlt) {
    return new Control_Alt.Alt(function () {
        return functorCoyoneda;
    }, function (x) {
        return function (y) {
            return liftCoyoneda(Control_Alt.alt(dictAlt)(lowerCoyoneda(dictAlt.Functor0())(x))(lowerCoyoneda(dictAlt.Functor0())(y)));
        };
    });
};
var plusCoyoneda = function (dictPlus) {
    return new Control_Plus.Plus(function () {
        return altCoyoneda(dictPlus.Alt0());
    }, liftCoyoneda(Control_Plus.empty(dictPlus)));
};
var alternativeCoyoneda = function (dictAlternative) {
    return new Control_Alternative.Alternative(function () {
        return applicativeCoyoneda(dictAlternative.Applicative0());
    }, function () {
        return plusCoyoneda(dictAlternative.Plus1());
    });
};
var monadZeroCoyoneda = function (dictMonadZero) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeCoyoneda(dictMonadZero.Alternative1());
    }, function () {
        return monadCoyoneda(dictMonadZero.Monad0());
    });
};
var monadPlusCoyoneda = function (dictMonadPlus) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZeroCoyoneda(dictMonadPlus.MonadZero0());
    });
};
module.exports = {
    Coyoneda: Coyoneda,
    coyoneda: coyoneda,
    unCoyoneda: unCoyoneda,
    liftCoyoneda: liftCoyoneda,
    lowerCoyoneda: lowerCoyoneda,
    hoistCoyoneda: hoistCoyoneda,
    eqCoyoneda: eqCoyoneda,
    eq1Coyoneda: eq1Coyoneda,
    ordCoyoneda: ordCoyoneda,
    ord1Coyoneda: ord1Coyoneda,
    functorCoyoneda: functorCoyoneda,
    invatiantCoyoneda: invatiantCoyoneda,
    applyCoyoneda: applyCoyoneda,
    applicativeCoyoneda: applicativeCoyoneda,
    altCoyoneda: altCoyoneda,
    plusCoyoneda: plusCoyoneda,
    alternativeCoyoneda: alternativeCoyoneda,
    bindCoyoneda: bindCoyoneda,
    monadCoyoneda: monadCoyoneda,
    monadTransCoyoneda: monadTransCoyoneda,
    monadZeroCoyoneda: monadZeroCoyoneda,
    monadPlusCoyoneda: monadPlusCoyoneda,
    extendCoyoneda: extendCoyoneda,
    comonadCoyoneda: comonadCoyoneda,
    foldableCoyoneda: foldableCoyoneda,
    traversableCoyoneda: traversableCoyoneda,
    foldable1Coyoneda: foldable1Coyoneda,
    traversable1Coyoneda: traversable1Coyoneda,
    distributiveCoyoneda: distributiveCoyoneda
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Comonad/index.js":21,"../Control.Extend/index.js":24,"../Control.Monad.Trans.Class/index.js":52,"../Control.Monad/index.js":55,"../Control.MonadPlus/index.js":56,"../Control.MonadZero/index.js":57,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Distributive/index.js":128,"../Data.Eq/index.js":135,"../Data.Exists/index.js":138,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor.Invariant/index.js":151,"../Data.Functor/index.js":153,"../Data.Ord/index.js":229,"../Data.Semigroup.Foldable/index.js":244,"../Data.Semigroup.Traversable/index.js":246,"../Data.Traversable/index.js":281,"../Prelude/index.js":385}],121:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Year = function (x) {
    return x;
};
var Monday = (function () {
    function Monday() {

    };
    Monday.value = new Monday();
    return Monday;
})();
var Tuesday = (function () {
    function Tuesday() {

    };
    Tuesday.value = new Tuesday();
    return Tuesday;
})();
var Wednesday = (function () {
    function Wednesday() {

    };
    Wednesday.value = new Wednesday();
    return Wednesday;
})();
var Thursday = (function () {
    function Thursday() {

    };
    Thursday.value = new Thursday();
    return Thursday;
})();
var Friday = (function () {
    function Friday() {

    };
    Friday.value = new Friday();
    return Friday;
})();
var Saturday = (function () {
    function Saturday() {

    };
    Saturday.value = new Saturday();
    return Saturday;
})();
var Sunday = (function () {
    function Sunday() {

    };
    Sunday.value = new Sunday();
    return Sunday;
})();
var January = (function () {
    function January() {

    };
    January.value = new January();
    return January;
})();
var February = (function () {
    function February() {

    };
    February.value = new February();
    return February;
})();
var March = (function () {
    function March() {

    };
    March.value = new March();
    return March;
})();
var April = (function () {
    function April() {

    };
    April.value = new April();
    return April;
})();
var May = (function () {
    function May() {

    };
    May.value = new May();
    return May;
})();
var June = (function () {
    function June() {

    };
    June.value = new June();
    return June;
})();
var July = (function () {
    function July() {

    };
    July.value = new July();
    return July;
})();
var August = (function () {
    function August() {

    };
    August.value = new August();
    return August;
})();
var September = (function () {
    function September() {

    };
    September.value = new September();
    return September;
})();
var October = (function () {
    function October() {

    };
    October.value = new October();
    return October;
})();
var November = (function () {
    function November() {

    };
    November.value = new November();
    return November;
})();
var December = (function () {
    function December() {

    };
    December.value = new December();
    return December;
})();
var Day = function (x) {
    return x;
};
var showYear = new Data_Show.Show(function (v) {
    return "(Year " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var showWeekday = new Data_Show.Show(function (v) {
    if (v instanceof Monday) {
        return "Monday";
    };
    if (v instanceof Tuesday) {
        return "Tuesday";
    };
    if (v instanceof Wednesday) {
        return "Wednesday";
    };
    if (v instanceof Thursday) {
        return "Thursday";
    };
    if (v instanceof Friday) {
        return "Friday";
    };
    if (v instanceof Saturday) {
        return "Saturday";
    };
    if (v instanceof Sunday) {
        return "Sunday";
    };
    throw new Error("Failed pattern match at Data.Date.Component (line 184, column 1 - line 184, column 37): " + [ v.constructor.name ]);
});
var showMonth = new Data_Show.Show(function (v) {
    if (v instanceof January) {
        return "January";
    };
    if (v instanceof February) {
        return "February";
    };
    if (v instanceof March) {
        return "March";
    };
    if (v instanceof April) {
        return "April";
    };
    if (v instanceof May) {
        return "May";
    };
    if (v instanceof June) {
        return "June";
    };
    if (v instanceof July) {
        return "July";
    };
    if (v instanceof August) {
        return "August";
    };
    if (v instanceof September) {
        return "September";
    };
    if (v instanceof October) {
        return "October";
    };
    if (v instanceof November) {
        return "November";
    };
    if (v instanceof December) {
        return "December";
    };
    throw new Error("Failed pattern match at Data.Date.Component (line 101, column 1 - line 101, column 33): " + [ v.constructor.name ]);
});
var showDay = new Data_Show.Show(function (v) {
    return "(Day " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var ordYear = Data_Ord.ordInt;
var ordDay = Data_Ord.ordInt;
var eqYear = Data_Eq.eqInt;
var eqWeekday = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Monday && y instanceof Monday) {
            return true;
        };
        if (x instanceof Tuesday && y instanceof Tuesday) {
            return true;
        };
        if (x instanceof Wednesday && y instanceof Wednesday) {
            return true;
        };
        if (x instanceof Thursday && y instanceof Thursday) {
            return true;
        };
        if (x instanceof Friday && y instanceof Friday) {
            return true;
        };
        if (x instanceof Saturday && y instanceof Saturday) {
            return true;
        };
        if (x instanceof Sunday && y instanceof Sunday) {
            return true;
        };
        return false;
    };
});
var ordWeekday = new Data_Ord.Ord(function () {
    return eqWeekday;
}, function (x) {
    return function (y) {
        if (x instanceof Monday && y instanceof Monday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Monday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Monday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Tuesday && y instanceof Tuesday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Tuesday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Tuesday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Wednesday && y instanceof Wednesday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Wednesday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Wednesday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Thursday && y instanceof Thursday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Thursday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Thursday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Friday && y instanceof Friday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Friday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Friday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Saturday && y instanceof Saturday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Saturday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Saturday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Sunday && y instanceof Sunday) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Data.Date.Component (line 154, column 8 - line 154, column 42): " + [ x.constructor.name, y.constructor.name ]);
    };
});
var eqMonth = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof January && y instanceof January) {
            return true;
        };
        if (x instanceof February && y instanceof February) {
            return true;
        };
        if (x instanceof March && y instanceof March) {
            return true;
        };
        if (x instanceof April && y instanceof April) {
            return true;
        };
        if (x instanceof May && y instanceof May) {
            return true;
        };
        if (x instanceof June && y instanceof June) {
            return true;
        };
        if (x instanceof July && y instanceof July) {
            return true;
        };
        if (x instanceof August && y instanceof August) {
            return true;
        };
        if (x instanceof September && y instanceof September) {
            return true;
        };
        if (x instanceof October && y instanceof October) {
            return true;
        };
        if (x instanceof November && y instanceof November) {
            return true;
        };
        if (x instanceof December && y instanceof December) {
            return true;
        };
        return false;
    };
});
var ordMonth = new Data_Ord.Ord(function () {
    return eqMonth;
}, function (x) {
    return function (y) {
        if (x instanceof January && y instanceof January) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof January) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof January) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof February && y instanceof February) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof February) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof February) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof March && y instanceof March) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof March) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof March) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof April && y instanceof April) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof April) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof April) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof May && y instanceof May) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof May) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof May) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof June && y instanceof June) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof June) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof June) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof July && y instanceof July) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof July) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof July) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof August && y instanceof August) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof August) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof August) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof September && y instanceof September) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof September) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof September) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof October && y instanceof October) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof October) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof October) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof November && y instanceof November) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof November) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof November) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof December && y instanceof December) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Data.Date.Component (line 61, column 8 - line 61, column 38): " + [ x.constructor.name, y.constructor.name ]);
    };
});
var eqDay = Data_Eq.eqInt;
var boundedYear = new Data_Bounded.Bounded(function () {
    return ordYear;
}, -271820 | 0, 275759);
var boundedWeekday = new Data_Bounded.Bounded(function () {
    return ordWeekday;
}, Monday.value, Sunday.value);
var boundedMonth = new Data_Bounded.Bounded(function () {
    return ordMonth;
}, January.value, December.value);
var boundedEnumYear = new Data_Enum.BoundedEnum(function () {
    return boundedYear;
}, function () {
    return enumYear;
}, 547580, function (v) {
    return v;
}, function (n) {
    if (n >= (-271820 | 0) && n <= 275759) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Date.Component (line 35, column 1 - line 35, column 45): " + [ n.constructor.name ]);
});
var enumYear = new Data_Enum.Enum(function () {
    return ordYear;
}, function ($46) {
    return Data_Enum.toEnum(boundedEnumYear)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumYear)($46)));
}, function ($47) {
    return Data_Enum.toEnum(boundedEnumYear)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumYear)($47)));
});
var boundedEnumWeekday = new Data_Enum.BoundedEnum(function () {
    return boundedWeekday;
}, function () {
    return enumWeekday;
}, 7, function (v) {
    if (v instanceof Monday) {
        return 1;
    };
    if (v instanceof Tuesday) {
        return 2;
    };
    if (v instanceof Wednesday) {
        return 3;
    };
    if (v instanceof Thursday) {
        return 4;
    };
    if (v instanceof Friday) {
        return 5;
    };
    if (v instanceof Saturday) {
        return 6;
    };
    if (v instanceof Sunday) {
        return 7;
    };
    throw new Error("Failed pattern match at Data.Date.Component (line 175, column 14 - line 184, column 1): " + [ v.constructor.name ]);
}, function (v) {
    if (v === 1) {
        return new Data_Maybe.Just(Monday.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(Tuesday.value);
    };
    if (v === 3) {
        return new Data_Maybe.Just(Wednesday.value);
    };
    if (v === 4) {
        return new Data_Maybe.Just(Thursday.value);
    };
    if (v === 5) {
        return new Data_Maybe.Just(Friday.value);
    };
    if (v === 6) {
        return new Data_Maybe.Just(Saturday.value);
    };
    if (v === 7) {
        return new Data_Maybe.Just(Sunday.value);
    };
    return Data_Maybe.Nothing.value;
});
var enumWeekday = new Data_Enum.Enum(function () {
    return ordWeekday;
}, function ($48) {
    return Data_Enum.toEnum(boundedEnumWeekday)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumWeekday)($48)));
}, function ($49) {
    return Data_Enum.toEnum(boundedEnumWeekday)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumWeekday)($49)));
});
var boundedEnumMonth = new Data_Enum.BoundedEnum(function () {
    return boundedMonth;
}, function () {
    return enumMonth;
}, 12, function (v) {
    if (v instanceof January) {
        return 1;
    };
    if (v instanceof February) {
        return 2;
    };
    if (v instanceof March) {
        return 3;
    };
    if (v instanceof April) {
        return 4;
    };
    if (v instanceof May) {
        return 5;
    };
    if (v instanceof June) {
        return 6;
    };
    if (v instanceof July) {
        return 7;
    };
    if (v instanceof August) {
        return 8;
    };
    if (v instanceof September) {
        return 9;
    };
    if (v instanceof October) {
        return 10;
    };
    if (v instanceof November) {
        return 11;
    };
    if (v instanceof December) {
        return 12;
    };
    throw new Error("Failed pattern match at Data.Date.Component (line 87, column 14 - line 101, column 1): " + [ v.constructor.name ]);
}, function (v) {
    if (v === 1) {
        return new Data_Maybe.Just(January.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(February.value);
    };
    if (v === 3) {
        return new Data_Maybe.Just(March.value);
    };
    if (v === 4) {
        return new Data_Maybe.Just(April.value);
    };
    if (v === 5) {
        return new Data_Maybe.Just(May.value);
    };
    if (v === 6) {
        return new Data_Maybe.Just(June.value);
    };
    if (v === 7) {
        return new Data_Maybe.Just(July.value);
    };
    if (v === 8) {
        return new Data_Maybe.Just(August.value);
    };
    if (v === 9) {
        return new Data_Maybe.Just(September.value);
    };
    if (v === 10) {
        return new Data_Maybe.Just(October.value);
    };
    if (v === 11) {
        return new Data_Maybe.Just(November.value);
    };
    if (v === 12) {
        return new Data_Maybe.Just(December.value);
    };
    return Data_Maybe.Nothing.value;
});
var enumMonth = new Data_Enum.Enum(function () {
    return ordMonth;
}, function ($50) {
    return Data_Enum.toEnum(boundedEnumMonth)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMonth)($50)));
}, function ($51) {
    return Data_Enum.toEnum(boundedEnumMonth)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMonth)($51)));
});
var boundedDay = new Data_Bounded.Bounded(function () {
    return ordDay;
}, 1, 31);
var boundedEnumDay = new Data_Enum.BoundedEnum(function () {
    return boundedDay;
}, function () {
    return enumDay;
}, 31, function (v) {
    return v;
}, function (n) {
    if (n >= 1 && n <= 31) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Date.Component (line 133, column 1 - line 133, column 43): " + [ n.constructor.name ]);
});
var enumDay = new Data_Enum.Enum(function () {
    return ordDay;
}, function ($52) {
    return Data_Enum.toEnum(boundedEnumDay)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumDay)($52)));
}, function ($53) {
    return Data_Enum.toEnum(boundedEnumDay)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumDay)($53)));
});
module.exports = {
    January: January,
    February: February,
    March: March,
    April: April,
    May: May,
    June: June,
    July: July,
    August: August,
    September: September,
    October: October,
    November: November,
    December: December,
    Monday: Monday,
    Tuesday: Tuesday,
    Wednesday: Wednesday,
    Thursday: Thursday,
    Friday: Friday,
    Saturday: Saturday,
    Sunday: Sunday,
    eqYear: eqYear,
    ordYear: ordYear,
    boundedYear: boundedYear,
    enumYear: enumYear,
    boundedEnumYear: boundedEnumYear,
    showYear: showYear,
    eqMonth: eqMonth,
    ordMonth: ordMonth,
    boundedMonth: boundedMonth,
    enumMonth: enumMonth,
    boundedEnumMonth: boundedEnumMonth,
    showMonth: showMonth,
    eqDay: eqDay,
    ordDay: ordDay,
    boundedDay: boundedDay,
    enumDay: enumDay,
    boundedEnumDay: boundedEnumDay,
    showDay: showDay,
    eqWeekday: eqWeekday,
    ordWeekday: ordWeekday,
    boundedWeekday: boundedWeekday,
    enumWeekday: enumWeekday,
    boundedEnumWeekday: boundedEnumWeekday,
    showWeekday: showWeekday
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Boolean/index.js":110,"../Data.Bounded/index.js":113,"../Data.Enum/index.js":133,"../Data.Eq/index.js":135,"../Data.HeytingAlgebra/index.js":162,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Prelude/index.js":385}],122:[function(require,module,exports){
"use strict";

var createDate = function (y, m, d) {
  var date = new Date(Date.UTC(y, m, d));
  if (y >= 0 && y < 100) {
    date.setUTCFullYear(y);
  }
  return date;
};

exports.canonicalDateImpl = function (ctor, y, m, d) {
  var date = createDate(y, m - 1, d);
  return ctor(date.getUTCFullYear())(date.getUTCMonth() + 1)(date.getUTCDate());
};

exports.calcWeekday = function (y, m, d) {
  return createDate(y, m - 1, d).getUTCDay();
};

exports.calcDiff = function (y1, m1, d1, y2, m2, d2) {
  var dt1 = createDate(y1, m1 - 1, d1);
  var dt2 = createDate(y2, m2 - 1, d2);
  return dt1.getTime() - dt2.getTime();
};

},{}],123:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Date_Component = require("../Data.Date.Component/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Time_Duration = require("../Data.Time.Duration/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var $$Date = (function () {
    function $$Date(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    $$Date.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new $$Date(value0, value1, value2);
            };
        };
    };
    return $$Date;
})();
var year = function (v) {
    return v.value0;
};
var weekday = function (v) {
    var n = $foreign.calcWeekday(v.value0, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(v.value1), v.value2);
    var $41 = n === 0;
    if ($41) {
        return Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumWeekday)(7));
    };
    return Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumWeekday)(n));
};
var showDate = new Data_Show.Show(function (v) {
    return "(Date " + (Data_Show.show(Data_Date_Component.showYear)(v.value0) + (" " + (Data_Show.show(Data_Date_Component.showMonth)(v.value1) + (" " + (Data_Show.show(Data_Date_Component.showDay)(v.value2) + ")")))));
});
var month = function (v) {
    return v.value1;
};
var isLeapYear = function (y) {
    var y$prime = Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(y);
    return Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(y$prime)(4) === 0 && (Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(y$prime)(400) === 0 || !(Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(y$prime)(100) === 0));
};
var lastDayOfMonth = function (y) {
    return function (m) {
        var unsafeDay = function ($108) {
            return Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)($108));
        };
        if (m instanceof Data_Date_Component.January) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.February) {
            if (isLeapYear(y)) {
                return unsafeDay(29);
            };
            if (Data_Boolean.otherwise) {
                return unsafeDay(28);
            };
        };
        if (m instanceof Data_Date_Component.March) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.April) {
            return unsafeDay(30);
        };
        if (m instanceof Data_Date_Component.May) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.June) {
            return unsafeDay(30);
        };
        if (m instanceof Data_Date_Component.July) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.August) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.September) {
            return unsafeDay(30);
        };
        if (m instanceof Data_Date_Component.October) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.November) {
            return unsafeDay(30);
        };
        if (m instanceof Data_Date_Component.December) {
            return unsafeDay(31);
        };
        throw new Error("Failed pattern match at Data.Date (line 127, column 22 - line 142, column 3): " + [ m.constructor.name ]);
    };
};
var eqDate = new Data_Eq.Eq(function (x) {
    return function (y) {
        return Data_Eq.eq(Data_Date_Component.eqYear)(x.value0)(y.value0) && Data_Eq.eq(Data_Date_Component.eqMonth)(x.value1)(y.value1) && Data_Eq.eq(Data_Date_Component.eqDay)(x.value2)(y.value2);
    };
});
var ordDate = new Data_Ord.Ord(function () {
    return eqDate;
}, function (x) {
    return function (y) {
        var v = Data_Ord.compare(Data_Date_Component.ordYear)(x.value0)(y.value0);
        if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        var v1 = Data_Ord.compare(Data_Date_Component.ordMonth)(x.value1)(y.value1);
        if (v1 instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        return Data_Ord.compare(Data_Date_Component.ordDay)(x.value2)(y.value2);
    };
});
var enumDate = new Data_Enum.Enum(function () {
    return ordDate;
}, function (v) {
    var pm = Data_Enum.pred(Data_Date_Component.enumMonth)(v.value1);
    var pd = Data_Enum.pred(Data_Date_Component.enumDay)(v.value2);
    var y$prime = (function () {
        var $73 = Data_Maybe.isNothing(pd) && Data_Maybe.isNothing(pm);
        if ($73) {
            return Data_Enum.pred(Data_Date_Component.enumYear)(v.value0);
        };
        return new Data_Maybe.Just(v.value0);
    })();
    var m$prime = (function () {
        var $74 = Data_Maybe.isNothing(pd);
        if ($74) {
            return Data_Maybe.fromMaybe(Data_Date_Component.December.value)(pm);
        };
        return v.value1;
    })();
    var l = lastDayOfMonth(v.value0)(m$prime);
    var d$prime = (function () {
        var $75 = Data_Maybe.isNothing(pd);
        if ($75) {
            return new Data_Maybe.Just(l);
        };
        return pd;
    })();
    return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)($$Date.create)(y$prime))(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(m$prime)))(d$prime);
}, function (v) {
    var sm = Data_Enum.succ(Data_Date_Component.enumMonth)(v.value1);
    var l = lastDayOfMonth(v.value0)(v.value1);
    var sd = (function () {
        var v1 = Data_Enum.succ(Data_Date_Component.enumDay)(v.value2);
        var $80 = Data_Ord.greaterThan(Data_Maybe.ordMaybe(Data_Date_Component.ordDay))(v1)(new Data_Maybe.Just(l));
        if ($80) {
            return Data_Maybe.Nothing.value;
        };
        return v1;
    })();
    var m$prime = (function () {
        var $81 = Data_Maybe.isNothing(sd);
        if ($81) {
            return Data_Maybe.fromMaybe(Data_Date_Component.January.value)(sm);
        };
        return v.value1;
    })();
    var y$prime = (function () {
        var $82 = Data_Maybe.isNothing(sd) && Data_Maybe.isNothing(sm);
        if ($82) {
            return Data_Enum.succ(Data_Date_Component.enumYear)(v.value0);
        };
        return new Data_Maybe.Just(v.value0);
    })();
    var d$prime = (function () {
        var $83 = Data_Maybe.isNothing(sd);
        if ($83) {
            return Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(1);
        };
        return sd;
    })();
    return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)($$Date.create)(y$prime))(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(m$prime)))(d$prime);
});
var diff = function (dictDuration) {
    return function (v) {
        return function (v1) {
            return Data_Time_Duration.toDuration(dictDuration)($foreign.calcDiff(v.value0, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(v.value1), v.value2, v1.value0, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(v1.value1), v1.value2));
        };
    };
};
var day = function (v) {
    return v.value2;
};
var canonicalDate = function (y) {
    return function (m) {
        return function (d) {
            var mkDate = function (y$prime) {
                return function (m$prime) {
                    return function (d$prime) {
                        return new $$Date(y$prime, Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(m$prime)), d$prime);
                    };
                };
            };
            return $foreign.canonicalDateImpl(mkDate, y, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(m), d);
        };
    };
};
var exactDate = function (y) {
    return function (m) {
        return function (d) {
            var dt = new $$Date(y, m, d);
            var $99 = Data_Eq.eq(eqDate)(canonicalDate(y)(m)(d))(dt);
            if ($99) {
                return new Data_Maybe.Just(dt);
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var boundedDate = new Data_Bounded.Bounded(function () {
    return ordDate;
}, new $$Date(Data_Bounded.bottom(Data_Date_Component.boundedYear), Data_Bounded.bottom(Data_Date_Component.boundedMonth), Data_Bounded.bottom(Data_Date_Component.boundedDay)), new $$Date(Data_Bounded.top(Data_Date_Component.boundedYear), Data_Bounded.top(Data_Date_Component.boundedMonth), Data_Bounded.top(Data_Date_Component.boundedDay)));
var adjust = function (v) {
    return function (date) {
        var adj = function (v1) {
            return function (v2) {
                if (v1 === 0) {
                    return new Data_Maybe.Just(v2);
                };
                var j = v1 + Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(v2.value2) | 0;
                var low = j < 1;
                var l = lastDayOfMonth(v2.value0)((function () {
                    if (low) {
                        return Data_Maybe.fromMaybe(Data_Date_Component.December.value)(Data_Enum.pred(Data_Date_Component.enumMonth)(v2.value1));
                    };
                    return v2.value1;
                })());
                var hi = j > Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(l);
                var i$prime = (function () {
                    if (low) {
                        return j;
                    };
                    if (hi) {
                        return (j - Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(l) | 0) - 1 | 0;
                    };
                    if (Data_Boolean.otherwise) {
                        return 0;
                    };
                    throw new Error("Failed pattern match at Data.Date (line 101, column 9 - line 104, column 9): " + [  ]);
                })();
                var dt$prime = (function () {
                    if (low) {
                        return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Enum.pred(enumDate))(Data_Functor.map(Data_Maybe.functorMaybe)($$Date.create(v2.value0)(v2.value1))(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(1)));
                    };
                    if (hi) {
                        return Data_Enum.succ(enumDate)(new $$Date(v2.value0, v2.value1, l));
                    };
                    if (Data_Boolean.otherwise) {
                        return Data_Functor.map(Data_Maybe.functorMaybe)($$Date.create(v2.value0)(v2.value1))(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(j));
                    };
                    throw new Error("Failed pattern match at Data.Date (line 104, column 9 - line 106, column 48): " + [  ]);
                })();
                return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(adj(i$prime))(dt$prime);
            };
        };
        return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Int.fromNumber(v))(Data_Function.flip(adj)(date));
    };
};
module.exports = {
    canonicalDate: canonicalDate,
    exactDate: exactDate,
    year: year,
    month: month,
    day: day,
    weekday: weekday,
    diff: diff,
    isLeapYear: isLeapYear,
    lastDayOfMonth: lastDayOfMonth,
    adjust: adjust,
    eqDate: eqDate,
    ordDate: ordDate,
    boundedDate: boundedDate,
    showDate: showDate,
    enumDate: enumDate
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Semigroupoid/index.js":61,"../Data.Boolean/index.js":110,"../Data.Bounded/index.js":113,"../Data.Date.Component/index.js":121,"../Data.Enum/index.js":133,"../Data.Eq/index.js":135,"../Data.EuclideanRing/index.js":137,"../Data.Function.Uncurried/index.js":144,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Int/index.js":167,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.Time.Duration/index.js":276,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385,"./foreign.js":122}],124:[function(require,module,exports){
"use strict";

var createDateTime = function (y, m, d, h, mi, s, ms) {
  var dateTime = new Date(Date.UTC(y, m, d, h, mi, s, ms));
  if (y >= 0 && y < 100) {
    dateTime.setUTCFullYear(y);
  }
  return dateTime;
};

exports.fromDateTimeImpl = function (y, mo, d, h, mi, s, ms) {
  return createDateTime(y, mo - 1, d, h, mi, s, ms).getTime();
};

exports.toDateTimeImpl = function (ctor) {
  return function (instant) {
    var dt = new Date(instant);
    return ctor (dt.getUTCFullYear())(dt.getUTCMonth() + 1)(dt.getUTCDate())(dt.getUTCHours())(dt.getUTCMinutes())(dt.getUTCSeconds())(dt.getUTCMilliseconds());
  };
};

},{}],125:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Date = require("../Data.Date/index.js");
var Data_Date_Component = require("../Data.Date.Component/index.js");
var Data_DateTime = require("../Data.DateTime/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Time = require("../Data.Time/index.js");
var Data_Time_Component = require("../Data.Time.Component/index.js");
var Data_Time_Duration = require("../Data.Time.Duration/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var Instant = function (x) {
    return x;
};
var unInstant = function (v) {
    return v;
};
var toDateTime = (function () {
    var mkDateTime = function (y) {
        return function (mo) {
            return function (d) {
                return function (h) {
                    return function (mi) {
                        return function (s) {
                            return function (ms) {
                                return new Data_DateTime.DateTime(Data_Date.canonicalDate(y)(Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(mo)))(d), new Data_Time.Time(h, mi, s, ms));
                            };
                        };
                    };
                };
            };
        };
    };
    return $foreign.toDateTimeImpl(mkDateTime);
})();
var showInstant = new Data_Show.Show(function (v) {
    return "(Instant " + (Data_Show.show(Data_Time_Duration.showMilliseconds)(v) + ")");
});
var ordDateTime = Data_Time_Duration.ordMilliseconds;
var instant = function (v) {
    if (v >= -8.6399778816e15 && v <= 8.639977881599999e15) {
        return new Data_Maybe.Just(v);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.DateTime.Instant (line 44, column 1 - line 44, column 41): " + [ v.constructor.name ]);
};
var fromDateTime = function (v) {
    return $foreign.fromDateTimeImpl(Data_Date.year(v.value0), Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)), Data_Date.day(v.value0), Data_Time.hour(v.value1), Data_Time.minute(v.value1), Data_Time.second(v.value1), Data_Time.millisecond(v.value1));
};
var fromDate = function (d) {
    return $foreign.fromDateTimeImpl(Data_Date.year(d), Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(d)), Data_Date.day(d), Data_Bounded.bottom(Data_Time_Component.boundedHour), Data_Bounded.bottom(Data_Time_Component.boundedMinute), Data_Bounded.bottom(Data_Time_Component.boundedSecond), Data_Bounded.bottom(Data_Time_Component.boundedMillisecond));
};
var eqDateTime = Data_Time_Duration.eqMilliseconds;
var boundedInstant = new Data_Bounded.Bounded(function () {
    return ordDateTime;
}, -8.6399778816e15, 8.639977881599999e15);
module.exports = {
    instant: instant,
    unInstant: unInstant,
    fromDateTime: fromDateTime,
    fromDate: fromDate,
    toDateTime: toDateTime,
    eqDateTime: eqDateTime,
    ordDateTime: ordDateTime,
    boundedInstant: boundedInstant,
    showInstant: showInstant
};

},{"../Data.Boolean/index.js":110,"../Data.Bounded/index.js":113,"../Data.Date.Component/index.js":121,"../Data.Date/index.js":123,"../Data.DateTime/index.js":127,"../Data.Enum/index.js":133,"../Data.Eq/index.js":135,"../Data.Function.Uncurried/index.js":144,"../Data.HeytingAlgebra/index.js":162,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Data.Time.Component/index.js":275,"../Data.Time.Duration/index.js":276,"../Data.Time/index.js":277,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385,"./foreign.js":124}],126:[function(require,module,exports){
"use strict";

var createUTC = function (y, mo, d, h, m, s, ms) {
  var date = new Date(Date.UTC(y, mo, d, h, m, s, ms));
  if (y >= 0 && y < 100) {
    date.setUTCFullYear(y);
  }
  return date.getTime();
};

exports.calcDiff = function (rec1, rec2) {
  var msUTC1 = createUTC(rec1.year, rec1.month - 1, rec1.day, rec1.hour, rec1.minute, rec1.second, rec1.millisecond);
  var msUTC2 = createUTC(rec2.year, rec2.month - 1, rec2.day, rec2.hour, rec2.minute, rec2.second, rec2.millisecond);
  return msUTC1 - msUTC2;
};

exports.adjustImpl = function (just) {
  return function (nothing) {
    return function (offset) {
      return function (rec) {
        var msUTC = createUTC(rec.year, rec.month - 1, rec.day, rec.hour, rec.minute, rec.second, rec.millisecond);
        var dt = new Date(msUTC + offset);
        return isNaN(dt.getTime()) ? nothing : just({
          year: dt.getUTCFullYear(),
          month: dt.getUTCMonth() + 1,
          day: dt.getUTCDate(),
          hour: dt.getUTCHours(),
          minute: dt.getUTCMinutes(),
          second: dt.getUTCSeconds(),
          millisecond: dt.getUTCMilliseconds()
        });
      };
    };
  };
};

},{}],127:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Date = require("../Data.Date/index.js");
var Data_Date_Component = require("../Data.Date.Component/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Time = require("../Data.Time/index.js");
var Data_Time_Component = require("../Data.Time.Component/index.js");
var Data_Time_Duration = require("../Data.Time.Duration/index.js");
var Prelude = require("../Prelude/index.js");
var DateTime = (function () {
    function DateTime(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    DateTime.create = function (value0) {
        return function (value1) {
            return new DateTime(value0, value1);
        };
    };
    return DateTime;
})();
var toRecord = function (v) {
    return {
        year: Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0)),
        month: Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)),
        day: Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v.value0)),
        hour: Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1)),
        minute: Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v.value1)),
        second: Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v.value1)),
        millisecond: Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1))
    };
};
var time = function (v) {
    return v.value1;
};
var showDateTime = new Data_Show.Show(function (v) {
    return "(DateTime " + (Data_Show.show(Data_Date.showDate)(v.value0) + (" " + (Data_Show.show(Data_Time.showTime)(v.value1) + ")")));
});
var modifyTimeF = function (dictFunctor) {
    return function (f) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(DateTime.create(v.value0))(f(v.value1));
        };
    };
};
var modifyTime = function (f) {
    return function (v) {
        return new DateTime(v.value0, f(v.value1));
    };
};
var modifyDateF = function (dictFunctor) {
    return function (f) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(Data_Function.flip(DateTime.create)(v.value1))(f(v.value0));
        };
    };
};
var modifyDate = function (f) {
    return function (v) {
        return new DateTime(f(v.value0), v.value1);
    };
};
var eqDateTime = new Data_Eq.Eq(function (x) {
    return function (y) {
        return Data_Eq.eq(Data_Date.eqDate)(x.value0)(y.value0) && Data_Eq.eq(Data_Time.eqTime)(x.value1)(y.value1);
    };
});
var ordDateTime = new Data_Ord.Ord(function () {
    return eqDateTime;
}, function (x) {
    return function (y) {
        var v = Data_Ord.compare(Data_Date.ordDate)(x.value0)(y.value0);
        if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        return Data_Ord.compare(Data_Time.ordTime)(x.value1)(y.value1);
    };
});
var diff = function (dictDuration) {
    return function (dt1) {
        return function (dt2) {
            return Data_Time_Duration.toDuration(dictDuration)($foreign.calcDiff(toRecord(dt1), toRecord(dt2)));
        };
    };
};
var date = function (v) {
    return v.value0;
};
var boundedDateTime = new Data_Bounded.Bounded(function () {
    return ordDateTime;
}, new DateTime(Data_Bounded.bottom(Data_Date.boundedDate), Data_Bounded.bottom(Data_Time.boundedTime)), new DateTime(Data_Bounded.top(Data_Date.boundedDate), Data_Bounded.top(Data_Time.boundedTime)));
var adjust = function (dictDuration) {
    return function (d) {
        return function (dt) {
            return Control_Bind.bind(Data_Maybe.bindMaybe)($foreign.adjustImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value)(Data_Time_Duration.fromDuration(dictDuration)(d))(toRecord(dt)))(function (rec) {
                return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(DateTime.create)(Control_Bind.join(Data_Maybe.bindMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Date.exactDate)(Data_Enum.toEnum(Data_Date_Component.boundedEnumYear)(rec.year)))(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(rec.month)))(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(rec.day)))))(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Time.Time.create)(Data_Enum.toEnum(Data_Time_Component.boundedEnumHour)(rec.hour)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMinute)(rec.minute)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumSecond)(rec.second)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMillisecond)(rec.millisecond)));
            });
        };
    };
};
module.exports = {
    DateTime: DateTime,
    date: date,
    modifyDate: modifyDate,
    modifyDateF: modifyDateF,
    time: time,
    modifyTime: modifyTime,
    modifyTimeF: modifyTimeF,
    adjust: adjust,
    diff: diff,
    eqDateTime: eqDateTime,
    ordDateTime: ordDateTime,
    boundedDateTime: boundedDateTime,
    showDateTime: showDateTime
};

},{"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Data.Bounded/index.js":113,"../Data.Date.Component/index.js":121,"../Data.Date/index.js":123,"../Data.Enum/index.js":133,"../Data.Eq/index.js":135,"../Data.Function.Uncurried/index.js":144,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Data.Time.Component/index.js":275,"../Data.Time.Duration/index.js":276,"../Data.Time/index.js":277,"../Prelude/index.js":385,"./foreign.js":126}],128:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Prelude = require("../Prelude/index.js");
var Distributive = function (Functor0, collect, distribute) {
    this.Functor0 = Functor0;
    this.collect = collect;
    this.distribute = distribute;
};
var distributiveIdentity = new Distributive(function () {
    return Data_Identity.functorIdentity;
}, function (dictFunctor) {
    return function (f) {
        return function ($11) {
            return Data_Identity.Identity(Data_Functor.map(dictFunctor)(function ($12) {
                return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(f($12));
            })($11));
        };
    };
}, function (dictFunctor) {
    return function ($13) {
        return Data_Identity.Identity(Data_Functor.map(dictFunctor)(Data_Newtype.unwrap(Data_Identity.newtypeIdentity))($13));
    };
});
var distribute = function (dict) {
    return dict.distribute;
};
var distributiveFunction = new Distributive(function () {
    return Data_Functor.functorFn;
}, function (dictFunctor) {
    return function (f) {
        return function ($14) {
            return distribute(distributiveFunction)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($14));
        };
    };
}, function (dictFunctor) {
    return function (a) {
        return function (e) {
            return Data_Functor.map(dictFunctor)(function (v) {
                return v(e);
            })(a);
        };
    };
});
var cotraverse = function (dictDistributive) {
    return function (dictFunctor) {
        return function (f) {
            return function ($15) {
                return Data_Functor.map(dictDistributive.Functor0())(f)(distribute(dictDistributive)(dictFunctor)($15));
            };
        };
    };
};
var collectDefault = function (dictDistributive) {
    return function (dictFunctor) {
        return function (f) {
            return function ($16) {
                return distribute(dictDistributive)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($16));
            };
        };
    };
};
var collect = function (dict) {
    return dict.collect;
};
var distributeDefault = function (dictDistributive) {
    return function (dictFunctor) {
        return collect(dictDistributive)(dictFunctor)(Control_Category.identity(Control_Category.categoryFn));
    };
};
module.exports = {
    collect: collect,
    distribute: distribute,
    Distributive: Distributive,
    distributeDefault: distributeDefault,
    collectDefault: collectDefault,
    cotraverse: cotraverse,
    distributiveIdentity: distributiveIdentity,
    distributiveFunction: distributiveFunction
};

},{"../Control.Category/index.js":14,"../Control.Semigroupoid/index.js":61,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Identity/index.js":163,"../Data.Newtype/index.js":220,"../Prelude/index.js":385}],129:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var DivisionRing = function (Ring0, recip) {
    this.Ring0 = Ring0;
    this.recip = recip;
};
var recip = function (dict) {
    return dict.recip;
};
var rightDiv = function (dictDivisionRing) {
    return function (a) {
        return function (b) {
            return Data_Semiring.mul((dictDivisionRing.Ring0()).Semiring0())(a)(recip(dictDivisionRing)(b));
        };
    };
};
var leftDiv = function (dictDivisionRing) {
    return function (a) {
        return function (b) {
            return Data_Semiring.mul((dictDivisionRing.Ring0()).Semiring0())(recip(dictDivisionRing)(b))(a);
        };
    };
};
var divisionringNumber = new DivisionRing(function () {
    return Data_Ring.ringNumber;
}, function (x) {
    return 1.0 / x;
});
module.exports = {
    DivisionRing: DivisionRing,
    recip: recip,
    leftDiv: leftDiv,
    rightDiv: rightDiv,
    divisionringNumber: divisionringNumber
};

},{"../Data.EuclideanRing/index.js":137,"../Data.Ring/index.js":242,"../Data.Semiring/index.js":251}],130:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Either = require("../Data.Either/index.js");
var Data_Void = require("../Data.Void/index.js");
var in9 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)))))))));
};
var in8 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))))))));
};
var in7 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)))))));
};
var in6 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))))));
};
var in5 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)))));
};
var in4 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))));
};
var in3 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)));
};
var in2 = function (v) {
    return new Data_Either.Right(new Data_Either.Left(v));
};
var in10 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))))))))));
};
var in1 = Data_Either.Left.create;
var either9 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (i) {
                                    return function (y) {
                                        if (y instanceof Data_Either.Left) {
                                            return a(y.value0);
                                        };
                                        if (y instanceof Data_Either.Right) {
                                            if (y.value0 instanceof Data_Either.Left) {
                                                return b(y.value0.value0);
                                            };
                                            if (y.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0 instanceof Data_Either.Left) {
                                                    return c(y.value0.value0.value0);
                                                };
                                                if (y.value0.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                        return d(y.value0.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return e(y.value0.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                            if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                return f(y.value0.value0.value0.value0.value0.value0);
                                                            };
                                                            if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                    return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                                };
                                                                if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                    if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                        return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                    };
                                                                    if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                            return i(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                        };
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                            return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                        };
                                                                        throw new Error("Failed pattern match at Data.Either.Nested (line 236, column 29 - line 238, column 40): " + [ y.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                    };
                                                                    throw new Error("Failed pattern match at Data.Either.Nested (line 234, column 27 - line 238, column 40): " + [ y.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                };
                                                                throw new Error("Failed pattern match at Data.Either.Nested (line 232, column 25 - line 238, column 40): " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                            };
                                                            throw new Error("Failed pattern match at Data.Either.Nested (line 230, column 23 - line 238, column 40): " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                        };
                                                        throw new Error("Failed pattern match at Data.Either.Nested (line 228, column 21 - line 238, column 40): " + [ y.value0.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Either.Nested (line 226, column 19 - line 238, column 40): " + [ y.value0.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Either.Nested (line 224, column 17 - line 238, column 40): " + [ y.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Either.Nested (line 222, column 15 - line 238, column 40): " + [ y.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Either.Nested (line 220, column 31 - line 238, column 40): " + [ y.constructor.name ]);
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var either8 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (y) {
                                    if (y instanceof Data_Either.Left) {
                                        return a(y.value0);
                                    };
                                    if (y instanceof Data_Either.Right) {
                                        if (y.value0 instanceof Data_Either.Left) {
                                            return b(y.value0.value0);
                                        };
                                        if (y.value0 instanceof Data_Either.Right) {
                                            if (y.value0.value0 instanceof Data_Either.Left) {
                                                return c(y.value0.value0.value0);
                                            };
                                            if (y.value0.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                    return d(y.value0.value0.value0.value0);
                                                };
                                                if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                        return e(y.value0.value0.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return f(y.value0.value0.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                            if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                            };
                                                            if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                    return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                };
                                                                if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                    return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                };
                                                                throw new Error("Failed pattern match at Data.Either.Nested (line 215, column 27 - line 217, column 38): " + [ y.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                            };
                                                            throw new Error("Failed pattern match at Data.Either.Nested (line 213, column 25 - line 217, column 38): " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                        };
                                                        throw new Error("Failed pattern match at Data.Either.Nested (line 211, column 23 - line 217, column 38): " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Either.Nested (line 209, column 21 - line 217, column 38): " + [ y.value0.value0.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Either.Nested (line 207, column 19 - line 217, column 38): " + [ y.value0.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Either.Nested (line 205, column 17 - line 217, column 38): " + [ y.value0.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Either.Nested (line 203, column 15 - line 217, column 38): " + [ y.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Either.Nested (line 201, column 29 - line 217, column 38): " + [ y.constructor.name ]);
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var either7 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (y) {
                                if (y instanceof Data_Either.Left) {
                                    return a(y.value0);
                                };
                                if (y instanceof Data_Either.Right) {
                                    if (y.value0 instanceof Data_Either.Left) {
                                        return b(y.value0.value0);
                                    };
                                    if (y.value0 instanceof Data_Either.Right) {
                                        if (y.value0.value0 instanceof Data_Either.Left) {
                                            return c(y.value0.value0.value0);
                                        };
                                        if (y.value0.value0 instanceof Data_Either.Right) {
                                            if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                return d(y.value0.value0.value0.value0);
                                            };
                                            if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                    return e(y.value0.value0.value0.value0.value0);
                                                };
                                                if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                        return f(y.value0.value0.value0.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                            return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0.value0);
                                                        };
                                                        throw new Error("Failed pattern match at Data.Either.Nested (line 196, column 25 - line 198, column 36): " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Either.Nested (line 194, column 23 - line 198, column 36): " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Either.Nested (line 192, column 21 - line 198, column 36): " + [ y.value0.value0.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Either.Nested (line 190, column 19 - line 198, column 36): " + [ y.value0.value0.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Either.Nested (line 188, column 17 - line 198, column 36): " + [ y.value0.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Either.Nested (line 186, column 15 - line 198, column 36): " + [ y.value0.constructor.name ]);
                                };
                                throw new Error("Failed pattern match at Data.Either.Nested (line 184, column 27 - line 198, column 36): " + [ y.constructor.name ]);
                            };
                        };
                    };
                };
            };
        };
    };
};
var either6 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (y) {
                            if (y instanceof Data_Either.Left) {
                                return a(y.value0);
                            };
                            if (y instanceof Data_Either.Right) {
                                if (y.value0 instanceof Data_Either.Left) {
                                    return b(y.value0.value0);
                                };
                                if (y.value0 instanceof Data_Either.Right) {
                                    if (y.value0.value0 instanceof Data_Either.Left) {
                                        return c(y.value0.value0.value0);
                                    };
                                    if (y.value0.value0 instanceof Data_Either.Right) {
                                        if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                            return d(y.value0.value0.value0.value0);
                                        };
                                        if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                return e(y.value0.value0.value0.value0.value0);
                                            };
                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                    return f(y.value0.value0.value0.value0.value0.value0);
                                                };
                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                    return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0);
                                                };
                                                throw new Error("Failed pattern match at Data.Either.Nested (line 179, column 23 - line 181, column 34): " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Either.Nested (line 177, column 21 - line 181, column 34): " + [ y.value0.value0.value0.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Either.Nested (line 175, column 19 - line 181, column 34): " + [ y.value0.value0.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Either.Nested (line 173, column 17 - line 181, column 34): " + [ y.value0.value0.constructor.name ]);
                                };
                                throw new Error("Failed pattern match at Data.Either.Nested (line 171, column 15 - line 181, column 34): " + [ y.value0.constructor.name ]);
                            };
                            throw new Error("Failed pattern match at Data.Either.Nested (line 169, column 25 - line 181, column 34): " + [ y.constructor.name ]);
                        };
                    };
                };
            };
        };
    };
};
var either5 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (y) {
                        if (y instanceof Data_Either.Left) {
                            return a(y.value0);
                        };
                        if (y instanceof Data_Either.Right) {
                            if (y.value0 instanceof Data_Either.Left) {
                                return b(y.value0.value0);
                            };
                            if (y.value0 instanceof Data_Either.Right) {
                                if (y.value0.value0 instanceof Data_Either.Left) {
                                    return c(y.value0.value0.value0);
                                };
                                if (y.value0.value0 instanceof Data_Either.Right) {
                                    if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                        return d(y.value0.value0.value0.value0);
                                    };
                                    if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                            return e(y.value0.value0.value0.value0.value0);
                                        };
                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                            return Data_Void.absurd(y.value0.value0.value0.value0.value0);
                                        };
                                        throw new Error("Failed pattern match at Data.Either.Nested (line 164, column 21 - line 166, column 32): " + [ y.value0.value0.value0.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Either.Nested (line 162, column 19 - line 166, column 32): " + [ y.value0.value0.value0.constructor.name ]);
                                };
                                throw new Error("Failed pattern match at Data.Either.Nested (line 160, column 17 - line 166, column 32): " + [ y.value0.value0.constructor.name ]);
                            };
                            throw new Error("Failed pattern match at Data.Either.Nested (line 158, column 15 - line 166, column 32): " + [ y.value0.constructor.name ]);
                        };
                        throw new Error("Failed pattern match at Data.Either.Nested (line 156, column 23 - line 166, column 32): " + [ y.constructor.name ]);
                    };
                };
            };
        };
    };
};
var either4 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (y) {
                    if (y instanceof Data_Either.Left) {
                        return a(y.value0);
                    };
                    if (y instanceof Data_Either.Right) {
                        if (y.value0 instanceof Data_Either.Left) {
                            return b(y.value0.value0);
                        };
                        if (y.value0 instanceof Data_Either.Right) {
                            if (y.value0.value0 instanceof Data_Either.Left) {
                                return c(y.value0.value0.value0);
                            };
                            if (y.value0.value0 instanceof Data_Either.Right) {
                                if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                    return d(y.value0.value0.value0.value0);
                                };
                                if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                    return Data_Void.absurd(y.value0.value0.value0.value0);
                                };
                                throw new Error("Failed pattern match at Data.Either.Nested (line 151, column 19 - line 153, column 30): " + [ y.value0.value0.value0.constructor.name ]);
                            };
                            throw new Error("Failed pattern match at Data.Either.Nested (line 149, column 17 - line 153, column 30): " + [ y.value0.value0.constructor.name ]);
                        };
                        throw new Error("Failed pattern match at Data.Either.Nested (line 147, column 15 - line 153, column 30): " + [ y.value0.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at Data.Either.Nested (line 145, column 21 - line 153, column 30): " + [ y.constructor.name ]);
                };
            };
        };
    };
};
var either3 = function (a) {
    return function (b) {
        return function (c) {
            return function (y) {
                if (y instanceof Data_Either.Left) {
                    return a(y.value0);
                };
                if (y instanceof Data_Either.Right) {
                    if (y.value0 instanceof Data_Either.Left) {
                        return b(y.value0.value0);
                    };
                    if (y.value0 instanceof Data_Either.Right) {
                        if (y.value0.value0 instanceof Data_Either.Left) {
                            return c(y.value0.value0.value0);
                        };
                        if (y.value0.value0 instanceof Data_Either.Right) {
                            return Data_Void.absurd(y.value0.value0.value0);
                        };
                        throw new Error("Failed pattern match at Data.Either.Nested (line 140, column 17 - line 142, column 28): " + [ y.value0.value0.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at Data.Either.Nested (line 138, column 15 - line 142, column 28): " + [ y.value0.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.Either.Nested (line 136, column 19 - line 142, column 28): " + [ y.constructor.name ]);
            };
        };
    };
};
var either2 = function (a) {
    return function (b) {
        return function (y) {
            if (y instanceof Data_Either.Left) {
                return a(y.value0);
            };
            if (y instanceof Data_Either.Right) {
                if (y.value0 instanceof Data_Either.Left) {
                    return b(y.value0.value0);
                };
                if (y.value0 instanceof Data_Either.Right) {
                    return Data_Void.absurd(y.value0.value0);
                };
                throw new Error("Failed pattern match at Data.Either.Nested (line 131, column 15 - line 133, column 26): " + [ y.value0.constructor.name ]);
            };
            throw new Error("Failed pattern match at Data.Either.Nested (line 129, column 17 - line 133, column 26): " + [ y.constructor.name ]);
        };
    };
};
var either10 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (i) {
                                    return function (j) {
                                        return function (y) {
                                            if (y instanceof Data_Either.Left) {
                                                return a(y.value0);
                                            };
                                            if (y instanceof Data_Either.Right) {
                                                if (y.value0 instanceof Data_Either.Left) {
                                                    return b(y.value0.value0);
                                                };
                                                if (y.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0 instanceof Data_Either.Left) {
                                                        return c(y.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return d(y.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                return e(y.value0.value0.value0.value0.value0);
                                                            };
                                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                    return f(y.value0.value0.value0.value0.value0.value0);
                                                                };
                                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                    if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                        return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                                    };
                                                                    if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                            return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                        };
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                            if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                                return i(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                            };
                                                                            if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                                if (y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                                    return j(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                                };
                                                                                if (y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                                    return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                                };
                                                                                throw new Error("Failed pattern match at Data.Either.Nested (line 259, column 31 - line 261, column 41): " + [ y.value0.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                            };
                                                                            throw new Error("Failed pattern match at Data.Either.Nested (line 257, column 29 - line 261, column 41): " + [ y.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                        };
                                                                        throw new Error("Failed pattern match at Data.Either.Nested (line 255, column 27 - line 261, column 41): " + [ y.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                    };
                                                                    throw new Error("Failed pattern match at Data.Either.Nested (line 253, column 25 - line 261, column 41): " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                };
                                                                throw new Error("Failed pattern match at Data.Either.Nested (line 251, column 23 - line 261, column 41): " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                            };
                                                            throw new Error("Failed pattern match at Data.Either.Nested (line 249, column 21 - line 261, column 41): " + [ y.value0.value0.value0.value0.constructor.name ]);
                                                        };
                                                        throw new Error("Failed pattern match at Data.Either.Nested (line 247, column 19 - line 261, column 41): " + [ y.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Either.Nested (line 245, column 17 - line 261, column 41): " + [ y.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Either.Nested (line 243, column 15 - line 261, column 41): " + [ y.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Either.Nested (line 241, column 34 - line 261, column 41): " + [ y.constructor.name ]);
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var either1 = function (y) {
    if (y instanceof Data_Either.Left) {
        return y.value0;
    };
    if (y instanceof Data_Either.Right) {
        return Data_Void.absurd(y.value0);
    };
    throw new Error("Failed pattern match at Data.Either.Nested (line 124, column 13 - line 126, column 24): " + [ y.constructor.name ]);
};
var at9 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left)))))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at8 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left))))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at7 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left)))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at6 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Left))))) {
                return f(y.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at5 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Left)))) {
                return f(y.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at4 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Left))) {
                return f(y.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at3 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Left)) {
                return f(y.value0.value0.value0);
            };
            return b;
        };
    };
};
var at2 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Left) {
                return f(y.value0.value0);
            };
            return b;
        };
    };
};
var at10 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left))))))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at1 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Left) {
                return f(y.value0);
            };
            return b;
        };
    };
};
module.exports = {
    in1: in1,
    in2: in2,
    in3: in3,
    in4: in4,
    in5: in5,
    in6: in6,
    in7: in7,
    in8: in8,
    in9: in9,
    in10: in10,
    at1: at1,
    at2: at2,
    at3: at3,
    at4: at4,
    at5: at5,
    at6: at6,
    at7: at7,
    at8: at8,
    at9: at9,
    at10: at10,
    either1: either1,
    either2: either2,
    either3: either3,
    either4: either4,
    either5: either5,
    either6: either6,
    either7: either7,
    either8: either8,
    either9: either9,
    either10: either10
};

},{"../Data.Either/index.js":131,"../Data.Void/index.js":291}],131:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Bifoldable = require("../Data.Bifoldable/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Bitraversable = require("../Data.Bitraversable/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Prelude = require("../Prelude/index.js");
var Left = (function () {
    function Left(value0) {
        this.value0 = value0;
    };
    Left.create = function (value0) {
        return new Left(value0);
    };
    return Left;
})();
var Right = (function () {
    function Right(value0) {
        this.value0 = value0;
    };
    Right.create = function (value0) {
        return new Right(value0);
    };
    return Right;
})();
var showEither = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            if (v instanceof Left) {
                return "(Left " + (Data_Show.show(dictShow)(v.value0) + ")");
            };
            if (v instanceof Right) {
                return "(Right " + (Data_Show.show(dictShow1)(v.value0) + ")");
            };
            throw new Error("Failed pattern match at Data.Either (line 163, column 1 - line 163, column 61): " + [ v.constructor.name ]);
        });
    };
};
var note$prime = function (f) {
    return Data_Maybe["maybe'"](function ($198) {
        return Left.create(f($198));
    })(Right.create);
};
var note = function (a) {
    return Data_Maybe.maybe(new Left(a))(Right.create);
};
var functorEither = new Data_Functor.Functor(function (f) {
    return function (m) {
        if (m instanceof Left) {
            return new Left(m.value0);
        };
        if (m instanceof Right) {
            return new Right(f(m.value0));
        };
        throw new Error("Failed pattern match at Data.Either (line 38, column 8 - line 38, column 52): " + [ m.constructor.name ]);
    };
});
var functorWithIndexEither = new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorEither;
}, function (f) {
    return Data_Functor.map(functorEither)(f(Data_Unit.unit));
});
var invariantEither = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorEither));
var fromRight = function (dictPartial) {
    return function (v) {
        if (v instanceof Right) {
            return v.value0;
        };
        throw new Error("Failed pattern match at Data.Either (line 261, column 1 - line 261, column 52): " + [ v.constructor.name ]);
    };
};
var fromLeft = function (dictPartial) {
    return function (v) {
        if (v instanceof Left) {
            return v.value0;
        };
        throw new Error("Failed pattern match at Data.Either (line 256, column 1 - line 256, column 51): " + [ v.constructor.name ]);
    };
};
var foldableEither = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof Left) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof Right) {
                return f(v.value0);
            };
            throw new Error("Failed pattern match at Data.Either (line 187, column 1 - line 187, column 47): " + [ f.constructor.name, v.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Left) {
                return z;
            };
            if (v1 instanceof Right) {
                return v(z)(v1.value0);
            };
            throw new Error("Failed pattern match at Data.Either (line 187, column 1 - line 187, column 47): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Left) {
                return z;
            };
            if (v1 instanceof Right) {
                return v(v1.value0)(z);
            };
            throw new Error("Failed pattern match at Data.Either (line 187, column 1 - line 187, column 47): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
});
var foldableWithIndexEither = new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableEither;
}, function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof Left) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof Right) {
                return f(Data_Unit.unit)(v.value0);
            };
            throw new Error("Failed pattern match at Data.Either (line 195, column 1 - line 195, column 70): " + [ f.constructor.name, v.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Left) {
                return z;
            };
            if (v1 instanceof Right) {
                return v(Data_Unit.unit)(z)(v1.value0);
            };
            throw new Error("Failed pattern match at Data.Either (line 195, column 1 - line 195, column 70): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Left) {
                return z;
            };
            if (v1 instanceof Right) {
                return v(Data_Unit.unit)(v1.value0)(z);
            };
            throw new Error("Failed pattern match at Data.Either (line 195, column 1 - line 195, column 70): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
});
var traversableEither = new Data_Traversable.Traversable(function () {
    return foldableEither;
}, function () {
    return functorEither;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Left) {
            return Control_Applicative.pure(dictApplicative)(new Left(v.value0));
        };
        if (v instanceof Right) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Either (line 211, column 1 - line 211, column 53): " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Left) {
                return Control_Applicative.pure(dictApplicative)(new Left(v1.value0));
            };
            if (v1 instanceof Right) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Either (line 211, column 1 - line 211, column 53): " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var traversableWithIndexEither = new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexEither;
}, function () {
    return functorWithIndexEither;
}, function () {
    return traversableEither;
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Left) {
                return Control_Applicative.pure(dictApplicative)(new Left(v1.value0));
            };
            if (v1 instanceof Right) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v(Data_Unit.unit)(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Either (line 217, column 1 - line 217, column 76): " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var extendEither = new Control_Extend.Extend(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Left) {
            return new Left(v1.value0);
        };
        return new Right(v(v1));
    };
});
var eqEither = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                if (x instanceof Left && y instanceof Left) {
                    return Data_Eq.eq(dictEq)(x.value0)(y.value0);
                };
                if (x instanceof Right && y instanceof Right) {
                    return Data_Eq.eq(dictEq1)(x.value0)(y.value0);
                };
                return false;
            };
        });
    };
};
var ordEither = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqEither(dictOrd.Eq0())(dictOrd1.Eq0());
        }, function (x) {
            return function (y) {
                if (x instanceof Left && y instanceof Left) {
                    return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                };
                if (x instanceof Left) {
                    return Data_Ordering.LT.value;
                };
                if (y instanceof Left) {
                    return Data_Ordering.GT.value;
                };
                if (x instanceof Right && y instanceof Right) {
                    return Data_Ord.compare(dictOrd1)(x.value0)(y.value0);
                };
                throw new Error("Failed pattern match at Data.Either (line 179, column 8 - line 179, column 64): " + [ x.constructor.name, y.constructor.name ]);
            };
        });
    };
};
var eq1Either = function (dictEq) {
    return new Data_Eq.Eq1(function (dictEq1) {
        return Data_Eq.eq(eqEither(dictEq)(dictEq1));
    });
};
var ord1Either = function (dictOrd) {
    return new Data_Ord.Ord1(function () {
        return eq1Either(dictOrd.Eq0());
    }, function (dictOrd1) {
        return Data_Ord.compare(ordEither(dictOrd)(dictOrd1));
    });
};
var either = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Left) {
                return v(v2.value0);
            };
            if (v2 instanceof Right) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Either (line 238, column 1 - line 238, column 64): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var hush = either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
var isLeft = either(Data_Function["const"](true))(Data_Function["const"](false));
var isRight = either(Data_Function["const"](false))(Data_Function["const"](true));
var choose = function (dictAlt) {
    return function (a) {
        return function (b) {
            return Control_Alt.alt(dictAlt)(Data_Functor.map(dictAlt.Functor0())(Left.create)(a))(Data_Functor.map(dictAlt.Functor0())(Right.create)(b));
        };
    };
};
var boundedEither = function (dictBounded) {
    return function (dictBounded1) {
        return new Data_Bounded.Bounded(function () {
            return ordEither(dictBounded.Ord0())(dictBounded1.Ord0());
        }, new Left(Data_Bounded.bottom(dictBounded)), new Right(Data_Bounded.top(dictBounded1)));
    };
};
var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Left) {
                return new Left(v(v2.value0));
            };
            if (v2 instanceof Right) {
                return new Right(v1(v2.value0));
            };
            throw new Error("Failed pattern match at Data.Either (line 46, column 1 - line 46, column 45): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
});
var bifoldableEither = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(v2.value0);
                };
                if (v2 instanceof Right) {
                    return v1(v2.value0);
                };
                throw new Error("Failed pattern match at Data.Either (line 203, column 1 - line 203, column 47): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
            };
        };
    };
}, function (v) {
    return function (v1) {
        return function (z) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(z)(v2.value0);
                };
                if (v2 instanceof Right) {
                    return v1(z)(v2.value0);
                };
                throw new Error("Failed pattern match at Data.Either (line 203, column 1 - line 203, column 47): " + [ v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name ]);
            };
        };
    };
}, function (v) {
    return function (v1) {
        return function (z) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(v2.value0)(z);
                };
                if (v2 instanceof Right) {
                    return v1(v2.value0)(z);
                };
                throw new Error("Failed pattern match at Data.Either (line 203, column 1 - line 203, column 47): " + [ v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name ]);
            };
        };
    };
});
var bitraversableEither = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableEither;
}, function () {
    return bifunctorEither;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Left) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Left.create)(v.value0);
        };
        if (v instanceof Right) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Either (line 221, column 1 - line 221, column 53): " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Left.create)(v(v2.value0));
                };
                if (v2 instanceof Right) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v1(v2.value0));
                };
                throw new Error("Failed pattern match at Data.Either (line 221, column 1 - line 221, column 53): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
            };
        };
    };
});
var applyEither = new Control_Apply.Apply(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Left) {
            return new Left(v.value0);
        };
        if (v instanceof Right) {
            return Data_Functor.map(functorEither)(v.value0)(v1);
        };
        throw new Error("Failed pattern match at Data.Either (line 82, column 1 - line 82, column 41): " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindEither = new Control_Bind.Bind(function () {
    return applyEither;
}, either(function (e) {
    return function (v) {
        return new Left(e);
    };
})(function (a) {
    return function (f) {
        return f(a);
    };
}));
var semigroupEither = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (x) {
        return function (y) {
            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semigroup.append(dictSemigroup))(x))(y);
        };
    });
};
var applicativeEither = new Control_Applicative.Applicative(function () {
    return applyEither;
}, Right.create);
var monadEither = new Control_Monad.Monad(function () {
    return applicativeEither;
}, function () {
    return bindEither;
});
var altEither = new Control_Alt.Alt(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Left) {
            return v1;
        };
        return v;
    };
});
module.exports = {
    Left: Left,
    Right: Right,
    either: either,
    choose: choose,
    isLeft: isLeft,
    isRight: isRight,
    fromLeft: fromLeft,
    fromRight: fromRight,
    note: note,
    "note'": note$prime,
    hush: hush,
    functorEither: functorEither,
    functorWithIndexEither: functorWithIndexEither,
    invariantEither: invariantEither,
    bifunctorEither: bifunctorEither,
    applyEither: applyEither,
    applicativeEither: applicativeEither,
    altEither: altEither,
    bindEither: bindEither,
    monadEither: monadEither,
    extendEither: extendEither,
    showEither: showEither,
    eqEither: eqEither,
    eq1Either: eq1Either,
    ordEither: ordEither,
    ord1Either: ord1Either,
    boundedEither: boundedEither,
    foldableEither: foldableEither,
    foldableWithIndexEither: foldableWithIndexEither,
    bifoldableEither: bifoldableEither,
    traversableEither: traversableEither,
    traversableWithIndexEither: traversableWithIndexEither,
    bitraversableEither: bitraversableEither,
    semigroupEither: semigroupEither
};

},{"../Control.Alt/index.js":4,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Extend/index.js":24,"../Control.Monad/index.js":55,"../Control.Semigroupoid/index.js":61,"../Data.Bifoldable/index.js":100,"../Data.Bifunctor/index.js":106,"../Data.Bitraversable/index.js":109,"../Data.Bounded/index.js":113,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.FoldableWithIndex/index.js":142,"../Data.Function/index.js":145,"../Data.Functor.Invariant/index.js":151,"../Data.Functor/index.js":153,"../Data.FunctorWithIndex/index.js":155,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Data.Traversable/index.js":281,"../Data.TraversableWithIndex/index.js":282,"../Data.Unit/index.js":289,"../Prelude/index.js":385}],132:[function(require,module,exports){
"use strict";

exports.toCharCode = function (c) {
  return c.charCodeAt(0);
};

exports.fromCharCode = function (c) {
  return String.fromCharCode(c);
};

},{}],133:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var Cardinality = function (x) {
    return x;
};
var Enum = function (Ord0, pred, succ) {
    this.Ord0 = Ord0;
    this.pred = pred;
    this.succ = succ;
};
var BoundedEnum = function (Bounded0, Enum1, cardinality, fromEnum, toEnum) {
    this.Bounded0 = Bounded0;
    this.Enum1 = Enum1;
    this.cardinality = cardinality;
    this.fromEnum = fromEnum;
    this.toEnum = toEnum;
};
var toEnum = function (dict) {
    return dict.toEnum;
};
var succ = function (dict) {
    return dict.succ;
};
var upFromIncluding = function (dictEnum) {
    return function (dictUnfoldable1) {
        return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(Control_Apply.apply(Control_Apply.applyFn)(Data_Tuple.Tuple.create)(succ(dictEnum)));
    };
};
var showCardinality = new Data_Show.Show(function (v) {
    return "(Cardinality " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var pred = function (dict) {
    return dict.pred;
};
var ordCardinality = Data_Ord.ordInt;
var newtypeCardinality = new Data_Newtype.Newtype(function (n) {
    return n;
}, Cardinality);
var fromEnum = function (dict) {
    return dict.fromEnum;
};
var toEnumWithDefaults = function (dictBoundedEnum) {
    return function (low) {
        return function (high) {
            return function (x) {
                var v = toEnum(dictBoundedEnum)(x);
                if (v instanceof Data_Maybe.Just) {
                    return v.value0;
                };
                if (v instanceof Data_Maybe.Nothing) {
                    var $54 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                    if ($54) {
                        return low;
                    };
                    return high;
                };
                throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [ v.constructor.name ]);
            };
        };
    };
};
var eqCardinality = Data_Eq.eqInt;
var enumUnit = new Enum(function () {
    return Data_Ord.ordUnit;
}, Data_Function["const"](Data_Maybe.Nothing.value), Data_Function["const"](Data_Maybe.Nothing.value));
var enumTuple = function (dictEnum) {
    return function (dictBoundedEnum) {
        return new Enum(function () {
            return Data_Tuple.ordTuple(dictEnum.Ord0())((dictBoundedEnum.Enum1()).Ord0());
        }, function (v) {
            return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.top(dictBoundedEnum.Bounded0())))(pred(dictEnum)(v.value0)))(function ($96) {
                return Data_Maybe.Just.create(Data_Tuple.Tuple.create(v.value0)($96));
            })(pred(dictBoundedEnum.Enum1())(v.value1));
        }, function (v) {
            return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.bottom(dictBoundedEnum.Bounded0())))(succ(dictEnum)(v.value0)))(function ($97) {
                return Data_Maybe.Just.create(Data_Tuple.Tuple.create(v.value0)($97));
            })(succ(dictBoundedEnum.Enum1())(v.value1));
        });
    };
};
var enumOrdering = new Enum(function () {
    return Data_Ord.ordOrdering;
}, function (v) {
    if (v instanceof Data_Ordering.LT) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_Ordering.EQ) {
        return new Data_Maybe.Just(Data_Ordering.LT.value);
    };
    if (v instanceof Data_Ordering.GT) {
        return new Data_Maybe.Just(Data_Ordering.EQ.value);
    };
    throw new Error("Failed pattern match at Data.Enum (line 72, column 1 - line 72, column 39): " + [ v.constructor.name ]);
}, function (v) {
    if (v instanceof Data_Ordering.LT) {
        return new Data_Maybe.Just(Data_Ordering.EQ.value);
    };
    if (v instanceof Data_Ordering.EQ) {
        return new Data_Maybe.Just(Data_Ordering.GT.value);
    };
    if (v instanceof Data_Ordering.GT) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Enum (line 72, column 1 - line 72, column 39): " + [ v.constructor.name ]);
});
var enumMaybe = function (dictBoundedEnum) {
    return new Enum(function () {
        return Data_Maybe.ordMaybe((dictBoundedEnum.Enum1()).Ord0());
    }, function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Nothing.value;
        };
        if (v instanceof Data_Maybe.Just) {
            return new Data_Maybe.Just(pred(dictBoundedEnum.Enum1())(v.value0));
        };
        throw new Error("Failed pattern match at Data.Enum (line 80, column 1 - line 80, column 54): " + [ v.constructor.name ]);
    }, function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return new Data_Maybe.Just(new Data_Maybe.Just(Data_Bounded.bottom(dictBoundedEnum.Bounded0())));
        };
        if (v instanceof Data_Maybe.Just) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(succ(dictBoundedEnum.Enum1())(v.value0));
        };
        throw new Error("Failed pattern match at Data.Enum (line 80, column 1 - line 80, column 54): " + [ v.constructor.name ]);
    });
};
var enumInt = new Enum(function () {
    return Data_Ord.ordInt;
}, function (n) {
    var $67 = n > Data_Bounded.bottom(Data_Bounded.boundedInt);
    if ($67) {
        return new Data_Maybe.Just(n - 1 | 0);
    };
    return Data_Maybe.Nothing.value;
}, function (n) {
    var $68 = n < Data_Bounded.top(Data_Bounded.boundedInt);
    if ($68) {
        return new Data_Maybe.Just(n + 1 | 0);
    };
    return Data_Maybe.Nothing.value;
});
var enumFromTo = function (dictEnum) {
    return function (dictUnfoldable1) {
        var go = function (step) {
            return function (op) {
                return function (to) {
                    return function (a) {
                        return new Data_Tuple.Tuple(a, Control_Bind.bind(Data_Maybe.bindMaybe)(step(a))(function (a$prime) {
                            return Data_Functor.voidLeft(Data_Maybe.functorMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(op(a$prime)(to)))(a$prime);
                        }));
                    };
                };
            };
        };
        return function (v) {
            return function (v1) {
                if (Data_Eq.eq((dictEnum.Ord0()).Eq0())(v)(v1)) {
                    return Data_Unfoldable1.singleton(dictUnfoldable1)(v);
                };
                if (Data_Ord.lessThan(dictEnum.Ord0())(v)(v1)) {
                    return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(go(succ(dictEnum))(Data_Ord.lessThanOrEq(dictEnum.Ord0()))(v1))(v);
                };
                if (Data_Boolean.otherwise) {
                    return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(go(pred(dictEnum))(Data_Ord.greaterThanOrEq(dictEnum.Ord0()))(v1))(v);
                };
                throw new Error("Failed pattern match at Data.Enum (line 183, column 14 - line 187, column 51): " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
    };
};
var enumFromThenTo = function (dictUnfoldable) {
    return function (dictFunctor) {
        return function (dictBoundedEnum) {
            var go = function (step) {
                return function (to) {
                    return function (e) {
                        if (e <= to) {
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(e, e + step | 0));
                        };
                        if (Data_Boolean.otherwise) {
                            return Data_Maybe.Nothing.value;
                        };
                        throw new Error("Failed pattern match at Data.Enum (line 214, column 5 - line 216, column 28): " + [ step.constructor.name, to.constructor.name, e.constructor.name ]);
                    };
                };
            };
            return function (a) {
                return function (b) {
                    return function (c) {
                        var c$prime = fromEnum(dictBoundedEnum)(c);
                        var b$prime = fromEnum(dictBoundedEnum)(b);
                        var a$prime = fromEnum(dictBoundedEnum)(a);
                        return Data_Functor.map(dictFunctor)(function ($98) {
                            return Data_Maybe.fromJust()(toEnum(dictBoundedEnum)($98));
                        })(Data_Unfoldable.unfoldr(dictUnfoldable)(go(b$prime - a$prime | 0)(c$prime))(a$prime));
                    };
                };
            };
        };
    };
};
var enumEither = function (dictBoundedEnum) {
    return function (dictBoundedEnum1) {
        return new Enum(function () {
            return Data_Either.ordEither((dictBoundedEnum.Enum1()).Ord0())((dictBoundedEnum1.Enum1()).Ord0());
        }, function (v) {
            if (v instanceof Data_Either.Left) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($99) {
                    return Data_Maybe.Just.create(Data_Either.Left.create($99));
                })(pred(dictBoundedEnum.Enum1())(v.value0));
            };
            if (v instanceof Data_Either.Right) {
                return Data_Maybe.maybe(new Data_Maybe.Just(new Data_Either.Left(Data_Bounded.top(dictBoundedEnum.Bounded0()))))(function ($100) {
                    return Data_Maybe.Just.create(Data_Either.Right.create($100));
                })(pred(dictBoundedEnum1.Enum1())(v.value0));
            };
            throw new Error("Failed pattern match at Data.Enum (line 86, column 1 - line 86, column 75): " + [ v.constructor.name ]);
        }, function (v) {
            if (v instanceof Data_Either.Left) {
                return Data_Maybe.maybe(new Data_Maybe.Just(new Data_Either.Right(Data_Bounded.bottom(dictBoundedEnum1.Bounded0()))))(function ($101) {
                    return Data_Maybe.Just.create(Data_Either.Left.create($101));
                })(succ(dictBoundedEnum.Enum1())(v.value0));
            };
            if (v instanceof Data_Either.Right) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($102) {
                    return Data_Maybe.Just.create(Data_Either.Right.create($102));
                })(succ(dictBoundedEnum1.Enum1())(v.value0));
            };
            throw new Error("Failed pattern match at Data.Enum (line 86, column 1 - line 86, column 75): " + [ v.constructor.name ]);
        });
    };
};
var enumBoolean = new Enum(function () {
    return Data_Ord.ordBoolean;
}, function (v) {
    if (v) {
        return new Data_Maybe.Just(false);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    if (!v) {
        return new Data_Maybe.Just(true);
    };
    return Data_Maybe.Nothing.value;
});
var downFromIncluding = function (dictEnum) {
    return function (dictUnfoldable1) {
        return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(Control_Apply.apply(Control_Apply.applyFn)(Data_Tuple.Tuple.create)(pred(dictEnum)));
    };
};
var diag = function (a) {
    return new Data_Tuple.Tuple(a, a);
};
var downFrom = function (dictEnum) {
    return function (dictUnfoldable) {
        return Data_Unfoldable.unfoldr(dictUnfoldable)(function ($103) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(diag)(pred(dictEnum)($103));
        });
    };
};
var upFrom = function (dictEnum) {
    return function (dictUnfoldable) {
        return Data_Unfoldable.unfoldr(dictUnfoldable)(function ($104) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(diag)(succ(dictEnum)($104));
        });
    };
};
var defaultToEnum = function (dictBounded) {
    return function (dictEnum) {
        return function (i$prime) {
            var go = function ($copy_i) {
                return function ($copy_x) {
                    var $tco_var_i = $copy_i;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(i, x) {
                        var $82 = i === 0;
                        if ($82) {
                            $tco_done = true;
                            return new Data_Maybe.Just(x);
                        };
                        var v = succ(dictEnum)(x);
                        if (v instanceof Data_Maybe.Just) {
                            $tco_var_i = i - 1 | 0;
                            $copy_x = v.value0;
                            return;
                        };
                        if (v instanceof Data_Maybe.Nothing) {
                            $tco_done = true;
                            return Data_Maybe.Nothing.value;
                        };
                        throw new Error("Failed pattern match at Data.Enum (line 293, column 12 - line 295, column 33): " + [ v.constructor.name ]);
                    };
                    while (!$tco_done) {
                        $tco_result = $tco_loop($tco_var_i, $copy_x);
                    };
                    return $tco_result;
                };
            };
            var $85 = i$prime < 0;
            if ($85) {
                return Data_Maybe.Nothing.value;
            };
            return go(i$prime)(Data_Bounded.bottom(dictBounded));
        };
    };
};
var defaultSucc = function (toEnum$prime) {
    return function (fromEnum$prime) {
        return function (a) {
            return toEnum$prime(fromEnum$prime(a) + 1 | 0);
        };
    };
};
var defaultPred = function (toEnum$prime) {
    return function (fromEnum$prime) {
        return function (a) {
            return toEnum$prime(fromEnum$prime(a) - 1 | 0);
        };
    };
};
var defaultFromEnum = function (dictEnum) {
    var go = function ($copy_i) {
        return function ($copy_x) {
            var $tco_var_i = $copy_i;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(i, x) {
                var v = pred(dictEnum)(x);
                if (v instanceof Data_Maybe.Just) {
                    $tco_var_i = i + 1 | 0;
                    $copy_x = v.value0;
                    return;
                };
                if (v instanceof Data_Maybe.Nothing) {
                    $tco_done = true;
                    return i;
                };
                throw new Error("Failed pattern match at Data.Enum (line 306, column 5 - line 308, column 19): " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_i, $copy_x);
            };
            return $tco_result;
        };
    };
    return go(0);
};
var defaultCardinality = function (dictBounded) {
    return function (dictEnum) {
        var go = function ($copy_i) {
            return function ($copy_x) {
                var $tco_var_i = $copy_i;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(i, x) {
                    var v = succ(dictEnum)(x);
                    if (v instanceof Data_Maybe.Just) {
                        $tco_var_i = i + 1 | 0;
                        $copy_x = v.value0;
                        return;
                    };
                    if (v instanceof Data_Maybe.Nothing) {
                        $tco_done = true;
                        return i;
                    };
                    throw new Error("Failed pattern match at Data.Enum (line 273, column 5 - line 275, column 19): " + [ v.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_i, $copy_x);
                };
                return $tco_result;
            };
        };
        return Cardinality(go(1)(Data_Bounded.bottom(dictBounded)));
    };
};
var charToEnum = function (v) {
    if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
        return new Data_Maybe.Just($foreign.fromCharCode(v));
    };
    return Data_Maybe.Nothing.value;
};
var enumChar = new Enum(function () {
    return Data_Ord.ordChar;
}, defaultPred(charToEnum)($foreign.toCharCode), defaultSucc(charToEnum)($foreign.toCharCode));
var cardinality = function (dict) {
    return dict.cardinality;
};
var boundedEnumUnit = new BoundedEnum(function () {
    return Data_Bounded.boundedUnit;
}, function () {
    return enumUnit;
}, 1, Data_Function["const"](0), function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(Data_Unit.unit);
    };
    return Data_Maybe.Nothing.value;
});
var boundedEnumOrdering = new BoundedEnum(function () {
    return Data_Bounded.boundedOrdering;
}, function () {
    return enumOrdering;
}, 3, function (v) {
    if (v instanceof Data_Ordering.LT) {
        return 0;
    };
    if (v instanceof Data_Ordering.EQ) {
        return 1;
    };
    if (v instanceof Data_Ordering.GT) {
        return 2;
    };
    throw new Error("Failed pattern match at Data.Enum (line 137, column 1 - line 137, column 53): " + [ v.constructor.name ]);
}, function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(Data_Ordering.LT.value);
    };
    if (v === 1) {
        return new Data_Maybe.Just(Data_Ordering.EQ.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(Data_Ordering.GT.value);
    };
    return Data_Maybe.Nothing.value;
});
var boundedEnumChar = new BoundedEnum(function () {
    return Data_Bounded.boundedChar;
}, function () {
    return enumChar;
}, $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, $foreign.toCharCode, charToEnum);
var boundedEnumBoolean = new BoundedEnum(function () {
    return Data_Bounded.boundedBoolean;
}, function () {
    return enumBoolean;
}, 2, function (v) {
    if (!v) {
        return 0;
    };
    if (v) {
        return 1;
    };
    throw new Error("Failed pattern match at Data.Enum (line 118, column 1 - line 118, column 51): " + [ v.constructor.name ]);
}, function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(false);
    };
    if (v === 1) {
        return new Data_Maybe.Just(true);
    };
    return Data_Maybe.Nothing.value;
});
module.exports = {
    Enum: Enum,
    succ: succ,
    pred: pred,
    BoundedEnum: BoundedEnum,
    cardinality: cardinality,
    toEnum: toEnum,
    fromEnum: fromEnum,
    toEnumWithDefaults: toEnumWithDefaults,
    Cardinality: Cardinality,
    enumFromTo: enumFromTo,
    enumFromThenTo: enumFromThenTo,
    upFrom: upFrom,
    upFromIncluding: upFromIncluding,
    downFrom: downFrom,
    downFromIncluding: downFromIncluding,
    defaultSucc: defaultSucc,
    defaultPred: defaultPred,
    defaultCardinality: defaultCardinality,
    defaultToEnum: defaultToEnum,
    defaultFromEnum: defaultFromEnum,
    enumBoolean: enumBoolean,
    enumInt: enumInt,
    enumChar: enumChar,
    enumUnit: enumUnit,
    enumOrdering: enumOrdering,
    enumMaybe: enumMaybe,
    enumEither: enumEither,
    enumTuple: enumTuple,
    boundedEnumBoolean: boundedEnumBoolean,
    boundedEnumChar: boundedEnumChar,
    boundedEnumUnit: boundedEnumUnit,
    boundedEnumOrdering: boundedEnumOrdering,
    newtypeCardinality: newtypeCardinality,
    eqCardinality: eqCardinality,
    ordCardinality: ordCardinality,
    showCardinality: showCardinality
};

},{"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.MonadPlus/index.js":56,"../Control.MonadZero/index.js":57,"../Control.Semigroupoid/index.js":61,"../Data.Boolean/index.js":110,"../Data.Bounded/index.js":113,"../Data.Either/index.js":131,"../Data.Eq/index.js":135,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Maybe/index.js":210,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.Tuple/index.js":283,"../Data.Unfoldable/index.js":285,"../Data.Unfoldable1/index.js":287,"../Data.Unit/index.js":289,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385,"./foreign.js":132}],134:[function(require,module,exports){
"use strict";

exports.refEq = function (r1) {
  return function (r2) {
    return r1 === r2;
  };
};

exports.eqArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      if (xs === ys) return true;
      if (xs.length !== ys.length) return false;
      for (var i = 0; i < xs.length; i++) {
        if (!f(xs[i])(ys[i])) return false;
      }
      return true;
    };
  };
};

},{}],135:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Data_Void = require("../Data.Void/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var Eq = function (eq) {
    this.eq = eq;
};
var Eq1 = function (eq1) {
    this.eq1 = eq1;
};
var EqRecord = function (eqRecord) {
    this.eqRecord = eqRecord;
};
var eqVoid = new Eq(function (v) {
    return function (v1) {
        return true;
    };
});
var eqUnit = new Eq(function (v) {
    return function (v1) {
        return true;
    };
});
var eqString = new Eq($foreign.refEq);
var eqRowNil = new EqRecord(function (v) {
    return function (v1) {
        return function (v2) {
            return true;
        };
    };
});
var eqRecord = function (dict) {
    return dict.eqRecord;
};
var eqRec = function (dictRowToList) {
    return function (dictEqRecord) {
        return new Eq(eqRecord(dictEqRecord)(Type_Data_RowList.RLProxy.value));
    };
};
var eqNumber = new Eq($foreign.refEq);
var eqInt = new Eq($foreign.refEq);
var eqChar = new Eq($foreign.refEq);
var eqBoolean = new Eq($foreign.refEq);
var eq1 = function (dict) {
    return dict.eq1;
};
var eq = function (dict) {
    return dict.eq;
};
var eqArray = function (dictEq) {
    return new Eq($foreign.eqArrayImpl(eq(dictEq)));
};
var eq1Array = new Eq1(function (dictEq) {
    return eq(eqArray(dictEq));
});
var eqRowCons = function (dictEqRecord) {
    return function (dictCons) {
        return function (dictIsSymbol) {
            return function (dictEq) {
                return new EqRecord(function (v) {
                    return function (ra) {
                        return function (rb) {
                            var tail = eqRecord(dictEqRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                            var get = Record_Unsafe.unsafeGet(key);
                            return eq(dictEq)(get(ra))(get(rb)) && tail;
                        };
                    };
                });
            };
        };
    };
};
var notEq = function (dictEq) {
    return function (x) {
        return function (y) {
            return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
        };
    };
};
var notEq1 = function (dictEq1) {
    return function (dictEq) {
        return function (x) {
            return function (y) {
                return eq(eqBoolean)(eq1(dictEq1)(dictEq)(x)(y))(false);
            };
        };
    };
};
module.exports = {
    Eq: Eq,
    eq: eq,
    notEq: notEq,
    Eq1: Eq1,
    eq1: eq1,
    notEq1: notEq1,
    EqRecord: EqRecord,
    eqRecord: eqRecord,
    eqBoolean: eqBoolean,
    eqInt: eqInt,
    eqNumber: eqNumber,
    eqChar: eqChar,
    eqString: eqString,
    eqUnit: eqUnit,
    eqVoid: eqVoid,
    eqArray: eqArray,
    eqRec: eqRec,
    eq1Array: eq1Array,
    eqRowNil: eqRowNil,
    eqRowCons: eqRowCons
};

},{"../Data.HeytingAlgebra/index.js":162,"../Data.Symbol/index.js":274,"../Data.Unit/index.js":289,"../Data.Void/index.js":291,"../Record.Unsafe/index.js":390,"../Type.Data.RowList/index.js":418,"./foreign.js":134}],136:[function(require,module,exports){
"use strict";

exports.intDegree = function (x) {
  return Math.min(Math.abs(x), 2147483647);
};

// See the Euclidean definition in
// https://en.m.wikipedia.org/wiki/Modulo_operation.
exports.intDiv = function (x) {
  return function (y) {
    if (y === 0) return 0;
    return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
  };
};

exports.intMod = function (x) {
  return function (y) {
    if (y === 0) return 0;
    var yy = Math.abs(y);
    return ((x % yy) + yy) % yy;
  };
};

exports.numDiv = function (n1) {
  return function (n2) {
    return n1 / n2;
  };
};

},{}],137:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");
var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var EuclideanRing = function (CommutativeRing0, degree, div, mod) {
    this.CommutativeRing0 = CommutativeRing0;
    this.degree = degree;
    this.div = div;
    this.mod = mod;
};
var mod = function (dict) {
    return dict.mod;
};
var gcd = function ($copy_dictEq) {
    return function ($copy_dictEuclideanRing) {
        return function ($copy_a) {
            return function ($copy_b) {
                var $tco_var_dictEq = $copy_dictEq;
                var $tco_var_dictEuclideanRing = $copy_dictEuclideanRing;
                var $tco_var_a = $copy_a;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(dictEq, dictEuclideanRing, a, b) {
                    var $7 = Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                    if ($7) {
                        $tco_done = true;
                        return a;
                    };
                    $tco_var_dictEq = dictEq;
                    $tco_var_dictEuclideanRing = dictEuclideanRing;
                    $tco_var_a = b;
                    $copy_b = mod(dictEuclideanRing)(a)(b);
                    return;
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_dictEq, $tco_var_dictEuclideanRing, $tco_var_a, $copy_b);
                };
                return $tco_result;
            };
        };
    };
};
var euclideanRingNumber = new EuclideanRing(function () {
    return Data_CommutativeRing.commutativeRingNumber;
}, function (v) {
    return 1;
}, $foreign.numDiv, function (v) {
    return function (v1) {
        return 0.0;
    };
});
var euclideanRingInt = new EuclideanRing(function () {
    return Data_CommutativeRing.commutativeRingInt;
}, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
var div = function (dict) {
    return dict.div;
};
var lcm = function (dictEq) {
    return function (dictEuclideanRing) {
        return function (a) {
            return function (b) {
                var $8 = Data_Eq.eq(dictEq)(a)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())) || Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                if ($8) {
                    return Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0());
                };
                return div(dictEuclideanRing)(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(a)(b))(gcd(dictEq)(dictEuclideanRing)(a)(b));
            };
        };
    };
};
var degree = function (dict) {
    return dict.degree;
};
module.exports = {
    EuclideanRing: EuclideanRing,
    degree: degree,
    div: div,
    mod: mod,
    gcd: gcd,
    lcm: lcm,
    euclideanRingInt: euclideanRingInt,
    euclideanRingNumber: euclideanRingNumber
};

},{"../Data.BooleanAlgebra/index.js":111,"../Data.CommutativeRing/index.js":118,"../Data.Eq/index.js":135,"../Data.HeytingAlgebra/index.js":162,"../Data.Ring/index.js":242,"../Data.Semiring/index.js":251,"./foreign.js":136}],138:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var runExists = Unsafe_Coerce.unsafeCoerce;
var mkExists = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    mkExists: mkExists,
    runExists: runExists
};

},{"../Unsafe.Coerce/index.js":425}],139:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");
var Data_DivisionRing = require("../Data.DivisionRing/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Field = function (DivisionRing1, EuclideanRing0) {
    this.DivisionRing1 = DivisionRing1;
    this.EuclideanRing0 = EuclideanRing0;
};
var field = function (dictEuclideanRing) {
    return function (dictDivisionRing) {
        return new Field(function () {
            return dictDivisionRing;
        }, function () {
            return dictEuclideanRing;
        });
    };
};
module.exports = {
    Field: Field,
    field: field
};

},{"../Data.CommutativeRing/index.js":118,"../Data.DivisionRing/index.js":129,"../Data.EuclideanRing/index.js":137,"../Data.Ring/index.js":242,"../Data.Semiring/index.js":251}],140:[function(require,module,exports){
"use strict";

exports.foldrArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = len - 1; i >= 0; i--) {
        acc = f(xs[i])(acc);
      }
      return acc;
    };
  };
};

exports.foldlArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = 0; i < len; i++) {
        acc = f(acc)(xs[i]);
      }
      return acc;
    };
  };
};

},{}],141:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Maybe_First = require("../Data.Maybe.First/index.js");
var Data_Maybe_Last = require("../Data.Maybe.Last/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");
var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");
var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");
var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");
var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Prelude = require("../Prelude/index.js");
var Foldable = function (foldMap, foldl, foldr) {
    this.foldMap = foldMap;
    this.foldl = foldl;
    this.foldr = foldr;
};
var foldr = function (dict) {
    return dict.foldr;
};
var indexr = function (dictFoldable) {
    return function (idx) {
        var go = function (a) {
            return function (cursor) {
                if (cursor.elem instanceof Data_Maybe.Just) {
                    return cursor;
                };
                var $106 = cursor.pos === idx;
                if ($106) {
                    return {
                        elem: new Data_Maybe.Just(a),
                        pos: cursor.pos
                    };
                };
                return {
                    pos: cursor.pos + 1 | 0,
                    elem: cursor.elem
                };
            };
        };
        return function ($193) {
            return (function (v) {
                return v.elem;
            })(foldr(dictFoldable)(go)({
                elem: Data_Maybe.Nothing.value,
                pos: 0
            })($193));
        };
    };
};
var $$null = function (dictFoldable) {
    return foldr(dictFoldable)(function (v) {
        return function (v1) {
            return false;
        };
    })(true);
};
var oneOf = function (dictFoldable) {
    return function (dictPlus) {
        return foldr(dictFoldable)(Control_Alt.alt(dictPlus.Alt0()))(Control_Plus.empty(dictPlus));
    };
};
var oneOfMap = function (dictFoldable) {
    return function (dictPlus) {
        return function (f) {
            return foldr(dictFoldable)(function ($194) {
                return Control_Alt.alt(dictPlus.Alt0())(f($194));
            })(Control_Plus.empty(dictPlus));
        };
    };
};
var traverse_ = function (dictApplicative) {
    return function (dictFoldable) {
        return function (f) {
            return foldr(dictFoldable)(function ($195) {
                return Control_Apply.applySecond(dictApplicative.Apply0())(f($195));
            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
        };
    };
};
var for_ = function (dictApplicative) {
    return function (dictFoldable) {
        return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
    };
};
var sequence_ = function (dictApplicative) {
    return function (dictFoldable) {
        return traverse_(dictApplicative)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var foldl = function (dict) {
    return dict.foldl;
};
var indexl = function (dictFoldable) {
    return function (idx) {
        var go = function (cursor) {
            return function (a) {
                if (cursor.elem instanceof Data_Maybe.Just) {
                    return cursor;
                };
                var $109 = cursor.pos === idx;
                if ($109) {
                    return {
                        elem: new Data_Maybe.Just(a),
                        pos: cursor.pos
                    };
                };
                return {
                    pos: cursor.pos + 1 | 0,
                    elem: cursor.elem
                };
            };
        };
        return function ($196) {
            return (function (v) {
                return v.elem;
            })(foldl(dictFoldable)(go)({
                elem: Data_Maybe.Nothing.value,
                pos: 0
            })($196));
        };
    };
};
var intercalate = function (dictFoldable) {
    return function (dictMonoid) {
        return function (sep) {
            return function (xs) {
                var go = function (v) {
                    return function (x) {
                        if (v.init) {
                            return {
                                init: false,
                                acc: x
                            };
                        };
                        return {
                            init: false,
                            acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                        };
                    };
                };
                return (foldl(dictFoldable)(go)({
                    init: true,
                    acc: Data_Monoid.mempty(dictMonoid)
                })(xs)).acc;
            };
        };
    };
};
var length = function (dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(function (c) {
            return function (v) {
                return Data_Semiring.add(dictSemiring)(Data_Semiring.one(dictSemiring))(c);
            };
        })(Data_Semiring.zero(dictSemiring));
    };
};
var maximumBy = function (dictFoldable) {
    return function (cmp) {
        var max$prime = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(v1);
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just((function () {
                        var $116 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.GT.value);
                        if ($116) {
                            return v.value0;
                        };
                        return v1;
                    })());
                };
                throw new Error("Failed pattern match at Data.Foldable (line 389, column 3 - line 389, column 27): " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        return foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);
    };
};
var maximum = function (dictOrd) {
    return function (dictFoldable) {
        return maximumBy(dictFoldable)(Data_Ord.compare(dictOrd));
    };
};
var minimumBy = function (dictFoldable) {
    return function (cmp) {
        var min$prime = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(v1);
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just((function () {
                        var $120 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.LT.value);
                        if ($120) {
                            return v.value0;
                        };
                        return v1;
                    })());
                };
                throw new Error("Failed pattern match at Data.Foldable (line 402, column 3 - line 402, column 27): " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        return foldl(dictFoldable)(min$prime)(Data_Maybe.Nothing.value);
    };
};
var minimum = function (dictOrd) {
    return function (dictFoldable) {
        return minimumBy(dictFoldable)(Data_Ord.compare(dictOrd));
    };
};
var product = function (dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(Data_Semiring.mul(dictSemiring))(Data_Semiring.one(dictSemiring));
    };
};
var sum = function (dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));
    };
};
var foldableMultiplicative = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableMaybe = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof Data_Maybe.Nothing) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof Data_Maybe.Just) {
                return f(v.value0);
            };
            throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 129, column 41): " + [ f.constructor.name, v.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (v1 instanceof Data_Maybe.Just) {
                return v(z)(v1.value0);
            };
            throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 129, column 41): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (v1 instanceof Data_Maybe.Just) {
                return v(v1.value0)(z);
            };
            throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 129, column 41): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
});
var foldableDual = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableDisj = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableConj = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableAdditive = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldMapDefaultR = function (dictFoldable) {
    return function (dictMonoid) {
        return function (f) {
            return foldr(dictFoldable)(function (x) {
                return function (acc) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldableArray = new Foldable(function (dictMonoid) {
    return foldMapDefaultR(foldableArray)(dictMonoid);
}, $foreign.foldlArray, $foreign.foldrArray);
var foldMapDefaultL = function (dictFoldable) {
    return function (dictMonoid) {
        return function (f) {
            return foldl(dictFoldable)(function (acc) {
                return function (x) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(x));
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldMap = function (dict) {
    return dict.foldMap;
};
var foldableFirst = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldl(foldableMaybe)(f)(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldr(foldableMaybe)(f)(z)(v);
        };
    };
});
var foldableLast = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldl(foldableMaybe)(f)(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldr(foldableMaybe)(f)(z)(v);
        };
    };
});
var foldlDefault = function (dictFoldable) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(Data_Newtype.unwrap(Data_Newtype.newtypeDual)(foldMap(dictFoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn)))(function ($197) {
                    return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(c)($197)));
                })(xs)))(u);
            };
        };
    };
};
var foldrDefault = function (dictFoldable) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(function ($198) {
                    return Data_Monoid_Endo.Endo(c($198));
                })(xs))(u);
            };
        };
    };
};
var surroundMap = function (dictFoldable) {
    return function (dictSemigroup) {
        return function (d) {
            return function (t) {
                return function (f) {
                    var joined = function (a) {
                        return function (m) {
                            return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(a))(m));
                        };
                    };
                    return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(joined)(f))(d);
                };
            };
        };
    };
};
var surround = function (dictFoldable) {
    return function (dictSemigroup) {
        return function (d) {
            return surroundMap(dictFoldable)(dictSemigroup)(d)(Control_Category.identity(Control_Category.categoryFn));
        };
    };
};
var foldM = function (dictFoldable) {
    return function (dictMonad) {
        return function (f) {
            return function (a0) {
                return foldl(dictFoldable)(function (ma) {
                    return function (b) {
                        return Control_Bind.bind(dictMonad.Bind1())(ma)(Data_Function.flip(f)(b));
                    };
                })(Control_Applicative.pure(dictMonad.Applicative0())(a0));
            };
        };
    };
};
var fold = function (dictFoldable) {
    return function (dictMonoid) {
        return foldMap(dictFoldable)(dictMonoid)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var findMap = function (dictFoldable) {
    return function (p) {
        var go = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return p(v1);
                };
                return v;
            };
        };
        return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
    };
};
var find = function (dictFoldable) {
    return function (p) {
        var go = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing && p(v1)) {
                    return new Data_Maybe.Just(v1);
                };
                return v;
            };
        };
        return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
    };
};
var any = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeDisj)(Data_Newtype.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
    };
};
var elem = function (dictFoldable) {
    return function (dictEq) {
        return function ($199) {
            return any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Eq.eq(dictEq)($199));
        };
    };
};
var notElem = function (dictFoldable) {
    return function (dictEq) {
        return function (x) {
            return function ($200) {
                return !elem(dictFoldable)(dictEq)(x)($200);
            };
        };
    };
};
var or = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return any(dictFoldable)(dictHeytingAlgebra)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var all = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeConj)(Data_Newtype.newtypeConj)(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));
    };
};
var and = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return all(dictFoldable)(dictHeytingAlgebra)(Control_Category.identity(Control_Category.categoryFn));
    };
};
module.exports = {
    Foldable: Foldable,
    foldr: foldr,
    foldl: foldl,
    foldMap: foldMap,
    foldrDefault: foldrDefault,
    foldlDefault: foldlDefault,
    foldMapDefaultL: foldMapDefaultL,
    foldMapDefaultR: foldMapDefaultR,
    fold: fold,
    foldM: foldM,
    traverse_: traverse_,
    for_: for_,
    sequence_: sequence_,
    oneOf: oneOf,
    oneOfMap: oneOfMap,
    intercalate: intercalate,
    surroundMap: surroundMap,
    surround: surround,
    and: and,
    or: or,
    all: all,
    any: any,
    sum: sum,
    product: product,
    elem: elem,
    notElem: notElem,
    indexl: indexl,
    indexr: indexr,
    find: find,
    findMap: findMap,
    maximum: maximum,
    maximumBy: maximumBy,
    minimum: minimum,
    minimumBy: minimumBy,
    "null": $$null,
    length: length,
    foldableArray: foldableArray,
    foldableMaybe: foldableMaybe,
    foldableFirst: foldableFirst,
    foldableLast: foldableLast,
    foldableAdditive: foldableAdditive,
    foldableDual: foldableDual,
    foldableDisj: foldableDisj,
    foldableConj: foldableConj,
    foldableMultiplicative: foldableMultiplicative
};

},{"../Control.Alt/index.js":4,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Eq/index.js":135,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Maybe.First/index.js":208,"../Data.Maybe.Last/index.js":209,"../Data.Maybe/index.js":210,"../Data.Monoid.Additive/index.js":212,"../Data.Monoid.Conj/index.js":213,"../Data.Monoid.Disj/index.js":214,"../Data.Monoid.Dual/index.js":215,"../Data.Monoid.Endo/index.js":216,"../Data.Monoid.Multiplicative/index.js":217,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Unit/index.js":289,"../Prelude/index.js":385,"./foreign.js":140}],142:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Maybe_First = require("../Data.Maybe.First/index.js");
var Data_Maybe_Last = require("../Data.Maybe.Last/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");
var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");
var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");
var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");
var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Prelude = require("../Prelude/index.js");
var Tuple = (function () {
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    return Tuple;
})();
var FoldableWithIndex = function (Foldable0, foldMapWithIndex, foldlWithIndex, foldrWithIndex) {
    this.Foldable0 = Foldable0;
    this.foldMapWithIndex = foldMapWithIndex;
    this.foldlWithIndex = foldlWithIndex;
    this.foldrWithIndex = foldrWithIndex;
};
var foldrWithIndex = function (dict) {
    return dict.foldrWithIndex;
};
var traverseWithIndex_ = function (dictApplicative) {
    return function (dictFoldableWithIndex) {
        return function (f) {
            return foldrWithIndex(dictFoldableWithIndex)(function (i) {
                return function ($46) {
                    return Control_Apply.applySecond(dictApplicative.Apply0())(f(i)($46));
                };
            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
        };
    };
};
var forWithIndex_ = function (dictApplicative) {
    return function (dictFoldableWithIndex) {
        return Data_Function.flip(traverseWithIndex_(dictApplicative)(dictFoldableWithIndex));
    };
};
var foldrDefault = function (dictFoldableWithIndex) {
    return function (f) {
        return foldrWithIndex(dictFoldableWithIndex)(Data_Function["const"](f));
    };
};
var foldlWithIndex = function (dict) {
    return dict.foldlWithIndex;
};
var foldlDefault = function (dictFoldableWithIndex) {
    return function (f) {
        return foldlWithIndex(dictFoldableWithIndex)(Data_Function["const"](f));
    };
};
var foldableWithIndexMultiplicative = new FoldableWithIndex(function () {
    return Data_Foldable.foldableMultiplicative;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableMultiplicative)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableMultiplicative)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableMultiplicative)(f(Data_Unit.unit));
});
var foldableWithIndexMaybe = new FoldableWithIndex(function () {
    return Data_Foldable.foldableMaybe;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableMaybe)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableMaybe)(f(Data_Unit.unit));
});
var foldableWithIndexLast = new FoldableWithIndex(function () {
    return Data_Foldable.foldableLast;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableLast)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableLast)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableLast)(f(Data_Unit.unit));
});
var foldableWithIndexFirst = new FoldableWithIndex(function () {
    return Data_Foldable.foldableFirst;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableFirst)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableFirst)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableFirst)(f(Data_Unit.unit));
});
var foldableWithIndexDual = new FoldableWithIndex(function () {
    return Data_Foldable.foldableDual;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableDual)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableDual)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableDual)(f(Data_Unit.unit));
});
var foldableWithIndexDisj = new FoldableWithIndex(function () {
    return Data_Foldable.foldableDisj;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableDisj)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableDisj)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableDisj)(f(Data_Unit.unit));
});
var foldableWithIndexConj = new FoldableWithIndex(function () {
    return Data_Foldable.foldableConj;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableConj)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableConj)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableConj)(f(Data_Unit.unit));
});
var foldableWithIndexAdditive = new FoldableWithIndex(function () {
    return Data_Foldable.foldableAdditive;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableAdditive)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableAdditive)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableAdditive)(f(Data_Unit.unit));
});
var foldWithIndexM = function (dictFoldableWithIndex) {
    return function (dictMonad) {
        return function (f) {
            return function (a0) {
                return foldlWithIndex(dictFoldableWithIndex)(function (i) {
                    return function (ma) {
                        return function (b) {
                            return Control_Bind.bind(dictMonad.Bind1())(ma)(Data_Function.flip(f(i))(b));
                        };
                    };
                })(Control_Applicative.pure(dictMonad.Applicative0())(a0));
            };
        };
    };
};
var foldMapWithIndexDefaultR = function (dictFoldableWithIndex) {
    return function (dictMonoid) {
        return function (f) {
            return foldrWithIndex(dictFoldableWithIndex)(function (i) {
                return function (x) {
                    return function (acc) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(f(i)(x))(acc);
                    };
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldableWithIndexArray = new FoldableWithIndex(function () {
    return Data_Foldable.foldableArray;
}, function (dictMonoid) {
    return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
}, function (f) {
    return function (z) {
        return function ($47) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (y) {
                return function (v) {
                    return f(v.value0)(y)(v.value1);
                };
            })(z)(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create)($47));
        };
    };
}, function (f) {
    return function (z) {
        return function ($48) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (v) {
                return function (y) {
                    return f(v.value0)(v.value1)(y);
                };
            })(z)(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create)($48));
        };
    };
});
var foldMapWithIndexDefaultL = function (dictFoldableWithIndex) {
    return function (dictMonoid) {
        return function (f) {
            return foldlWithIndex(dictFoldableWithIndex)(function (i) {
                return function (acc) {
                    return function (x) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(i)(x));
                    };
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldMapWithIndex = function (dict) {
    return dict.foldMapWithIndex;
};
var foldlWithIndexDefault = function (dictFoldableWithIndex) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(Data_Newtype.unwrap(Data_Newtype.newtypeDual)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn)))(function (i) {
                    return function ($49) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(c(i))($49)));
                    };
                })(xs)))(u);
            };
        };
    };
};
var foldrWithIndexDefault = function (dictFoldableWithIndex) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(function (i) {
                    return function ($50) {
                        return Data_Monoid_Endo.Endo(c(i)($50));
                    };
                })(xs))(u);
            };
        };
    };
};
var surroundMapWithIndex = function (dictFoldableWithIndex) {
    return function (dictSemigroup) {
        return function (d) {
            return function (t) {
                return function (f) {
                    var joined = function (i) {
                        return function (a) {
                            return function (m) {
                                return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(i)(a))(m));
                            };
                        };
                    };
                    return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(joined)(f))(d);
                };
            };
        };
    };
};
var foldMapDefault = function (dictFoldableWithIndex) {
    return function (dictMonoid) {
        return function (f) {
            return foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(Data_Function["const"](f));
        };
    };
};
var findWithIndex = function (dictFoldableWithIndex) {
    return function (p) {
        var go = function (v) {
            return function (v1) {
                return function (v2) {
                    if (v1 instanceof Data_Maybe.Nothing && p(v)(v2)) {
                        return new Data_Maybe.Just({
                            index: v,
                            value: v2
                        });
                    };
                    return v1;
                };
            };
        };
        return foldlWithIndex(dictFoldableWithIndex)(go)(Data_Maybe.Nothing.value);
    };
};
var anyWithIndex = function (dictFoldableWithIndex) {
    return function (dictHeytingAlgebra) {
        return function (t) {
            return function ($51) {
                return Data_Newtype.unwrap(Data_Newtype.newtypeDisj)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra))(function (i) {
                    return function ($52) {
                        return Data_Monoid_Disj.Disj(t(i)($52));
                    };
                })($51));
            };
        };
    };
};
var allWithIndex = function (dictFoldableWithIndex) {
    return function (dictHeytingAlgebra) {
        return function (t) {
            return function ($53) {
                return Data_Newtype.unwrap(Data_Newtype.newtypeConj)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra))(function (i) {
                    return function ($54) {
                        return Data_Monoid_Conj.Conj(t(i)($54));
                    };
                })($53));
            };
        };
    };
};
module.exports = {
    FoldableWithIndex: FoldableWithIndex,
    foldrWithIndex: foldrWithIndex,
    foldlWithIndex: foldlWithIndex,
    foldMapWithIndex: foldMapWithIndex,
    foldrWithIndexDefault: foldrWithIndexDefault,
    foldlWithIndexDefault: foldlWithIndexDefault,
    foldMapWithIndexDefaultR: foldMapWithIndexDefaultR,
    foldMapWithIndexDefaultL: foldMapWithIndexDefaultL,
    foldWithIndexM: foldWithIndexM,
    traverseWithIndex_: traverseWithIndex_,
    forWithIndex_: forWithIndex_,
    surroundMapWithIndex: surroundMapWithIndex,
    allWithIndex: allWithIndex,
    anyWithIndex: anyWithIndex,
    findWithIndex: findWithIndex,
    foldrDefault: foldrDefault,
    foldlDefault: foldlDefault,
    foldMapDefault: foldMapDefault,
    foldableWithIndexArray: foldableWithIndexArray,
    foldableWithIndexMaybe: foldableWithIndexMaybe,
    foldableWithIndexFirst: foldableWithIndexFirst,
    foldableWithIndexLast: foldableWithIndexLast,
    foldableWithIndexAdditive: foldableWithIndexAdditive,
    foldableWithIndexDual: foldableWithIndexDual,
    foldableWithIndexDisj: foldableWithIndexDisj,
    foldableWithIndexConj: foldableWithIndexConj,
    foldableWithIndexMultiplicative: foldableWithIndexMultiplicative
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Semigroupoid/index.js":61,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.FunctorWithIndex/index.js":155,"../Data.Maybe.First/index.js":208,"../Data.Maybe.Last/index.js":209,"../Data.Maybe/index.js":210,"../Data.Monoid.Additive/index.js":212,"../Data.Monoid.Conj/index.js":213,"../Data.Monoid.Disj/index.js":214,"../Data.Monoid.Dual/index.js":215,"../Data.Monoid.Endo/index.js":216,"../Data.Monoid.Multiplicative/index.js":217,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Semigroup/index.js":248,"../Data.Unit/index.js":289,"../Prelude/index.js":385}],143:[function(require,module,exports){
"use strict";

// module Data.Function.Uncurried

exports.mkFn0 = function (fn) {
  return function () {
    return fn({});
  };
};

exports.mkFn2 = function (fn) {
  /* jshint maxparams: 2 */
  return function (a, b) {
    return fn(a)(b);
  };
};

exports.mkFn3 = function (fn) {
  /* jshint maxparams: 3 */
  return function (a, b, c) {
    return fn(a)(b)(c);
  };
};

exports.mkFn4 = function (fn) {
  /* jshint maxparams: 4 */
  return function (a, b, c, d) {
    return fn(a)(b)(c)(d);
  };
};

exports.mkFn5 = function (fn) {
  /* jshint maxparams: 5 */
  return function (a, b, c, d, e) {
    return fn(a)(b)(c)(d)(e);
  };
};

exports.mkFn6 = function (fn) {
  /* jshint maxparams: 6 */
  return function (a, b, c, d, e, f) {
    return fn(a)(b)(c)(d)(e)(f);
  };
};

exports.mkFn7 = function (fn) {
  /* jshint maxparams: 7 */
  return function (a, b, c, d, e, f, g) {
    return fn(a)(b)(c)(d)(e)(f)(g);
  };
};

exports.mkFn8 = function (fn) {
  /* jshint maxparams: 8 */
  return function (a, b, c, d, e, f, g, h) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h);
  };
};

exports.mkFn9 = function (fn) {
  /* jshint maxparams: 9 */
  return function (a, b, c, d, e, f, g, h, i) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
  };
};

exports.mkFn10 = function (fn) {
  /* jshint maxparams: 10 */
  return function (a, b, c, d, e, f, g, h, i, j) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
  };
};

exports.runFn0 = function (fn) {
  return fn();
};

exports.runFn2 = function (fn) {
  return function (a) {
    return function (b) {
      return fn(a, b);
    };
  };
};

exports.runFn3 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return fn(a, b, c);
      };
    };
  };
};

exports.runFn4 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return fn(a, b, c, d);
        };
      };
    };
  };
};

exports.runFn5 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return fn(a, b, c, d, e);
          };
        };
      };
    };
  };
};

exports.runFn6 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return fn(a, b, c, d, e, f);
            };
          };
        };
      };
    };
  };
};

exports.runFn7 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return fn(a, b, c, d, e, f, g);
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn8 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return fn(a, b, c, d, e, f, g, h);
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn9 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return fn(a, b, c, d, e, f, g, h, i);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn10 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return function (j) {
                      return fn(a, b, c, d, e, f, g, h, i, j);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

},{}],144:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Unit = require("../Data.Unit/index.js");
var runFn1 = function (f) {
    return f;
};
var mkFn1 = function (f) {
    return f;
};
module.exports = {
    mkFn1: mkFn1,
    runFn1: runFn1,
    mkFn0: $foreign.mkFn0,
    mkFn2: $foreign.mkFn2,
    mkFn3: $foreign.mkFn3,
    mkFn4: $foreign.mkFn4,
    mkFn5: $foreign.mkFn5,
    mkFn6: $foreign.mkFn6,
    mkFn7: $foreign.mkFn7,
    mkFn8: $foreign.mkFn8,
    mkFn9: $foreign.mkFn9,
    mkFn10: $foreign.mkFn10,
    runFn0: $foreign.runFn0,
    runFn2: $foreign.runFn2,
    runFn3: $foreign.runFn3,
    runFn4: $foreign.runFn4,
    runFn5: $foreign.runFn5,
    runFn6: $foreign.runFn6,
    runFn7: $foreign.runFn7,
    runFn8: $foreign.runFn8,
    runFn9: $foreign.runFn9,
    runFn10: $foreign.runFn10
};

},{"../Data.Unit/index.js":289,"./foreign.js":143}],145:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var on = function (f) {
    return function (g) {
        return function (x) {
            return function (y) {
                return f(g(x))(g(y));
            };
        };
    };
};
var flip = function (f) {
    return function (b) {
        return function (a) {
            return f(a)(b);
        };
    };
};
var $$const = function (a) {
    return function (v) {
        return a;
    };
};
var applyN = function (f) {
    var go = function ($copy_n) {
        return function ($copy_acc) {
            var $tco_var_n = $copy_n;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(n, acc) {
                if (n <= 0) {
                    $tco_done = true;
                    return acc;
                };
                if (Data_Boolean.otherwise) {
                    $tco_var_n = n - 1 | 0;
                    $copy_acc = f(acc);
                    return;
                };
                throw new Error("Failed pattern match at Data.Function (line 94, column 3 - line 96, column 37): " + [ n.constructor.name, acc.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_n, $copy_acc);
            };
            return $tco_result;
        };
    };
    return go;
};
var applyFlipped = function (x) {
    return function (f) {
        return f(x);
    };
};
var apply = function (f) {
    return function (x) {
        return f(x);
    };
};
module.exports = {
    flip: flip,
    "const": $$const,
    apply: apply,
    applyFlipped: applyFlipped,
    applyN: applyN,
    on: on
};

},{"../Control.Category/index.js":14,"../Data.Boolean/index.js":110,"../Data.Ord/index.js":229,"../Data.Ring/index.js":242}],146:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var App = function (x) {
    return x;
};
var traversableWithIndexApp = function (dictTraversableWithIndex) {
    return dictTraversableWithIndex;
};
var traversableApp = function (dictTraversable) {
    return dictTraversable;
};
var showApp = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(App " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupApp = function (dictApply) {
    return function (dictSemigroup) {
        return new Data_Semigroup.Semigroup(function (v) {
            return function (v1) {
                return Control_Apply.lift2(dictApply)(Data_Semigroup.append(dictSemigroup))(v)(v1);
            };
        });
    };
};
var plusApp = function (dictPlus) {
    return dictPlus;
};
var newtypeApp = new Data_Newtype.Newtype(function (n) {
    return n;
}, App);
var monoidApp = function (dictApplicative) {
    return function (dictMonoid) {
        return new Data_Monoid.Monoid(function () {
            return semigroupApp(dictApplicative.Apply0())(dictMonoid.Semigroup0());
        }, Control_Applicative.pure(dictApplicative)(Data_Monoid.mempty(dictMonoid)));
    };
};
var monadZeroApp = function (dictMonadZero) {
    return dictMonadZero;
};
var monadPlusApp = function (dictMonadPlus) {
    return dictMonadPlus;
};
var monadApp = function (dictMonad) {
    return dictMonad;
};
var lazyApp = function (dictLazy) {
    return dictLazy;
};
var hoistLowerApp = Unsafe_Coerce.unsafeCoerce;
var hoistLiftApp = Unsafe_Coerce.unsafeCoerce;
var hoistApp = function (f) {
    return function (v) {
        return f(v);
    };
};
var functorWithIndexApp = function (dictFunctorWithIndex) {
    return dictFunctorWithIndex;
};
var functorApp = function (dictFunctor) {
    return dictFunctor;
};
var foldableWithIndexApp = function (dictFoldableWithIndex) {
    return dictFoldableWithIndex;
};
var foldableApp = function (dictFoldable) {
    return dictFoldable;
};
var extendApp = function (dictExtend) {
    return dictExtend;
};
var eqApp = function (dictEq1) {
    return function (dictEq) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                return Data_Eq.eq1(dictEq1)(dictEq)(x)(y);
            };
        });
    };
};
var ordApp = function (dictOrd1) {
    return function (dictOrd) {
        return new Data_Ord.Ord(function () {
            return eqApp(dictOrd1.Eq10())(dictOrd.Eq0());
        }, function (x) {
            return function (y) {
                return Data_Ord.compare1(dictOrd1)(dictOrd)(x)(y);
            };
        });
    };
};
var eq1App = function (dictEq1) {
    return new Data_Eq.Eq1(function (dictEq) {
        return Data_Eq.eq(eqApp(dictEq1)(dictEq));
    });
};
var ord1App = function (dictOrd1) {
    return new Data_Ord.Ord1(function () {
        return eq1App(dictOrd1.Eq10());
    }, function (dictOrd) {
        return Data_Ord.compare(ordApp(dictOrd1)(dictOrd));
    });
};
var comonadApp = function (dictComonad) {
    return dictComonad;
};
var bindApp = function (dictBind) {
    return dictBind;
};
var applyApp = function (dictApply) {
    return dictApply;
};
var applicativeApp = function (dictApplicative) {
    return dictApplicative;
};
var alternativeApp = function (dictAlternative) {
    return dictAlternative;
};
var altApp = function (dictAlt) {
    return dictAlt;
};
module.exports = {
    App: App,
    hoistApp: hoistApp,
    hoistLiftApp: hoistLiftApp,
    hoistLowerApp: hoistLowerApp,
    newtypeApp: newtypeApp,
    eqApp: eqApp,
    eq1App: eq1App,
    ordApp: ordApp,
    ord1App: ord1App,
    showApp: showApp,
    semigroupApp: semigroupApp,
    monoidApp: monoidApp,
    functorApp: functorApp,
    functorWithIndexApp: functorWithIndexApp,
    applyApp: applyApp,
    applicativeApp: applicativeApp,
    bindApp: bindApp,
    monadApp: monadApp,
    altApp: altApp,
    plusApp: plusApp,
    alternativeApp: alternativeApp,
    monadZeroApp: monadZeroApp,
    monadPlusApp: monadPlusApp,
    lazyApp: lazyApp,
    foldableApp: foldableApp,
    traversableApp: traversableApp,
    foldableWithIndexApp: foldableWithIndexApp,
    traversableWithIndexApp: traversableWithIndexApp,
    extendApp: extendApp,
    comonadApp: comonadApp
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Comonad/index.js":21,"../Control.Extend/index.js":24,"../Control.Lazy/index.js":25,"../Control.Monad/index.js":55,"../Control.MonadPlus/index.js":56,"../Control.MonadZero/index.js":57,"../Control.Plus/index.js":60,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.FoldableWithIndex/index.js":142,"../Data.Functor/index.js":153,"../Data.FunctorWithIndex/index.js":155,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Data.Traversable/index.js":281,"../Data.TraversableWithIndex/index.js":282,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425}],147:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_App = require("../Data.Functor.App/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var Compose = function (x) {
    return x;
};
var showCompose = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Compose " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var newtypeCompose = new Data_Newtype.Newtype(function (n) {
    return n;
}, Compose);
var functorCompose = function (dictFunctor) {
    return function (dictFunctor1) {
        return new Data_Functor.Functor(function (f) {
            return function (v) {
                return Compose(Data_Functor.map(dictFunctor)(Data_Functor.map(dictFunctor1)(f))(v));
            };
        });
    };
};
var functorWithIndexCompose = function (dictFunctorWithIndex) {
    return function (dictFunctorWithIndex1) {
        return new Data_FunctorWithIndex.FunctorWithIndex(function () {
            return functorCompose(dictFunctorWithIndex.Functor0())(dictFunctorWithIndex1.Functor0());
        }, function (f) {
            return function (v) {
                return Compose(Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex)(function ($100) {
                    return Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex1)(Data_Tuple.curry(f)($100));
                })(v));
            };
        });
    };
};
var foldableCompose = function (dictFoldable) {
    return function (dictFoldable1) {
        return new Data_Foldable.Foldable(function (dictMonoid) {
            return function (f) {
                return function (v) {
                    return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(Data_Foldable.foldMap(dictFoldable1)(dictMonoid)(f))(v);
                };
            };
        }, function (f) {
            return function (i) {
                return function (v) {
                    return Data_Foldable.foldl(dictFoldable)(Data_Foldable.foldl(dictFoldable1)(f))(i)(v);
                };
            };
        }, function (f) {
            return function (i) {
                return function (v) {
                    return Data_Foldable.foldr(dictFoldable)(Data_Function.flip(Data_Foldable.foldr(dictFoldable1)(f)))(i)(v);
                };
            };
        });
    };
};
var foldableWithIndexCompose = function (dictFoldableWithIndex) {
    return function (dictFoldableWithIndex1) {
        return new Data_FoldableWithIndex.FoldableWithIndex(function () {
            return foldableCompose(dictFoldableWithIndex.Foldable0())(dictFoldableWithIndex1.Foldable0());
        }, function (dictMonoid) {
            return function (f) {
                return function (v) {
                    return Data_FoldableWithIndex.foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function ($101) {
                        return Data_FoldableWithIndex.foldMapWithIndex(dictFoldableWithIndex1)(dictMonoid)(Data_Tuple.curry(f)($101));
                    })(v);
                };
            };
        }, function (f) {
            return function (i) {
                return function (v) {
                    return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function ($102) {
                        return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex1)(Data_Tuple.curry(f)($102));
                    })(i)(v);
                };
            };
        }, function (f) {
            return function (i) {
                return function (v) {
                    return Data_FoldableWithIndex.foldrWithIndex(dictFoldableWithIndex)(function (a) {
                        return Data_Function.flip(Data_FoldableWithIndex.foldrWithIndex(dictFoldableWithIndex1)(Data_Tuple.curry(f)(a)));
                    })(i)(v);
                };
            };
        });
    };
};
var traversableCompose = function (dictTraversable) {
    return function (dictTraversable1) {
        return new Data_Traversable.Traversable(function () {
            return foldableCompose(dictTraversable.Foldable1())(dictTraversable1.Foldable1());
        }, function () {
            return functorCompose(dictTraversable.Functor0())(dictTraversable1.Functor0());
        }, function (dictApplicative) {
            return Data_Traversable.traverse(traversableCompose(dictTraversable)(dictTraversable1))(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
        }, function (dictApplicative) {
            return function (f) {
                return function (v) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Compose)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(Data_Traversable.traverse(dictTraversable1)(dictApplicative)(f))(v));
                };
            };
        });
    };
};
var traversableWithIndexCompose = function (dictTraversableWithIndex) {
    return function (dictTraversableWithIndex1) {
        return new Data_TraversableWithIndex.TraversableWithIndex(function () {
            return foldableWithIndexCompose(dictTraversableWithIndex.FoldableWithIndex1())(dictTraversableWithIndex1.FoldableWithIndex1());
        }, function () {
            return functorWithIndexCompose(dictTraversableWithIndex.FunctorWithIndex0())(dictTraversableWithIndex1.FunctorWithIndex0());
        }, function () {
            return traversableCompose(dictTraversableWithIndex.Traversable2())(dictTraversableWithIndex1.Traversable2());
        }, function (dictApplicative) {
            return function (f) {
                return function (v) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Compose)(Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function ($103) {
                        return Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex1)(dictApplicative)(Data_Tuple.curry(f)($103));
                    })(v));
                };
            };
        });
    };
};
var eqCompose = function (dictEq1) {
    return function (dictEq11) {
        return function (dictEq) {
            return new Data_Eq.Eq(function (v) {
                return function (v1) {
                    return Data_Eq.eq1(dictEq1)(Data_Functor_App.eqApp(dictEq11)(dictEq))(Data_Functor_App.hoistLiftApp(v))(Data_Functor_App.hoistLiftApp(v1));
                };
            });
        };
    };
};
var ordCompose = function (dictOrd1) {
    return function (dictOrd11) {
        return function (dictOrd) {
            return new Data_Ord.Ord(function () {
                return eqCompose(dictOrd1.Eq10())(dictOrd11.Eq10())(dictOrd.Eq0());
            }, function (v) {
                return function (v1) {
                    return Data_Ord.compare1(dictOrd1)(Data_Functor_App.ordApp(dictOrd11)(dictOrd))(Data_Functor_App.hoistLiftApp(v))(Data_Functor_App.hoistLiftApp(v1));
                };
            });
        };
    };
};
var eq1Compose = function (dictEq1) {
    return function (dictEq11) {
        return new Data_Eq.Eq1(function (dictEq) {
            return Data_Eq.eq(eqCompose(dictEq1)(dictEq11)(dictEq));
        });
    };
};
var ord1Compose = function (dictOrd1) {
    return function (dictOrd11) {
        return new Data_Ord.Ord1(function () {
            return eq1Compose(dictOrd1.Eq10())(dictOrd11.Eq10());
        }, function (dictOrd) {
            return Data_Ord.compare(ordCompose(dictOrd1)(dictOrd11)(dictOrd));
        });
    };
};
var bihoistCompose = function (dictFunctor) {
    return function (natF) {
        return function (natG) {
            return function (v) {
                return natF(Data_Functor.map(dictFunctor)(natG)(v));
            };
        };
    };
};
var applyCompose = function (dictApply) {
    return function (dictApply1) {
        return new Control_Apply.Apply(function () {
            return functorCompose(dictApply.Functor0())(dictApply1.Functor0());
        }, function (v) {
            return function (v1) {
                return Compose(Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Control_Apply.apply(dictApply1))(v))(v1));
            };
        });
    };
};
var applicativeCompose = function (dictApplicative) {
    return function (dictApplicative1) {
        return new Control_Applicative.Applicative(function () {
            return applyCompose(dictApplicative.Apply0())(dictApplicative1.Apply0());
        }, function ($104) {
            return Compose(Control_Applicative.pure(dictApplicative)(Control_Applicative.pure(dictApplicative1)($104)));
        });
    };
};
var altCompose = function (dictAlt) {
    return function (dictFunctor) {
        return new Control_Alt.Alt(function () {
            return functorCompose(dictAlt.Functor0())(dictFunctor);
        }, function (v) {
            return function (v1) {
                return Compose(Control_Alt.alt(dictAlt)(v)(v1));
            };
        });
    };
};
var plusCompose = function (dictPlus) {
    return function (dictFunctor) {
        return new Control_Plus.Plus(function () {
            return altCompose(dictPlus.Alt0())(dictFunctor);
        }, Control_Plus.empty(dictPlus));
    };
};
var alternativeCompose = function (dictAlternative) {
    return function (dictApplicative) {
        return new Control_Alternative.Alternative(function () {
            return applicativeCompose(dictAlternative.Applicative0())(dictApplicative);
        }, function () {
            return plusCompose(dictAlternative.Plus1())((dictApplicative.Apply0()).Functor0());
        });
    };
};
module.exports = {
    Compose: Compose,
    bihoistCompose: bihoistCompose,
    newtypeCompose: newtypeCompose,
    eqCompose: eqCompose,
    eq1Compose: eq1Compose,
    ordCompose: ordCompose,
    ord1Compose: ord1Compose,
    showCompose: showCompose,
    functorCompose: functorCompose,
    functorWithIndexCompose: functorWithIndexCompose,
    applyCompose: applyCompose,
    applicativeCompose: applicativeCompose,
    foldableCompose: foldableCompose,
    foldableWithIndexCompose: foldableWithIndexCompose,
    traversableCompose: traversableCompose,
    traversableWithIndexCompose: traversableWithIndexCompose,
    altCompose: altCompose,
    plusCompose: plusCompose,
    alternativeCompose: alternativeCompose
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Category/index.js":14,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.FoldableWithIndex/index.js":142,"../Data.Function/index.js":145,"../Data.Functor.App/index.js":146,"../Data.Functor/index.js":153,"../Data.FunctorWithIndex/index.js":155,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Data.Traversable/index.js":281,"../Data.TraversableWithIndex/index.js":282,"../Data.Tuple/index.js":283,"../Prelude/index.js":385}],148:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Functor = require("../Data.Functor/index.js");
var Data_Void = require("../Data.Void/index.js");
var Prelude = require("../Prelude/index.js");
var Contravariant = function (cmap) {
    this.cmap = cmap;
};
var cmap = function (dict) {
    return dict.cmap;
};
var cmapFlipped = function (dictContravariant) {
    return function (x) {
        return function (f) {
            return cmap(dictContravariant)(f)(x);
        };
    };
};
var coerce = function (dictContravariant) {
    return function (dictFunctor) {
        return function (a) {
            return Data_Functor.map(dictFunctor)(Data_Void.absurd)(cmap(dictContravariant)(Data_Void.absurd)(a));
        };
    };
};
var imapC = function (dictContravariant) {
    return function (v) {
        return function (f) {
            return cmap(dictContravariant)(f);
        };
    };
};
module.exports = {
    cmap: cmap,
    Contravariant: Contravariant,
    cmapFlipped: cmapFlipped,
    coerce: coerce,
    imapC: imapC
};

},{"../Data.Functor/index.js":153,"../Data.Void/index.js":291,"../Prelude/index.js":385}],149:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Const = require("../Data.Const/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor_Coproduct = require("../Data.Functor.Coproduct/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Void = require("../Data.Void/index.js");
var Prelude = require("../Prelude/index.js");
var in9 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)))))))));
};
var in8 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v))))))));
};
var in7 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)))))));
};
var in6 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v))))));
};
var in5 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)))));
};
var in4 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v))));
};
var in3 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)));
};
var in2 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v));
};
var in10 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v))))))))));
};
var in1 = Data_Functor_Coproduct.left;
var coproduct9 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (i) {
                                    return function (y) {
                                        if (y instanceof Data_Either.Left) {
                                            return a(y.value0);
                                        };
                                        if (y instanceof Data_Either.Right) {
                                            if (y.value0 instanceof Data_Either.Left) {
                                                return b(y.value0.value0);
                                            };
                                            if (y.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0 instanceof Data_Either.Left) {
                                                    return c(y.value0.value0.value0);
                                                };
                                                if (y.value0.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                        return d(y.value0.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return e(y.value0.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                            if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                return f(y.value0.value0.value0.value0.value0.value0);
                                                            };
                                                            if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                    return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                                };
                                                                if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                    if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                        return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                    };
                                                                    if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                            return i(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                        };
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                            return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0.value0.value0.value0.value0));
                                                                        };
                                                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 228, column 41 - line 230, column 61): " + [ y.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                    };
                                                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 226, column 39 - line 230, column 61): " + [ y.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                };
                                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 224, column 37 - line 230, column 61): " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                            };
                                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 222, column 35 - line 230, column 61): " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                        };
                                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 220, column 33 - line 230, column 61): " + [ y.value0.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 218, column 31 - line 230, column 61): " + [ y.value0.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 216, column 29 - line 230, column 61): " + [ y.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 214, column 27 - line 230, column 61): " + [ y.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 212, column 34 - line 230, column 61): " + [ y.constructor.name ]);
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var coproduct8 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (y) {
                                    if (y instanceof Data_Either.Left) {
                                        return a(y.value0);
                                    };
                                    if (y instanceof Data_Either.Right) {
                                        if (y.value0 instanceof Data_Either.Left) {
                                            return b(y.value0.value0);
                                        };
                                        if (y.value0 instanceof Data_Either.Right) {
                                            if (y.value0.value0 instanceof Data_Either.Left) {
                                                return c(y.value0.value0.value0);
                                            };
                                            if (y.value0.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                    return d(y.value0.value0.value0.value0);
                                                };
                                                if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                        return e(y.value0.value0.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return f(y.value0.value0.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                            if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                            };
                                                            if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                    return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                };
                                                                if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                    return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0.value0.value0.value0));
                                                                };
                                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 207, column 39 - line 209, column 59): " + [ y.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                            };
                                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 205, column 37 - line 209, column 59): " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                        };
                                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 203, column 35 - line 209, column 59): " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 201, column 33 - line 209, column 59): " + [ y.value0.value0.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 199, column 31 - line 209, column 59): " + [ y.value0.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 197, column 29 - line 209, column 59): " + [ y.value0.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 195, column 27 - line 209, column 59): " + [ y.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 193, column 32 - line 209, column 59): " + [ y.constructor.name ]);
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var coproduct7 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (y) {
                                if (y instanceof Data_Either.Left) {
                                    return a(y.value0);
                                };
                                if (y instanceof Data_Either.Right) {
                                    if (y.value0 instanceof Data_Either.Left) {
                                        return b(y.value0.value0);
                                    };
                                    if (y.value0 instanceof Data_Either.Right) {
                                        if (y.value0.value0 instanceof Data_Either.Left) {
                                            return c(y.value0.value0.value0);
                                        };
                                        if (y.value0.value0 instanceof Data_Either.Right) {
                                            if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                return d(y.value0.value0.value0.value0);
                                            };
                                            if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                    return e(y.value0.value0.value0.value0.value0);
                                                };
                                                if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                        return f(y.value0.value0.value0.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                            return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0.value0.value0));
                                                        };
                                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 188, column 37 - line 190, column 57): " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 186, column 35 - line 190, column 57): " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 184, column 33 - line 190, column 57): " + [ y.value0.value0.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 182, column 31 - line 190, column 57): " + [ y.value0.value0.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 180, column 29 - line 190, column 57): " + [ y.value0.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 178, column 27 - line 190, column 57): " + [ y.value0.constructor.name ]);
                                };
                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 176, column 30 - line 190, column 57): " + [ y.constructor.name ]);
                            };
                        };
                    };
                };
            };
        };
    };
};
var coproduct6 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (y) {
                            if (y instanceof Data_Either.Left) {
                                return a(y.value0);
                            };
                            if (y instanceof Data_Either.Right) {
                                if (y.value0 instanceof Data_Either.Left) {
                                    return b(y.value0.value0);
                                };
                                if (y.value0 instanceof Data_Either.Right) {
                                    if (y.value0.value0 instanceof Data_Either.Left) {
                                        return c(y.value0.value0.value0);
                                    };
                                    if (y.value0.value0 instanceof Data_Either.Right) {
                                        if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                            return d(y.value0.value0.value0.value0);
                                        };
                                        if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                return e(y.value0.value0.value0.value0.value0);
                                            };
                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                    return f(y.value0.value0.value0.value0.value0.value0);
                                                };
                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                    return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0.value0));
                                                };
                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 171, column 35 - line 173, column 55): " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 169, column 33 - line 173, column 55): " + [ y.value0.value0.value0.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 167, column 31 - line 173, column 55): " + [ y.value0.value0.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 165, column 29 - line 173, column 55): " + [ y.value0.value0.constructor.name ]);
                                };
                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 163, column 27 - line 173, column 55): " + [ y.value0.constructor.name ]);
                            };
                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 161, column 28 - line 173, column 55): " + [ y.constructor.name ]);
                        };
                    };
                };
            };
        };
    };
};
var coproduct5 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (y) {
                        if (y instanceof Data_Either.Left) {
                            return a(y.value0);
                        };
                        if (y instanceof Data_Either.Right) {
                            if (y.value0 instanceof Data_Either.Left) {
                                return b(y.value0.value0);
                            };
                            if (y.value0 instanceof Data_Either.Right) {
                                if (y.value0.value0 instanceof Data_Either.Left) {
                                    return c(y.value0.value0.value0);
                                };
                                if (y.value0.value0 instanceof Data_Either.Right) {
                                    if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                        return d(y.value0.value0.value0.value0);
                                    };
                                    if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                            return e(y.value0.value0.value0.value0.value0);
                                        };
                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                            return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0));
                                        };
                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 156, column 33 - line 158, column 53): " + [ y.value0.value0.value0.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 154, column 31 - line 158, column 53): " + [ y.value0.value0.value0.constructor.name ]);
                                };
                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 152, column 29 - line 158, column 53): " + [ y.value0.value0.constructor.name ]);
                            };
                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 150, column 27 - line 158, column 53): " + [ y.value0.constructor.name ]);
                        };
                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 148, column 26 - line 158, column 53): " + [ y.constructor.name ]);
                    };
                };
            };
        };
    };
};
var coproduct4 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (y) {
                    if (y instanceof Data_Either.Left) {
                        return a(y.value0);
                    };
                    if (y instanceof Data_Either.Right) {
                        if (y.value0 instanceof Data_Either.Left) {
                            return b(y.value0.value0);
                        };
                        if (y.value0 instanceof Data_Either.Right) {
                            if (y.value0.value0 instanceof Data_Either.Left) {
                                return c(y.value0.value0.value0);
                            };
                            if (y.value0.value0 instanceof Data_Either.Right) {
                                if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                    return d(y.value0.value0.value0.value0);
                                };
                                if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                    return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0));
                                };
                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 143, column 31 - line 145, column 51): " + [ y.value0.value0.value0.constructor.name ]);
                            };
                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 141, column 29 - line 145, column 51): " + [ y.value0.value0.constructor.name ]);
                        };
                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 139, column 27 - line 145, column 51): " + [ y.value0.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 137, column 24 - line 145, column 51): " + [ y.constructor.name ]);
                };
            };
        };
    };
};
var coproduct3 = function (a) {
    return function (b) {
        return function (c) {
            return function (y) {
                if (y instanceof Data_Either.Left) {
                    return a(y.value0);
                };
                if (y instanceof Data_Either.Right) {
                    if (y.value0 instanceof Data_Either.Left) {
                        return b(y.value0.value0);
                    };
                    if (y.value0 instanceof Data_Either.Right) {
                        if (y.value0.value0 instanceof Data_Either.Left) {
                            return c(y.value0.value0.value0);
                        };
                        if (y.value0.value0 instanceof Data_Either.Right) {
                            return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0));
                        };
                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 132, column 29 - line 134, column 49): " + [ y.value0.value0.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 130, column 27 - line 134, column 49): " + [ y.value0.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 128, column 22 - line 134, column 49): " + [ y.constructor.name ]);
            };
        };
    };
};
var coproduct2 = function (a) {
    return function (b) {
        return function (y) {
            if (y instanceof Data_Either.Left) {
                return a(y.value0);
            };
            if (y instanceof Data_Either.Right) {
                if (y.value0 instanceof Data_Either.Left) {
                    return b(y.value0.value0);
                };
                if (y.value0 instanceof Data_Either.Right) {
                    return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0));
                };
                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 123, column 27 - line 125, column 47): " + [ y.value0.constructor.name ]);
            };
            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 121, column 20 - line 125, column 47): " + [ y.constructor.name ]);
        };
    };
};
var coproduct10 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (i) {
                                    return function (j) {
                                        return function (y) {
                                            if (y instanceof Data_Either.Left) {
                                                return a(y.value0);
                                            };
                                            if (y instanceof Data_Either.Right) {
                                                if (y.value0 instanceof Data_Either.Left) {
                                                    return b(y.value0.value0);
                                                };
                                                if (y.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0 instanceof Data_Either.Left) {
                                                        return c(y.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return d(y.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                return e(y.value0.value0.value0.value0.value0);
                                                            };
                                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                    return f(y.value0.value0.value0.value0.value0.value0);
                                                                };
                                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                    if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                        return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                                    };
                                                                    if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                            return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                        };
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                            if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                                return i(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                            };
                                                                            if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                                if (y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                                    return j(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                                };
                                                                                if (y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                                    return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0));
                                                                                };
                                                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 251, column 43 - line 253, column 64): " + [ y.value0.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                            };
                                                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 249, column 41 - line 253, column 64): " + [ y.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                        };
                                                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 247, column 39 - line 253, column 64): " + [ y.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                    };
                                                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 245, column 37 - line 253, column 64): " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                };
                                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 243, column 35 - line 253, column 64): " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                            };
                                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 241, column 33 - line 253, column 64): " + [ y.value0.value0.value0.value0.constructor.name ]);
                                                        };
                                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 239, column 31 - line 253, column 64): " + [ y.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 237, column 29 - line 253, column 64): " + [ y.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 235, column 27 - line 253, column 64): " + [ y.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 233, column 37 - line 253, column 64): " + [ y.constructor.name ]);
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var coproduct1 = function (y) {
    if (y instanceof Data_Either.Left) {
        return y.value0;
    };
    if (y instanceof Data_Either.Right) {
        return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0));
    };
    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 116, column 16 - line 118, column 45): " + [ y.constructor.name ]);
};
var at9 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left)))))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at8 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left))))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at7 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left)))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at6 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Left))))) {
                return f(y.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at5 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Left)))) {
                return f(y.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at4 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Left))) {
                return f(y.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at3 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Left)) {
                return f(y.value0.value0.value0);
            };
            return b;
        };
    };
};
var at2 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Left) {
                return f(y.value0.value0);
            };
            return b;
        };
    };
};
var at10 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left))))))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at1 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Left) {
                return f(y.value0);
            };
            return b;
        };
    };
};
module.exports = {
    in1: in1,
    in2: in2,
    in3: in3,
    in4: in4,
    in5: in5,
    in6: in6,
    in7: in7,
    in8: in8,
    in9: in9,
    in10: in10,
    at1: at1,
    at2: at2,
    at3: at3,
    at4: at4,
    at5: at5,
    at6: at6,
    at7: at7,
    at8: at8,
    at9: at9,
    at10: at10,
    coproduct1: coproduct1,
    coproduct2: coproduct2,
    coproduct3: coproduct3,
    coproduct4: coproduct4,
    coproduct5: coproduct5,
    coproduct6: coproduct6,
    coproduct7: coproduct7,
    coproduct8: coproduct8,
    coproduct9: coproduct9,
    coproduct10: coproduct10
};

},{"../Data.Const/index.js":119,"../Data.Either/index.js":131,"../Data.Functor.Coproduct/index.js":150,"../Data.Newtype/index.js":220,"../Data.Void/index.js":291,"../Prelude/index.js":385}],150:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Prelude = require("../Prelude/index.js");
var Coproduct = function (x) {
    return x;
};
var showCoproduct = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            if (v instanceof Data_Either.Left) {
                return "(left " + (Data_Show.show(dictShow)(v.value0) + ")");
            };
            if (v instanceof Data_Either.Right) {
                return "(right " + (Data_Show.show(dictShow1)(v.value0) + ")");
            };
            throw new Error("Failed pattern match at Data.Functor.Coproduct (line 67, column 1 - line 67, column 77): " + [ v.constructor.name ]);
        });
    };
};
var right = function (ga) {
    return new Data_Either.Right(ga);
};
var newtypeCoproduct = new Data_Newtype.Newtype(function (n) {
    return n;
}, Coproduct);
var left = function (fa) {
    return new Data_Either.Left(fa);
};
var functorCoproduct = function (dictFunctor) {
    return function (dictFunctor1) {
        return new Data_Functor.Functor(function (f) {
            return function (v) {
                return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(Data_Functor.map(dictFunctor)(f))(Data_Functor.map(dictFunctor1)(f))(v);
            };
        });
    };
};
var functorWithIndexCoproduct = function (dictFunctorWithIndex) {
    return function (dictFunctorWithIndex1) {
        return new Data_FunctorWithIndex.FunctorWithIndex(function () {
            return functorCoproduct(dictFunctorWithIndex.Functor0())(dictFunctorWithIndex1.Functor0());
        }, function (f) {
            return function (v) {
                return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex)(function ($82) {
                    return f(Data_Either.Left.create($82));
                }))(Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex1)(function ($83) {
                    return f(Data_Either.Right.create($83));
                }))(v);
            };
        });
    };
};
var eq1Coproduct = function (dictEq1) {
    return function (dictEq11) {
        return new Data_Eq.Eq1(function (dictEq) {
            return function (v) {
                return function (v1) {
                    if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
                        return Data_Eq.eq1(dictEq1)(dictEq)(v.value0)(v1.value0);
                    };
                    if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) {
                        return Data_Eq.eq1(dictEq11)(dictEq)(v.value0)(v1.value0);
                    };
                    return false;
                };
            };
        });
    };
};
var eqCoproduct = function (dictEq1) {
    return function (dictEq11) {
        return function (dictEq) {
            return new Data_Eq.Eq(Data_Eq.eq1(eq1Coproduct(dictEq1)(dictEq11))(dictEq));
        };
    };
};
var ord1Coproduct = function (dictOrd1) {
    return function (dictOrd11) {
        return new Data_Ord.Ord1(function () {
            return eq1Coproduct(dictOrd1.Eq10())(dictOrd11.Eq10());
        }, function (dictOrd) {
            return function (v) {
                return function (v1) {
                    if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
                        return Data_Ord.compare1(dictOrd1)(dictOrd)(v.value0)(v1.value0);
                    };
                    if (v instanceof Data_Either.Left) {
                        return Data_Ordering.LT.value;
                    };
                    if (v1 instanceof Data_Either.Left) {
                        return Data_Ordering.GT.value;
                    };
                    if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) {
                        return Data_Ord.compare1(dictOrd11)(dictOrd)(v.value0)(v1.value0);
                    };
                    throw new Error("Failed pattern match at Data.Functor.Coproduct (line 61, column 5 - line 65, column 43): " + [ v.constructor.name, v1.constructor.name ]);
                };
            };
        });
    };
};
var ordCoproduct = function (dictOrd1) {
    return function (dictOrd11) {
        return function (dictOrd) {
            return new Data_Ord.Ord(function () {
                return eqCoproduct(dictOrd1.Eq10())(dictOrd11.Eq10())(dictOrd.Eq0());
            }, Data_Ord.compare1(ord1Coproduct(dictOrd1)(dictOrd11))(dictOrd));
        };
    };
};
var coproduct = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Data_Either.Left) {
                return v(v2.value0);
            };
            if (v2 instanceof Data_Either.Right) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Functor.Coproduct (line 31, column 1 - line 31, column 78): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var extendCoproduct = function (dictExtend) {
    return function (dictExtend1) {
        return new Control_Extend.Extend(function () {
            return functorCoproduct(dictExtend.Functor0())(dictExtend1.Functor0());
        }, function (f) {
            return function ($84) {
                return Coproduct(coproduct(function ($85) {
                    return Data_Either.Left.create(Control_Extend.extend(dictExtend)(function ($86) {
                        return f(Coproduct(Data_Either.Left.create($86)));
                    })($85));
                })(function ($87) {
                    return Data_Either.Right.create(Control_Extend.extend(dictExtend1)(function ($88) {
                        return f(Coproduct(Data_Either.Right.create($88)));
                    })($87));
                })($84));
            };
        });
    };
};
var foldableCoproduct = function (dictFoldable) {
    return function (dictFoldable1) {
        return new Data_Foldable.Foldable(function (dictMonoid) {
            return function (f) {
                return coproduct(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f))(Data_Foldable.foldMap(dictFoldable1)(dictMonoid)(f));
            };
        }, function (f) {
            return function (z) {
                return coproduct(Data_Foldable.foldl(dictFoldable)(f)(z))(Data_Foldable.foldl(dictFoldable1)(f)(z));
            };
        }, function (f) {
            return function (z) {
                return coproduct(Data_Foldable.foldr(dictFoldable)(f)(z))(Data_Foldable.foldr(dictFoldable1)(f)(z));
            };
        });
    };
};
var foldableWithIndexCoproduct = function (dictFoldableWithIndex) {
    return function (dictFoldableWithIndex1) {
        return new Data_FoldableWithIndex.FoldableWithIndex(function () {
            return foldableCoproduct(dictFoldableWithIndex.Foldable0())(dictFoldableWithIndex1.Foldable0());
        }, function (dictMonoid) {
            return function (f) {
                return coproduct(Data_FoldableWithIndex.foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function ($89) {
                    return f(Data_Either.Left.create($89));
                }))(Data_FoldableWithIndex.foldMapWithIndex(dictFoldableWithIndex1)(dictMonoid)(function ($90) {
                    return f(Data_Either.Right.create($90));
                }));
            };
        }, function (f) {
            return function (z) {
                return coproduct(Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function ($91) {
                    return f(Data_Either.Left.create($91));
                })(z))(Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex1)(function ($92) {
                    return f(Data_Either.Right.create($92));
                })(z));
            };
        }, function (f) {
            return function (z) {
                return coproduct(Data_FoldableWithIndex.foldrWithIndex(dictFoldableWithIndex)(function ($93) {
                    return f(Data_Either.Left.create($93));
                })(z))(Data_FoldableWithIndex.foldrWithIndex(dictFoldableWithIndex1)(function ($94) {
                    return f(Data_Either.Right.create($94));
                })(z));
            };
        });
    };
};
var traversableCoproduct = function (dictTraversable) {
    return function (dictTraversable1) {
        return new Data_Traversable.Traversable(function () {
            return foldableCoproduct(dictTraversable.Foldable1())(dictTraversable1.Foldable1());
        }, function () {
            return functorCoproduct(dictTraversable.Functor0())(dictTraversable1.Functor0());
        }, function (dictApplicative) {
            return coproduct(function ($95) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(function ($96) {
                    return Coproduct(Data_Either.Left.create($96));
                })(Data_Traversable.sequence(dictTraversable)(dictApplicative)($95));
            })(function ($97) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(function ($98) {
                    return Coproduct(Data_Either.Right.create($98));
                })(Data_Traversable.sequence(dictTraversable1)(dictApplicative)($97));
            });
        }, function (dictApplicative) {
            return function (f) {
                return coproduct(function ($99) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(function ($100) {
                        return Coproduct(Data_Either.Left.create($100));
                    })(Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)($99));
                })(function ($101) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(function ($102) {
                        return Coproduct(Data_Either.Right.create($102));
                    })(Data_Traversable.traverse(dictTraversable1)(dictApplicative)(f)($101));
                });
            };
        });
    };
};
var traversableWithIndexCoproduct = function (dictTraversableWithIndex) {
    return function (dictTraversableWithIndex1) {
        return new Data_TraversableWithIndex.TraversableWithIndex(function () {
            return foldableWithIndexCoproduct(dictTraversableWithIndex.FoldableWithIndex1())(dictTraversableWithIndex1.FoldableWithIndex1());
        }, function () {
            return functorWithIndexCoproduct(dictTraversableWithIndex.FunctorWithIndex0())(dictTraversableWithIndex1.FunctorWithIndex0());
        }, function () {
            return traversableCoproduct(dictTraversableWithIndex.Traversable2())(dictTraversableWithIndex1.Traversable2());
        }, function (dictApplicative) {
            return function (f) {
                return coproduct(function ($103) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(function ($104) {
                        return Coproduct(Data_Either.Left.create($104));
                    })(Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function ($105) {
                        return f(Data_Either.Left.create($105));
                    })($103));
                })(function ($106) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(function ($107) {
                        return Coproduct(Data_Either.Right.create($107));
                    })(Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex1)(dictApplicative)(function ($108) {
                        return f(Data_Either.Right.create($108));
                    })($106));
                });
            };
        });
    };
};
var comonadCoproduct = function (dictComonad) {
    return function (dictComonad1) {
        return new Control_Comonad.Comonad(function () {
            return extendCoproduct(dictComonad.Extend0())(dictComonad1.Extend0());
        }, coproduct(Control_Comonad.extract(dictComonad))(Control_Comonad.extract(dictComonad1)));
    };
};
var bihoistCoproduct = function (natF) {
    return function (natG) {
        return function (v) {
            return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(natF)(natG)(v);
        };
    };
};
module.exports = {
    Coproduct: Coproduct,
    left: left,
    right: right,
    coproduct: coproduct,
    bihoistCoproduct: bihoistCoproduct,
    newtypeCoproduct: newtypeCoproduct,
    eqCoproduct: eqCoproduct,
    eq1Coproduct: eq1Coproduct,
    ordCoproduct: ordCoproduct,
    ord1Coproduct: ord1Coproduct,
    showCoproduct: showCoproduct,
    functorCoproduct: functorCoproduct,
    functorWithIndexCoproduct: functorWithIndexCoproduct,
    extendCoproduct: extendCoproduct,
    comonadCoproduct: comonadCoproduct,
    foldableCoproduct: foldableCoproduct,
    foldableWithIndexCoproduct: foldableWithIndexCoproduct,
    traversableCoproduct: traversableCoproduct,
    traversableWithIndexCoproduct: traversableWithIndexCoproduct
};

},{"../Control.Comonad/index.js":21,"../Control.Extend/index.js":24,"../Control.Semigroupoid/index.js":61,"../Data.Bifunctor/index.js":106,"../Data.Either/index.js":131,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.FoldableWithIndex/index.js":142,"../Data.Functor/index.js":153,"../Data.FunctorWithIndex/index.js":155,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Data.Traversable/index.js":281,"../Data.TraversableWithIndex/index.js":282,"../Prelude/index.js":385}],151:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");
var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");
var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");
var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");
var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");
var Invariant = function (imap) {
    this.imap = imap;
};
var invariantMultiplicative = new Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var invariantEndo = new Invariant(function (ab) {
    return function (ba) {
        return function (v) {
            return function ($31) {
                return ab(v(ba($31)));
            };
        };
    };
});
var invariantDual = new Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var invariantDisj = new Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var invariantConj = new Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var invariantAdditive = new Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var imapF = function (dictFunctor) {
    return function (f) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(f);
        };
    };
};
var invariantArray = new Invariant(imapF(Data_Functor.functorArray));
var invariantFn = new Invariant(imapF(Data_Functor.functorFn));
var imap = function (dict) {
    return dict.imap;
};
module.exports = {
    imap: imap,
    Invariant: Invariant,
    imapF: imapF,
    invariantFn: invariantFn,
    invariantArray: invariantArray,
    invariantAdditive: invariantAdditive,
    invariantConj: invariantConj,
    invariantDisj: invariantDisj,
    invariantDual: invariantDual,
    invariantEndo: invariantEndo,
    invariantMultiplicative: invariantMultiplicative
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Monoid.Additive/index.js":212,"../Data.Monoid.Conj/index.js":213,"../Data.Monoid.Disj/index.js":214,"../Data.Monoid.Dual/index.js":215,"../Data.Monoid.Endo/index.js":216,"../Data.Monoid.Multiplicative/index.js":217}],152:[function(require,module,exports){
"use strict";

exports.arrayMap = function (f) {
  return function (arr) {
    var l = arr.length;
    var result = new Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(arr[i]);
    }
    return result;
  };
};

},{}],153:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Functor = function (map) {
    this.map = map;
};
var map = function (dict) {
    return dict.map;
};
var mapFlipped = function (dictFunctor) {
    return function (fa) {
        return function (f) {
            return map(dictFunctor)(f)(fa);
        };
    };
};
var $$void = function (dictFunctor) {
    return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
};
var voidLeft = function (dictFunctor) {
    return function (f) {
        return function (x) {
            return map(dictFunctor)(Data_Function["const"](x))(f);
        };
    };
};
var voidRight = function (dictFunctor) {
    return function (x) {
        return map(dictFunctor)(Data_Function["const"](x));
    };
};
var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
var functorArray = new Functor($foreign.arrayMap);
var flap = function (dictFunctor) {
    return function (ff) {
        return function (x) {
            return map(dictFunctor)(function (f) {
                return f(x);
            })(ff);
        };
    };
};
module.exports = {
    Functor: Functor,
    map: map,
    mapFlipped: mapFlipped,
    "void": $$void,
    voidRight: voidRight,
    voidLeft: voidLeft,
    flap: flap,
    functorFn: functorFn,
    functorArray: functorArray
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Function/index.js":145,"../Data.Unit/index.js":289,"./foreign.js":152}],154:[function(require,module,exports){
"use strict";

exports.mapWithIndexArray = function (f) {
  return function (xs) {
    var l = xs.length;
    var result = Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(i)(xs[i]);
    }
    return result;
  };
};

},{}],155:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Maybe_First = require("../Data.Maybe.First/index.js");
var Data_Maybe_Last = require("../Data.Maybe.Last/index.js");
var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");
var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");
var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");
var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Prelude = require("../Prelude/index.js");
var FunctorWithIndex = function (Functor0, mapWithIndex) {
    this.Functor0 = Functor0;
    this.mapWithIndex = mapWithIndex;
};
var mapWithIndex = function (dict) {
    return dict.mapWithIndex;
};
var mapDefault = function (dictFunctorWithIndex) {
    return function (f) {
        return mapWithIndex(dictFunctorWithIndex)(Data_Function["const"](f));
    };
};
var functorWithIndexMultiplicative = new FunctorWithIndex(function () {
    return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Multiplicative.functorMultiplicative)(f(Data_Unit.unit));
});
var functorWithIndexMaybe = new FunctorWithIndex(function () {
    return Data_Maybe.functorMaybe;
}, function (f) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(f(Data_Unit.unit));
});
var functorWithIndexLast = new FunctorWithIndex(function () {
    return Data_Maybe_Last.functorLast;
}, function (f) {
    return Data_Functor.map(Data_Maybe_Last.functorLast)(f(Data_Unit.unit));
});
var functorWithIndexFirst = new FunctorWithIndex(function () {
    return Data_Maybe_First.functorFirst;
}, function (f) {
    return Data_Functor.map(Data_Maybe_First.functorFirst)(f(Data_Unit.unit));
});
var functorWithIndexDual = new FunctorWithIndex(function () {
    return Data_Monoid_Dual.functorDual;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Dual.functorDual)(f(Data_Unit.unit));
});
var functorWithIndexDisj = new FunctorWithIndex(function () {
    return Data_Monoid_Disj.functorDisj;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Disj.functorDisj)(f(Data_Unit.unit));
});
var functorWithIndexConj = new FunctorWithIndex(function () {
    return Data_Monoid_Conj.functorConj;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Conj.functorConj)(f(Data_Unit.unit));
});
var functorWithIndexArray = new FunctorWithIndex(function () {
    return Data_Functor.functorArray;
}, $foreign.mapWithIndexArray);
var functorWithIndexAdditive = new FunctorWithIndex(function () {
    return Data_Monoid_Additive.functorAdditive;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Additive.functorAdditive)(f(Data_Unit.unit));
});
module.exports = {
    FunctorWithIndex: FunctorWithIndex,
    mapWithIndex: mapWithIndex,
    mapDefault: mapDefault,
    functorWithIndexArray: functorWithIndexArray,
    functorWithIndexMaybe: functorWithIndexMaybe,
    functorWithIndexFirst: functorWithIndexFirst,
    functorWithIndexLast: functorWithIndexLast,
    functorWithIndexAdditive: functorWithIndexAdditive,
    functorWithIndexDual: functorWithIndexDual,
    functorWithIndexConj: functorWithIndexConj,
    functorWithIndexDisj: functorWithIndexDisj,
    functorWithIndexMultiplicative: functorWithIndexMultiplicative
};

},{"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Maybe.First/index.js":208,"../Data.Maybe.Last/index.js":209,"../Data.Maybe/index.js":210,"../Data.Monoid.Additive/index.js":212,"../Data.Monoid.Conj/index.js":213,"../Data.Monoid.Disj/index.js":214,"../Data.Monoid.Dual/index.js":215,"../Data.Monoid.Multiplicative/index.js":217,"../Data.Unit/index.js":289,"../Prelude/index.js":385,"./foreign.js":154}],156:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Monad_Free = require("../Control.Monad.Free/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Generic_Rep_Eq = require("../Data.Generic.Rep.Eq/index.js");
var Data_Generic_Rep_Ord = require("../Data.Generic.Rep.Ord/index.js");
var Data_Generic_Rep_Show = require("../Data.Generic.Rep.Show/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ratio = require("../Data.Ratio/index.js");
var Data_Rational = require("../Data.Rational/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_String = require("../Data.String/index.js");
var Data_String_CodePoints = require("../Data.String.CodePoints/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Data_String_Pattern = require("../Data.String.Pattern/index.js");
var Data_String_Regex = require("../Data.String.Regex/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Foreign_Object = require("../Foreign.Object/index.js");
var Prelude = require("../Prelude/index.js");
var Test_StrongCheck_Arbitrary = require("../Test.StrongCheck.Arbitrary/index.js");
var Test_StrongCheck_Gen = require("../Test.StrongCheck.Gen/index.js");
var Full = (function () {
    function Full() {

    };
    Full.value = new Full();
    return Full;
})();
var Word = (function () {
    function Word() {

    };
    Word.value = new Word();
    return Word;
})();
var Char = (function () {
    function Char() {

    };
    Char.value = new Char();
    return Char;
})();
var Start = (function () {
    function Start() {

    };
    Start.value = new Start();
    return Start;
})();
var Prefix = (function () {
    function Prefix() {

    };
    Prefix.value = new Prefix();
    return Prefix;
})();
var Mid = (function () {
    function Mid() {

    };
    Mid.value = new Mid();
    return Mid;
})();
var Suffix = (function () {
    function Suffix() {

    };
    Suffix.value = new Suffix();
    return Suffix;
})();
var End = (function () {
    function End() {

    };
    End.value = new End();
    return End;
})();
var Distance = (function () {
    function Distance(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    Distance.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new Distance(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return Distance;
})();
var None = (function () {
    function None() {

    };
    None.value = new None();
    return None;
})();
var Fuzzy = function (x) {
    return x;
};
var FuzzyStr = function (x) {
    return x;
};
var words = (function () {
    var regex$prime = Data_String_Regex.regex("\\s+")(Data_String_Regex.parseFlags("g"));
    return Data_Either.either(function ($154) {
        return Data_Function["const"](Control_Applicative.pure(Control_Applicative.applicativeArray)($154));
    })(Data_String_Regex.split)(regex$prime);
})();
var semigroupDistance = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        if (v instanceof None) {
            return v1;
        };
        if (v1 instanceof None) {
            return v;
        };
        if (v instanceof Distance && v1 instanceof Distance) {
            return new Distance(v.value0 + v1.value0 | 0, v.value1 + v1.value1 | 0, v.value2 + v1.value2 | 0, v.value3 + v1.value3 | 0, v.value4 + v1.value4 | 0, v.value5 + v1.value5 | 0);
        };
        throw new Error("Failed pattern match at Data.Fuzzy (line 79, column 1 - line 79, column 49): " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var scoreScope = Data_Semigroup.append(semigroupDistance)(new Distance(1, 0, 0, 0, 0, 0));
var scoreDistance = function (v) {
    return function (d) {
        if (v instanceof Start) {
            return new Distance(0, 0, 0, d, 0, 0);
        };
        if (v instanceof Prefix) {
            return new Distance(0, 0, d, 0, 0, 0);
        };
        if (v instanceof Mid) {
            return new Distance(0, d, 0, 0, 0, 0);
        };
        if (v instanceof Suffix) {
            return new Distance(0, 0, 0, 0, d, 0);
        };
        if (v instanceof End) {
            return new Distance(0, 0, 0, 0, 0, d);
        };
        throw new Error("Failed pattern match at Data.Fuzzy (line 369, column 1 - line 369, column 40): " + [ v.constructor.name, d.constructor.name ]);
    };
};
var newtypeFuzzyStr = new Data_Newtype.Newtype(function (n) {
    return n;
}, FuzzyStr);
var newtypeFuzzy = new Data_Newtype.Newtype(function (n) {
    return n;
}, Fuzzy);
var monoidDistance = new Data_Monoid.Monoid(function () {
    return semigroupDistance;
}, None.value);
var lastIndexOf$prime = function ($155) {
    return Data_String_CodePoints.lastIndexOf(Data_String_Pattern.Pattern($155));
};
var indexOf$prime = function ($156) {
    return Data_String_CodePoints.indexOf(Data_String_Pattern.Pattern($156));
};
var scoreWord = function (pos) {
    return function (distance) {
        return function (str) {
            var before = Data_String_CodePoints.take(distance)(str);
            var wordStart = Data_String_CodePoints.length(before) - (Data_Maybe.fromMaybe(-1 | 0)(lastIndexOf$prime(" ")(before)) + 1 | 0) | 0;
            var after = Data_String_CodePoints.length(str);
            var wordEnd = Data_Maybe.fromMaybe(1 * after | 0)(indexOf$prime(" ")(str));
            if (pos instanceof Start) {
                return scoreDistance(Prefix.value)(wordStart);
            };
            if (pos instanceof End) {
                return scoreDistance(Suffix.value)(wordEnd);
            };
            return Data_Monoid.mempty(monoidDistance);
        };
    };
};
var genericScope = new Data_Generic_Rep.Generic(function (x) {
    if (x instanceof Full) {
        return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
    };
    if (x instanceof Word) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
    };
    if (x instanceof Char) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));
    };
    throw new Error("Failed pattern match at Data.Fuzzy (line 159, column 8 - line 159, column 48): " + [ x.constructor.name ]);
}, function (x) {
    if (x instanceof Data_Generic_Rep.Inl) {
        return Full.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
        return Word.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
        return Char.value;
    };
    throw new Error("Failed pattern match at Data.Fuzzy (line 159, column 8 - line 159, column 48): " + [ x.constructor.name ]);
});
var showScope = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericScope)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Full";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Word";
})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Char";
}))))));
var genericPos = new Data_Generic_Rep.Generic(function (x) {
    if (x instanceof Start) {
        return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
    };
    if (x instanceof Prefix) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
    };
    if (x instanceof Mid) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
    };
    if (x instanceof Suffix) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))));
    };
    if (x instanceof End) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value))));
    };
    throw new Error("Failed pattern match at Data.Fuzzy (line 165, column 8 - line 165, column 44): " + [ x.constructor.name ]);
}, function (x) {
    if (x instanceof Data_Generic_Rep.Inl) {
        return Start.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
        return Prefix.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
        return Mid.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
        return Suffix.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr))) {
        return End.value;
    };
    throw new Error("Failed pattern match at Data.Fuzzy (line 165, column 8 - line 165, column 44): " + [ x.constructor.name ]);
});
var showPos = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericPos)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Start";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Prefix";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Mid";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Suffix";
})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "End";
}))))))));
var genericFuzzyStr = new Data_Generic_Rep.Generic(function (x) {
    return x;
}, function (x) {
    return x;
});
var genericFuzzy = new Data_Generic_Rep.Generic(function (x) {
    return x;
}, function (x) {
    return x;
});
var genericDistance = new Data_Generic_Rep.Generic(function (x) {
    if (x instanceof Distance) {
        return new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, new Data_Generic_Rep.Product(x.value2, new Data_Generic_Rep.Product(x.value3, new Data_Generic_Rep.Product(x.value4, x.value5))))));
    };
    if (x instanceof None) {
        return new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value);
    };
    throw new Error("Failed pattern match at Data.Fuzzy (line 74, column 8 - line 74, column 54): " + [ x.constructor.name ]);
}, function (x) {
    if (x instanceof Data_Generic_Rep.Inl) {
        return new Distance(x.value0.value0, x.value0.value1.value0, x.value0.value1.value1.value0, x.value0.value1.value1.value1.value0, x.value0.value1.value1.value1.value1.value0, x.value0.value1.value1.value1.value1.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr) {
        return None.value;
    };
    throw new Error("Failed pattern match at Data.Fuzzy (line 74, column 8 - line 74, column 54): " + [ x.constructor.name ]);
});
var showDistance = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericDistance)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt)))))))(new Data_Symbol.IsSymbol(function () {
    return "Distance";
})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "None";
})))));
var showFuzzy = function (dictShow) {
    return new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericFuzzy)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "distance";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "original";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "ratio";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "segments";
    }))(Data_Show.showRecordFieldsNil)(Foreign_Object.showObject(Data_Show.showArray(Data_Either.showEither(Data_Show.showString)(Data_Show.showString)))))(Data_Ratio.showRatio(Data_Show.showInt)))(dictShow))(showDistance))))(new Data_Symbol.IsSymbol(function () {
        return "Fuzzy";
    }))));
};
var showFuzzyStr = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericFuzzyStr)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "distance";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "original";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "ratio";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "segments";
}))(Data_Show.showRecordFieldsNil)(Data_Show.showArray(Data_Either.showEither(Data_Show.showString)(Data_Show.showString))))(Data_Ratio.showRatio(Data_Show.showInt)))(Data_Show.showString))(showDistance))))(new Data_Symbol.IsSymbol(function () {
    return "FuzzyStr";
}))));
var eqScope = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericScope)(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments)))));
var matchStr = function (v) {
    return function (v1) {
        return function (str) {
            if (v1 === "") {
                return {
                    original: str,
                    segments: [ new Data_Either.Left(str) ],
                    distance: None.value,
                    ratio: Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(1)(1)
                };
            };
            var initialAcc = {
                substr: str,
                pos: Start.value,
                fuzzy: {
                    original: str,
                    segments: Data_Monoid.mempty(Data_Monoid.monoidArray),
                    distance: Data_Monoid.mempty(monoidDistance),
                    ratio: Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(1)(1)
                }
            };
            var chars = Data_String_CodePoints.length(Data_String_Common.replaceAll(" ")("")(v1));
            var matchStr$prime = function (scope) {
                return function (v2) {
                    return function (pat) {
                        var v3 = (function () {
                            if (v) {
                                return new Data_Tuple.Tuple(Data_String_Common.toLower(pat), Data_String_Common.toLower(v2.substr));
                            };
                            return new Data_Tuple.Tuple(pat, v2.substr);
                        })();
                        var nextRight = function (d) {
                            return Data_Either.Right.create(Data_String_CodePoints.take(Data_String_CodePoints.length(pat))(Data_String_CodePoints.drop(d)(v2.substr)));
                        };
                        var nextLeft = function (d) {
                            if (d === 0) {
                                return Data_Monoid.mempty(Data_Monoid.monoidArray);
                            };
                            return [ Data_Either.Left.create(Data_String_CodePoints.take(d)(v2.substr)) ];
                        };
                        var nextSegment = function (d) {
                            var v4 = new Data_Tuple.Tuple(d, Data_Array.unsnoc(v2.fuzzy.segments));
                            if (v4.value0 === 0 && v4.value1 instanceof Data_Maybe.Just) {
                                return Data_Array.snoc(v4.value1.value0.init)(Data_Semigroup.append(Data_Either.semigroupEither(Data_Semigroup.semigroupString))(v4.value1.value0.last)(nextRight(d)));
                            };
                            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v2.fuzzy.segments)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(nextLeft(d))([ nextRight(d) ]));
                        };
                        var nextDistance = function (d) {
                            var v4 = new Data_Tuple.Tuple(scope, v2.pos);
                            if (v4.value0 instanceof Word && v4.value1 instanceof Mid) {
                                return Data_Semigroup.append(semigroupDistance)(v2.fuzzy.distance)(scoreDistance(Start.value)(d));
                            };
                            return Data_Semigroup.append(semigroupDistance)(v2.fuzzy.distance)(Data_Semigroup.append(semigroupDistance)(scoreDistance(v2.pos)(d))(scoreWord(v2.pos)(d)(v3.value1)));
                        };
                        var nextAcc = function (p) {
                            return {
                                substr: v2.substr,
                                pos: p,
                                fuzzy: {
                                    original: v2.fuzzy.original,
                                    segments: v2.fuzzy.segments,
                                    distance: scoreScope(v2.fuzzy.distance),
                                    ratio: (function () {
                                        var $122 = Data_Eq.eq(eqScope)(scope)(Char.value);
                                        if ($122) {
                                            return Data_Ring.sub(Data_Ratio.ringRatio(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt))(v2.fuzzy.ratio)(Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(1)(chars));
                                        };
                                        return v2.fuzzy.ratio;
                                    })()
                                }
                            };
                        };
                        var v4 = indexOf$prime(v3.value0)(v3.value1);
                        if (v4 instanceof Data_Maybe.Just) {
                            return {
                                substr: Data_String_CodePoints.drop(v4.value0 + Data_String_CodePoints.length(pat) | 0)(v2.substr),
                                pos: Mid.value,
                                fuzzy: {
                                    original: v2.fuzzy.original,
                                    segments: nextSegment(v4.value0),
                                    distance: nextDistance(v4.value0),
                                    ratio: v2.fuzzy.ratio
                                }
                            };
                        };
                        if (v4 instanceof Data_Maybe.Nothing) {
                            if (scope instanceof Full) {
                                return Data_Foldable.foldl(Data_Foldable.foldableArray)(matchStr$prime(Word.value))(nextAcc(Start.value))(words(pat));
                            };
                            if (scope instanceof Word) {
                                return Data_Foldable.foldl(Data_Foldable.foldableArray)(matchStr$prime(Char.value))(nextAcc(Start.value))(Data_Functor.map(Data_Functor.functorArray)(Data_String_CodePoints.singleton)(Data_String_CodePoints.toCodePointArray(pat)));
                            };
                            if (scope instanceof Char) {
                                return nextAcc(v2.pos);
                            };
                            throw new Error("Failed pattern match at Data.Fuzzy (line 248, column 11 - line 251, column 32): " + [ scope.constructor.name ]);
                        };
                        throw new Error("Failed pattern match at Data.Fuzzy (line 236, column 7 - line 251, column 32): " + [ v4.constructor.name ]);
                    };
                };
            };
            var after = function (v2) {
                var nextSegment = (function () {
                    if (v2.substr === "") {
                        return v2.fuzzy.segments;
                    };
                    return Data_Array.snoc(v2.fuzzy.segments)(new Data_Either.Left(v2.substr));
                })();
                var nextDistance = (function () {
                    if (Data_Eq.eq(Data_Ratio.eqRatio(Data_Eq.eqInt))(v2.fuzzy.ratio)(Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(0)(1))) {
                        return v2.fuzzy.distance;
                    };
                    if (Data_Boolean.otherwise) {
                        return Data_Semigroup.append(semigroupDistance)(v2.fuzzy.distance)(Data_Semigroup.append(semigroupDistance)(scoreDistance(End.value)(Data_String_CodePoints.length(v2.substr)))(scoreWord(End.value)(0)(v2.substr)));
                    };
                    throw new Error("Failed pattern match at Data.Fuzzy (line 297, column 11 - line 297, column 35): " + [  ]);
                })();
                return {
                    original: v2.fuzzy.original,
                    segments: nextSegment,
                    distance: nextDistance,
                    ratio: v2.fuzzy.ratio
                };
            };
            return after(Data_Foldable.foldl(Data_Foldable.foldableArray)(matchStr$prime(Full.value))(initialAcc)([ v1 ]));
        };
    };
};
var eqPos = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericPos)(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments)))))));
var eqDistance = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericDistance)(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))))))))(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))));
var eqFuzzy = function (dictEq) {
    return new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericFuzzy)(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
        return "segments";
    }))(Foreign_Object.eqObject(Data_Eq.eqArray(Data_Either.eqEither(Data_Eq.eqString)(Data_Eq.eqString)))))()(new Data_Symbol.IsSymbol(function () {
        return "ratio";
    }))(Data_Ratio.eqRatio(Data_Eq.eqInt)))()(new Data_Symbol.IsSymbol(function () {
        return "original";
    }))(dictEq))()(new Data_Symbol.IsSymbol(function () {
        return "distance";
    }))(eqDistance))))));
};
var eqFuzzyStr = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericFuzzyStr)(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
    return "segments";
}))(Data_Eq.eqArray(Data_Either.eqEither(Data_Eq.eqString)(Data_Eq.eqString))))()(new Data_Symbol.IsSymbol(function () {
    return "ratio";
}))(Data_Ratio.eqRatio(Data_Eq.eqInt)))()(new Data_Symbol.IsSymbol(function () {
    return "original";
}))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
    return "distance";
}))(eqDistance))))));
var ordDistance = new Data_Ord.Ord(function () {
    return eqDistance;
}, Data_Generic_Rep_Ord.genericCompare(genericDistance)(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))))))))(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments))));
var match = function (v) {
    return function (extract) {
        return function (v1) {
            return function (val) {
                if (v1 === "") {
                    return {
                        original: val,
                        segments: Data_Functor.map(Foreign_Object.functorObject)(function ($157) {
                            return Control_Applicative.pure(Control_Applicative.applicativeArray)(Data_Either.Left.create($157));
                        })(extract(val)),
                        distance: Data_Monoid.mempty(monoidDistance),
                        ratio: Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(1)(1)
                    };
                };
                var minDistance = function (d) {
                    return function (v2) {
                        return Data_Ord.min(ordDistance)(d)(v2.distance);
                    };
                };
                var maxRatio = function (r) {
                    return function (v2) {
                        return Data_Ord.max(Data_Ratio.ordRatio(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt))(r)(v2.ratio);
                    };
                };
                var matches = Data_Functor.map(Foreign_Object.functorObject)(matchStr(v)(v1))(extract(val));
                var fuzzies = Foreign_Object.values(matches);
                return {
                    original: val,
                    segments: Data_Functor.map(Foreign_Object.functorObject)(function ($158) {
                        return (function (v2) {
                            return v2.segments;
                        })(Data_Newtype.unwrap(newtypeFuzzyStr)($158));
                    })(matches),
                    distance: Data_Foldable.foldl(Data_Foldable.foldableArray)(minDistance)(Data_Monoid.mempty(monoidDistance))(fuzzies),
                    ratio: Data_Foldable.foldl(Data_Foldable.foldableArray)(maxRatio)(Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(0)(1))(fuzzies)
                };
            };
        };
    };
};
var ordFuzzy = function (dictEq) {
    return new Data_Ord.Ord(function () {
        return eqFuzzy(dictEq);
    }, Data_Function.on(Data_Ord.compare(ordDistance))(function ($159) {
        return (function (v) {
            return v.distance;
        })(Data_Newtype.unwrap(newtypeFuzzy)($159));
    }));
};
var ordFuzzyStr = new Data_Ord.Ord(function () {
    return eqFuzzyStr;
}, Data_Function.on(Data_Ord.compare(ordDistance))(function ($160) {
    return (function (v) {
        return v.distance;
    })(Data_Newtype.unwrap(newtypeFuzzyStr)($160));
}));
var arbitraryDistance = new Test_StrongCheck_Arbitrary.Arbitrary(Control_Apply.apply(Test_StrongCheck_Gen.applyGenT(Control_Monad_Free.freeMonad))(Control_Apply.apply(Test_StrongCheck_Gen.applyGenT(Control_Monad_Free.freeMonad))(Control_Apply.apply(Test_StrongCheck_Gen.applyGenT(Control_Monad_Free.freeMonad))(Control_Apply.apply(Test_StrongCheck_Gen.applyGenT(Control_Monad_Free.freeMonad))(Control_Apply.apply(Test_StrongCheck_Gen.applyGenT(Control_Monad_Free.freeMonad))(Data_Functor.map(Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Distance.create)(Test_StrongCheck_Arbitrary.arbitrary(Test_StrongCheck_Arbitrary.arbInt)))(Test_StrongCheck_Arbitrary.arbitrary(Test_StrongCheck_Arbitrary.arbInt)))(Test_StrongCheck_Arbitrary.arbitrary(Test_StrongCheck_Arbitrary.arbInt)))(Test_StrongCheck_Arbitrary.arbitrary(Test_StrongCheck_Arbitrary.arbInt)))(Test_StrongCheck_Arbitrary.arbitrary(Test_StrongCheck_Arbitrary.arbInt)))(Test_StrongCheck_Arbitrary.arbitrary(Test_StrongCheck_Arbitrary.arbInt)));
module.exports = {
    Distance: Distance,
    None: None,
    FuzzyStr: FuzzyStr,
    Fuzzy: Fuzzy,
    matchStr: matchStr,
    match: match,
    genericDistance: genericDistance,
    eqDistance: eqDistance,
    showDistance: showDistance,
    ordDistance: ordDistance,
    semigroupDistance: semigroupDistance,
    monoidDistance: monoidDistance,
    arbitraryDistance: arbitraryDistance,
    genericFuzzyStr: genericFuzzyStr,
    newtypeFuzzyStr: newtypeFuzzyStr,
    eqFuzzyStr: eqFuzzyStr,
    showFuzzyStr: showFuzzyStr,
    ordFuzzyStr: ordFuzzyStr,
    genericFuzzy: genericFuzzy,
    newtypeFuzzy: newtypeFuzzy,
    eqFuzzy: eqFuzzy,
    showFuzzy: showFuzzy,
    ordFuzzy: ordFuzzy
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Monad.Free/index.js":33,"../Control.Semigroupoid/index.js":61,"../Data.Array/index.js":99,"../Data.Boolean/index.js":110,"../Data.Either/index.js":131,"../Data.Eq/index.js":135,"../Data.EuclideanRing/index.js":137,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Generic.Rep.Eq/index.js":157,"../Data.Generic.Rep.Ord/index.js":158,"../Data.Generic.Rep.Show/index.js":159,"../Data.Generic.Rep/index.js":160,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Ratio/index.js":239,"../Data.Rational/index.js":240,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.String.CodePoints/index.js":256,"../Data.String.Common/index.js":260,"../Data.String.Pattern/index.js":266,"../Data.String.Regex/index.js":269,"../Data.String/index.js":272,"../Data.Symbol/index.js":274,"../Data.Tuple/index.js":283,"../Foreign.Object/index.js":318,"../Prelude/index.js":385,"../Test.StrongCheck.Arbitrary/index.js":411,"../Test.StrongCheck.Gen/index.js":413}],157:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Prelude = require("../Prelude/index.js");
var GenericEq = function (genericEq$prime) {
    this["genericEq'"] = genericEq$prime;
};
var genericEqNoConstructors = new GenericEq(function (v) {
    return function (v1) {
        return true;
    };
});
var genericEqNoArguments = new GenericEq(function (v) {
    return function (v1) {
        return true;
    };
});
var genericEqArgument = function (dictEq) {
    return new GenericEq(function (v) {
        return function (v1) {
            return Data_Eq.eq(dictEq)(v)(v1);
        };
    });
};
var genericEq$prime = function (dict) {
    return dict["genericEq'"];
};
var genericEqConstructor = function (dictGenericEq) {
    return new GenericEq(function (v) {
        return function (v1) {
            return genericEq$prime(dictGenericEq)(v)(v1);
        };
    });
};
var genericEqProduct = function (dictGenericEq) {
    return function (dictGenericEq1) {
        return new GenericEq(function (v) {
            return function (v1) {
                return genericEq$prime(dictGenericEq)(v.value0)(v1.value0) && genericEq$prime(dictGenericEq1)(v.value1)(v1.value1);
            };
        });
    };
};
var genericEqSum = function (dictGenericEq) {
    return function (dictGenericEq1) {
        return new GenericEq(function (v) {
            return function (v1) {
                if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inl) {
                    return genericEq$prime(dictGenericEq)(v.value0)(v1.value0);
                };
                if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inr) {
                    return genericEq$prime(dictGenericEq1)(v.value0)(v1.value0);
                };
                return false;
            };
        });
    };
};
var genericEq = function (dictGeneric) {
    return function (dictGenericEq) {
        return function (x) {
            return function (y) {
                return genericEq$prime(dictGenericEq)(Data_Generic_Rep.from(dictGeneric)(x))(Data_Generic_Rep.from(dictGeneric)(y));
            };
        };
    };
};
module.exports = {
    GenericEq: GenericEq,
    "genericEq'": genericEq$prime,
    genericEq: genericEq,
    genericEqNoConstructors: genericEqNoConstructors,
    genericEqNoArguments: genericEqNoArguments,
    genericEqSum: genericEqSum,
    genericEqProduct: genericEqProduct,
    genericEqConstructor: genericEqConstructor,
    genericEqArgument: genericEqArgument
};

},{"../Data.Eq/index.js":135,"../Data.Generic.Rep/index.js":160,"../Data.HeytingAlgebra/index.js":162,"../Prelude/index.js":385}],158:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Prelude = require("../Prelude/index.js");
var GenericOrd = function (genericCompare$prime) {
    this["genericCompare'"] = genericCompare$prime;
};
var genericOrdNoConstructors = new GenericOrd(function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
var genericOrdNoArguments = new GenericOrd(function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
var genericOrdArgument = function (dictOrd) {
    return new GenericOrd(function (v) {
        return function (v1) {
            return Data_Ord.compare(dictOrd)(v)(v1);
        };
    });
};
var genericCompare$prime = function (dict) {
    return dict["genericCompare'"];
};
var genericOrdConstructor = function (dictGenericOrd) {
    return new GenericOrd(function (v) {
        return function (v1) {
            return genericCompare$prime(dictGenericOrd)(v)(v1);
        };
    });
};
var genericOrdProduct = function (dictGenericOrd) {
    return function (dictGenericOrd1) {
        return new GenericOrd(function (v) {
            return function (v1) {
                var v2 = genericCompare$prime(dictGenericOrd)(v.value0)(v1.value0);
                if (v2 instanceof Data_Ordering.EQ) {
                    return genericCompare$prime(dictGenericOrd1)(v.value1)(v1.value1);
                };
                return v2;
            };
        });
    };
};
var genericOrdSum = function (dictGenericOrd) {
    return function (dictGenericOrd1) {
        return new GenericOrd(function (v) {
            return function (v1) {
                if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inl) {
                    return genericCompare$prime(dictGenericOrd)(v.value0)(v1.value0);
                };
                if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inr) {
                    return genericCompare$prime(dictGenericOrd1)(v.value0)(v1.value0);
                };
                if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inr) {
                    return Data_Ordering.LT.value;
                };
                if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inl) {
                    return Data_Ordering.GT.value;
                };
                throw new Error("Failed pattern match at Data.Generic.Rep.Ord (line 19, column 1 - line 19, column 79): " + [ v.constructor.name, v1.constructor.name ]);
            };
        });
    };
};
var genericCompare = function (dictGeneric) {
    return function (dictGenericOrd) {
        return function (x) {
            return function (y) {
                return genericCompare$prime(dictGenericOrd)(Data_Generic_Rep.from(dictGeneric)(x))(Data_Generic_Rep.from(dictGeneric)(y));
            };
        };
    };
};
module.exports = {
    GenericOrd: GenericOrd,
    "genericCompare'": genericCompare$prime,
    genericCompare: genericCompare,
    genericOrdNoConstructors: genericOrdNoConstructors,
    genericOrdNoArguments: genericOrdNoArguments,
    genericOrdSum: genericOrdSum,
    genericOrdProduct: genericOrdProduct,
    genericOrdConstructor: genericOrdConstructor,
    genericOrdArgument: genericOrdArgument
};

},{"../Data.Generic.Rep/index.js":160,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Prelude/index.js":385}],159:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Prelude = require("../Prelude/index.js");
var GenericShow = function (genericShow$prime) {
    this["genericShow'"] = genericShow$prime;
};
var GenericShowArgs = function (genericShowArgs) {
    this.genericShowArgs = genericShowArgs;
};
var genericShowArgsNoArguments = new GenericShowArgs(function (v) {
    return [  ];
});
var genericShowArgsArgument = function (dictShow) {
    return new GenericShowArgs(function (v) {
        return [ Data_Show.show(dictShow)(v) ];
    });
};
var genericShowArgs = function (dict) {
    return dict.genericShowArgs;
};
var genericShowArgsProduct = function (dictGenericShowArgs) {
    return function (dictGenericShowArgs1) {
        return new GenericShowArgs(function (v) {
            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(genericShowArgs(dictGenericShowArgs)(v.value0))(genericShowArgs(dictGenericShowArgs1)(v.value1));
        });
    };
};
var genericShowConstructor = function (dictGenericShowArgs) {
    return function (dictIsSymbol) {
        return new GenericShow(function (v) {
            var ctor = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
            var v1 = genericShowArgs(dictGenericShowArgs)(v);
            if (v1.length === 0) {
                return ctor;
            };
            return "(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ ctor ])(v1)) + ")");
        });
    };
};
var genericShow$prime = function (dict) {
    return dict["genericShow'"];
};
var genericShowNoConstructors = new GenericShow(function (a) {
    return genericShow$prime(genericShowNoConstructors)(a);
});
var genericShowSum = function (dictGenericShow) {
    return function (dictGenericShow1) {
        return new GenericShow(function (v) {
            if (v instanceof Data_Generic_Rep.Inl) {
                return genericShow$prime(dictGenericShow)(v.value0);
            };
            if (v instanceof Data_Generic_Rep.Inr) {
                return genericShow$prime(dictGenericShow1)(v.value0);
            };
            throw new Error("Failed pattern match at Data.Generic.Rep.Show (line 26, column 1 - line 26, column 83): " + [ v.constructor.name ]);
        });
    };
};
var genericShow = function (dictGeneric) {
    return function (dictGenericShow) {
        return function (x) {
            return genericShow$prime(dictGenericShow)(Data_Generic_Rep.from(dictGeneric)(x));
        };
    };
};
module.exports = {
    GenericShow: GenericShow,
    "genericShow'": genericShow$prime,
    genericShow: genericShow,
    GenericShowArgs: GenericShowArgs,
    genericShowArgs: genericShowArgs,
    genericShowNoConstructors: genericShowNoConstructors,
    genericShowArgsNoArguments: genericShowArgsNoArguments,
    genericShowSum: genericShowSum,
    genericShowArgsProduct: genericShowArgsProduct,
    genericShowConstructor: genericShowConstructor,
    genericShowArgsArgument: genericShowArgsArgument
};

},{"../Data.Foldable/index.js":141,"../Data.Generic.Rep/index.js":160,"../Data.Monoid/index.js":218,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Data.Symbol/index.js":274,"../Prelude/index.js":385}],160:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Maybe = require("../Data.Maybe/index.js");
var Inl = (function () {
    function Inl(value0) {
        this.value0 = value0;
    };
    Inl.create = function (value0) {
        return new Inl(value0);
    };
    return Inl;
})();
var Inr = (function () {
    function Inr(value0) {
        this.value0 = value0;
    };
    Inr.create = function (value0) {
        return new Inr(value0);
    };
    return Inr;
})();
var Product = (function () {
    function Product(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Product.create = function (value0) {
        return function (value1) {
            return new Product(value0, value1);
        };
    };
    return Product;
})();
var NoArguments = (function () {
    function NoArguments() {

    };
    NoArguments.value = new NoArguments();
    return NoArguments;
})();
var Constructor = function (x) {
    return x;
};
var Argument = function (x) {
    return x;
};
var Generic = function (from, to) {
    this.from = from;
    this.to = to;
};
var to = function (dict) {
    return dict.to;
};
var genericMaybe = new Generic(function (v) {
    if (v instanceof Data_Maybe.Nothing) {
        return new Inl(NoArguments.value);
    };
    if (v instanceof Data_Maybe.Just) {
        return new Inr(v.value0);
    };
    throw new Error("Failed pattern match at Data.Generic.Rep (line 40, column 1 - line 42, column 63): " + [ v.constructor.name ]);
}, function (v) {
    if (v instanceof Inl) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Inr) {
        return new Data_Maybe.Just(v.value0);
    };
    throw new Error("Failed pattern match at Data.Generic.Rep (line 40, column 1 - line 42, column 63): " + [ v.constructor.name ]);
});
var from = function (dict) {
    return dict.from;
};
module.exports = {
    Generic: Generic,
    to: to,
    from: from,
    NoArguments: NoArguments,
    Inl: Inl,
    Inr: Inr,
    Product: Product,
    Constructor: Constructor,
    Argument: Argument,
    genericMaybe: genericMaybe
};

},{"../Data.Maybe/index.js":210}],161:[function(require,module,exports){
"use strict";

exports.boolConj = function (b1) {
  return function (b2) {
    return b1 && b2;
  };
};

exports.boolDisj = function (b1) {
  return function (b2) {
    return b1 || b2;
  };
};

exports.boolNot = function (b) {
  return !b;
};

},{}],162:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Data_Row = require("../Type.Data.Row/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
    this.conj = conj;
    this.disj = disj;
    this.ff = ff;
    this.implies = implies;
    this.not = not;
    this.tt = tt;
};
var HeytingAlgebraRecord = function (conjRecord, disjRecord, ffRecord, impliesRecord, notRecord, ttRecord) {
    this.conjRecord = conjRecord;
    this.disjRecord = disjRecord;
    this.ffRecord = ffRecord;
    this.impliesRecord = impliesRecord;
    this.notRecord = notRecord;
    this.ttRecord = ttRecord;
};
var ttRecord = function (dict) {
    return dict.ttRecord;
};
var tt = function (dict) {
    return dict.tt;
};
var notRecord = function (dict) {
    return dict.notRecord;
};
var not = function (dict) {
    return dict.not;
};
var impliesRecord = function (dict) {
    return dict.impliesRecord;
};
var implies = function (dict) {
    return dict.implies;
};
var heytingAlgebraUnit = new HeytingAlgebra(function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, Data_Unit.unit, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, function (v) {
    return Data_Unit.unit;
}, Data_Unit.unit);
var heytingAlgebraRecordNil = new HeytingAlgebraRecord(function (v) {
    return function (v1) {
        return function (v2) {
            return {};
        };
    };
}, function (v) {
    return function (v1) {
        return function (v2) {
            return {};
        };
    };
}, function (v) {
    return function (v1) {
        return {};
    };
}, function (v) {
    return function (v1) {
        return function (v2) {
            return {};
        };
    };
}, function (v) {
    return function (v1) {
        return {};
    };
}, function (v) {
    return function (v1) {
        return {};
    };
});
var ffRecord = function (dict) {
    return dict.ffRecord;
};
var ff = function (dict) {
    return dict.ff;
};
var disjRecord = function (dict) {
    return dict.disjRecord;
};
var disj = function (dict) {
    return dict.disj;
};
var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
    return function (b) {
        return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
    };
}, $foreign.boolNot, true);
var conjRecord = function (dict) {
    return dict.conjRecord;
};
var heytingAlgebraRecord = function (dictRowToList) {
    return function (dictHeytingAlgebraRecord) {
        return new HeytingAlgebra(conjRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value), disjRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value), ffRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value), impliesRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value), notRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value), ttRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value));
    };
};
var conj = function (dict) {
    return dict.conj;
};
var heytingAlgebraFunction = function (dictHeytingAlgebra) {
    return new HeytingAlgebra(function (f) {
        return function (g) {
            return function (a) {
                return conj(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function (f) {
        return function (g) {
            return function (a) {
                return disj(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function (v) {
        return ff(dictHeytingAlgebra);
    }, function (f) {
        return function (g) {
            return function (a) {
                return implies(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function (f) {
        return function (a) {
            return not(dictHeytingAlgebra)(f(a));
        };
    }, function (v) {
        return tt(dictHeytingAlgebra);
    });
};
var heytingAlgebraRecordCons = function (dictIsSymbol) {
    return function (dictCons) {
        return function (dictHeytingAlgebraRecord) {
            return function (dictHeytingAlgebra) {
                return new HeytingAlgebraRecord(function (v) {
                    return function (ra) {
                        return function (rb) {
                            var tail = conjRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            var get = Record_Unsafe.unsafeGet(key);
                            return insert(conj(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);
                        };
                    };
                }, function (v) {
                    return function (ra) {
                        return function (rb) {
                            var tail = disjRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            var get = Record_Unsafe.unsafeGet(key);
                            return insert(disj(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);
                        };
                    };
                }, function (v) {
                    return function (row) {
                        var tail = ffRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(row);
                        var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                        var insert = Record_Unsafe.unsafeSet(key);
                        return insert(ff(dictHeytingAlgebra))(tail);
                    };
                }, function (v) {
                    return function (ra) {
                        return function (rb) {
                            var tail = impliesRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            var get = Record_Unsafe.unsafeGet(key);
                            return insert(implies(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);
                        };
                    };
                }, function (v) {
                    return function (row) {
                        var tail = notRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(row);
                        var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                        var insert = Record_Unsafe.unsafeSet(key);
                        var get = Record_Unsafe.unsafeGet(key);
                        return insert(not(dictHeytingAlgebra)(get(row)))(tail);
                    };
                }, function (v) {
                    return function (row) {
                        var tail = ttRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(row);
                        var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                        var insert = Record_Unsafe.unsafeSet(key);
                        return insert(tt(dictHeytingAlgebra))(tail);
                    };
                });
            };
        };
    };
};
module.exports = {
    HeytingAlgebra: HeytingAlgebra,
    tt: tt,
    ff: ff,
    implies: implies,
    conj: conj,
    disj: disj,
    not: not,
    HeytingAlgebraRecord: HeytingAlgebraRecord,
    ffRecord: ffRecord,
    ttRecord: ttRecord,
    impliesRecord: impliesRecord,
    conjRecord: conjRecord,
    disjRecord: disjRecord,
    notRecord: notRecord,
    heytingAlgebraBoolean: heytingAlgebraBoolean,
    heytingAlgebraUnit: heytingAlgebraUnit,
    heytingAlgebraFunction: heytingAlgebraFunction,
    heytingAlgebraRecord: heytingAlgebraRecord,
    heytingAlgebraRecordNil: heytingAlgebraRecordNil,
    heytingAlgebraRecordCons: heytingAlgebraRecordCons
};

},{"../Data.Symbol/index.js":274,"../Data.Unit/index.js":289,"../Record.Unsafe/index.js":390,"../Type.Data.Row/index.js":417,"../Type.Data.RowList/index.js":418,"./foreign.js":161}],163:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Prelude = require("../Prelude/index.js");
var Identity = function (x) {
    return x;
};
var showIdentity = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Identity " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringIdentity = function (dictSemiring) {
    return dictSemiring;
};
var semigroupIdenity = function (dictSemigroup) {
    return dictSemigroup;
};
var ringIdentity = function (dictRing) {
    return dictRing;
};
var ordIdentity = function (dictOrd) {
    return dictOrd;
};
var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
    return n;
}, Identity);
var monoidIdentity = function (dictMonoid) {
    return dictMonoid;
};
var lazyIdentity = function (dictLazy) {
    return dictLazy;
};
var heytingAlgebraIdentity = function (dictHeytingAlgebra) {
    return dictHeytingAlgebra;
};
var functorIdentity = new Data_Functor.Functor(function (f) {
    return function (m) {
        return f(m);
    };
});
var functorWithIndexIdentity = new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorIdentity;
}, function (f) {
    return function (v) {
        return f(Data_Unit.unit)(v);
    };
});
var invariantIdentity = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorIdentity));
var foldableIdentity = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableWithIndexIdentity = new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableIdentity;
}, function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(Data_Unit.unit)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(Data_Unit.unit)(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(Data_Unit.unit)(v)(z);
        };
    };
});
var traversableIdentity = new Data_Traversable.Traversable(function () {
    return foldableIdentity;
}, function () {
    return functorIdentity;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Identity)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Identity)(f(v));
        };
    };
});
var traversableWithIndexIdentity = new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexIdentity;
}, function () {
    return functorWithIndexIdentity;
}, function () {
    return traversableIdentity;
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Identity)(f(Data_Unit.unit)(v));
        };
    };
});
var foldable1Identity = new Data_Semigroup_Foldable.Foldable1(function () {
    return foldableIdentity;
}, function (dictSemigroup) {
    return function (v) {
        return v;
    };
}, function (dictSemigroup) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
});
var traversable1Identity = new Data_Semigroup_Traversable.Traversable1(function () {
    return foldable1Identity;
}, function () {
    return traversableIdentity;
}, function (dictApply) {
    return function (v) {
        return Data_Functor.map(dictApply.Functor0())(Identity)(v);
    };
}, function (dictApply) {
    return function (f) {
        return function (v) {
            return Data_Functor.map(dictApply.Functor0())(Identity)(f(v));
        };
    };
});
var extendIdentity = new Control_Extend.Extend(function () {
    return functorIdentity;
}, function (f) {
    return function (m) {
        return f(m);
    };
});
var euclideanRingIdentity = function (dictEuclideanRing) {
    return dictEuclideanRing;
};
var eqIdentity = function (dictEq) {
    return dictEq;
};
var eq1Identity = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqIdentity(dictEq));
});
var ord1Identity = new Data_Ord.Ord1(function () {
    return eq1Identity;
}, function (dictOrd) {
    return Data_Ord.compare(ordIdentity(dictOrd));
});
var comonadIdentity = new Control_Comonad.Comonad(function () {
    return extendIdentity;
}, function (v) {
    return v;
});
var commutativeRingIdentity = function (dictCommutativeRing) {
    return dictCommutativeRing;
};
var boundedIdentity = function (dictBounded) {
    return dictBounded;
};
var booleanAlgebraIdentity = function (dictBooleanAlgebra) {
    return dictBooleanAlgebra;
};
var applyIdentity = new Control_Apply.Apply(function () {
    return functorIdentity;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindIdentity = new Control_Bind.Bind(function () {
    return applyIdentity;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeIdentity = new Control_Applicative.Applicative(function () {
    return applyIdentity;
}, Identity);
var monadIdentity = new Control_Monad.Monad(function () {
    return applicativeIdentity;
}, function () {
    return bindIdentity;
});
var altIdentity = new Control_Alt.Alt(function () {
    return functorIdentity;
}, function (x) {
    return function (v) {
        return x;
    };
});
module.exports = {
    Identity: Identity,
    newtypeIdentity: newtypeIdentity,
    eqIdentity: eqIdentity,
    ordIdentity: ordIdentity,
    boundedIdentity: boundedIdentity,
    heytingAlgebraIdentity: heytingAlgebraIdentity,
    booleanAlgebraIdentity: booleanAlgebraIdentity,
    semigroupIdenity: semigroupIdenity,
    monoidIdentity: monoidIdentity,
    semiringIdentity: semiringIdentity,
    euclideanRingIdentity: euclideanRingIdentity,
    ringIdentity: ringIdentity,
    commutativeRingIdentity: commutativeRingIdentity,
    lazyIdentity: lazyIdentity,
    showIdentity: showIdentity,
    eq1Identity: eq1Identity,
    ord1Identity: ord1Identity,
    functorIdentity: functorIdentity,
    functorWithIndexIdentity: functorWithIndexIdentity,
    invariantIdentity: invariantIdentity,
    altIdentity: altIdentity,
    applyIdentity: applyIdentity,
    applicativeIdentity: applicativeIdentity,
    bindIdentity: bindIdentity,
    monadIdentity: monadIdentity,
    extendIdentity: extendIdentity,
    comonadIdentity: comonadIdentity,
    foldableIdentity: foldableIdentity,
    foldable1Identity: foldable1Identity,
    foldableWithIndexIdentity: foldableWithIndexIdentity,
    traversableIdentity: traversableIdentity,
    traversable1Identity: traversable1Identity,
    traversableWithIndexIdentity: traversableWithIndexIdentity
};

},{"../Control.Alt/index.js":4,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Comonad/index.js":21,"../Control.Extend/index.js":24,"../Control.Lazy/index.js":25,"../Control.Monad/index.js":55,"../Data.BooleanAlgebra/index.js":111,"../Data.Bounded/index.js":113,"../Data.CommutativeRing/index.js":118,"../Data.Eq/index.js":135,"../Data.EuclideanRing/index.js":137,"../Data.Foldable/index.js":141,"../Data.FoldableWithIndex/index.js":142,"../Data.Functor.Invariant/index.js":151,"../Data.Functor/index.js":153,"../Data.FunctorWithIndex/index.js":155,"../Data.HeytingAlgebra/index.js":162,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Ring/index.js":242,"../Data.Semigroup.Foldable/index.js":244,"../Data.Semigroup.Traversable/index.js":246,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.Traversable/index.js":281,"../Data.TraversableWithIndex/index.js":282,"../Data.Unit/index.js":289,"../Prelude/index.js":385}],164:[function(require,module,exports){
"use strict";

// module Data.Int.Bits

exports.and = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 & n2;
  };
};

exports.or = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 | n2;
  };
};

exports.xor = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 ^ n2;
  };
};

exports.shl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 << n2;
  };
};

exports.shr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >> n2;
  };
};

exports.zshr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >>> n2;
  };
};

exports.complement = function (n) {
  /* jshint bitwise: false */
  return ~n;
};

},{}],165:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
module.exports = {
    and: $foreign.and,
    or: $foreign.or,
    xor: $foreign.xor,
    shl: $foreign.shl,
    shr: $foreign.shr,
    zshr: $foreign.zshr,
    complement: $foreign.complement
};

},{"./foreign.js":164}],166:[function(require,module,exports){
"use strict";

exports.fromNumberImpl = function (just) {
  return function (nothing) {
    return function (n) {
      /* jshint bitwise: false */
      return (n | 0) === n ? just(n) : nothing;
    };
  };
};

exports.toNumber = function (n) {
  return n;
};

exports.fromStringAsImpl = function (just) {
  return function (nothing) {
    return function (radix) {
      var digits;
      if (radix < 11) {
        digits = "[0-" + (radix - 1).toString() + "]";
      } else if (radix === 11) {
        digits = "[0-9a]";
      } else {
        digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
      }
      var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

      return function (s) {
        /* jshint bitwise: false */
        if (pattern.test(s)) {
          var i = parseInt(s, radix);
          return (i | 0) === i ? just(i) : nothing;
        } else {
          return nothing;
        }
      };
    };
  };
};

exports.toStringAs = function (radix) {
  return function (i) {
    return i.toString(radix);
  };
};


exports.quot = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x / y | 0;
  };
};

exports.rem = function (x) {
  return function (y) {
    return x % y;
  };
};

exports.pow = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return Math.pow(x,y) | 0;
  };
};

},{}],167:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");
var Data_DivisionRing = require("../Data.DivisionRing/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Int_Bits = require("../Data.Int.Bits/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Global = require("../Global/index.js");
var $$Math = require("../Math/index.js");
var Prelude = require("../Prelude/index.js");
var Radix = function (x) {
    return x;
};
var Even = (function () {
    function Even() {

    };
    Even.value = new Even();
    return Even;
})();
var Odd = (function () {
    function Odd() {

    };
    Odd.value = new Odd();
    return Odd;
})();
var showParity = new Data_Show.Show(function (v) {
    if (v instanceof Even) {
        return "Even";
    };
    if (v instanceof Odd) {
        return "Odd";
    };
    throw new Error("Failed pattern match at Data.Int (line 112, column 1 - line 112, column 35): " + [ v.constructor.name ]);
});
var radix = function (n) {
    if (n >= 2 && n <= 36) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Int (line 193, column 1 - line 193, column 28): " + [ n.constructor.name ]);
};
var odd = function (x) {
    return (x & 1) !== 0;
};
var octal = 8;
var hexadecimal = 16;
var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var fromString = fromStringAs(10);
var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unsafeClamp = function (x) {
    if (x === Global.infinity) {
        return 0;
    };
    if (x === -Global.infinity) {
        return 0;
    };
    if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
        return Data_Bounded.top(Data_Bounded.boundedInt);
    };
    if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
        return Data_Bounded.bottom(Data_Bounded.boundedInt);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.fromMaybe(0)(fromNumber(x));
    };
    throw new Error("Failed pattern match at Data.Int (line 66, column 1 - line 66, column 29): " + [ x.constructor.name ]);
};
var round = function ($23) {
    return unsafeClamp($$Math.round($23));
};
var floor = function ($24) {
    return unsafeClamp($$Math.floor($24));
};
var even = function (x) {
    return (x & 1) === 0;
};
var parity = function (n) {
    var $14 = even(n);
    if ($14) {
        return Even.value;
    };
    return Odd.value;
};
var eqParity = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Even && y instanceof Even) {
            return true;
        };
        if (x instanceof Odd && y instanceof Odd) {
            return true;
        };
        return false;
    };
});
var ordParity = new Data_Ord.Ord(function () {
    return eqParity;
}, function (x) {
    return function (y) {
        if (x instanceof Even && y instanceof Even) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Even) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Even) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Odd && y instanceof Odd) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Data.Int (line 110, column 8 - line 110, column 40): " + [ x.constructor.name, y.constructor.name ]);
    };
});
var semiringParity = new Data_Semiring.Semiring(function (x) {
    return function (y) {
        var $19 = Data_Eq.eq(eqParity)(x)(y);
        if ($19) {
            return Even.value;
        };
        return Odd.value;
    };
}, function (v) {
    return function (v1) {
        if (v instanceof Odd && v1 instanceof Odd) {
            return Odd.value;
        };
        return Even.value;
    };
}, Odd.value, Even.value);
var ringParity = new Data_Ring.Ring(function () {
    return semiringParity;
}, Data_Semiring.add(semiringParity));
var divisionRingParity = new Data_DivisionRing.DivisionRing(function () {
    return ringParity;
}, Control_Category.identity(Control_Category.categoryFn));
var decimal = 10;
var commutativeRingParity = new Data_CommutativeRing.CommutativeRing(function () {
    return ringParity;
});
var euclideanRingParity = new Data_EuclideanRing.EuclideanRing(function () {
    return commutativeRingParity;
}, function (v) {
    if (v instanceof Even) {
        return 0;
    };
    if (v instanceof Odd) {
        return 1;
    };
    throw new Error("Failed pattern match at Data.Int (line 132, column 1 - line 132, column 53): " + [ v.constructor.name ]);
}, function (x) {
    return function (v) {
        return x;
    };
}, function (v) {
    return function (v1) {
        return Even.value;
    };
});
var ceil = function ($25) {
    return unsafeClamp($$Math.ceil($25));
};
var boundedParity = new Data_Bounded.Bounded(function () {
    return ordParity;
}, Even.value, Odd.value);
var binary = 2;
var base36 = 36;
module.exports = {
    fromNumber: fromNumber,
    ceil: ceil,
    floor: floor,
    round: round,
    fromString: fromString,
    radix: radix,
    binary: binary,
    octal: octal,
    decimal: decimal,
    hexadecimal: hexadecimal,
    base36: base36,
    fromStringAs: fromStringAs,
    Even: Even,
    Odd: Odd,
    parity: parity,
    even: even,
    odd: odd,
    eqParity: eqParity,
    ordParity: ordParity,
    showParity: showParity,
    boundedParity: boundedParity,
    semiringParity: semiringParity,
    ringParity: ringParity,
    commutativeRingParity: commutativeRingParity,
    euclideanRingParity: euclideanRingParity,
    divisionRingParity: divisionRingParity,
    toNumber: $foreign.toNumber,
    toStringAs: $foreign.toStringAs,
    quot: $foreign.quot,
    rem: $foreign.rem,
    pow: $foreign.pow
};

},{"../Control.Category/index.js":14,"../Control.Semigroupoid/index.js":61,"../Data.Boolean/index.js":110,"../Data.Bounded/index.js":113,"../Data.CommutativeRing/index.js":118,"../Data.DivisionRing/index.js":129,"../Data.Eq/index.js":135,"../Data.EuclideanRing/index.js":137,"../Data.HeytingAlgebra/index.js":162,"../Data.Int.Bits/index.js":165,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Ring/index.js":242,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Global/index.js":324,"../Math/index.js":364,"../Prelude/index.js":385,"./foreign.js":166}],168:[function(require,module,exports){
/* global exports */
"use strict";

var createDate = function (y, m, d, h, mi, s, ms) {
  var date = new Date(Date.UTC(y, m, d, h, mi, s, ms));
  if (y >= 0 && y < 100) {
    date.setUTCFullYear(y);
  }
  return date;
};

var createLocalDate = function (y, m, d, h, mi, s, ms) {
  var date = new Date(y, m, d, h, mi, s, ms);
  if (y >= 0 && y < 100) {
    date.setFullYear(y);
  }
  return date;
};

exports.now = function () {
  return new Date();
};

exports.isValid = function (date) {
  return !isNaN(date.getTime());
};

exports.toInstantImpl = function (just) {
  return function (nothing) {
    return function (date) {
      var t = date.getTime();
      return isNaN(t) ? nothing : just(t);
    };
  };
};

exports.fromInstant = function (instant) {
  return new Date(instant);
};

exports.jsdate = function (parts) {
  return createDate(parts.year, parts.month, parts.day, parts.hour, parts.minute, parts.second, parts.millisecond);
};

exports.jsdateLocal = function (parts) {
  return function () {
    return createLocalDate(parts.year, parts.month, parts.day, parts.hour, parts.minute, parts.second, parts.millisecond);
  };
};

exports.dateMethod = function (method, date) {
  return date[method]();
};

exports.dateMethodEff = function (method, date) {
  return function () {
    return date[method]();
  };
};

exports.parse = function (dateString) {
  return function () {
    return new Date(dateString);
  };
};

exports.fromTime = function (time) {
  return new Date(time);
};

},{}],169:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Date = require("../Data.Date/index.js");
var Data_Date_Component = require("../Data.Date.Component/index.js");
var Data_DateTime = require("../Data.DateTime/index.js");
var Data_DateTime_Instant = require("../Data.DateTime.Instant/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Time = require("../Data.Time/index.js");
var Data_Time_Component = require("../Data.Time.Component/index.js");
var Data_Time_Duration = require("../Data.Time.Duration/index.js");
var Effect = require("../Effect/index.js");
var Foreign = require("../Foreign/index.js");
var Prelude = require("../Prelude/index.js");
var toUTCString = function (dt) {
    return $foreign.dateMethod("toUTCString", dt);
};
var toTimeString = function (dt) {
    return $foreign.dateMethod("toTimeString", dt);
};
var toString = function (dt) {
    return $foreign.dateMethod("toString", dt);
};
var toInstant = Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(function ($4) {
    return Data_DateTime_Instant.instant(Data_Time_Duration.Milliseconds($4));
})($foreign.toInstantImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value));
var toISOString = function (dt) {
    return $foreign.dateMethodEff("toISOString", dt);
};
var toDateTime = Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime_Instant.toDateTime))(toInstant);
var toDateString = function (dt) {
    return $foreign.dateMethod("toDateString", dt);
};
var toDate = Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime.date))(toDateTime);
var readDate = Foreign.unsafeReadTagged("Date");
var getUTCSeconds = function (dt) {
    return $foreign.dateMethod("getUTCSeconds", dt);
};
var getUTCMonth = function (dt) {
    return $foreign.dateMethod("getUTCMonth", dt);
};
var getUTCMinutes = function (dt) {
    return $foreign.dateMethod("getUTCMinutes", dt);
};
var getUTCMilliseconds = function (dt) {
    return $foreign.dateMethod("getUTCMilliseconds", dt);
};
var getUTCHours = function (dt) {
    return $foreign.dateMethod("getUTCHours", dt);
};
var getUTCFullYear = function (dt) {
    return $foreign.dateMethod("getUTCFullYear", dt);
};
var getUTCDay = function (dt) {
    return $foreign.dateMethod("getUTCDay", dt);
};
var getUTCDate = function (dt) {
    return $foreign.dateMethod("getUTCDate", dt);
};
var getTimezoneOffset = function (dt) {
    return $foreign.dateMethodEff("getTimezoneOffset", dt);
};
var getTime = function (dt) {
    return $foreign.dateMethod("getTime", dt);
};
var showJSDate = new Data_Show.Show(function (a) {
    return "(fromTime " + (Data_Show.show(Data_Show.showNumber)(getTime(a)) + ")");
});
var getSeconds = function (dt) {
    return $foreign.dateMethodEff("getSeconds", dt);
};
var getMonth = function (dt) {
    return $foreign.dateMethodEff("getMonth", dt);
};
var getMinutes = function (dt) {
    return $foreign.dateMethodEff("getMinutes", dt);
};
var getMilliseconds = function (dt) {
    return $foreign.dateMethodEff("getMilliseconds", dt);
};
var getHours = function (dt) {
    return $foreign.dateMethodEff("getHours", dt);
};
var getFullYear = function (dt) {
    return $foreign.dateMethodEff("getFullYear", dt);
};
var getDay = function (dt) {
    return $foreign.dateMethodEff("getDay", dt);
};
var getDate = function (dt) {
    return $foreign.dateMethodEff("getDate", dt);
};
var fromDateTime = function (v) {
    return $foreign.jsdate({
        year: Data_Int.toNumber(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0))),
        month: Data_Int.toNumber(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)) - 1 | 0),
        day: Data_Int.toNumber(Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v.value0))),
        hour: Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1))),
        minute: Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v.value1))),
        second: Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v.value1))),
        millisecond: Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1)))
    });
};
var eqJSDate = new Data_Eq.Eq(function (a) {
    return function (b) {
        return getTime(a) === getTime(b);
    };
});
var ordJSDate = new Data_Ord.Ord(function () {
    return eqJSDate;
}, function (a) {
    return function (b) {
        return Data_Ord.compare(Data_Ord.ordNumber)(getTime(a))(getTime(b));
    };
});
module.exports = {
    readDate: readDate,
    fromDateTime: fromDateTime,
    toDateTime: toDateTime,
    toDate: toDate,
    toInstant: toInstant,
    getTime: getTime,
    getUTCDate: getUTCDate,
    getUTCDay: getUTCDay,
    getUTCFullYear: getUTCFullYear,
    getUTCHours: getUTCHours,
    getUTCMilliseconds: getUTCMilliseconds,
    getUTCMinutes: getUTCMinutes,
    getUTCMonth: getUTCMonth,
    getUTCSeconds: getUTCSeconds,
    getDate: getDate,
    getDay: getDay,
    getFullYear: getFullYear,
    getHours: getHours,
    getMilliseconds: getMilliseconds,
    getMinutes: getMinutes,
    getMonth: getMonth,
    getSeconds: getSeconds,
    getTimezoneOffset: getTimezoneOffset,
    toDateString: toDateString,
    toISOString: toISOString,
    toString: toString,
    toTimeString: toTimeString,
    toUTCString: toUTCString,
    eqJSDate: eqJSDate,
    ordJSDate: ordJSDate,
    showJSDate: showJSDate,
    isValid: $foreign.isValid,
    fromInstant: $foreign.fromInstant,
    jsdate: $foreign.jsdate,
    jsdateLocal: $foreign.jsdateLocal,
    now: $foreign.now,
    parse: $foreign.parse,
    fromTime: $foreign.fromTime
};

},{"../Control.Bind/index.js":13,"../Control.Semigroupoid/index.js":61,"../Data.Date.Component/index.js":121,"../Data.Date/index.js":123,"../Data.DateTime.Instant/index.js":125,"../Data.DateTime/index.js":127,"../Data.Enum/index.js":133,"../Data.Eq/index.js":135,"../Data.Function.Uncurried/index.js":144,"../Data.Functor/index.js":153,"../Data.Int/index.js":167,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Data.Time.Component/index.js":275,"../Data.Time.Duration/index.js":276,"../Data.Time/index.js":277,"../Effect/index.js":312,"../Foreign/index.js":320,"../Prelude/index.js":385,"./foreign.js":168}],170:[function(require,module,exports){
"use strict";

exports.defer = function (thunk) {
  var v = null;
  return function() {
    if (thunk === undefined) return v;

    v = thunk();
    thunk = undefined; // eslint-disable-line no-param-reassign
    return v;
  };
};

exports.force = function (l) {
  return l();
};

},{}],171:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Prelude = require("../Prelude/index.js");
var showLazy = function (dictShow) {
    return new Data_Show.Show(function (x) {
        return "(defer \\_ -> " + (Data_Show.show(dictShow)($foreign.force(x)) + ")");
    });
};
var semiringLazy = function (dictSemiring) {
    return new Data_Semiring.Semiring(function (a) {
        return function (b) {
            return $foreign.defer(function (v) {
                return Data_Semiring.add(dictSemiring)($foreign.force(a))($foreign.force(b));
            });
        };
    }, function (a) {
        return function (b) {
            return $foreign.defer(function (v) {
                return Data_Semiring.mul(dictSemiring)($foreign.force(a))($foreign.force(b));
            });
        };
    }, $foreign.defer(function (v) {
        return Data_Semiring.one(dictSemiring);
    }), $foreign.defer(function (v) {
        return Data_Semiring.zero(dictSemiring);
    }));
};
var semigroupLazy = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (a) {
        return function (b) {
            return $foreign.defer(function (v) {
                return Data_Semigroup.append(dictSemigroup)($foreign.force(a))($foreign.force(b));
            });
        };
    });
};
var ringLazy = function (dictRing) {
    return new Data_Ring.Ring(function () {
        return semiringLazy(dictRing.Semiring0());
    }, function (a) {
        return function (b) {
            return $foreign.defer(function (v) {
                return Data_Ring.sub(dictRing)($foreign.force(a))($foreign.force(b));
            });
        };
    });
};
var monoidLazy = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupLazy(dictMonoid.Semigroup0());
    }, $foreign.defer(function (v) {
        return Data_Monoid.mempty(dictMonoid);
    }));
};
var lazyLazy = new Control_Lazy.Lazy(function (f) {
    return $foreign.defer(function (v) {
        return $foreign.force(f(Data_Unit.unit));
    });
});
var functorLazy = new Data_Functor.Functor(function (f) {
    return function (l) {
        return $foreign.defer(function (v) {
            return f($foreign.force(l));
        });
    };
});
var functorWithIndexLazy = new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorLazy;
}, function (f) {
    return Data_Functor.map(functorLazy)(f(Data_Unit.unit));
});
var invariantLazy = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorLazy));
var foldableLazy = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (l) {
            return f($foreign.force(l));
        };
    };
}, function (f) {
    return function (z) {
        return function (l) {
            return f(z)($foreign.force(l));
        };
    };
}, function (f) {
    return function (z) {
        return function (l) {
            return f($foreign.force(l))(z);
        };
    };
});
var foldableWithIndexLazy = new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableLazy;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(foldableLazy)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(foldableLazy)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(foldableLazy)(f(Data_Unit.unit));
});
var traversableLazy = new Data_Traversable.Traversable(function () {
    return foldableLazy;
}, function () {
    return functorLazy;
}, function (dictApplicative) {
    return function (l) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(function ($42) {
            return $foreign.defer(Data_Function["const"]($42));
        })($foreign.force(l));
    };
}, function (dictApplicative) {
    return function (f) {
        return function (l) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(function ($43) {
                return $foreign.defer(Data_Function["const"]($43));
            })(f($foreign.force(l)));
        };
    };
});
var traversableWithIndexLazy = new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexLazy;
}, function () {
    return functorWithIndexLazy;
}, function () {
    return traversableLazy;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(traversableLazy)(dictApplicative)(f(Data_Unit.unit));
    };
});
var foldable1Lazy = new Data_Semigroup_Foldable.Foldable1(function () {
    return foldableLazy;
}, function (dictSemigroup) {
    return Data_Semigroup_Foldable.fold1Default(foldable1Lazy)(dictSemigroup);
}, function (dictSemigroup) {
    return function (f) {
        return function (l) {
            return f($foreign.force(l));
        };
    };
});
var traversable1Lazy = new Data_Semigroup_Traversable.Traversable1(function () {
    return foldable1Lazy;
}, function () {
    return traversableLazy;
}, function (dictApply) {
    return function (l) {
        return Data_Functor.map(dictApply.Functor0())(function ($44) {
            return $foreign.defer(Data_Function["const"]($44));
        })($foreign.force(l));
    };
}, function (dictApply) {
    return function (f) {
        return function (l) {
            return Data_Functor.map(dictApply.Functor0())(function ($45) {
                return $foreign.defer(Data_Function["const"]($45));
            })(f($foreign.force(l)));
        };
    };
});
var extendLazy = new Control_Extend.Extend(function () {
    return functorLazy;
}, function (f) {
    return function (x) {
        return $foreign.defer(function (v) {
            return f(x);
        });
    };
});
var eqLazy = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            return Data_Eq.eq(dictEq)($foreign.force(x))($foreign.force(y));
        };
    });
};
var ordLazy = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqLazy(dictOrd.Eq0());
    }, function (x) {
        return function (y) {
            return Data_Ord.compare(dictOrd)($foreign.force(x))($foreign.force(y));
        };
    });
};
var eq1Lazy = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqLazy(dictEq));
});
var ord1Lazy = new Data_Ord.Ord1(function () {
    return eq1Lazy;
}, function (dictOrd) {
    return Data_Ord.compare(ordLazy(dictOrd));
});
var comonadLazy = new Control_Comonad.Comonad(function () {
    return extendLazy;
}, $foreign.force);
var commutativeRingLazy = function (dictCommutativeRing) {
    return new Data_CommutativeRing.CommutativeRing(function () {
        return ringLazy(dictCommutativeRing.Ring0());
    });
};
var euclideanRingLazy = function (dictEuclideanRing) {
    return new Data_EuclideanRing.EuclideanRing(function () {
        return commutativeRingLazy(dictEuclideanRing.CommutativeRing0());
    }, function ($46) {
        return Data_EuclideanRing.degree(dictEuclideanRing)($foreign.force($46));
    }, function (a) {
        return function (b) {
            return $foreign.defer(function (v) {
                return Data_EuclideanRing.div(dictEuclideanRing)($foreign.force(a))($foreign.force(b));
            });
        };
    }, function (a) {
        return function (b) {
            return $foreign.defer(function (v) {
                return Data_EuclideanRing.mod(dictEuclideanRing)($foreign.force(a))($foreign.force(b));
            });
        };
    });
};
var boundedLazy = function (dictBounded) {
    return new Data_Bounded.Bounded(function () {
        return ordLazy(dictBounded.Ord0());
    }, $foreign.defer(function (v) {
        return Data_Bounded.bottom(dictBounded);
    }), $foreign.defer(function (v) {
        return Data_Bounded.top(dictBounded);
    }));
};
var applyLazy = new Control_Apply.Apply(function () {
    return functorLazy;
}, function (f) {
    return function (x) {
        return $foreign.defer(function (v) {
            return $foreign.force(f)($foreign.force(x));
        });
    };
});
var bindLazy = new Control_Bind.Bind(function () {
    return applyLazy;
}, function (l) {
    return function (f) {
        return $foreign.defer(function (v) {
            return $foreign.force(f($foreign.force(l)));
        });
    };
});
var heytingAlgebraLazy = function (dictHeytingAlgebra) {
    return new Data_HeytingAlgebra.HeytingAlgebra(function (a) {
        return function (b) {
            return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.conj(dictHeytingAlgebra))(a))(b);
        };
    }, function (a) {
        return function (b) {
            return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.disj(dictHeytingAlgebra))(a))(b);
        };
    }, $foreign.defer(function (v) {
        return Data_HeytingAlgebra.ff(dictHeytingAlgebra);
    }), function (a) {
        return function (b) {
            return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.implies(dictHeytingAlgebra))(a))(b);
        };
    }, function (a) {
        return Data_Functor.map(functorLazy)(Data_HeytingAlgebra.not(dictHeytingAlgebra))(a);
    }, $foreign.defer(function (v) {
        return Data_HeytingAlgebra.tt(dictHeytingAlgebra);
    }));
};
var booleanAlgebraLazy = function (dictBooleanAlgebra) {
    return new Data_BooleanAlgebra.BooleanAlgebra(function () {
        return heytingAlgebraLazy(dictBooleanAlgebra.HeytingAlgebra0());
    });
};
var applicativeLazy = new Control_Applicative.Applicative(function () {
    return applyLazy;
}, function (a) {
    return $foreign.defer(function (v) {
        return a;
    });
});
var monadLazy = new Control_Monad.Monad(function () {
    return applicativeLazy;
}, function () {
    return bindLazy;
});
module.exports = {
    semiringLazy: semiringLazy,
    ringLazy: ringLazy,
    commutativeRingLazy: commutativeRingLazy,
    euclideanRingLazy: euclideanRingLazy,
    eqLazy: eqLazy,
    eq1Lazy: eq1Lazy,
    ordLazy: ordLazy,
    ord1Lazy: ord1Lazy,
    boundedLazy: boundedLazy,
    semigroupLazy: semigroupLazy,
    monoidLazy: monoidLazy,
    heytingAlgebraLazy: heytingAlgebraLazy,
    booleanAlgebraLazy: booleanAlgebraLazy,
    functorLazy: functorLazy,
    functorWithIndexLazy: functorWithIndexLazy,
    foldableLazy: foldableLazy,
    foldableWithIndexLazy: foldableWithIndexLazy,
    foldable1Lazy: foldable1Lazy,
    traversableLazy: traversableLazy,
    traversableWithIndexLazy: traversableWithIndexLazy,
    traversable1Lazy: traversable1Lazy,
    invariantLazy: invariantLazy,
    applyLazy: applyLazy,
    applicativeLazy: applicativeLazy,
    bindLazy: bindLazy,
    monadLazy: monadLazy,
    extendLazy: extendLazy,
    comonadLazy: comonadLazy,
    showLazy: showLazy,
    lazyLazy: lazyLazy,
    defer: $foreign.defer,
    force: $foreign.force
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Comonad/index.js":21,"../Control.Extend/index.js":24,"../Control.Lazy/index.js":25,"../Control.Monad/index.js":55,"../Control.Semigroupoid/index.js":61,"../Data.BooleanAlgebra/index.js":111,"../Data.Bounded/index.js":113,"../Data.CommutativeRing/index.js":118,"../Data.Eq/index.js":135,"../Data.EuclideanRing/index.js":137,"../Data.Foldable/index.js":141,"../Data.FoldableWithIndex/index.js":142,"../Data.Function/index.js":145,"../Data.Functor.Invariant/index.js":151,"../Data.Functor/index.js":153,"../Data.FunctorWithIndex/index.js":155,"../Data.HeytingAlgebra/index.js":162,"../Data.Monoid/index.js":218,"../Data.Ord/index.js":229,"../Data.Ring/index.js":242,"../Data.Semigroup.Foldable/index.js":244,"../Data.Semigroup.Traversable/index.js":246,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.Traversable/index.js":281,"../Data.TraversableWithIndex/index.js":282,"../Data.Unit/index.js":289,"../Prelude/index.js":385,"./foreign.js":170}],172:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Lens_Lens_Tuple = require("../Data.Lens.Lens.Tuple/index.js");
var Data_Lens_Lens_Unit = require("../Data.Lens.Lens.Unit/index.js");
var Data_Lens_Prism_Either = require("../Data.Lens.Prism.Either/index.js");
var Data_Lens_Prism_Maybe = require("../Data.Lens.Prism.Maybe/index.js");
module.exports = {};

},{"../Data.Lens.Lens.Tuple/index.js":189,"../Data.Lens.Lens.Unit/index.js":190,"../Data.Lens.Prism.Either/index.js":193,"../Data.Lens.Prism.Maybe/index.js":194}],173:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Lens_Internal_Forget = require("../Data.Lens.Internal.Forget/index.js");
var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed/index.js");
var Data_Lens_Types = require("../Data.Lens.Types/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Maybe_First = require("../Data.Maybe.First/index.js");
var Data_Maybe_Last = require("../Data.Maybe.Last/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");
var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");
var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");
var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");
var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Prelude = require("../Prelude/index.js");
var unfolded = function (dictMonoid) {
    return function (f) {
        return function (p) {
            var go = function ($43) {
                return Data_Maybe.maybe(Data_Monoid.mempty(dictMonoid))(function (v) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(p)(v.value0))(go(v.value1));
                })(f($43));
            };
            return go;
        };
    };
};
var replicated = function (dictMonoid) {
    return function (i) {
        return function (v) {
            var go = function (v1) {
                return function (x) {
                    if (v1 === 0) {
                        return Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid));
                    };
                    return Data_Semigroup.append(Data_Semigroup.semigroupFn(dictMonoid.Semigroup0()))(x)(go(v1 - 1 | 0)(x));
                };
            };
            return go(i)(v);
        };
    };
};
var ifoldMapOf = function (p) {
    return function (f) {
        return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(p(Data_Lens_Internal_Indexed.Indexed(Data_Tuple.uncurry(f))));
    };
};
var ifoldlOf = function (p) {
    return function (f) {
        return function (r) {
            return function ($44) {
                return Data_Function.flip(Data_Newtype.unwrap(Data_Newtype.newtypeEndo))(r)(Data_Newtype.unwrap(Data_Newtype.newtypeDual)(ifoldMapOf(p)(function (i) {
                    return function ($45) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(f(i))($45)));
                    };
                })($44)));
            };
        };
    };
};
var ifoldrOf = function (p) {
    return function (f) {
        return function (r) {
            return function ($46) {
                return Data_Function.flip(Data_Newtype.unwrap(Data_Newtype.newtypeEndo))(r)(ifoldMapOf(p)(function (i) {
                    return function ($47) {
                        return Data_Monoid_Endo.Endo(f(i)($47));
                    };
                })($46));
            };
        };
    };
};
var itoListOf = function (p) {
    return ifoldrOf(p)(function (i) {
        return function (x) {
            return function (xs) {
                return new Data_List_Types.Cons(new Data_Tuple.Tuple(i, x), xs);
            };
        };
    })(Data_List_Types.Nil.value);
};
var itraverseOf_ = function (dictApplicative) {
    return function (p) {
        return function (f) {
            return ifoldrOf(p)(function (i) {
                return function (a) {
                    return function (fu) {
                        return Control_Apply.applySecond(dictApplicative.Apply0())(Data_Functor["void"]((dictApplicative.Apply0()).Functor0())(f(i)(a)))(fu);
                    };
                };
            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
        };
    };
};
var iforOf_ = function (dictApplicative) {
    return function ($48) {
        return Data_Function.flip(itraverseOf_(dictApplicative)($48));
    };
};
var ifindOf = function (p) {
    return function (f) {
        return ifoldrOf(p)(function (i) {
            return function (a) {
                return Data_Maybe.maybe((function () {
                    var $37 = f(i)(a);
                    if ($37) {
                        return new Data_Maybe.Just(a);
                    };
                    return Data_Maybe.Nothing.value;
                })())(Data_Maybe.Just.create);
            };
        })(Data_Maybe.Nothing.value);
    };
};
var ianyOf = function (dictHeytingAlgebra) {
    return function (p) {
        return function (f) {
            return function ($49) {
                return Data_Newtype.unwrap(Data_Newtype.newtypeDisj)(ifoldMapOf(p)(function (i) {
                    return function ($50) {
                        return Data_Monoid_Disj.Disj(f(i)($50));
                    };
                })($49));
            };
        };
    };
};
var iallOf = function (dictHeytingAlgebra) {
    return function (p) {
        return function (f) {
            return function ($51) {
                return Data_Newtype.unwrap(Data_Newtype.newtypeConj)(ifoldMapOf(p)(function (i) {
                    return function ($52) {
                        return Data_Monoid_Conj.Conj(f(i)($52));
                    };
                })($51));
            };
        };
    };
};
var folded = function (dictMonoid) {
    return function (dictFoldable) {
        return function (v) {
            return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(v);
        };
    };
};
var foldMapOf = Data_Newtype.under(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.Forget);
var foldOf = function (p) {
    return foldMapOf(p)(Control_Category.identity(Control_Category.categoryFn));
};
var foldlOf = function (p) {
    return function (f) {
        return function (r) {
            return function ($53) {
                return Data_Function.flip(Data_Newtype.unwrap(Data_Newtype.newtypeEndo))(r)(Data_Newtype.unwrap(Data_Newtype.newtypeDual)(foldMapOf(p)(function ($54) {
                    return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(f)($54)));
                })($53)));
            };
        };
    };
};
var foldrOf = function (p) {
    return function (f) {
        return function (r) {
            return function ($55) {
                return Data_Function.flip(Data_Newtype.unwrap(Data_Newtype.newtypeEndo))(r)(foldMapOf(p)(function ($56) {
                    return Data_Monoid_Endo.Endo(f($56));
                })($55));
            };
        };
    };
};
var maximumOf = function (dictOrd) {
    return function (p) {
        var max = function (a) {
            return function (b) {
                var $39 = Data_Ord.greaterThan(dictOrd)(a)(b);
                if ($39) {
                    return a;
                };
                return b;
            };
        };
        return foldrOf(p)(function (a) {
            return function ($57) {
                return Data_Maybe.Just.create(Data_Maybe.maybe(a)(max(a))($57));
            };
        })(Data_Maybe.Nothing.value);
    };
};
var minimumOf = function (dictOrd) {
    return function (p) {
        var min = function (a) {
            return function (b) {
                var $40 = Data_Ord.lessThan(dictOrd)(a)(b);
                if ($40) {
                    return a;
                };
                return b;
            };
        };
        return foldrOf(p)(function (a) {
            return function ($58) {
                return Data_Maybe.Just.create(Data_Maybe.maybe(a)(min(a))($58));
            };
        })(Data_Maybe.Nothing.value);
    };
};
var toListOf = function (p) {
    return foldrOf(p)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
};
var toListOfOn = function (s) {
    return function (p) {
        return toListOf(p)(s);
    };
};
var traverseOf_ = function (dictApplicative) {
    return function (p) {
        return function (f) {
            return foldrOf(p)(function (a) {
                return function (fu) {
                    return Control_Apply.applySecond(dictApplicative.Apply0())(Data_Functor["void"]((dictApplicative.Apply0()).Functor0())(f(a)))(fu);
                };
            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
        };
    };
};
var has = function (dictHeytingAlgebra) {
    return function (p) {
        return function ($59) {
            return Data_Newtype.unwrap(Data_Newtype.newtypeDisj)(foldMapOf(p)(Data_Function["const"](Data_HeytingAlgebra.tt(dictHeytingAlgebra)))($59));
        };
    };
};
var hasn$primet = function (dictHeytingAlgebra) {
    return function (p) {
        return function ($60) {
            return Data_Newtype.unwrap(Data_Newtype.newtypeConj)(foldMapOf(p)(Data_Function["const"](Data_HeytingAlgebra.ff(dictHeytingAlgebra)))($60));
        };
    };
};
var lastOf = function (p) {
    return function ($61) {
        return Data_Newtype.unwrap(Data_Maybe_Last.newtypeLast)(foldMapOf(p)(function ($62) {
            return Data_Maybe_Last.Last(Data_Maybe.Just.create($62));
        })($61));
    };
};
var lengthOf = function (p) {
    return function ($63) {
        return Data_Newtype.unwrap(Data_Newtype.newtypeAdditive)(foldMapOf(p)(Data_Function["const"](1))($63));
    };
};
var preview = function (p) {
    return function ($64) {
        return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(foldMapOf(p)(function ($65) {
            return Data_Maybe_First.First(Data_Maybe.Just.create($65));
        })($64));
    };
};
var previewOn = function (s) {
    return function (p) {
        return preview(p)(s);
    };
};
var productOf = function (dictSemiring) {
    return function (p) {
        return function ($66) {
            return Data_Newtype.unwrap(Data_Newtype.newtypeMultiplicative)(foldMapOf(p)(Data_Monoid_Multiplicative.Multiplicative)($66));
        };
    };
};
var sequenceOf_ = function (dictApplicative) {
    return function (p) {
        return function ($67) {
            return Data_Function.flip(Data_Newtype.unwrap(Data_Newtype.newtypeEndo))(Control_Applicative.pure(dictApplicative)(Data_Unit.unit))(foldMapOf(p)(function (f) {
                return function (v) {
                    return Control_Apply.applySecond(dictApplicative.Apply0())(f)(v);
                };
            })($67));
        };
    };
};
var sumOf = function (dictSemiring) {
    return function (p) {
        return function ($68) {
            return Data_Newtype.unwrap(Data_Newtype.newtypeAdditive)(foldMapOf(p)(Data_Monoid_Additive.Additive)($68));
        };
    };
};
var firstOf = function (p) {
    return function ($69) {
        return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(foldMapOf(p)(function ($70) {
            return Data_Maybe_First.First(Data_Maybe.Just.create($70));
        })($69));
    };
};
var findOf = function (p) {
    return function (f) {
        return foldrOf(p)(function (a) {
            return Data_Maybe.maybe((function () {
                var $41 = f(a);
                if ($41) {
                    return new Data_Maybe.Just(a);
                };
                return Data_Maybe.Nothing.value;
            })())(Data_Maybe.Just.create);
        })(Data_Maybe.Nothing.value);
    };
};
var filtered = function (dictChoice) {
    return function (f) {
        return function ($71) {
            return Data_Profunctor.dimap(dictChoice.Profunctor0())(function (x) {
                var $42 = f(x);
                if ($42) {
                    return new Data_Either.Right(x);
                };
                return new Data_Either.Left(x);
            })(Data_Either.either(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn)))(Data_Profunctor_Choice.right(dictChoice)($71));
        };
    };
};
var anyOf = function (dictHeytingAlgebra) {
    return function (p) {
        return function (f) {
            return function ($72) {
                return Data_Newtype.unwrap(Data_Newtype.newtypeDisj)(foldMapOf(p)(function ($73) {
                    return Data_Monoid_Disj.Disj(f($73));
                })($72));
            };
        };
    };
};
var elemOf = function (dictEq) {
    return function (p) {
        return function (a) {
            return anyOf(Data_HeytingAlgebra.heytingAlgebraBoolean)(p)(function (v) {
                return Data_Eq.eq(dictEq)(v)(a);
            });
        };
    };
};
var orOf = function (dictHeytingAlgebra) {
    return function (p) {
        return anyOf(dictHeytingAlgebra)(p)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var allOf = function (dictHeytingAlgebra) {
    return function (p) {
        return function (f) {
            return function ($74) {
                return Data_Newtype.unwrap(Data_Newtype.newtypeConj)(foldMapOf(p)(function ($75) {
                    return Data_Monoid_Conj.Conj(f($75));
                })($74));
            };
        };
    };
};
var andOf = function (dictHeytingAlgebra) {
    return function (p) {
        return allOf(dictHeytingAlgebra)(p)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var notElemOf = function (dictEq) {
    return function (p) {
        return function (a) {
            return allOf(Data_HeytingAlgebra.heytingAlgebraBoolean)(p)(function (v) {
                return Data_Eq.notEq(dictEq)(v)(a);
            });
        };
    };
};
module.exports = {
    previewOn: previewOn,
    toListOfOn: toListOfOn,
    preview: preview,
    foldOf: foldOf,
    foldMapOf: foldMapOf,
    foldrOf: foldrOf,
    foldlOf: foldlOf,
    toListOf: toListOf,
    firstOf: firstOf,
    lastOf: lastOf,
    maximumOf: maximumOf,
    minimumOf: minimumOf,
    allOf: allOf,
    anyOf: anyOf,
    andOf: andOf,
    orOf: orOf,
    elemOf: elemOf,
    notElemOf: notElemOf,
    sumOf: sumOf,
    productOf: productOf,
    lengthOf: lengthOf,
    findOf: findOf,
    sequenceOf_: sequenceOf_,
    traverseOf_: traverseOf_,
    has: has,
    "hasn't": hasn$primet,
    replicated: replicated,
    filtered: filtered,
    folded: folded,
    unfolded: unfolded,
    ifoldMapOf: ifoldMapOf,
    ifoldrOf: ifoldrOf,
    ifoldlOf: ifoldlOf,
    iallOf: iallOf,
    ianyOf: ianyOf,
    itoListOf: itoListOf,
    itraverseOf_: itraverseOf_
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Category/index.js":14,"../Control.Semigroupoid/index.js":61,"../Data.Either/index.js":131,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Lens.Internal.Forget/index.js":178,"../Data.Lens.Internal.Indexed/index.js":180,"../Data.Lens.Types/index.js":198,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Maybe.First/index.js":208,"../Data.Maybe.Last/index.js":209,"../Data.Maybe/index.js":210,"../Data.Monoid.Additive/index.js":212,"../Data.Monoid.Conj/index.js":213,"../Data.Monoid.Disj/index.js":214,"../Data.Monoid.Dual/index.js":215,"../Data.Monoid.Endo/index.js":216,"../Data.Monoid.Multiplicative/index.js":217,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Profunctor.Choice/index.js":231,"../Data.Profunctor/index.js":238,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Tuple/index.js":283,"../Data.Unit/index.js":289,"../Prelude/index.js":385}],174:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Lens_Internal_Forget = require("../Data.Lens.Internal.Forget/index.js");
var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed/index.js");
var Data_Lens_Types = require("../Data.Lens.Types/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var view = function (l) {
    return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(l(Control_Category.identity(Control_Category.categoryFn)));
};
var viewOn = function (s) {
    return function (l) {
        return view(l)(s);
    };
};
var use = function (dictMonadState) {
    return function (p) {
        return Control_Monad_State_Class.gets(dictMonadState)(function (v) {
            return viewOn(v)(p);
        });
    };
};
var to = function (f) {
    return function (p) {
        return function ($3) {
            return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(p)(f($3));
        };
    };
};
var takeBoth = function (l) {
    return function (r) {
        return to(Data_Profunctor_Strong.fanout(Control_Category.categoryFn)(Data_Profunctor_Strong.strongFn)(view(l))(view(r)));
    };
};
var iview = function (l) {
    return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(l(Data_Lens_Internal_Indexed.Indexed(Control_Category.identity(Control_Category.categoryFn))));
};
var iuse = function (dictMonadState) {
    return function (p) {
        return Control_Monad_State_Class.gets(dictMonadState)(iview(p));
    };
};
var cloneGetter = function (g) {
    return to(view(g));
};
module.exports = {
    viewOn: viewOn,
    view: view,
    to: to,
    takeBoth: takeBoth,
    use: use,
    iview: iview,
    iuse: iuse,
    cloneGetter: cloneGetter
};

},{"../Control.Category/index.js":14,"../Control.Monad.State.Class/index.js":48,"../Control.Semigroupoid/index.js":61,"../Data.Function/index.js":145,"../Data.Lens.Internal.Forget/index.js":178,"../Data.Lens.Internal.Indexed/index.js":180,"../Data.Lens.Types/index.js":198,"../Data.Newtype/index.js":220,"../Data.Profunctor.Strong/index.js":237,"../Data.Tuple/index.js":283,"../Prelude/index.js":385}],175:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Data_Distributive = require("../Data.Distributive/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Lens_Internal_Grating = require("../Data.Lens.Internal.Grating/index.js");
var Data_Lens_Internal_Zipping = require("../Data.Lens.Internal.Zipping/index.js");
var Data_Lens_Types = require("../Data.Lens.Types/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Closed = require("../Data.Profunctor.Closed/index.js");
var Data_Profunctor_Costar = require("../Data.Profunctor.Costar/index.js");
var Data_Profunctor_Star = require("../Data.Profunctor.Star/index.js");
var Prelude = require("../Prelude/index.js");
var zipWithOf = function (g) {
    return function (f) {
        return Data_Newtype.unwrap(Data_Lens_Internal_Zipping.newtypeZipping)(g(f));
    };
};
var zipFWithOf = function (g) {
    return function (f) {
        return Data_Newtype.unwrap(Data_Profunctor_Costar.newtypeCostar)(g(f));
    };
};
var withGrate = function (g) {
    return Data_Newtype.unwrap(Data_Lens_Internal_Grating.newtypeGrating)(g(function (f) {
        return f(Control_Category.identity(Control_Category.categoryFn));
    }));
};
var grate = function (f) {
    return function (dictClosed) {
        return function (pab) {
            return Data_Profunctor.dimap(dictClosed.Profunctor0())(Data_Function.applyFlipped)(f)(Data_Profunctor_Closed.closed(dictClosed)(pab));
        };
    };
};
var cotraversed = function (dictDistributive) {
    return function (dictClosed) {
        return grate(function (f) {
            return Data_Distributive.cotraverse(dictDistributive)(Data_Functor.functorFn)(f)(Control_Category.identity(Control_Category.categoryFn));
        })(dictClosed);
    };
};
var collectOf = function (g) {
    return function (f) {
        return Data_Newtype.unwrap(Data_Profunctor_Star.newtypeStar)(g(f));
    };
};
var cloneGrate = function (g) {
    return function (dictClosed) {
        return grate(withGrate(g))(dictClosed);
    };
};
module.exports = {
    grate: grate,
    withGrate: withGrate,
    cloneGrate: cloneGrate,
    cotraversed: cotraversed,
    zipWithOf: zipWithOf,
    zipFWithOf: zipFWithOf,
    collectOf: collectOf
};

},{"../Control.Category/index.js":14,"../Data.Distributive/index.js":128,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Lens.Internal.Grating/index.js":179,"../Data.Lens.Internal.Zipping/index.js":186,"../Data.Lens.Types/index.js":198,"../Data.Newtype/index.js":220,"../Data.Profunctor.Closed/index.js":232,"../Data.Profunctor.Costar/index.js":234,"../Data.Profunctor.Star/index.js":236,"../Data.Profunctor/index.js":238,"../Prelude/index.js":385}],176:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad_State = require("../Control.Monad.State/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_State_Trans = require("../Control.Monad.State.Trans/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Compose = require("../Data.Functor.Compose/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed/index.js");
var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander/index.js");
var Data_Lens_Iso_Newtype = require("../Data.Lens.Iso.Newtype/index.js");
var Data_Lens_Setter = require("../Data.Lens.Setter/index.js");
var Data_Lens_Types = require("../Data.Lens.Types/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Star = require("../Data.Profunctor.Star/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var unIndex = function (dictProfunctor) {
    return function (l) {
        return function ($12) {
            return l(Data_Lens_Internal_Indexed.Indexed(Data_Profunctor.dimap(dictProfunctor)(Data_Tuple.snd)(Control_Category.identity(Control_Category.categoryFn))($12)));
        };
    };
};
var reindexed = function (dictProfunctor) {
    return function (ij) {
        return function (v) {
            return function ($13) {
                return v(Data_Lens_Setter.over(Data_Lens_Iso_Newtype["_Newtype"](Data_Lens_Internal_Indexed.newtypeIndexed)(Data_Lens_Internal_Indexed.newtypeIndexed)(Data_Profunctor.profunctorFn))(Data_Profunctor.lcmap(dictProfunctor)(Data_Profunctor_Strong.first(Data_Profunctor_Strong.strongFn)(ij)))($13));
            };
        };
    };
};
var iwander = function (itr) {
    return function (dictWander) {
        return function ($14) {
            return Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
                return function (f) {
                    return function (s) {
                        return itr(dictApplicative)(Data_Tuple.curry(f))(s);
                    };
                };
            })(Data_Newtype.unwrap(Data_Lens_Internal_Indexed.newtypeIndexed)($14));
        };
    };
};
var positions = function (tr) {
    return function (dictWander) {
        return iwander(function (dictApplicative) {
            return function (f) {
                return function (s) {
                    return Data_Function.flip(Control_Monad_State.evalState)(0)(Data_Newtype.unwrap(Data_Functor_Compose.newtypeCompose)(Data_Function.flip(Data_Newtype.unwrap(Data_Profunctor_Star.newtypeStar))(s)(tr(Data_Lens_Internal_Wander.wanderStar(Data_Functor_Compose.applicativeCompose(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(dictApplicative)))(function (a) {
                        return Data_Functor_Compose.Compose(Control_Apply.applyFirst(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity))(f)(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))))(Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(a)))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function (v) {
                            return v + 1 | 0;
                        })));
                    }))));
                };
            };
        })(dictWander);
    };
};
var itraversed = function (dictTraversableWithIndex) {
    return function (dictWander) {
        return iwander(function (dictApplicative) {
            return Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex)(dictApplicative);
        })(dictWander);
    };
};
var asIndex = function (dictProfunctor) {
    return function (l) {
        return function ($15) {
            return l(Data_Lens_Internal_Indexed.Indexed(Data_Profunctor.dimap(dictProfunctor)(Data_Tuple.fst)(Control_Category.identity(Control_Category.categoryFn))($15)));
        };
    };
};
module.exports = {
    unIndex: unIndex,
    asIndex: asIndex,
    reindexed: reindexed,
    iwander: iwander,
    itraversed: itraversed,
    positions: positions
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Category/index.js":14,"../Control.Monad.State.Class/index.js":48,"../Control.Monad.State.Trans/index.js":49,"../Control.Monad.State/index.js":50,"../Control.Semigroupoid/index.js":61,"../Data.Function/index.js":145,"../Data.Functor.Compose/index.js":147,"../Data.Functor/index.js":153,"../Data.Identity/index.js":163,"../Data.Lens.Internal.Indexed/index.js":180,"../Data.Lens.Internal.Wander/index.js":185,"../Data.Lens.Iso.Newtype/index.js":187,"../Data.Lens.Setter/index.js":196,"../Data.Lens.Types/index.js":198,"../Data.Newtype/index.js":220,"../Data.Profunctor.Star/index.js":236,"../Data.Profunctor.Strong/index.js":237,"../Data.Profunctor/index.js":238,"../Data.Semiring/index.js":251,"../Data.TraversableWithIndex/index.js":282,"../Data.Tuple/index.js":283,"../Prelude/index.js":385}],177:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Prelude = require("../Prelude/index.js");
var Exchange = (function () {
    function Exchange(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Exchange.create = function (value0) {
        return function (value1) {
            return new Exchange(value0, value1);
        };
    };
    return Exchange;
})();
var profunctorExchange = new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
        return function (v) {
            return new Exchange(function ($11) {
                return v.value0(f($11));
            }, function ($12) {
                return g(v.value1($12));
            });
        };
    };
});
var functorExchange = new Data_Functor.Functor(function (f) {
    return function (v) {
        return new Exchange(v.value0, function ($13) {
            return f(v.value1($13));
        });
    };
});
module.exports = {
    Exchange: Exchange,
    functorExchange: functorExchange,
    profunctorExchange: profunctorExchange
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Profunctor/index.js":238,"../Prelude/index.js":385}],178:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Const = require("../Data.Const/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");
var Data_Profunctor_Cochoice = require("../Data.Profunctor.Cochoice/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var Forget = function (x) {
    return x;
};
var semigroupForget = function (dictSemigroup) {
    return Data_Semigroup.semigroupFn(dictSemigroup);
};
var profunctorForget = new Data_Profunctor.Profunctor(function (f) {
    return function (v) {
        return function (v1) {
            return function ($27) {
                return v1(f($27));
            };
        };
    };
});
var strongForget = new Data_Profunctor_Strong.Strong(function () {
    return profunctorForget;
}, function (v) {
    return function ($28) {
        return v(Data_Tuple.fst($28));
    };
}, function (v) {
    return function ($29) {
        return v(Data_Tuple.snd($29));
    };
});
var newtypeForget = new Data_Newtype.Newtype(function (n) {
    return n;
}, Forget);
var monoidForget = function (dictMonoid) {
    return Data_Monoid.monoidFn(dictMonoid);
};
var cochoiceForget = new Data_Profunctor_Cochoice.Cochoice(function () {
    return profunctorForget;
}, function (v) {
    return function ($30) {
        return v(Data_Either.Left.create($30));
    };
}, function (v) {
    return function ($31) {
        return v(Data_Either.Right.create($31));
    };
});
var choiceForget = function (dictMonoid) {
    return new Data_Profunctor_Choice.Choice(function () {
        return profunctorForget;
    }, function (v) {
        return Data_Either.either(v)(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)));
    }, function (v) {
        return Data_Either.either(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)))(v);
    });
};
var wanderForget = function (dictMonoid) {
    return new Data_Lens_Internal_Wander.Wander(function () {
        return choiceForget(dictMonoid);
    }, function () {
        return strongForget;
    }, function (f) {
        return function (v) {
            return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Const.newtypeConst)(Data_Const.newtypeConst)(Data_Const.Const)(f(Data_Const.applicativeConst(dictMonoid)))(v);
        };
    });
};
module.exports = {
    Forget: Forget,
    newtypeForget: newtypeForget,
    semigroupForget: semigroupForget,
    monoidForget: monoidForget,
    profunctorForget: profunctorForget,
    choiceForget: choiceForget,
    strongForget: strongForget,
    cochoiceForget: cochoiceForget,
    wanderForget: wanderForget
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Const/index.js":119,"../Data.Either/index.js":131,"../Data.Functor/index.js":153,"../Data.Lens.Internal.Wander/index.js":185,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Profunctor.Choice/index.js":231,"../Data.Profunctor.Cochoice/index.js":233,"../Data.Profunctor.Strong/index.js":237,"../Data.Profunctor/index.js":238,"../Data.Semigroup/index.js":248,"../Data.Tuple/index.js":283,"../Prelude/index.js":385}],179:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Closed = require("../Data.Profunctor.Closed/index.js");
var Prelude = require("../Prelude/index.js");
var Grating = function (x) {
    return x;
};
var profunctorGrating = new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
        return function (v) {
            return function (d) {
                return g(v(function (k) {
                    return d(function ($9) {
                        return k(f($9));
                    });
                }));
            };
        };
    };
});
var newtypeGrating = new Data_Newtype.Newtype(function (n) {
    return n;
}, Grating);
var closedGrating = new Data_Profunctor_Closed.Closed(function () {
    return profunctorGrating;
}, function (v) {
    return function (f) {
        return function (x) {
            return v(function (k) {
                return f(function (g) {
                    return k(g(x));
                });
            });
        };
    };
});
module.exports = {
    Grating: Grating,
    newtypeGrating: newtypeGrating,
    profunctorGrating: profunctorGrating,
    closedGrating: closedGrating
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Newtype/index.js":220,"../Data.Profunctor.Closed/index.js":232,"../Data.Profunctor/index.js":238,"../Prelude/index.js":385}],180:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var Indexed = function (x) {
    return x;
};
var profunctorIndexed = function (dictProfunctor) {
    return new Data_Profunctor.Profunctor(function (f) {
        return function (g) {
            return function (v) {
                return Data_Profunctor.dimap(dictProfunctor)(Data_Profunctor_Strong.second(Data_Profunctor_Strong.strongFn)(f))(g)(v);
            };
        };
    });
};
var strongIndexed = function (dictStrong) {
    return new Data_Profunctor_Strong.Strong(function () {
        return profunctorIndexed(dictStrong.Profunctor0());
    }, function (v) {
        return Indexed(Data_Profunctor.lcmap(dictStrong.Profunctor0())(function (v1) {
            return new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0, v1.value1.value0), v1.value1.value1);
        })(Data_Profunctor_Strong.first(dictStrong)(v)));
    }, function (v) {
        return Indexed(Data_Profunctor.lcmap(dictStrong.Profunctor0())(function (v1) {
            return new Data_Tuple.Tuple(v1.value1.value0, new Data_Tuple.Tuple(v1.value0, v1.value1.value1));
        })(Data_Profunctor_Strong.second(dictStrong)(v)));
    });
};
var newtypeIndexed = new Data_Newtype.Newtype(function (n) {
    return n;
}, Indexed);
var choiceIndexed = function (dictChoice) {
    return new Data_Profunctor_Choice.Choice(function () {
        return profunctorIndexed(dictChoice.Profunctor0());
    }, function (v) {
        return Indexed(Data_Profunctor.lcmap(dictChoice.Profunctor0())(function (v1) {
            return Data_Either.either(function ($47) {
                return Data_Either.Left.create(Data_Tuple.Tuple.create(v1.value0)($47));
            })(Data_Either.Right.create)(v1.value1);
        })(Data_Profunctor_Choice.left(dictChoice)(v)));
    }, function (v) {
        return Indexed(Data_Profunctor.lcmap(dictChoice.Profunctor0())(function (v1) {
            return Data_Either.either(Data_Either.Left.create)(function ($48) {
                return Data_Either.Right.create(Data_Tuple.Tuple.create(v1.value0)($48));
            })(v1.value1);
        })(Data_Profunctor_Choice.right(dictChoice)(v)));
    });
};
var wanderIndexed = function (dictWander) {
    return new Data_Lens_Internal_Wander.Wander(function () {
        return choiceIndexed(dictWander.Choice1());
    }, function () {
        return strongIndexed(dictWander.Strong0());
    }, function (trav) {
        return function (v) {
            return Indexed(Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
                return function (ia2fb) {
                    return function (v1) {
                        return trav(dictApplicative)(function ($49) {
                            return ia2fb(Data_Tuple.Tuple.create(v1.value0)($49));
                        })(v1.value1);
                    };
                };
            })(v));
        };
    });
};
module.exports = {
    Indexed: Indexed,
    newtypeIndexed: newtypeIndexed,
    profunctorIndexed: profunctorIndexed,
    strongIndexed: strongIndexed,
    choiceIndexed: choiceIndexed,
    wanderIndexed: wanderIndexed
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Either/index.js":131,"../Data.Function/index.js":145,"../Data.Lens.Internal.Wander/index.js":185,"../Data.Newtype/index.js":220,"../Data.Profunctor.Choice/index.js":231,"../Data.Profunctor.Strong/index.js":237,"../Data.Profunctor/index.js":238,"../Data.Tuple/index.js":283,"../Prelude/index.js":385}],181:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");
var Prelude = require("../Prelude/index.js");
var Market = (function () {
    function Market(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Market.create = function (value0) {
        return function (value1) {
            return new Market(value0, value1);
        };
    };
    return Market;
})();
var profunctorMarket = new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
        return function (v) {
            return new Market(function ($19) {
                return g(v.value0($19));
            }, function ($20) {
                return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(g)(v.value1(f($20)));
            });
        };
    };
});
var functorMarket = new Data_Functor.Functor(function (f) {
    return function (v) {
        return new Market(function ($21) {
            return f(v.value0($21));
        }, function ($22) {
            return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(f)(v.value1($22));
        });
    };
});
var choiceMarket = new Data_Profunctor_Choice.Choice(function () {
    return profunctorMarket;
}, function (v) {
    return new Market(function ($23) {
        return Data_Either.Left.create(v.value0($23));
    }, Data_Either.either(function ($24) {
        return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Either.Left.create)(v.value1($24));
    })(function ($25) {
        return Data_Either.Left.create(Data_Either.Right.create($25));
    }));
}, function (v) {
    return new Market(function ($26) {
        return Data_Either.Right.create(v.value0($26));
    }, Data_Either.either(function ($27) {
        return Data_Either.Left.create(Data_Either.Left.create($27));
    })(function ($28) {
        return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Either.Right.create)(v.value1($28));
    }));
});
module.exports = {
    Market: Market,
    functorMarket: functorMarket,
    profunctorMarket: profunctorMarket,
    choiceMarket: choiceMarket
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Bifunctor/index.js":106,"../Data.Either/index.js":131,"../Data.Functor/index.js":153,"../Data.Profunctor.Choice/index.js":231,"../Data.Profunctor/index.js":238,"../Prelude/index.js":385}],182:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");
var Data_Profunctor_Cochoice = require("../Data.Profunctor.Cochoice/index.js");
var Data_Profunctor_Costrong = require("../Data.Profunctor.Costrong/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Prelude = require("../Prelude/index.js");
var Re = function (x) {
    return x;
};
var profunctorRe = function (dictProfunctor) {
    return new Data_Profunctor.Profunctor(function (f) {
        return function (g) {
            return function (v) {
                return function ($28) {
                    return v(Data_Profunctor.dimap(dictProfunctor)(g)(f)($28));
                };
            };
        };
    });
};
var strongRe = function (dictStrong) {
    return new Data_Profunctor_Costrong.Costrong(function () {
        return profunctorRe(dictStrong.Profunctor0());
    }, function (v) {
        return function ($29) {
            return v(Data_Profunctor_Strong.first(dictStrong)($29));
        };
    }, function (v) {
        return function ($30) {
            return v(Data_Profunctor_Strong.second(dictStrong)($30));
        };
    });
};
var newtypeRe = new Data_Newtype.Newtype(function (n) {
    return n;
}, Re);
var costrongRe = function (dictCostrong) {
    return new Data_Profunctor_Strong.Strong(function () {
        return profunctorRe(dictCostrong.Profunctor0());
    }, function (v) {
        return function ($31) {
            return v(Data_Profunctor_Costrong.unfirst(dictCostrong)($31));
        };
    }, function (v) {
        return function ($32) {
            return v(Data_Profunctor_Costrong.unsecond(dictCostrong)($32));
        };
    });
};
var cochoiceRe = function (dictCochoice) {
    return new Data_Profunctor_Choice.Choice(function () {
        return profunctorRe(dictCochoice.Profunctor0());
    }, function (v) {
        return function ($33) {
            return v(Data_Profunctor_Cochoice.unleft(dictCochoice)($33));
        };
    }, function (v) {
        return function ($34) {
            return v(Data_Profunctor_Cochoice.unright(dictCochoice)($34));
        };
    });
};
var choiceRe = function (dictChoice) {
    return new Data_Profunctor_Cochoice.Cochoice(function () {
        return profunctorRe(dictChoice.Profunctor0());
    }, function (v) {
        return function ($35) {
            return v(Data_Profunctor_Choice.left(dictChoice)($35));
        };
    }, function (v) {
        return function ($36) {
            return v(Data_Profunctor_Choice.right(dictChoice)($36));
        };
    });
};
module.exports = {
    Re: Re,
    newtypeRe: newtypeRe,
    profunctorRe: profunctorRe,
    choiceRe: choiceRe,
    cochoiceRe: cochoiceRe,
    strongRe: strongRe,
    costrongRe: costrongRe
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Newtype/index.js":220,"../Data.Profunctor.Choice/index.js":231,"../Data.Profunctor.Cochoice/index.js":233,"../Data.Profunctor.Costrong/index.js":235,"../Data.Profunctor.Strong/index.js":237,"../Data.Profunctor/index.js":238,"../Prelude/index.js":385}],183:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var Shop = (function () {
    function Shop(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Shop.create = function (value0) {
        return function (value1) {
            return new Shop(value0, value1);
        };
    };
    return Shop;
})();
var profunctorShop = new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
        return function (v) {
            return new Shop(function ($30) {
                return v.value0(f($30));
            }, function (s) {
                return function ($31) {
                    return g(v.value1(f(s))($31));
                };
            });
        };
    };
});
var strongShop = new Data_Profunctor_Strong.Strong(function () {
    return profunctorShop;
}, function (v) {
    return new Shop(function (v1) {
        return v.value0(v1.value0);
    }, function (v1) {
        return function (b) {
            return new Data_Tuple.Tuple(v.value1(v1.value0)(b), v1.value1);
        };
    });
}, function (v) {
    return new Shop(function (v1) {
        return v.value0(v1.value1);
    }, function (v1) {
        return function (b) {
            return new Data_Tuple.Tuple(v1.value0, v.value1(v1.value1)(b));
        };
    });
});
module.exports = {
    Shop: Shop,
    profunctorShop: profunctorShop,
    strongShop: strongShop
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Profunctor.Strong/index.js":237,"../Data.Profunctor/index.js":238,"../Data.Tuple/index.js":283,"../Prelude/index.js":385}],184:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");
var Data_Profunctor_Closed = require("../Data.Profunctor.Closed/index.js");
var Data_Profunctor_Costrong = require("../Data.Profunctor.Costrong/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var Tagged = function (x) {
    return x;
};
var taggedProfunctor = new Data_Profunctor.Profunctor(function (v) {
    return function (g) {
        return function (v1) {
            return g(v1);
        };
    };
});
var taggedCostrong = new Data_Profunctor_Costrong.Costrong(function () {
    return taggedProfunctor;
}, function (v) {
    return v.value0;
}, function (v) {
    return v.value1;
});
var taggedClosed = new Data_Profunctor_Closed.Closed(function () {
    return taggedProfunctor;
}, function (v) {
    return Data_Function["const"](v);
});
var taggedChoice = new Data_Profunctor_Choice.Choice(function () {
    return taggedProfunctor;
}, function (v) {
    return new Data_Either.Left(v);
}, function (v) {
    return new Data_Either.Right(v);
});
var newtypeTagged = new Data_Newtype.Newtype(function (n) {
    return n;
}, Tagged);
var functorTagged = new Data_Functor.Functor(function (f) {
    return function (m) {
        return f(m);
    };
});
var foldableTagged = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (b) {
        return function (v) {
            return f(b)(v);
        };
    };
}, function (f) {
    return function (b) {
        return function (v) {
            return f(v)(b);
        };
    };
});
var traversableTagged = new Data_Traversable.Traversable(function () {
    return foldableTagged;
}, function () {
    return functorTagged;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tagged)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tagged)(f(v));
        };
    };
});
var eqTagged = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            return Data_Eq.eq(dictEq)(x)(y);
        };
    });
};
var ordTagged = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqTagged(dictOrd.Eq0());
    }, function (x) {
        return function (y) {
            return Data_Ord.compare(dictOrd)(x)(y);
        };
    });
};
var eq1Tagged = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqTagged(dictEq));
});
var ord1Tagged = new Data_Ord.Ord1(function () {
    return eq1Tagged;
}, function (dictOrd) {
    return Data_Ord.compare(ordTagged(dictOrd));
});
module.exports = {
    Tagged: Tagged,
    newtypeTagged: newtypeTagged,
    eqTagged: eqTagged,
    eq1Tagged: eq1Tagged,
    ordTagged: ordTagged,
    ord1Tagged: ord1Tagged,
    functorTagged: functorTagged,
    taggedProfunctor: taggedProfunctor,
    taggedChoice: taggedChoice,
    taggedCostrong: taggedCostrong,
    taggedClosed: taggedClosed,
    foldableTagged: foldableTagged,
    traversableTagged: traversableTagged
};

},{"../Data.Either/index.js":131,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Profunctor.Choice/index.js":231,"../Data.Profunctor.Closed/index.js":232,"../Data.Profunctor.Costrong/index.js":235,"../Data.Profunctor/index.js":238,"../Data.Traversable/index.js":281,"../Data.Tuple/index.js":283,"../Prelude/index.js":385}],185:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");
var Data_Profunctor_Star = require("../Data.Profunctor.Star/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Prelude = require("../Prelude/index.js");
var Wander = function (Choice1, Strong0, wander) {
    this.Choice1 = Choice1;
    this.Strong0 = Strong0;
    this.wander = wander;
};
var wanderStar = function (dictApplicative) {
    return new Wander(function () {
        return Data_Profunctor_Star.choiceStar(dictApplicative);
    }, function () {
        return Data_Profunctor_Star.strongStar((dictApplicative.Apply0()).Functor0());
    }, function (t) {
        return function (v) {
            return t(dictApplicative)(v);
        };
    });
};
var wanderFunction = new Wander(function () {
    return Data_Profunctor_Choice.choiceFn;
}, function () {
    return Data_Profunctor_Strong.strongFn;
}, function (t) {
    return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Identity.newtypeIdentity)(Data_Identity.newtypeIdentity)(Data_Identity.Identity)(t(Data_Identity.applicativeIdentity));
});
var wander = function (dict) {
    return dict.wander;
};
module.exports = {
    wander: wander,
    Wander: Wander,
    wanderFunction: wanderFunction,
    wanderStar: wanderStar
};

},{"../Data.Functor/index.js":153,"../Data.Identity/index.js":163,"../Data.Newtype/index.js":220,"../Data.Profunctor.Choice/index.js":231,"../Data.Profunctor.Star/index.js":236,"../Data.Profunctor.Strong/index.js":237,"../Prelude/index.js":385}],186:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Closed = require("../Data.Profunctor.Closed/index.js");
var Zipping = function (x) {
    return x;
};
var profunctorZipping = new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
        return function (v) {
            return function (a1) {
                return function (a2) {
                    return g(v(f(a1))(f(a2)));
                };
            };
        };
    };
});
var newtypeZipping = new Data_Newtype.Newtype(function (n) {
    return n;
}, Zipping);
var closedZipping = new Data_Profunctor_Closed.Closed(function () {
    return profunctorZipping;
}, function (v) {
    return function (f1) {
        return function (f2) {
            return function (x) {
                return v(f1(x))(f2(x));
            };
        };
    };
});
module.exports = {
    Zipping: Zipping,
    newtypeZipping: newtypeZipping,
    profunctorZipping: profunctorZipping,
    closedZipping: closedZipping
};

},{"../Data.Newtype/index.js":220,"../Data.Profunctor.Closed/index.js":232,"../Data.Profunctor/index.js":238}],187:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Lens_Iso = require("../Data.Lens.Iso/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var _Newtype = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (dictProfunctor) {
            return Data_Lens_Iso.iso(Data_Newtype.unwrap(dictNewtype))(Data_Newtype.wrap(dictNewtype1))(dictProfunctor);
        };
    };
};
module.exports = {
    "_Newtype": _Newtype
};

},{"../Data.Lens.Iso/index.js":188,"../Data.Newtype/index.js":220}],188:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Lens_Internal_Exchange = require("../Data.Lens.Internal.Exchange/index.js");
var Data_Lens_Internal_Re = require("../Data.Lens.Internal.Re/index.js");
var Data_Lens_Types = require("../Data.Lens.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var withIso = function (l) {
    return function (f) {
        var v = l(new Data_Lens_Internal_Exchange.Exchange(Control_Category.identity(Control_Category.categoryFn), Control_Category.identity(Control_Category.categoryFn)));
        return f(v.value0)(v.value1);
    };
};
var under = function (l) {
    return withIso(l)(function (sa) {
        return function (bt) {
            return function (ts) {
                return function ($19) {
                    return sa(ts(bt($19)));
                };
            };
        };
    });
};
var re = function (t) {
    return Data_Newtype.unwrap(Data_Lens_Internal_Re.newtypeRe)(t(Control_Category.identity(Control_Category.categoryFn)));
};
var iso = function (f) {
    return function (g) {
        return function (dictProfunctor) {
            return function (pab) {
                return Data_Profunctor.dimap(dictProfunctor)(f)(g)(pab);
            };
        };
    };
};
var mapping = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (l) {
            return function (dictProfunctor) {
                return withIso(l)(function (sa) {
                    return function (bt) {
                        return iso(Data_Functor.map(dictFunctor)(sa))(Data_Functor.map(dictFunctor1)(bt))(dictProfunctor);
                    };
                });
            };
        };
    };
};
var non = function (dictEq) {
    return function (def) {
        return function (dictProfunctor) {
            var g = function (a) {
                if (Data_Eq.eq(dictEq)(a)(def)) {
                    return Data_Maybe.Nothing.value;
                };
                if (Data_Boolean.otherwise) {
                    return new Data_Maybe.Just(a);
                };
                throw new Error("Failed pattern match at Data.Lens.Iso (line 45, column 9 - line 46, column 33): " + [ a.constructor.name ]);
            };
            return iso(Data_Maybe.fromMaybe(def))(g)(dictProfunctor);
        };
    };
};
var uncurried = function (dictProfunctor) {
    return iso(Data_Tuple.uncurry)(Data_Tuple.curry)(dictProfunctor);
};
var flipped = function (dictProfunctor) {
    return iso(Data_Function.flip)(Data_Function.flip)(dictProfunctor);
};
var dimapping = function (dictProfunctor) {
    return function (dictProfunctor1) {
        return function (f) {
            return function (g) {
                return function (dictProfunctor2) {
                    return withIso(f)(function (sa) {
                        return function (bt) {
                            return withIso(g)(function (ssaa) {
                                return function (bbtt) {
                                    return iso(Data_Profunctor.dimap(dictProfunctor)(sa)(ssaa))(Data_Profunctor.dimap(dictProfunctor1)(bt)(bbtt))(dictProfunctor2);
                                };
                            });
                        };
                    });
                };
            };
        };
    };
};
var curried = function (dictProfunctor) {
    return iso(Data_Tuple.curry)(Data_Tuple.uncurry)(dictProfunctor);
};
var cloneIso = function (l) {
    return function (dictProfunctor) {
        return withIso(l)(function (x) {
            return function (y) {
                return function (p) {
                    return iso(x)(y)(dictProfunctor)(p);
                };
            };
        });
    };
};
var auf = function (dictProfunctor) {
    return function (l) {
        return withIso(l)(function (sa) {
            return function (bt) {
                return function (f) {
                    return function (g) {
                        return function (e) {
                            return bt(f(Data_Profunctor.rmap(dictProfunctor)(sa)(g))(e));
                        };
                    };
                };
            };
        });
    };
};
var au = function (l) {
    return withIso(l)(function (sa) {
        return function (bt) {
            return function (f) {
                return function (e) {
                    return sa(f(bt)(e));
                };
            };
        };
    });
};
module.exports = {
    iso: iso,
    withIso: withIso,
    cloneIso: cloneIso,
    re: re,
    au: au,
    auf: auf,
    under: under,
    non: non,
    curried: curried,
    uncurried: uncurried,
    flipped: flipped,
    mapping: mapping,
    dimapping: dimapping
};

},{"../Control.Category/index.js":14,"../Control.Semigroupoid/index.js":61,"../Data.Boolean/index.js":110,"../Data.Eq/index.js":135,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Lens.Internal.Exchange/index.js":177,"../Data.Lens.Internal.Re/index.js":182,"../Data.Lens.Types/index.js":198,"../Data.Maybe/index.js":210,"../Data.Newtype/index.js":220,"../Data.Profunctor/index.js":238,"../Data.Tuple/index.js":283,"../Prelude/index.js":385}],189:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Lens_Lens = require("../Data.Lens.Lens/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var _2 = function (dictStrong) {
    return Data_Profunctor_Strong.second(dictStrong);
};
var _1 = function (dictStrong) {
    return Data_Profunctor_Strong.first(dictStrong);
};
module.exports = {
    "_1": _1,
    "_2": _2
};

},{"../Data.Lens.Lens/index.js":191,"../Data.Profunctor.Strong/index.js":237,"../Data.Tuple/index.js":283}],190:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Function = require("../Data.Function/index.js");
var Data_Lens_Lens = require("../Data.Lens.Lens/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Prelude = require("../Prelude/index.js");
var united = function (dictStrong) {
    return Data_Lens_Lens.lens(Data_Function["const"](Data_Unit.unit))(Data_Function["const"])(dictStrong);
};
module.exports = {
    united: united
};

},{"../Data.Function/index.js":145,"../Data.Lens.Lens/index.js":191,"../Data.Unit/index.js":289,"../Prelude/index.js":385}],191:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed/index.js");
var Data_Lens_Internal_Shop = require("../Data.Lens.Internal.Shop/index.js");
var Data_Lens_Types = require("../Data.Lens.Types/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var withLens = function (l) {
    return function (f) {
        var v = l(new Data_Lens_Internal_Shop.Shop(Control_Category.identity(Control_Category.categoryFn), function (v1) {
            return function (b) {
                return b;
            };
        }));
        return f(v.value0)(v.value1);
    };
};
var withIndexedLens = function (l) {
    return function (f) {
        var v = l(new Data_Lens_Internal_Shop.Shop(Control_Category.identity(Control_Category.categoryFn), function (v1) {
            return function (b) {
                return b;
            };
        }));
        return f(v.value0)(v.value1);
    };
};
var lens$prime = function (to) {
    return function (dictStrong) {
        return function (pab) {
            return Data_Profunctor.dimap(dictStrong.Profunctor0())(to)(function (v) {
                return v.value1(v.value0);
            })(Data_Profunctor_Strong.first(dictStrong)(pab));
        };
    };
};
var lens = function (get) {
    return function (set) {
        return function (dictStrong) {
            return lens$prime(function (s) {
                return new Data_Tuple.Tuple(get(s), function (b) {
                    return set(s)(b);
                });
            })(dictStrong);
        };
    };
};
var ilens$prime = function (to) {
    return function (dictStrong) {
        return function (pab) {
            return Data_Profunctor.dimap(dictStrong.Profunctor0())(to)(function (v) {
                return v.value1(v.value0);
            })(Data_Profunctor_Strong.first(dictStrong)(Data_Newtype.un(Data_Lens_Internal_Indexed.newtypeIndexed)(Data_Lens_Internal_Indexed.Indexed)(pab)));
        };
    };
};
var ilens = function (get) {
    return function (set) {
        return function (dictStrong) {
            return ilens$prime(function (s) {
                return new Data_Tuple.Tuple(get(s), function (b) {
                    return set(s)(b);
                });
            })(dictStrong);
        };
    };
};
var cloneLens = function (l) {
    return function (dictStrong) {
        return withLens(l)(function (x) {
            return function (y) {
                return function (p) {
                    return lens(x)(y)(dictStrong)(p);
                };
            };
        });
    };
};
var cloneIndexedLens = function (l) {
    return function (dictStrong) {
        return withIndexedLens(l)(function (x) {
            return function (y) {
                return function (p) {
                    return ilens(x)(y)(dictStrong)(p);
                };
            };
        });
    };
};
module.exports = {
    lens: lens,
    "lens'": lens$prime,
    withLens: withLens,
    cloneLens: cloneLens,
    ilens: ilens,
    "ilens'": ilens$prime,
    withIndexedLens: withIndexedLens,
    cloneIndexedLens: cloneIndexedLens
};

},{"../Control.Category/index.js":14,"../Data.Lens.Internal.Indexed/index.js":180,"../Data.Lens.Internal.Shop/index.js":183,"../Data.Lens.Types/index.js":198,"../Data.Newtype/index.js":220,"../Data.Profunctor.Strong/index.js":237,"../Data.Profunctor/index.js":238,"../Data.Tuple/index.js":283,"../Prelude/index.js":385}],192:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor_Coproduct = require("../Data.Functor.Coproduct/index.js");
var Data_Lens_Iso_Newtype = require("../Data.Lens.Iso.Newtype/index.js");
var Data_Lens_Prism = require("../Data.Lens.Prism/index.js");
var Data_Lens_Prism_Either = require("../Data.Lens.Prism.Either/index.js");
var Prelude = require("../Prelude/index.js");
var _Right = function (dictChoice) {
    return function ($2) {
        return Data_Lens_Iso_Newtype["_Newtype"](Data_Functor_Coproduct.newtypeCoproduct)(Data_Functor_Coproduct.newtypeCoproduct)(dictChoice.Profunctor0())(Data_Lens_Prism_Either["_Right"](dictChoice)($2));
    };
};
var _Left = function (dictChoice) {
    return function ($3) {
        return Data_Lens_Iso_Newtype["_Newtype"](Data_Functor_Coproduct.newtypeCoproduct)(Data_Functor_Coproduct.newtypeCoproduct)(dictChoice.Profunctor0())(Data_Lens_Prism_Either["_Left"](dictChoice)($3));
    };
};
module.exports = {
    "_Left": _Left,
    "_Right": _Right
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor.Coproduct/index.js":150,"../Data.Lens.Iso.Newtype/index.js":187,"../Data.Lens.Prism.Either/index.js":193,"../Data.Lens.Prism/index.js":195,"../Prelude/index.js":385}],193:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Either = require("../Data.Either/index.js");
var Data_Lens_Prism = require("../Data.Lens.Prism/index.js");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");
var _Right = function (dictChoice) {
    return Data_Profunctor_Choice.right(dictChoice);
};
var _Left = function (dictChoice) {
    return Data_Profunctor_Choice.left(dictChoice);
};
module.exports = {
    "_Left": _Left,
    "_Right": _Right
};

},{"../Data.Either/index.js":131,"../Data.Lens.Prism/index.js":195,"../Data.Profunctor.Choice/index.js":231}],194:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Lens_Prism = require("../Data.Lens.Prism/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Prelude = require("../Prelude/index.js");
var _Nothing = function (dictChoice) {
    return Data_Lens_Prism.prism(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.maybe(new Data_Either.Right(Data_Unit.unit))(Data_Function["const"](new Data_Either.Left(Data_Maybe.Nothing.value))))(dictChoice);
};
var _Just = function (dictChoice) {
    return Data_Lens_Prism.prism(Data_Maybe.Just.create)(Data_Maybe.maybe(new Data_Either.Left(Data_Maybe.Nothing.value))(Data_Either.Right.create))(dictChoice);
};
module.exports = {
    "_Nothing": _Nothing,
    "_Just": _Just
};

},{"../Data.Either/index.js":131,"../Data.Function/index.js":145,"../Data.Lens.Prism/index.js":195,"../Data.Maybe/index.js":210,"../Data.Unit/index.js":289,"../Prelude/index.js":385}],195:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Lens_Internal_Market = require("../Data.Lens.Internal.Market/index.js");
var Data_Lens_Internal_Tagged = require("../Data.Lens.Internal.Tagged/index.js");
var Data_Lens_Types = require("../Data.Lens.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");
var Prelude = require("../Prelude/index.js");
var withPrism = function (l) {
    return function (f) {
        var v = l(new Data_Lens_Internal_Market.Market(Control_Category.identity(Control_Category.categoryFn), Data_Either.Right.create));
        return f(v.value0)(v.value1);
    };
};
var review = Data_Newtype.under(Data_Lens_Internal_Tagged.newtypeTagged)(Data_Lens_Internal_Tagged.newtypeTagged)(Data_Lens_Internal_Tagged.Tagged);
var prism = function (to) {
    return function (fro) {
        return function (dictChoice) {
            return function (pab) {
                return Data_Profunctor.dimap(dictChoice.Profunctor0())(fro)(Data_Either.either(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn)))(Data_Profunctor_Choice.right(dictChoice)(Data_Profunctor.rmap(dictChoice.Profunctor0())(to)(pab)));
            };
        };
    };
};
var prism$prime = function (to) {
    return function (fro) {
        return function (dictChoice) {
            return prism(to)(function (s) {
                return Data_Maybe.maybe(new Data_Either.Left(s))(Data_Either.Right.create)(fro(s));
            })(dictChoice);
        };
    };
};
var nearly = function (x) {
    return function (f) {
        return function (dictChoice) {
            return prism$prime(Data_Function["const"](x))(function ($14) {
                return Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(f($14));
            })(dictChoice);
        };
    };
};
var only = function (dictEq) {
    return function (x) {
        return function (dictChoice) {
            return nearly(x)(function (v) {
                return Data_Eq.eq(dictEq)(v)(x);
            })(dictChoice);
        };
    };
};
var matching = function (l) {
    return withPrism(l)(function (v) {
        return function (f) {
            return f;
        };
    });
};
var is = function (dictHeytingAlgebra) {
    return function (l) {
        return function ($15) {
            return Data_Either.either(Data_Function["const"](Data_HeytingAlgebra.ff(dictHeytingAlgebra)))(Data_Function["const"](Data_HeytingAlgebra.tt(dictHeytingAlgebra)))(matching(l)($15));
        };
    };
};
var isn$primet = function (dictHeytingAlgebra) {
    return function (l) {
        return function ($16) {
            return Data_HeytingAlgebra.not(dictHeytingAlgebra)(is(dictHeytingAlgebra)(l)($16));
        };
    };
};
var clonePrism = function (l) {
    return function (dictChoice) {
        return withPrism(l)(function (x) {
            return function (y) {
                return function (p) {
                    return prism(x)(y)(dictChoice)(p);
                };
            };
        });
    };
};
module.exports = {
    "prism'": prism$prime,
    prism: prism,
    only: only,
    nearly: nearly,
    review: review,
    is: is,
    "isn't": isn$primet,
    matching: matching,
    clonePrism: clonePrism,
    withPrism: withPrism
};

},{"../Control.Category/index.js":14,"../Control.MonadPlus/index.js":56,"../Control.MonadZero/index.js":57,"../Control.Semigroupoid/index.js":61,"../Data.Either/index.js":131,"../Data.Eq/index.js":135,"../Data.Function/index.js":145,"../Data.HeytingAlgebra/index.js":162,"../Data.Lens.Internal.Market/index.js":181,"../Data.Lens.Internal.Tagged/index.js":184,"../Data.Lens.Types/index.js":198,"../Data.Maybe/index.js":210,"../Data.Newtype/index.js":220,"../Data.Profunctor.Choice/index.js":231,"../Data.Profunctor/index.js":238,"../Prelude/index.js":385}],196:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed/index.js");
var Data_Lens_Types = require("../Data.Lens.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var over = function (l) {
    return l;
};
var set = function (l) {
    return function (b) {
        return over(l)(Data_Function["const"](b));
    };
};
var setJust = function (p) {
    return function ($24) {
        return set(p)(Data_Maybe.Just.create($24));
    };
};
var subOver = function (dictRing) {
    return function (p) {
        return function ($25) {
            return over(p)(Data_Function.flip(Data_Ring.sub(dictRing))($25));
        };
    };
};
var mulOver = function (dictSemiring) {
    return function (p) {
        return function ($26) {
            return over(p)(Data_Function.flip(Data_Semiring.mul(dictSemiring))($26));
        };
    };
};
var modifying = function (dictMonadState) {
    return function (p) {
        return function (f) {
            return Data_Functor["void"]((((dictMonadState.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_State_Class.modify(dictMonadState)(over(p)(f)));
        };
    };
};
var mulModifying = function (dictMonadState) {
    return function (dictSemiring) {
        return function (p) {
            return function ($27) {
                return modifying(dictMonadState)(p)(Data_Function.flip(Data_Semiring.mul(dictSemiring))($27));
            };
        };
    };
};
var subModifying = function (dictMonadState) {
    return function (dictRing) {
        return function (p) {
            return function ($28) {
                return modifying(dictMonadState)(p)(Data_Function.flip(Data_Ring.sub(dictRing))($28));
            };
        };
    };
};
var iover = function (l) {
    return function (f) {
        return l(Data_Lens_Internal_Indexed.Indexed(Data_Tuple.uncurry(f)));
    };
};
var divOver = function (dictEuclideanRing) {
    return function (p) {
        return function ($29) {
            return over(p)(Data_Function.flip(Data_EuclideanRing.div(dictEuclideanRing))($29));
        };
    };
};
var divModifying = function (dictMonadState) {
    return function (dictEuclideanRing) {
        return function (p) {
            return function ($30) {
                return modifying(dictMonadState)(p)(Data_Function.flip(Data_EuclideanRing.div(dictEuclideanRing))($30));
            };
        };
    };
};
var disjOver = function (dictHeytingAlgebra) {
    return function (p) {
        return function ($31) {
            return over(p)(Data_Function.flip(Data_HeytingAlgebra.disj(dictHeytingAlgebra))($31));
        };
    };
};
var disjModifying = function (dictMonadState) {
    return function (dictHeytingAlgebra) {
        return function (p) {
            return function ($32) {
                return modifying(dictMonadState)(p)(Data_Function.flip(Data_HeytingAlgebra.disj(dictHeytingAlgebra))($32));
            };
        };
    };
};
var conjOver = function (dictHeytingAlgebra) {
    return function (p) {
        return function ($33) {
            return over(p)(Data_Function.flip(Data_HeytingAlgebra.conj(dictHeytingAlgebra))($33));
        };
    };
};
var conjModifying = function (dictMonadState) {
    return function (dictHeytingAlgebra) {
        return function (p) {
            return function ($34) {
                return modifying(dictMonadState)(p)(Data_Function.flip(Data_HeytingAlgebra.conj(dictHeytingAlgebra))($34));
            };
        };
    };
};
var assign = function (dictMonadState) {
    return function (p) {
        return function (b) {
            return Data_Functor["void"]((((dictMonadState.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_State_Class.modify(dictMonadState)(set(p)(b)));
        };
    };
};
var assignJust = function (dictMonadState) {
    return function (p) {
        return function ($35) {
            return assign(dictMonadState)(p)(Data_Maybe.Just.create($35));
        };
    };
};
var appendOver = function (dictSemigroup) {
    return function (p) {
        return function ($36) {
            return over(p)(Data_Function.flip(Data_Semigroup.append(dictSemigroup))($36));
        };
    };
};
var appendModifying = function (dictMonadState) {
    return function (dictSemigroup) {
        return function (p) {
            return function ($37) {
                return modifying(dictMonadState)(p)(Data_Function.flip(Data_Semigroup.append(dictSemigroup))($37));
            };
        };
    };
};
var addOver = function (dictSemiring) {
    return function (p) {
        return function ($38) {
            return over(p)(Data_Semiring.add(dictSemiring)($38));
        };
    };
};
var addModifying = function (dictMonadState) {
    return function (dictSemiring) {
        return function (p) {
            return function ($39) {
                return modifying(dictMonadState)(p)(Data_Semiring.add(dictSemiring)($39));
            };
        };
    };
};
module.exports = {
    over: over,
    iover: iover,
    set: set,
    addOver: addOver,
    subOver: subOver,
    mulOver: mulOver,
    divOver: divOver,
    disjOver: disjOver,
    conjOver: conjOver,
    appendOver: appendOver,
    setJust: setJust,
    assign: assign,
    modifying: modifying,
    addModifying: addModifying,
    mulModifying: mulModifying,
    subModifying: subModifying,
    divModifying: divModifying,
    disjModifying: disjModifying,
    conjModifying: conjModifying,
    appendModifying: appendModifying,
    assignJust: assignJust
};

},{"../Control.Monad.State.Class/index.js":48,"../Control.Semigroupoid/index.js":61,"../Data.EuclideanRing/index.js":137,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Lens.Internal.Indexed/index.js":180,"../Data.Lens.Types/index.js":198,"../Data.Maybe/index.js":210,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Tuple/index.js":283,"../Prelude/index.js":385}],197:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Lens_Indexed = require("../Data.Lens.Indexed/index.js");
var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed/index.js");
var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander/index.js");
var Data_Lens_Types = require("../Data.Lens.Types/index.js");
var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor_Star = require("../Data.Profunctor.Star/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var traversed = function (dictTraversable) {
    return function (dictWander) {
        return Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
            return Data_Traversable.traverse(dictTraversable)(dictApplicative);
        });
    };
};
var traverseOf = function (dictApplicative) {
    return Data_Newtype.under(Data_Profunctor_Star.newtypeStar)(Data_Profunctor_Star.newtypeStar)(Data_Profunctor_Star.Star);
};
var sequenceOf = function (dictApplicative) {
    return function (t) {
        return traverseOf(dictApplicative)(t)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var itraverseOf = function (dictApplicative) {
    return function (t) {
        return function ($25) {
            return Data_Newtype.under(Data_Profunctor_Star.newtypeStar)(Data_Profunctor_Star.newtypeStar)(Data_Profunctor_Star.Star)(function ($26) {
                return t(Data_Lens_Internal_Indexed.Indexed($26));
            })(Data_Tuple.uncurry($25));
        };
    };
};
var iforOf = function (dictApplicative) {
    return function ($27) {
        return Data_Function.flip(itraverseOf(dictApplicative)($27));
    };
};
var failover = function (dictAlternative) {
    return function (t) {
        return function (f) {
            return function (s) {
                var v = Data_Newtype.unwrap(Data_Profunctor_Star.newtypeStar)(t(Data_Profunctor_Star.Star(function ($28) {
                    return Data_Tuple.Tuple.create(true)(f($28));
                })))(s);
                if (v.value0) {
                    return Control_Applicative.pure(dictAlternative.Applicative0())(v.value1);
                };
                if (!v.value0) {
                    return Control_Plus.empty(dictAlternative.Plus1());
                };
                throw new Error("Failed pattern match at Data.Lens.Traversal (line 100, column 18 - line 102, column 32): " + [ v.constructor.name ]);
            };
        };
    };
};
var elementsOf = function (dictWander) {
    return function (tr) {
        return function (pr) {
            return Data_Lens_Indexed.iwander(function (dictApplicative) {
                return function (f) {
                    return Data_Newtype.unwrap(Data_Profunctor_Star.newtypeStar)(tr(Data_Lens_Internal_Wander.wanderStar(dictApplicative))(Data_Lens_Internal_Indexed.Indexed(Data_Profunctor_Star.Star(function (v) {
                        var $22 = pr(v.value0);
                        if ($22) {
                            return f(v.value0)(v.value1);
                        };
                        return Control_Applicative.pure(dictApplicative)(v.value1);
                    }))));
                };
            })(dictWander);
        };
    };
};
var element = function (dictWander) {
    return function (n) {
        return function (tr) {
            return Data_Lens_Indexed.unIndex((dictWander.Choice1()).Profunctor0())(elementsOf(dictWander)(function (dictWander1) {
                return Data_Lens_Indexed.positions(function (dictWander2) {
                    return tr(dictWander2);
                })(dictWander1);
            })(function (v) {
                return v === n;
            }));
        };
    };
};
module.exports = {
    traversed: traversed,
    element: element,
    traverseOf: traverseOf,
    sequenceOf: sequenceOf,
    failover: failover,
    elementsOf: elementsOf,
    itraverseOf: itraverseOf
};

},{"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Category/index.js":14,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Eq/index.js":135,"../Data.Function/index.js":145,"../Data.Lens.Indexed/index.js":176,"../Data.Lens.Internal.Indexed/index.js":180,"../Data.Lens.Internal.Wander/index.js":185,"../Data.Lens.Types/index.js":198,"../Data.Monoid.Disj/index.js":214,"../Data.Newtype/index.js":220,"../Data.Profunctor.Star/index.js":236,"../Data.Traversable/index.js":281,"../Data.Tuple/index.js":283,"../Prelude/index.js":385}],198:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Lens_Internal_Exchange = require("../Data.Lens.Internal.Exchange/index.js");
var Data_Lens_Internal_Forget = require("../Data.Lens.Internal.Forget/index.js");
var Data_Lens_Internal_Grating = require("../Data.Lens.Internal.Grating/index.js");
var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed/index.js");
var Data_Lens_Internal_Market = require("../Data.Lens.Internal.Market/index.js");
var Data_Lens_Internal_Re = require("../Data.Lens.Internal.Re/index.js");
var Data_Lens_Internal_Shop = require("../Data.Lens.Internal.Shop/index.js");
var Data_Lens_Internal_Tagged = require("../Data.Lens.Internal.Tagged/index.js");
var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");
var Data_Profunctor_Closed = require("../Data.Profunctor.Closed/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
module.exports = {};

},{"../Data.Lens.Internal.Exchange/index.js":177,"../Data.Lens.Internal.Forget/index.js":178,"../Data.Lens.Internal.Grating/index.js":179,"../Data.Lens.Internal.Indexed/index.js":180,"../Data.Lens.Internal.Market/index.js":181,"../Data.Lens.Internal.Re/index.js":182,"../Data.Lens.Internal.Shop/index.js":183,"../Data.Lens.Internal.Tagged/index.js":184,"../Data.Lens.Internal.Wander/index.js":185,"../Data.Profunctor.Choice/index.js":231,"../Data.Profunctor.Closed/index.js":232,"../Data.Profunctor.Strong/index.js":237,"../Data.Profunctor/index.js":238,"../Data.Tuple/index.js":283}],199:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Lens_Common = require("../Data.Lens.Common/index.js");
var Data_Lens_Fold = require("../Data.Lens.Fold/index.js");
var Data_Lens_Getter = require("../Data.Lens.Getter/index.js");
var Data_Lens_Grate = require("../Data.Lens.Grate/index.js");
var Data_Lens_Iso = require("../Data.Lens.Iso/index.js");
var Data_Lens_Lens = require("../Data.Lens.Lens/index.js");
var Data_Lens_Prism = require("../Data.Lens.Prism/index.js");
var Data_Lens_Setter = require("../Data.Lens.Setter/index.js");
var Data_Lens_Traversal = require("../Data.Lens.Traversal/index.js");
var Data_Lens_Types = require("../Data.Lens.Types/index.js");
module.exports = {};

},{"../Data.Lens.Common/index.js":172,"../Data.Lens.Fold/index.js":173,"../Data.Lens.Getter/index.js":174,"../Data.Lens.Grate/index.js":175,"../Data.Lens.Iso/index.js":188,"../Data.Lens.Lens/index.js":191,"../Data.Lens.Prism/index.js":195,"../Data.Lens.Setter/index.js":196,"../Data.Lens.Traversal/index.js":197,"../Data.Lens.Types/index.js":198}],200:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_Lazy = require("../Data.Lazy/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_NonEmpty = require("../Data.NonEmpty/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");
var Prelude = require("../Prelude/index.js");
var List = function (x) {
    return x;
};
var Nil = (function () {
    function Nil() {

    };
    Nil.value = new Nil();
    return Nil;
})();
var Cons = (function () {
    function Cons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Cons.create = function (value0) {
        return function (value1) {
            return new Cons(value0, value1);
        };
    };
    return Cons;
})();
var NonEmptyList = function (x) {
    return x;
};
var nil = List(Data_Lazy.defer(function (v) {
    return Nil.value;
}));
var newtypeNonEmptyList = new Data_Newtype.Newtype(function (n) {
    return n;
}, NonEmptyList);
var newtypeList = new Data_Newtype.Newtype(function (n) {
    return n;
}, List);
var step = function ($215) {
    return Data_Lazy.force(Data_Newtype.unwrap(newtypeList)($215));
};
var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
    return function (ys) {
        var go = function (v) {
            if (v instanceof Nil) {
                return step(ys);
            };
            if (v instanceof Cons) {
                return new Cons(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(ys));
            };
            throw new Error("Failed pattern match at Data.List.Lazy.Types (line 98, column 5 - line 98, column 21): " + [ v.constructor.name ]);
        };
        return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(newtypeList)(xs));
    };
});
var showList = function (dictShow) {
    return new Data_Show.Show(function (xs) {
        var go = function (v) {
            if (v instanceof Nil) {
                return "Nil";
            };
            if (v instanceof Cons) {
                return "(Cons " + (Data_Show.show(dictShow)(v.value0) + (" " + (go(step(v.value1)) + ")")));
            };
            throw new Error("Failed pattern match at Data.List.Lazy.Types (line 64, column 5 - line 65, column 5): " + [ v.constructor.name ]);
        };
        return "fromStrict (" + (go(step(xs)) + ")");
    });
};
var showNonEmptyList = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(NonEmptyList " + (Data_Show.show(Data_Lazy.showLazy(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow))))(v) + ")");
    });
};
var monoidList = new Data_Monoid.Monoid(function () {
    return semigroupList;
}, nil);
var lazyList = new Control_Lazy.Lazy(function (f) {
    return List(Data_Lazy.defer(function ($216) {
        return step(f($216));
    }));
});
var functorList = new Data_Functor.Functor(function (f) {
    return function (xs) {
        var go = function (v) {
            if (v instanceof Nil) {
                return Nil.value;
            };
            if (v instanceof Cons) {
                return new Cons(f(v.value0), Data_Functor.map(functorList)(f)(v.value1));
            };
            throw new Error("Failed pattern match at Data.List.Lazy.Types (line 107, column 5 - line 107, column 17): " + [ v.constructor.name ]);
        };
        return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(newtypeList)(xs));
    };
});
var functorNonEmptyList = new Data_Functor.Functor(function (f) {
    return function (v) {
        return Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(Data_NonEmpty.functorNonEmpty(functorList))(f))(v);
    };
});
var eq1List = new Data_Eq.Eq1(function (dictEq) {
    return function (xs) {
        return function (ys) {
            var go = function ($copy_v) {
                return function ($copy_v1) {
                    var $tco_var_v = $copy_v;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(v, v1) {
                        if (v instanceof Nil && v1 instanceof Nil) {
                            $tco_done = true;
                            return true;
                        };
                        if (v instanceof Cons && (v1 instanceof Cons && Data_Eq.eq(dictEq)(v.value0)(v1.value0))) {
                            $tco_var_v = step(v.value1);
                            $copy_v1 = step(v1.value1);
                            return;
                        };
                        $tco_done = true;
                        return false;
                    };
                    while (!$tco_done) {
                        $tco_result = $tco_loop($tco_var_v, $copy_v1);
                    };
                    return $tco_result;
                };
            };
            return go(step(xs))(step(ys));
        };
    };
});
var eqList = function (dictEq) {
    return new Data_Eq.Eq(Data_Eq.eq1(eq1List)(dictEq));
};
var eqNonEmptyList = function (dictEq) {
    return Data_Lazy.eqLazy(Data_NonEmpty.eqNonEmpty(eq1List)(dictEq));
};
var ord1List = new Data_Ord.Ord1(function () {
    return eq1List;
}, function (dictOrd) {
    return function (xs) {
        return function (ys) {
            var go = function ($copy_v) {
                return function ($copy_v1) {
                    var $tco_var_v = $copy_v;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(v, v1) {
                        if (v instanceof Nil && v1 instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.EQ.value;
                        };
                        if (v instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.LT.value;
                        };
                        if (v1 instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.GT.value;
                        };
                        if (v instanceof Cons && v1 instanceof Cons) {
                            var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
                            if (v2 instanceof Data_Ordering.EQ) {
                                $tco_var_v = step(v.value1);
                                $copy_v1 = step(v1.value1);
                                return;
                            };
                            $tco_done = true;
                            return v2;
                        };
                        throw new Error("Failed pattern match at Data.List.Lazy.Types (line 84, column 5 - line 84, column 20): " + [ v.constructor.name, v1.constructor.name ]);
                    };
                    while (!$tco_done) {
                        $tco_result = $tco_loop($tco_var_v, $copy_v1);
                    };
                    return $tco_result;
                };
            };
            return go(step(xs))(step(ys));
        };
    };
});
var ordList = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqList(dictOrd.Eq0());
    }, Data_Ord.compare1(ord1List)(dictOrd));
};
var ordNonEmptyList = function (dictOrd) {
    return Data_Lazy.ordLazy(Data_NonEmpty.ordNonEmpty(ord1List)(dictOrd));
};
var cons = function (x) {
    return function (xs) {
        return List(Data_Lazy.defer(function (v) {
            return new Cons(x, xs);
        }));
    };
};
var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldl(foldableList)(function (b) {
            return function (a) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(b)(f(a));
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
}, function (op) {
    var go = function ($copy_b) {
        return function ($copy_xs) {
            var $tco_var_b = $copy_b;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(b, xs) {
                var v = step(xs);
                if (v instanceof Nil) {
                    $tco_done = true;
                    return b;
                };
                if (v instanceof Cons) {
                    $tco_var_b = op(b)(v.value0);
                    $copy_xs = v.value1;
                    return;
                };
                throw new Error("Failed pattern match at Data.List.Lazy.Types (line 122, column 7 - line 124, column 40): " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_b, $copy_xs);
            };
            return $tco_result;
        };
    };
    return go;
}, function (op) {
    return function (z) {
        return function (xs) {
            var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(cons))(nil);
            return Data_Foldable.foldl(foldableList)(Data_Function.flip(op))(z)(rev(xs));
        };
    };
});
var extendList = new Control_Extend.Extend(function () {
    return functorList;
}, function (f) {
    return function (l) {
        var go = function (a) {
            return function (v) {
                var acc$prime = cons(a)(v.acc);
                return {
                    val: cons(f(acc$prime))(v.val),
                    acc: acc$prime
                };
            };
        };
        var v = step(l);
        if (v instanceof Nil) {
            return nil;
        };
        if (v instanceof Cons) {
            return cons(f(l))((Data_Foldable.foldr(foldableList)(go)({
                val: nil,
                acc: nil
            })(v.value1)).val);
        };
        throw new Error("Failed pattern match at Data.List.Lazy.Types (line 194, column 5 - line 197, column 55): " + [ v.constructor.name ]);
    };
});
var extendNonEmptyList = new Control_Extend.Extend(function () {
    return functorNonEmptyList;
}, function (f) {
    return function (v) {
        var go = function (a) {
            return function (v1) {
                return {
                    val: cons(f(Data_Lazy.defer(function (v2) {
                        return new Data_NonEmpty.NonEmpty(a, v1.acc);
                    })))(v1.val),
                    acc: cons(a)(v1.acc)
                };
            };
        };
        var v1 = Data_Lazy.force(v);
        return NonEmptyList(Data_Lazy.defer(function (v2) {
            return new Data_NonEmpty.NonEmpty(f(v), (Data_Foldable.foldr(foldableList)(go)({
                val: nil,
                acc: nil
            })(v1.value1)).val);
        }));
    };
});
var foldableNonEmptyList = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return Data_Foldable.foldMap(Data_NonEmpty.foldableNonEmpty(foldableList))(dictMonoid)(f)(Data_Lazy.force(v));
        };
    };
}, function (f) {
    return function (b) {
        return function (v) {
            return Data_Foldable.foldl(Data_NonEmpty.foldableNonEmpty(foldableList))(f)(b)(Data_Lazy.force(v));
        };
    };
}, function (f) {
    return function (b) {
        return function (v) {
            return Data_Foldable.foldr(Data_NonEmpty.foldableNonEmpty(foldableList))(f)(b)(Data_Lazy.force(v));
        };
    };
});
var foldableWithIndexList = new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableList;
}, function (dictMonoid) {
    return function (f) {
        return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
            return function (acc) {
                return function ($217) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(i)($217));
                };
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
}, function (f) {
    return function (acc) {
        return function ($218) {
            return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v) {
                return function (a) {
                    return new Data_Tuple.Tuple(v.value0 + 1 | 0, f(v.value0)(v.value1)(a));
                };
            })(new Data_Tuple.Tuple(0, acc))($218));
        };
    };
}, function (f) {
    return function (b) {
        return function (xs) {
            var v = (function () {
                var rev = Data_Foldable.foldl(foldableList)(function (v1) {
                    return function (a) {
                        return new Data_Tuple.Tuple(v1.value0 + 1 | 0, cons(a)(v1.value1));
                    };
                });
                return rev(new Data_Tuple.Tuple(0, nil))(xs);
            })();
            return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v1) {
                return function (a) {
                    return new Data_Tuple.Tuple(v1.value0 - 1 | 0, f(v1.value0 - 1 | 0)(a)(v1.value1));
                };
            })(new Data_Tuple.Tuple(v.value0, b))(v.value1));
        };
    };
});
var foldableWithIndexNonEmptyList = new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableNonEmptyList;
}, function (dictMonoid) {
    return function (f) {
        return function (v) {
            return Data_FoldableWithIndex.foldMapWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(dictMonoid)(function ($219) {
                return f(Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1))($219));
            })(Data_Lazy.force(v));
        };
    };
}, function (f) {
    return function (b) {
        return function (v) {
            return Data_FoldableWithIndex.foldlWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(function ($220) {
                return f(Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1))($220));
            })(b)(Data_Lazy.force(v));
        };
    };
}, function (f) {
    return function (b) {
        return function (v) {
            return Data_FoldableWithIndex.foldrWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(function ($221) {
                return f(Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1))($221));
            })(b)(Data_Lazy.force(v));
        };
    };
});
var functorWithIndexList = new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorList;
}, function (f) {
    return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList)(function (i) {
        return function (x) {
            return function (acc) {
                return cons(f(i)(x))(acc);
            };
        };
    })(nil);
});
var functorWithIndexNonEmptyList = new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorNonEmptyList;
}, function (f) {
    return function (v) {
        return NonEmptyList(Data_Lazy.defer(function (v1) {
            return Data_FunctorWithIndex.mapWithIndex(Data_NonEmpty.functorWithIndex(functorWithIndexList))(function ($222) {
                return f(Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1))($222));
            })(Data_Lazy.force(v));
        }));
    };
});
var toList = function (v) {
    return Control_Lazy.defer(lazyList)(function (v1) {
        var v2 = Data_Lazy.force(v);
        return cons(v2.value0)(v2.value1);
    });
};
var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function (v) {
    return function (as$prime) {
        var v1 = Data_Lazy.force(v);
        return Data_Lazy.defer(function (v2) {
            return new Data_NonEmpty.NonEmpty(v1.value0, Data_Semigroup.append(semigroupList)(v1.value1)(toList(as$prime)));
        });
    };
});
var traversableList = new Data_Traversable.Traversable(function () {
    return foldableList;
}, function () {
    return functorList;
}, function (dictApplicative) {
    return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
}, function (dictApplicative) {
    return function (f) {
        return Data_Foldable.foldr(foldableList)(function (a) {
            return function (b) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(cons)(f(a)))(b);
            };
        })(Control_Applicative.pure(dictApplicative)(nil));
    };
});
var traversableNonEmptyList = new Data_Traversable.Traversable(function () {
    return foldableNonEmptyList;
}, function () {
    return functorNonEmptyList;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(function (xxs) {
            return NonEmptyList(Data_Lazy.defer(function (v1) {
                return xxs;
            }));
        })(Data_Traversable.sequence(Data_NonEmpty.traversableNonEmpty(traversableList))(dictApplicative)(Data_Lazy.force(v)));
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(function (xxs) {
                return NonEmptyList(Data_Lazy.defer(function (v1) {
                    return xxs;
                }));
            })(Data_Traversable.traverse(Data_NonEmpty.traversableNonEmpty(traversableList))(dictApplicative)(f)(Data_Lazy.force(v)));
        };
    };
});
var traversableWithIndexList = new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexList;
}, function () {
    return functorWithIndexList;
}, function () {
    return traversableList;
}, function (dictApplicative) {
    return function (f) {
        return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList)(function (i) {
            return function (a) {
                return function (b) {
                    return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(cons)(f(i)(a)))(b);
                };
            };
        })(Control_Applicative.pure(dictApplicative)(nil));
    };
});
var traversableWithIndexNonEmptyList = new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexNonEmptyList;
}, function () {
    return functorWithIndexNonEmptyList;
}, function () {
    return traversableNonEmptyList;
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(function (xxs) {
                return NonEmptyList(Data_Lazy.defer(function (v1) {
                    return xxs;
                }));
            })(Data_TraversableWithIndex.traverseWithIndex(Data_NonEmpty.traversableWithIndexNonEmpty(traversableWithIndexList))(dictApplicative)(function ($223) {
                return f(Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1))($223));
            })(Data_Lazy.force(v)));
        };
    };
});
var unfoldable1List = new Data_Unfoldable1.Unfoldable1((function () {
    var go = function (f) {
        return function (b) {
            return Control_Lazy.defer(lazyList)(function (v) {
                var v1 = f(b);
                if (v1.value1 instanceof Data_Maybe.Just) {
                    return cons(v1.value0)(go(f)(v1.value1.value0));
                };
                if (v1.value1 instanceof Data_Maybe.Nothing) {
                    return cons(v1.value0)(nil);
                };
                throw new Error("Failed pattern match at Data.List.Lazy.Types (line 146, column 28 - line 148, column 33): " + [ v1.constructor.name ]);
            });
        };
    };
    return go;
})());
var unfoldableList = new Data_Unfoldable.Unfoldable(function () {
    return unfoldable1List;
}, (function () {
    var go = function (f) {
        return function (b) {
            return Control_Lazy.defer(lazyList)(function (v) {
                var v1 = f(b);
                if (v1 instanceof Data_Maybe.Nothing) {
                    return nil;
                };
                if (v1 instanceof Data_Maybe.Just) {
                    return cons(v1.value0.value0)(go(f)(v1.value0.value1));
                };
                throw new Error("Failed pattern match at Data.List.Lazy.Types (line 152, column 28 - line 154, column 39): " + [ v1.constructor.name ]);
            });
        };
    };
    return go;
})());
var unfoldable1NonEmptyList = new Data_Unfoldable1.Unfoldable1(function (f) {
    return function (b) {
        return NonEmptyList(Data_Lazy.defer(function (v) {
            return Data_Unfoldable1.unfoldr1(Data_NonEmpty.unfoldable1NonEmpty(unfoldableList))(f)(b);
        }));
    };
});
var comonadNonEmptyList = new Control_Comonad.Comonad(function () {
    return extendNonEmptyList;
}, function (v) {
    return Data_NonEmpty.head(Data_Lazy.force(v));
});
var monadList = new Control_Monad.Monad(function () {
    return applicativeList;
}, function () {
    return bindList;
});
var bindList = new Control_Bind.Bind(function () {
    return applyList;
}, function (xs) {
    return function (f) {
        var go = function (v) {
            if (v instanceof Nil) {
                return Nil.value;
            };
            if (v instanceof Cons) {
                return step(Data_Semigroup.append(semigroupList)(f(v.value0))(Control_Bind.bind(bindList)(v.value1)(f)));
            };
            throw new Error("Failed pattern match at Data.List.Lazy.Types (line 175, column 5 - line 175, column 17): " + [ v.constructor.name ]);
        };
        return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(newtypeList)(xs));
    };
});
var applyList = new Control_Apply.Apply(function () {
    return functorList;
}, Control_Monad.ap(monadList));
var applicativeList = new Control_Applicative.Applicative(function () {
    return applyList;
}, function (a) {
    return cons(a)(nil);
});
var applyNonEmptyList = new Control_Apply.Apply(function () {
    return functorNonEmptyList;
}, function (v) {
    return function (v1) {
        var v2 = Data_Lazy.force(v1);
        var v3 = Data_Lazy.force(v);
        return Data_Lazy.defer(function (v4) {
            return new Data_NonEmpty.NonEmpty(v3.value0(v2.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v3.value1)(cons(v2.value0)(nil)))(Control_Apply.apply(applyList)(cons(v3.value0)(v3.value1))(v2.value1)));
        });
    };
});
var bindNonEmptyList = new Control_Bind.Bind(function () {
    return applyNonEmptyList;
}, function (v) {
    return function (f) {
        var v1 = Data_Lazy.force(v);
        var v2 = Data_Lazy.force(Data_Newtype.unwrap(newtypeNonEmptyList)(f(v1.value0)));
        return Data_Lazy.defer(function (v3) {
            return new Data_NonEmpty.NonEmpty(v2.value0, Data_Semigroup.append(semigroupList)(v2.value1)(Control_Bind.bind(bindList)(v1.value1)(function ($224) {
                return toList(f($224));
            })));
        });
    };
});
var altNonEmptyList = new Control_Alt.Alt(function () {
    return functorNonEmptyList;
}, Data_Semigroup.append(semigroupNonEmptyList));
var altList = new Control_Alt.Alt(function () {
    return functorList;
}, Data_Semigroup.append(semigroupList));
var plusList = new Control_Plus.Plus(function () {
    return altList;
}, nil);
var alternativeList = new Control_Alternative.Alternative(function () {
    return applicativeList;
}, function () {
    return plusList;
});
var monadZeroList = new Control_MonadZero.MonadZero(function () {
    return alternativeList;
}, function () {
    return monadList;
});
var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
    return monadZeroList;
});
var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
    return applyNonEmptyList;
}, function (a) {
    return Data_Lazy.defer(function (v) {
        return Data_NonEmpty.singleton(plusList)(a);
    });
});
var monadNonEmptyList = new Control_Monad.Monad(function () {
    return applicativeNonEmptyList;
}, function () {
    return bindNonEmptyList;
});
module.exports = {
    List: List,
    Nil: Nil,
    Cons: Cons,
    step: step,
    nil: nil,
    cons: cons,
    NonEmptyList: NonEmptyList,
    toList: toList,
    newtypeList: newtypeList,
    showList: showList,
    eqList: eqList,
    eq1List: eq1List,
    ordList: ordList,
    ord1List: ord1List,
    lazyList: lazyList,
    semigroupList: semigroupList,
    monoidList: monoidList,
    functorList: functorList,
    functorWithIndexList: functorWithIndexList,
    foldableList: foldableList,
    foldableWithIndexList: foldableWithIndexList,
    unfoldable1List: unfoldable1List,
    unfoldableList: unfoldableList,
    traversableList: traversableList,
    traversableWithIndexList: traversableWithIndexList,
    applyList: applyList,
    applicativeList: applicativeList,
    bindList: bindList,
    monadList: monadList,
    altList: altList,
    plusList: plusList,
    alternativeList: alternativeList,
    monadZeroList: monadZeroList,
    monadPlusList: monadPlusList,
    extendList: extendList,
    newtypeNonEmptyList: newtypeNonEmptyList,
    eqNonEmptyList: eqNonEmptyList,
    ordNonEmptyList: ordNonEmptyList,
    showNonEmptyList: showNonEmptyList,
    functorNonEmptyList: functorNonEmptyList,
    applyNonEmptyList: applyNonEmptyList,
    applicativeNonEmptyList: applicativeNonEmptyList,
    bindNonEmptyList: bindNonEmptyList,
    monadNonEmptyList: monadNonEmptyList,
    altNonEmptyList: altNonEmptyList,
    extendNonEmptyList: extendNonEmptyList,
    comonadNonEmptyList: comonadNonEmptyList,
    semigroupNonEmptyList: semigroupNonEmptyList,
    foldableNonEmptyList: foldableNonEmptyList,
    traversableNonEmptyList: traversableNonEmptyList,
    unfoldable1NonEmptyList: unfoldable1NonEmptyList,
    functorWithIndexNonEmptyList: functorWithIndexNonEmptyList,
    foldableWithIndexNonEmptyList: foldableWithIndexNonEmptyList,
    traversableWithIndexNonEmptyList: traversableWithIndexNonEmptyList
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Comonad/index.js":21,"../Control.Extend/index.js":24,"../Control.Lazy/index.js":25,"../Control.Monad/index.js":55,"../Control.MonadPlus/index.js":56,"../Control.MonadZero/index.js":57,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.FoldableWithIndex/index.js":142,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.FunctorWithIndex/index.js":155,"../Data.Lazy/index.js":171,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.NonEmpty/index.js":221,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.Traversable/index.js":281,"../Data.TraversableWithIndex/index.js":282,"../Data.Tuple/index.js":283,"../Data.Unfoldable/index.js":285,"../Data.Unfoldable1/index.js":287,"../Prelude/index.js":385}],201:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Lazy = require("../Data.Lazy/index.js");
var Data_List_Lazy_Types = require("../Data.List.Lazy.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_NonEmpty = require("../Data.NonEmpty/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Prelude = require("../Prelude/index.js");
var Pattern = function (x) {
    return x;
};
var zipWith = function (f) {
    return function (xs) {
        return function (ys) {
            var go = function (v) {
                return function (v1) {
                    if (v instanceof Data_List_Lazy_Types.Nil) {
                        return Data_List_Lazy_Types.Nil.value;
                    };
                    if (v1 instanceof Data_List_Lazy_Types.Nil) {
                        return Data_List_Lazy_Types.Nil.value;
                    };
                    if (v instanceof Data_List_Lazy_Types.Cons && v1 instanceof Data_List_Lazy_Types.Cons) {
                        return new Data_List_Lazy_Types.Cons(f(v.value0)(v1.value0), zipWith(f)(v.value1)(v1.value1));
                    };
                    throw new Error("Failed pattern match at Data.List.Lazy (line 693, column 3 - line 693, column 35): " + [ v.constructor.name, v1.constructor.name ]);
                };
            };
            return Control_Apply.apply(Data_Lazy.applyLazy)(Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs)))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(ys));
        };
    };
};
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(Data_List_Lazy_Types.traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = zipWith(Data_Tuple.Tuple.create);
var updateAt = function (n) {
    return function (x) {
        return function (xs) {
            var go = function (v) {
                return function (v1) {
                    if (v1 instanceof Data_List_Lazy_Types.Nil) {
                        return Data_List_Lazy_Types.Nil.value;
                    };
                    if (v === 0 && v1 instanceof Data_List_Lazy_Types.Cons) {
                        return new Data_List_Lazy_Types.Cons(x, v1.value1);
                    };
                    if (v1 instanceof Data_List_Lazy_Types.Cons) {
                        return new Data_List_Lazy_Types.Cons(v1.value0, updateAt(v - 1 | 0)(x)(v1.value1));
                    };
                    throw new Error("Failed pattern match at Data.List.Lazy (line 367, column 3 - line 367, column 17): " + [ v.constructor.name, v1.constructor.name ]);
                };
            };
            return Data_Functor.map(Data_Lazy.functorLazy)(go(n))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
        };
    };
};
var unzip = Data_Foldable.foldr(Data_List_Lazy_Types.foldableList)(function (v) {
    return function (v1) {
        return new Data_Tuple.Tuple(Data_List_Lazy_Types.cons(v.value0)(v1.value0), Data_List_Lazy_Types.cons(v.value1)(v1.value1));
    };
})(new Data_Tuple.Tuple(Data_List_Lazy_Types.nil, Data_List_Lazy_Types.nil));
var uncons = function (xs) {
    var v = Data_List_Lazy_Types.step(xs);
    if (v instanceof Data_List_Lazy_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Lazy_Types.Cons) {
        return new Data_Maybe.Just({
            head: v.value0,
            tail: v.value1
        });
    };
    throw new Error("Failed pattern match at Data.List.Lazy (line 285, column 13 - line 287, column 44): " + [ v.constructor.name ]);
};
var toUnfoldable = function (dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
            return new Data_Tuple.Tuple(rec.head, rec.tail);
        })(uncons(xs));
    });
};
var takeWhile = function (p) {
    var go = function (v) {
        if (v instanceof Data_List_Lazy_Types.Cons && p(v.value0)) {
            return new Data_List_Lazy_Types.Cons(v.value0, takeWhile(p)(v.value1));
        };
        return Data_List_Lazy_Types.Nil.value;
    };
    return function ($249) {
        return Data_List_Lazy_Types.List(Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)($249)));
    };
};
var take = function (n) {
    var go = function (v) {
        return function (v1) {
            if (v1 instanceof Data_List_Lazy_Types.Nil) {
                return Data_List_Lazy_Types.Nil.value;
            };
            if (v1 instanceof Data_List_Lazy_Types.Cons) {
                return new Data_List_Lazy_Types.Cons(v1.value0, take(v - 1 | 0)(v1.value1));
            };
            throw new Error("Failed pattern match at Data.List.Lazy (line 517, column 3 - line 517, column 32): " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
    var $124 = n <= 0;
    if ($124) {
        return Data_Function["const"](Data_List_Lazy_Types.nil);
    };
    return function ($250) {
        return Data_List_Lazy_Types.List(Data_Functor.map(Data_Lazy.functorLazy)(go(n))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)($250)));
    };
};
var tail = function (xs) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
        return v.tail;
    })(uncons(xs));
};
var stripPrefix = function (dictEq) {
    return function (v) {
        return function (s) {
            var go = function (prefix) {
                return function (input) {
                    var v1 = Data_List_Lazy_Types.step(prefix);
                    if (v1 instanceof Data_List_Lazy_Types.Nil) {
                        return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Done(input));
                    };
                    if (v1 instanceof Data_List_Lazy_Types.Cons) {
                        var v2 = Data_List_Lazy_Types.step(input);
                        if (v2 instanceof Data_List_Lazy_Types.Cons && Data_Eq.eq(dictEq)(v1.value0)(v2.value0)) {
                            return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Loop({
                                a: v1.value1,
                                b: v2.value1
                            }));
                        };
                        return Data_Maybe.Nothing.value;
                    };
                    throw new Error("Failed pattern match at Data.List.Lazy (line 499, column 21 - line 503, column 19): " + [ v1.constructor.name ]);
                };
            };
            return Control_Monad_Rec_Class.tailRecM2(Control_Monad_Rec_Class.monadRecMaybe)(go)(v)(s);
        };
    };
};
var span = function (p) {
    return function (xs) {
        var v = uncons(xs);
        if (v instanceof Data_Maybe.Just && p(v.value0.head)) {
            var v1 = span(p)(v.value0.tail);
            return {
                init: Data_List_Lazy_Types.cons(v.value0.head)(v1.init),
                rest: v1.rest
            };
        };
        return {
            init: Data_List_Lazy_Types.nil,
            rest: xs
        };
    };
};
var snoc = function (xs) {
    return function (x) {
        return Data_Foldable.foldr(Data_List_Lazy_Types.foldableList)(Data_List_Lazy_Types.cons)(Data_List_Lazy_Types.cons(x)(Data_List_Lazy_Types.nil))(xs);
    };
};
var singleton = function (a) {
    return Data_List_Lazy_Types.cons(a)(Data_List_Lazy_Types.nil);
};
var showPattern = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Pattern " + (Data_Show.show(Data_List_Lazy_Types.showList(dictShow))(v) + ")");
    });
};
var scanrLazy = function (f) {
    return function (acc) {
        return function (xs) {
            var go = function (v) {
                if (v instanceof Data_List_Lazy_Types.Nil) {
                    return Data_List_Lazy_Types.Nil.value;
                };
                if (v instanceof Data_List_Lazy_Types.Cons) {
                    var acc$prime = f(v.value0)(acc);
                    return Data_List_Lazy_Types.Cons.create(acc$prime)(scanrLazy(f)(acc$prime)(v.value1));
                };
                throw new Error("Failed pattern match at Data.List.Lazy (line 764, column 5 - line 764, column 27): " + [ v.constructor.name ]);
            };
            return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
        };
    };
};
var reverse = function (xs) {
    return Control_Lazy.defer(Data_List_Lazy_Types.lazyList)(function (v) {
        return Data_Foldable.foldl(Data_List_Lazy_Types.foldableList)(Data_Function.flip(Data_List_Lazy_Types.cons))(Data_List_Lazy_Types.nil)(xs);
    });
};
var replicateM = function (dictMonad) {
    return function (n) {
        return function (m) {
            if (n < 1) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Lazy_Types.nil);
            };
            if (Data_Boolean.otherwise) {
                return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
                    return Control_Bind.bind(dictMonad.Bind1())(replicateM(dictMonad)(n - 1 | 0)(m))(function (v1) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Lazy_Types.cons(v)(v1));
                    });
                });
            };
            throw new Error("Failed pattern match at Data.List.Lazy (line 161, column 1 - line 161, column 62): " + [ n.constructor.name, m.constructor.name ]);
        };
    };
};
var repeat = function (x) {
    return Control_Lazy.fix(Data_List_Lazy_Types.lazyList)(function (xs) {
        return Data_List_Lazy_Types.cons(x)(xs);
    });
};
var replicate = function (i) {
    return function (xs) {
        return take(i)(repeat(xs));
    };
};
var range = function (start) {
    return function (end) {
        if (start > end) {
            var g = function (x) {
                if (x >= end) {
                    return new Data_Maybe.Just(new Data_Tuple.Tuple(x, x - 1 | 0));
                };
                if (Data_Boolean.otherwise) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.List.Lazy (line 148, column 13 - line 149, column 38): " + [ x.constructor.name ]);
            };
            return Data_Unfoldable.unfoldr(Data_List_Lazy_Types.unfoldableList)(g)(start);
        };
        if (Data_Boolean.otherwise) {
            var f = function (x) {
                if (x <= end) {
                    return new Data_Maybe.Just(new Data_Tuple.Tuple(x, x + 1 | 0));
                };
                if (Data_Boolean.otherwise) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.List.Lazy (line 153, column 5 - line 154, column 30): " + [ x.constructor.name ]);
            };
            return Data_Unfoldable.unfoldr(Data_List_Lazy_Types.unfoldableList)(f)(start);
        };
        throw new Error("Failed pattern match at Data.List.Lazy (line 145, column 1 - line 145, column 32): " + [ start.constructor.name, end.constructor.name ]);
    };
};
var partition = function (f) {
    var go = function (x) {
        return function (v) {
            var $154 = f(x);
            if ($154) {
                return {
                    yes: Data_List_Lazy_Types.cons(x)(v.yes),
                    no: v.no
                };
            };
            return {
                yes: v.yes,
                no: Data_List_Lazy_Types.cons(x)(v.no)
            };
        };
    };
    return Data_Foldable.foldr(Data_List_Lazy_Types.foldableList)(go)({
        yes: Data_List_Lazy_Types.nil,
        no: Data_List_Lazy_Types.nil
    });
};
var $$null = function ($251) {
    return Data_Maybe.isNothing(uncons($251));
};
var newtypePattern = new Data_Newtype.Newtype(function (n) {
    return n;
}, Pattern);
var mapMaybe = function (f) {
    var go = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Lazy_Types.Nil) {
                $tco_done = true;
                return Data_List_Lazy_Types.Nil.value;
            };
            if (v instanceof Data_List_Lazy_Types.Cons) {
                var v1 = f(v.value0);
                if (v1 instanceof Data_Maybe.Nothing) {
                    $copy_v = Data_List_Lazy_Types.step(v.value1);
                    return;
                };
                if (v1 instanceof Data_Maybe.Just) {
                    $tco_done = true;
                    return new Data_List_Lazy_Types.Cons(v1.value0, mapMaybe(f)(v.value1));
                };
                throw new Error("Failed pattern match at Data.List.Lazy (line 460, column 5 - line 462, column 39): " + [ v1.constructor.name ]);
            };
            throw new Error("Failed pattern match at Data.List.Lazy (line 458, column 3 - line 458, column 15): " + [ v.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return function ($252) {
        return Data_List_Lazy_Types.List(Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)($252)));
    };
};
var some = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_List_Lazy_Types.cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Lazy_Types.nil));
        };
    };
};
var length = Data_Foldable.foldl(Data_List_Lazy_Types.foldableList)(function (l) {
    return function (v) {
        return l + 1 | 0;
    };
})(0);
var last = (function () {
    var go = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Lazy_Types.Cons) {
                if ($$null(v.value1)) {
                    $tco_done = true;
                    return new Data_Maybe.Just(v.value0);
                };
                if (Data_Boolean.otherwise) {
                    $copy_v = Data_List_Lazy_Types.step(v.value1);
                    return;
                };
            };
            $tco_done = true;
            return Data_Maybe.Nothing.value;
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return function ($253) {
        return go(Data_List_Lazy_Types.step($253));
    };
})();
var iterate = function (f) {
    return function (x) {
        return Control_Lazy.fix(Data_List_Lazy_Types.lazyList)(function (xs) {
            return Data_List_Lazy_Types.cons(x)(Data_Functor.map(Data_List_Lazy_Types.functorList)(f)(xs));
        });
    };
};
var insertAt = function (v) {
    return function (x) {
        return function (xs) {
            if (v === 0) {
                return Data_List_Lazy_Types.cons(x)(xs);
            };
            var go = function (v1) {
                if (v1 instanceof Data_List_Lazy_Types.Nil) {
                    return new Data_List_Lazy_Types.Cons(x, Data_List_Lazy_Types.nil);
                };
                if (v1 instanceof Data_List_Lazy_Types.Cons) {
                    return new Data_List_Lazy_Types.Cons(v1.value0, insertAt(v - 1 | 0)(x)(v1.value1));
                };
                throw new Error("Failed pattern match at Data.List.Lazy (line 340, column 3 - line 340, column 22): " + [ v1.constructor.name ]);
            };
            return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
        };
    };
};
var init = (function () {
    var go = function (v) {
        if (v instanceof Data_List_Lazy_Types.Cons) {
            if ($$null(v.value1)) {
                return new Data_Maybe.Just(Data_List_Lazy_Types.nil);
            };
            if (Data_Boolean.otherwise) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(Data_List_Lazy_Types.cons(v.value0))(go(Data_List_Lazy_Types.step(v.value1)));
            };
        };
        return Data_Maybe.Nothing.value;
    };
    return function ($254) {
        return go(Data_List_Lazy_Types.step($254));
    };
})();
var index = function (xs) {
    var go = function ($copy_v) {
        return function ($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v instanceof Data_List_Lazy_Types.Nil) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                if (v instanceof Data_List_Lazy_Types.Cons && v1 === 0) {
                    $tco_done = true;
                    return new Data_Maybe.Just(v.value0);
                };
                if (v instanceof Data_List_Lazy_Types.Cons) {
                    $tco_var_v = Data_List_Lazy_Types.step(v.value1);
                    $copy_v1 = v1 - 1 | 0;
                    return;
                };
                throw new Error("Failed pattern match at Data.List.Lazy (line 299, column 3 - line 299, column 21): " + [ v.constructor.name, v1.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
            };
            return $tco_result;
        };
    };
    return go(Data_List_Lazy_Types.step(xs));
};
var head = function (xs) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
        return v.head;
    })(uncons(xs));
};
var transpose = function (xs) {
    var v = uncons(xs);
    if (v instanceof Data_Maybe.Nothing) {
        return xs;
    };
    if (v instanceof Data_Maybe.Just) {
        var v1 = uncons(v.value0.head);
        if (v1 instanceof Data_Maybe.Nothing) {
            return transpose(v.value0.tail);
        };
        if (v1 instanceof Data_Maybe.Just) {
            return Data_List_Lazy_Types.cons(Data_List_Lazy_Types.cons(v1.value0.head)(mapMaybe(head)(v.value0.tail)))(transpose(Data_List_Lazy_Types.cons(v1.value0.tail)(mapMaybe(tail)(v.value0.tail))));
        };
        throw new Error("Failed pattern match at Data.List.Lazy (line 734, column 7 - line 738, column 72): " + [ v1.constructor.name ]);
    };
    throw new Error("Failed pattern match at Data.List.Lazy (line 730, column 3 - line 738, column 72): " + [ v.constructor.name ]);
};
var groupBy = function (eq) {
    var go = function (v) {
        if (v instanceof Data_List_Lazy_Types.Nil) {
            return Data_List_Lazy_Types.Nil.value;
        };
        if (v instanceof Data_List_Lazy_Types.Cons) {
            var v1 = span(eq(v.value0))(v.value1);
            return new Data_List_Lazy_Types.Cons(Data_Lazy.defer(function (v2) {
                return new Data_NonEmpty.NonEmpty(v.value0, v1.init);
            }), groupBy(eq)(v1.rest));
        };
        throw new Error("Failed pattern match at Data.List.Lazy (line 588, column 3 - line 588, column 15): " + [ v.constructor.name ]);
    };
    return function ($255) {
        return Data_List_Lazy_Types.List(Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)($255)));
    };
};
var group = function (dictEq) {
    return groupBy(Data_Eq.eq(dictEq));
};
var fromStep = function ($256) {
    return Data_List_Lazy_Types.List(Control_Applicative.pure(Data_Lazy.applicativeLazy)($256));
};
var insertBy = function (cmp) {
    return function (x) {
        return function (xs) {
            var go = function (v) {
                if (v instanceof Data_List_Lazy_Types.Nil) {
                    return new Data_List_Lazy_Types.Cons(x, Data_List_Lazy_Types.nil);
                };
                if (v instanceof Data_List_Lazy_Types.Cons) {
                    var v1 = cmp(x)(v.value0);
                    if (v1 instanceof Data_Ordering.GT) {
                        return new Data_List_Lazy_Types.Cons(v.value0, insertBy(cmp)(x)(v.value1));
                    };
                    return new Data_List_Lazy_Types.Cons(x, fromStep(v));
                };
                throw new Error("Failed pattern match at Data.List.Lazy (line 235, column 3 - line 235, column 22): " + [ v.constructor.name ]);
            };
            return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
        };
    };
};
var insert = function (dictOrd) {
    return insertBy(Data_Ord.compare(dictOrd));
};
var fromFoldable = function (dictFoldable) {
    return Data_Foldable.foldr(dictFoldable)(Data_List_Lazy_Types.cons)(Data_List_Lazy_Types.nil);
};
var foldrLazy = function (dictLazy) {
    return function (op) {
        return function (z) {
            var go = function (xs) {
                var v = Data_List_Lazy_Types.step(xs);
                if (v instanceof Data_List_Lazy_Types.Cons) {
                    return Control_Lazy.defer(dictLazy)(function (v1) {
                        return op(v.value0)(go(v.value1));
                    });
                };
                if (v instanceof Data_List_Lazy_Types.Nil) {
                    return z;
                };
                throw new Error("Failed pattern match at Data.List.Lazy (line 756, column 13 - line 758, column 15): " + [ v.constructor.name ]);
            };
            return go;
        };
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (a) {
            return function (xs) {
                var v = uncons(xs);
                if (v instanceof Data_Maybe.Nothing) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(a);
                };
                if (v instanceof Data_Maybe.Just) {
                    return Control_Bind.bind(dictMonad.Bind1())(f(a)(v.value0.head))(function (a$prime) {
                        return foldM(dictMonad)(f)(a$prime)(v.value0.tail);
                    });
                };
                throw new Error("Failed pattern match at Data.List.Lazy (line 747, column 5 - line 750, column 54): " + [ v.constructor.name ]);
            };
        };
    };
};
var findIndex = function (fn) {
    var go = function (n) {
        return function (list) {
            return Control_Bind.bind(Data_Maybe.bindMaybe)(uncons(list))(function (v) {
                var $207 = fn(v.head);
                if ($207) {
                    return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(n);
                };
                return go(n + 1 | 0)(v.tail);
            });
        };
    };
    return go(0);
};
var findLastIndex = function (fn) {
    return function (xs) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
            return (length(xs) - 1 | 0) - v | 0;
        })(findIndex(fn)(reverse(xs)));
    };
};
var filterM = function (dictMonad) {
    return function (p) {
        return function (list) {
            var v = uncons(list);
            if (v instanceof Data_Maybe.Nothing) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Lazy_Types.nil);
            };
            if (v instanceof Data_Maybe.Just) {
                return Control_Bind.bind(dictMonad.Bind1())(p(v.value0.head))(function (v1) {
                    return Control_Bind.bind(dictMonad.Bind1())(filterM(dictMonad)(p)(v.value0.tail))(function (v2) {
                        return Control_Applicative.pure(dictMonad.Applicative0())((function () {
                            if (v1) {
                                return Data_List_Lazy_Types.cons(v.value0.head)(v2);
                            };
                            return v2;
                        })());
                    });
                });
            };
            throw new Error("Failed pattern match at Data.List.Lazy (line 443, column 5 - line 448, column 48): " + [ v.constructor.name ]);
        };
    };
};
var filter = function (p) {
    var go = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Lazy_Types.Nil) {
                $tco_done = true;
                return Data_List_Lazy_Types.Nil.value;
            };
            if (v instanceof Data_List_Lazy_Types.Cons) {
                if (p(v.value0)) {
                    $tco_done = true;
                    return new Data_List_Lazy_Types.Cons(v.value0, filter(p)(v.value1));
                };
                if (Data_Boolean.otherwise) {
                    $copy_v = Data_List_Lazy_Types.step(v.value1);
                    return;
                };
            };
            throw new Error("Failed pattern match at Data.List.Lazy (line 428, column 3 - line 428, column 15): " + [ v.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return function ($257) {
        return Data_List_Lazy_Types.List(Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)($257)));
    };
};
var intersectBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return filter(function (x) {
                return Data_Foldable.any(Data_List_Lazy_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(eq(x))(ys);
            })(xs);
        };
    };
};
var intersect = function (dictEq) {
    return intersectBy(Data_Eq.eq(dictEq));
};
var nubBy = function (eq) {
    var go = function (v) {
        if (v instanceof Data_List_Lazy_Types.Nil) {
            return Data_List_Lazy_Types.Nil.value;
        };
        if (v instanceof Data_List_Lazy_Types.Cons) {
            return new Data_List_Lazy_Types.Cons(v.value0, nubBy(eq)(filter(function (y) {
                return !eq(v.value0)(y);
            })(v.value1)));
        };
        throw new Error("Failed pattern match at Data.List.Lazy (line 621, column 3 - line 621, column 15): " + [ v.constructor.name ]);
    };
    return function ($258) {
        return Data_List_Lazy_Types.List(Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)($258)));
    };
};
var nub = function (dictEq) {
    return nubBy(Data_Eq.eq(dictEq));
};
var eqPattern = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            return Data_Eq.eq(Data_List_Lazy_Types.eqList(dictEq))(x)(y);
        };
    });
};
var ordPattern = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqPattern(dictOrd.Eq0());
    }, function (x) {
        return function (y) {
            return Data_Ord.compare(Data_List_Lazy_Types.ordList(dictOrd))(x)(y);
        };
    });
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var dropWhile = function (p) {
    var go = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Lazy_Types.Cons && p(v.value0)) {
                $copy_v = Data_List_Lazy_Types.step(v.value1);
                return;
            };
            $tco_done = true;
            return fromStep(v);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return function ($259) {
        return go(Data_List_Lazy_Types.step($259));
    };
};
var drop = function (n) {
    var go = function ($copy_v) {
        return function ($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v === 0) {
                    $tco_done = true;
                    return v1;
                };
                if (v1 instanceof Data_List_Lazy_Types.Nil) {
                    $tco_done = true;
                    return Data_List_Lazy_Types.Nil.value;
                };
                if (v1 instanceof Data_List_Lazy_Types.Cons) {
                    $tco_var_v = v - 1 | 0;
                    $copy_v1 = Data_List_Lazy_Types.step(v1.value1);
                    return;
                };
                throw new Error("Failed pattern match at Data.List.Lazy (line 536, column 3 - line 536, column 15): " + [ v.constructor.name, v1.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
            };
            return $tco_result;
        };
    };
    return function ($260) {
        return Data_List_Lazy_Types.List(Data_Functor.map(Data_Lazy.functorLazy)(go(n))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)($260)));
    };
};
var slice = function (start) {
    return function (end) {
        return function (xs) {
            return take(end - start | 0)(drop(start)(xs));
        };
    };
};
var deleteBy = function (eq) {
    return function (x) {
        return function (xs) {
            var go = function (v) {
                if (v instanceof Data_List_Lazy_Types.Nil) {
                    return Data_List_Lazy_Types.Nil.value;
                };
                if (v instanceof Data_List_Lazy_Types.Cons) {
                    if (eq(x)(v.value0)) {
                        return Data_List_Lazy_Types.step(v.value1);
                    };
                    if (Data_Boolean.otherwise) {
                        return new Data_List_Lazy_Types.Cons(v.value0, deleteBy(eq)(x)(v.value1));
                    };
                };
                throw new Error("Failed pattern match at Data.List.Lazy (line 650, column 3 - line 650, column 15): " + [ v.constructor.name ]);
            };
            return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Data_Semigroup.append(Data_List_Lazy_Types.semigroupList)(xs)(Data_Foldable.foldl(Data_List_Lazy_Types.foldableList)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (dictEq) {
    return unionBy(Data_Eq.eq(dictEq));
};
var deleteAt = function (n) {
    return function (xs) {
        var go = function (v) {
            return function (v1) {
                if (v1 instanceof Data_List_Lazy_Types.Nil) {
                    return Data_List_Lazy_Types.Nil.value;
                };
                if (v === 0 && v1 instanceof Data_List_Lazy_Types.Cons) {
                    return Data_List_Lazy_Types.step(v1.value1);
                };
                if (v1 instanceof Data_List_Lazy_Types.Cons) {
                    return new Data_List_Lazy_Types.Cons(v1.value0, deleteAt(v - 1 | 0)(v1.value1));
                };
                throw new Error("Failed pattern match at Data.List.Lazy (line 353, column 3 - line 353, column 17): " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        return Data_Functor.map(Data_Lazy.functorLazy)(go(n))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
    };
};
var $$delete = function (dictEq) {
    return deleteBy(Data_Eq.eq(dictEq));
};
var difference = function (dictEq) {
    return Data_Foldable.foldl(Data_List_Lazy_Types.foldableList)(Data_Function.flip($$delete(dictEq)));
};
var cycle = function (xs) {
    return Control_Lazy.fix(Data_List_Lazy_Types.lazyList)(function (ys) {
        return Data_Semigroup.append(Data_List_Lazy_Types.semigroupList)(xs)(ys);
    });
};
var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Lazy_Types.bindList));
var concat = function (v) {
    return Control_Bind.bind(Data_List_Lazy_Types.bindList)(v)(Control_Category.identity(Control_Category.categoryFn));
};
var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));
var alterAt = function (n) {
    return function (f) {
        return function (xs) {
            var go = function (v) {
                return function (v1) {
                    if (v1 instanceof Data_List_Lazy_Types.Nil) {
                        return Data_List_Lazy_Types.Nil.value;
                    };
                    if (v === 0 && v1 instanceof Data_List_Lazy_Types.Cons) {
                        var v2 = f(v1.value0);
                        if (v2 instanceof Data_Maybe.Nothing) {
                            return Data_List_Lazy_Types.step(v1.value1);
                        };
                        if (v2 instanceof Data_Maybe.Just) {
                            return new Data_List_Lazy_Types.Cons(v2.value0, v1.value1);
                        };
                        throw new Error("Failed pattern match at Data.List.Lazy (line 394, column 22 - line 396, column 26): " + [ v2.constructor.name ]);
                    };
                    if (v1 instanceof Data_List_Lazy_Types.Cons) {
                        return new Data_List_Lazy_Types.Cons(v1.value0, alterAt(v - 1 | 0)(f)(v1.value1));
                    };
                    throw new Error("Failed pattern match at Data.List.Lazy (line 393, column 3 - line 393, column 17): " + [ v.constructor.name, v1.constructor.name ]);
                };
            };
            return Data_Functor.map(Data_Lazy.functorLazy)(go(n))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
        };
    };
};
var modifyAt = function (n) {
    return function (f) {
        return alterAt(n)(function ($261) {
            return Data_Maybe.Just.create(f($261));
        });
    };
};
module.exports = {
    toUnfoldable: toUnfoldable,
    fromFoldable: fromFoldable,
    singleton: singleton,
    range: range,
    replicate: replicate,
    replicateM: replicateM,
    some: some,
    many: many,
    repeat: repeat,
    iterate: iterate,
    cycle: cycle,
    "null": $$null,
    length: length,
    snoc: snoc,
    insert: insert,
    insertBy: insertBy,
    head: head,
    last: last,
    tail: tail,
    init: init,
    uncons: uncons,
    index: index,
    elemIndex: elemIndex,
    elemLastIndex: elemLastIndex,
    findIndex: findIndex,
    findLastIndex: findLastIndex,
    insertAt: insertAt,
    deleteAt: deleteAt,
    updateAt: updateAt,
    modifyAt: modifyAt,
    alterAt: alterAt,
    reverse: reverse,
    concat: concat,
    concatMap: concatMap,
    filter: filter,
    filterM: filterM,
    mapMaybe: mapMaybe,
    catMaybes: catMaybes,
    Pattern: Pattern,
    stripPrefix: stripPrefix,
    slice: slice,
    take: take,
    takeWhile: takeWhile,
    drop: drop,
    dropWhile: dropWhile,
    span: span,
    group: group,
    groupBy: groupBy,
    partition: partition,
    nub: nub,
    nubBy: nubBy,
    union: union,
    unionBy: unionBy,
    "delete": $$delete,
    deleteBy: deleteBy,
    difference: difference,
    intersect: intersect,
    intersectBy: intersectBy,
    zipWith: zipWith,
    zipWithA: zipWithA,
    zip: zip,
    unzip: unzip,
    transpose: transpose,
    foldM: foldM,
    foldrLazy: foldrLazy,
    scanrLazy: scanrLazy,
    eqPattern: eqPattern,
    ordPattern: ordPattern,
    newtypePattern: newtypePattern,
    showPattern: showPattern
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Lazy/index.js":25,"../Control.Monad.Rec.Class/index.js":43,"../Control.Semigroupoid/index.js":61,"../Data.Boolean/index.js":110,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Lazy/index.js":171,"../Data.List.Lazy.Types/index.js":200,"../Data.Maybe/index.js":210,"../Data.Newtype/index.js":220,"../Data.NonEmpty/index.js":221,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.Traversable/index.js":281,"../Data.Tuple/index.js":283,"../Data.Unfoldable/index.js":285,"../Prelude/index.js":385}],202:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_NonEmpty = require("../Data.NonEmpty/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var zipWith = function (f) {
    return function (v) {
        return function (v1) {
            return new Data_NonEmpty.NonEmpty(f(v.value0)(v1.value0), Data_List.zipWith(f)(v.value1)(v1.value1));
        };
    };
};
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Semigroup_Traversable.sequence1(Data_List_Types.traversable1NonEmptyList)(dictApplicative.Apply0())(zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = zipWith(Data_Tuple.Tuple.create);
var wrappedOperation2 = function (name) {
    return function (f) {
        return function (v) {
            return function (v1) {
                var v2 = f(new Data_List_Types.Cons(v.value0, v.value1))(new Data_List_Types.Cons(v1.value0, v1.value1));
                if (v2 instanceof Data_List_Types.Cons) {
                    return new Data_NonEmpty.NonEmpty(v2.value0, v2.value1);
                };
                if (v2 instanceof Data_List_Types.Nil) {
                    return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
                };
                throw new Error("Failed pattern match at Data.List.NonEmpty (line 104, column 3 - line 106, column 81): " + [ v2.constructor.name ]);
            };
        };
    };
};
var wrappedOperation = function (name) {
    return function (f) {
        return function (v) {
            var v1 = f(new Data_List_Types.Cons(v.value0, v.value1));
            if (v1 instanceof Data_List_Types.Cons) {
                return new Data_NonEmpty.NonEmpty(v1.value0, v1.value1);
            };
            if (v1 instanceof Data_List_Types.Nil) {
                return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
            };
            throw new Error("Failed pattern match at Data.List.NonEmpty (line 91, column 3 - line 93, column 81): " + [ v1.constructor.name ]);
        };
    };
};
var updateAt = function (i) {
    return function (a) {
        return function (v) {
            if (i === 0) {
                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, v.value1));
            };
            if (Data_Boolean.otherwise) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function ($161) {
                    return Data_List_Types.NonEmptyList((function (v1) {
                        return new Data_NonEmpty.NonEmpty(v.value0, v1);
                    })($161));
                })(Data_List.updateAt(i - 1 | 0)(a)(v.value1));
            };
            throw new Error("Failed pattern match at Data.List.NonEmpty (line 197, column 1 - line 197, column 75): " + [ i.constructor.name, a.constructor.name, v.constructor.name ]);
        };
    };
};
var unzip = function (ts) {
    return new Data_Tuple.Tuple(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Tuple.fst)(ts), Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Tuple.snd)(ts));
};
var unsnoc = function (v) {
    var v1 = Data_List.unsnoc(v.value1);
    if (v1 instanceof Data_Maybe.Nothing) {
        return {
            init: Data_List_Types.Nil.value,
            last: v.value0
        };
    };
    if (v1 instanceof Data_Maybe.Just) {
        return {
            init: new Data_List_Types.Cons(v.value0, v1.value0.init),
            last: v1.value0.last
        };
    };
    throw new Error("Failed pattern match at Data.List.NonEmpty (line 159, column 35 - line 161, column 50): " + [ v1.constructor.name ]);
};
var unionBy = function ($162) {
    return wrappedOperation2("unionBy")(Data_List.unionBy($162));
};
var union = function (dictEq) {
    return wrappedOperation2("union")(Data_List.union(dictEq));
};
var uncons = function (v) {
    return {
        head: v.value0,
        tail: v.value1
    };
};
var toList = function (v) {
    return new Data_List_Types.Cons(v.value0, v.value1);
};
var toUnfoldable = function (dictUnfoldable) {
    return function ($163) {
        return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
                return new Data_Tuple.Tuple(rec.head, rec.tail);
            })(Data_List.uncons(xs));
        })(toList($163));
    };
};
var tail = function (v) {
    return v.value1;
};
var sortBy = function ($164) {
    return wrappedOperation("sortBy")(Data_List.sortBy($164));
};
var sort = function (dictOrd) {
    return function (xs) {
        return sortBy(Data_Ord.compare(dictOrd))(xs);
    };
};
var snoc = function (v) {
    return function (y) {
        return new Data_NonEmpty.NonEmpty(v.value0, Data_List.snoc(v.value1)(y));
    };
};
var singleton = function ($165) {
    return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($165));
};
var snoc$prime = function (v) {
    return function (y) {
        if (v instanceof Data_List_Types.Cons) {
            return new Data_NonEmpty.NonEmpty(v.value0, Data_List.snoc(v.value1)(y));
        };
        if (v instanceof Data_List_Types.Nil) {
            return singleton(y);
        };
        throw new Error("Failed pattern match at Data.List.NonEmpty (line 139, column 1 - line 139, column 51): " + [ v.constructor.name, y.constructor.name ]);
    };
};
var reverse = wrappedOperation("reverse")(Data_List.reverse);
var nubBy = function ($166) {
    return wrappedOperation("nubBy")(Data_List.nubBy($166));
};
var nub = function (dictEq) {
    return wrappedOperation("nub")(Data_List.nub(dictEq));
};
var modifyAt = function (i) {
    return function (f) {
        return function (v) {
            if (i === 0) {
                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(f(v.value0), v.value1));
            };
            if (Data_Boolean.otherwise) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function ($167) {
                    return Data_List_Types.NonEmptyList((function (v1) {
                        return new Data_NonEmpty.NonEmpty(v.value0, v1);
                    })($167));
                })(Data_List.modifyAt(i - 1 | 0)(f)(v.value1));
            };
            throw new Error("Failed pattern match at Data.List.NonEmpty (line 202, column 1 - line 202, column 82): " + [ i.constructor.name, f.constructor.name, v.constructor.name ]);
        };
    };
};
var mapWithIndex = Data_FunctorWithIndex.mapWithIndex(Data_List_Types.functorWithIndexNonEmptyList);
var lift = function (f) {
    return function (v) {
        return f(new Data_List_Types.Cons(v.value0, v.value1));
    };
};
var mapMaybe = function ($168) {
    return lift(Data_List.mapMaybe($168));
};
var partition = function ($169) {
    return lift(Data_List.partition($169));
};
var span = function ($170) {
    return lift(Data_List.span($170));
};
var take = function ($171) {
    return lift(Data_List.take($171));
};
var takeWhile = function ($172) {
    return lift(Data_List.takeWhile($172));
};
var length = function (v) {
    return 1 + Data_List.length(v.value1) | 0;
};
var last = function (v) {
    return Data_Maybe.fromMaybe(v.value0)(Data_List.last(v.value1));
};
var intersectBy = function ($173) {
    return wrappedOperation2("intersectBy")(Data_List.intersectBy($173));
};
var intersect = function (dictEq) {
    return wrappedOperation2("intersect")(Data_List.intersect(dictEq));
};
var insertAt = function (i) {
    return function (a) {
        return function (v) {
            if (i === 0) {
                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, new Data_List_Types.Cons(v.value0, v.value1)));
            };
            if (Data_Boolean.otherwise) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function ($174) {
                    return Data_List_Types.NonEmptyList((function (v1) {
                        return new Data_NonEmpty.NonEmpty(v.value0, v1);
                    })($174));
                })(Data_List.insertAt(i - 1 | 0)(a)(v.value1));
            };
            throw new Error("Failed pattern match at Data.List.NonEmpty (line 192, column 1 - line 192, column 75): " + [ i.constructor.name, a.constructor.name, v.constructor.name ]);
        };
    };
};
var init = function (v) {
    return Data_Maybe.maybe(Data_List_Types.Nil.value)(function (v1) {
        return new Data_List_Types.Cons(v.value0, v1);
    })(Data_List.init(v.value1));
};
var index = function (v) {
    return function (i) {
        if (i === 0) {
            return new Data_Maybe.Just(v.value0);
        };
        if (Data_Boolean.otherwise) {
            return Data_List.index(v.value1)(i - 1 | 0);
        };
        throw new Error("Failed pattern match at Data.List.NonEmpty (line 166, column 1 - line 166, column 52): " + [ v.constructor.name, i.constructor.name ]);
    };
};
var head = function (v) {
    return v.value0;
};
var groupBy = function ($175) {
    return wrappedOperation("groupBy")(Data_List.groupBy($175));
};
var group$prime = function (dictOrd) {
    return wrappedOperation("group'")(Data_List["group'"](dictOrd));
};
var group = function (dictEq) {
    return wrappedOperation("group")(Data_List.group(dictEq));
};
var fromList = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(v.value0, v.value1));
    };
    throw new Error("Failed pattern match at Data.List.NonEmpty (line 120, column 1 - line 120, column 57): " + [ v.constructor.name ]);
};
var fromFoldable = function (dictFoldable) {
    return function ($176) {
        return fromList(Data_List.fromFoldable(dictFoldable)($176));
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (a) {
            return function (v) {
                return Control_Bind.bind(dictMonad.Bind1())(f(a)(v.value0))(function (a$prime) {
                    return Data_List.foldM(dictMonad)(f)(a$prime)(v.value1);
                });
            };
        };
    };
};
var findLastIndex = function (f) {
    return function (v) {
        var v1 = Data_List.findLastIndex(f)(v.value1);
        if (v1 instanceof Data_Maybe.Just) {
            return new Data_Maybe.Just(v1.value0 + 1 | 0);
        };
        if (v1 instanceof Data_Maybe.Nothing) {
            if (f(v.value0)) {
                return new Data_Maybe.Just(0);
            };
            if (Data_Boolean.otherwise) {
                return Data_Maybe.Nothing.value;
            };
        };
        throw new Error("Failed pattern match at Data.List.NonEmpty (line 186, column 3 - line 190, column 29): " + [ v1.constructor.name ]);
    };
};
var findIndex = function (f) {
    return function (v) {
        if (f(v.value0)) {
            return new Data_Maybe.Just(0);
        };
        if (Data_Boolean.otherwise) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
                return v1 + 1 | 0;
            })(Data_List.findIndex(f)(v.value1));
        };
        throw new Error("Failed pattern match at Data.List.NonEmpty (line 179, column 1 - line 179, column 69): " + [ f.constructor.name, v.constructor.name ]);
    };
};
var filterM = function (dictMonad) {
    return function ($177) {
        return lift(Data_List.filterM(dictMonad)($177));
    };
};
var filter = function ($178) {
    return lift(Data_List.filter($178));
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var dropWhile = function ($179) {
    return lift(Data_List.dropWhile($179));
};
var drop = function ($180) {
    return lift(Data_List.drop($180));
};
var cons$prime = function (x) {
    return function (xs) {
        return new Data_NonEmpty.NonEmpty(x, xs);
    };
};
var cons = function (y) {
    return function (v) {
        return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));
    };
};
var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindNonEmptyList));
var concat = function (v) {
    return Control_Bind.bind(Data_List_Types.bindNonEmptyList)(v)(Control_Category.identity(Control_Category.categoryFn));
};
var catMaybes = lift(Data_List.catMaybes);
var appendFoldable = function (dictFoldable) {
    return function (v) {
        return function (ys) {
            return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(Data_List_Types.semigroupList)(v.value1)(Data_List.fromFoldable(dictFoldable)(ys)));
        };
    };
};
module.exports = {
    toUnfoldable: toUnfoldable,
    fromFoldable: fromFoldable,
    fromList: fromList,
    toList: toList,
    singleton: singleton,
    length: length,
    cons: cons,
    "cons'": cons$prime,
    snoc: snoc,
    "snoc'": snoc$prime,
    head: head,
    last: last,
    tail: tail,
    init: init,
    uncons: uncons,
    unsnoc: unsnoc,
    index: index,
    elemIndex: elemIndex,
    elemLastIndex: elemLastIndex,
    findIndex: findIndex,
    findLastIndex: findLastIndex,
    insertAt: insertAt,
    updateAt: updateAt,
    modifyAt: modifyAt,
    reverse: reverse,
    concat: concat,
    concatMap: concatMap,
    filter: filter,
    filterM: filterM,
    mapMaybe: mapMaybe,
    catMaybes: catMaybes,
    appendFoldable: appendFoldable,
    mapWithIndex: mapWithIndex,
    sort: sort,
    sortBy: sortBy,
    take: take,
    takeWhile: takeWhile,
    drop: drop,
    dropWhile: dropWhile,
    span: span,
    group: group,
    "group'": group$prime,
    groupBy: groupBy,
    partition: partition,
    nub: nub,
    nubBy: nubBy,
    union: union,
    unionBy: unionBy,
    intersect: intersect,
    intersectBy: intersectBy,
    zipWith: zipWith,
    zipWithA: zipWithA,
    zip: zip,
    unzip: unzip,
    foldM: foldM
};

},{"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Semigroupoid/index.js":61,"../Data.Boolean/index.js":110,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.FunctorWithIndex/index.js":155,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Maybe/index.js":210,"../Data.NonEmpty/index.js":221,"../Data.Ord/index.js":229,"../Data.Ring/index.js":242,"../Data.Semigroup.Foldable/index.js":244,"../Data.Semigroup.Traversable/index.js":246,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Traversable/index.js":281,"../Data.Tuple/index.js":283,"../Data.Unfoldable/index.js":285,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385}],203:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_NonEmpty = require("../Data.NonEmpty/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");
var Prelude = require("../Prelude/index.js");
var Nil = (function () {
    function Nil() {

    };
    Nil.value = new Nil();
    return Nil;
})();
var Cons = (function () {
    function Cons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Cons.create = function (value0) {
        return function (value1) {
            return new Cons(value0, value1);
        };
    };
    return Cons;
})();
var NonEmptyList = function (x) {
    return x;
};
var toList = function (v) {
    return new Cons(v.value0, v.value1);
};
var newtypeNonEmptyList = new Data_Newtype.Newtype(function (n) {
    return n;
}, NonEmptyList);
var nelCons = function (a) {
    return function (v) {
        return new Data_NonEmpty.NonEmpty(a, new Cons(v.value0, v.value1));
    };
};
var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldl(foldableList)(function (acc) {
            return function ($174) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f($174));
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
}, function (f) {
    var go = function ($copy_b) {
        return function ($copy_v) {
            var $tco_var_b = $copy_b;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(b, v) {
                if (v instanceof Nil) {
                    $tco_done = true;
                    return b;
                };
                if (v instanceof Cons) {
                    $tco_var_b = f(b)(v.value0);
                    $copy_v = v.value1;
                    return;
                };
                throw new Error("Failed pattern match at Data.List.Types (line 81, column 12 - line 83, column 30): " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_b, $copy_v);
            };
            return $tco_result;
        };
    };
    return go;
}, function (f) {
    return function (b) {
        var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
        return function ($175) {
            return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev($175));
        };
    };
});
var foldableNonEmptyList = Data_NonEmpty.foldableNonEmpty(foldableList);
var foldableWithIndexList = new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableList;
}, function (dictMonoid) {
    return function (f) {
        return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
            return function (acc) {
                return function ($176) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(i)($176));
                };
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
}, function (f) {
    return function (acc) {
        return function ($177) {
            return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v) {
                return function (a) {
                    return new Data_Tuple.Tuple(v.value0 + 1 | 0, f(v.value0)(v.value1)(a));
                };
            })(new Data_Tuple.Tuple(0, acc))($177));
        };
    };
}, function (f) {
    return function (b) {
        return function (xs) {
            var v = (function () {
                var rev = Data_Foldable.foldl(foldableList)(function (v1) {
                    return function (a) {
                        return new Data_Tuple.Tuple(v1.value0 + 1 | 0, new Cons(a, v1.value1));
                    };
                });
                return rev(new Data_Tuple.Tuple(0, Nil.value))(xs);
            })();
            return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v1) {
                return function (a) {
                    return new Data_Tuple.Tuple(v1.value0 - 1 | 0, f(v1.value0 - 1 | 0)(a)(v1.value1));
                };
            })(new Data_Tuple.Tuple(v.value0, b))(v.value1));
        };
    };
});
var foldableWithIndexNonEmptyList = new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableNonEmptyList;
}, function (dictMonoid) {
    return function (f) {
        return function (v) {
            return Data_FoldableWithIndex.foldMapWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(dictMonoid)(function ($178) {
                return f(Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1))($178));
            })(v);
        };
    };
}, function (f) {
    return function (b) {
        return function (v) {
            return Data_FoldableWithIndex.foldlWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(function ($179) {
                return f(Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1))($179));
            })(b)(v);
        };
    };
}, function (f) {
    return function (b) {
        return function (v) {
            return Data_FoldableWithIndex.foldrWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(function ($180) {
                return f(Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1))($180));
            })(b)(v);
        };
    };
});
var functorList = new Data_Functor.Functor(function (f) {
    return Data_Foldable.foldr(foldableList)(function (x) {
        return function (acc) {
            return new Cons(f(x), acc);
        };
    })(Nil.value);
});
var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
var functorWithIndexList = new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorList;
}, function (f) {
    return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList)(function (i) {
        return function (x) {
            return function (acc) {
                return new Cons(f(i)(x), acc);
            };
        };
    })(Nil.value);
});
var functorWithIndexNonEmptyList = new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorNonEmptyList;
}, function (fn) {
    return function (v) {
        return NonEmptyList(Data_FunctorWithIndex.mapWithIndex(Data_NonEmpty.functorWithIndex(functorWithIndexList))(function ($181) {
            return fn(Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1))($181));
        })(v));
    };
});
var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
    return function (ys) {
        return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
    };
});
var monoidList = new Data_Monoid.Monoid(function () {
    return semigroupList;
}, Nil.value);
var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function (v) {
    return function (as$prime) {
        return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
    };
});
var showList = function (dictShow) {
    return new Data_Show.Show(function (v) {
        if (v instanceof Nil) {
            return "Nil";
        };
        return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
    });
};
var showNonEmptyList = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(NonEmptyList " + (Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)))(v) + ")");
    });
};
var traversableList = new Data_Traversable.Traversable(function () {
    return foldableList;
}, function () {
    return functorList;
}, function (dictApplicative) {
    return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
}, function (dictApplicative) {
    return function (f) {
        return function ($182) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value))(Data_Foldable.foldl(foldableList)(function (acc) {
                return function ($183) {
                    return Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc)(f($183));
                };
            })(Control_Applicative.pure(dictApplicative)(Nil.value))($182));
        };
    };
});
var traversableNonEmptyList = Data_NonEmpty.traversableNonEmpty(traversableList);
var traversableWithIndexList = new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexList;
}, function () {
    return functorWithIndexList;
}, function () {
    return traversableList;
}, function (dictApplicative) {
    return function (f) {
        var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
        return function ($184) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(rev)(Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
                return function (acc) {
                    return function ($185) {
                        return Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc)(f(i)($185));
                    };
                };
            })(Control_Applicative.pure(dictApplicative)(Nil.value))($184));
        };
    };
});
var traversableWithIndexNonEmptyList = new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexNonEmptyList;
}, function () {
    return functorWithIndexNonEmptyList;
}, function () {
    return traversableNonEmptyList;
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(NonEmptyList)(Data_TraversableWithIndex.traverseWithIndex(Data_NonEmpty.traversableWithIndexNonEmpty(traversableWithIndexList))(dictApplicative)(function ($186) {
                return f(Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1))($186));
            })(v));
        };
    };
});
var unfoldable1List = new Data_Unfoldable1.Unfoldable1(function (f) {
    return function (b) {
        var go = function ($copy_source) {
            return function ($copy_memo) {
                var $tco_var_source = $copy_source;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(source, memo) {
                    var v = f(source);
                    if (v.value1 instanceof Data_Maybe.Just) {
                        $tco_var_source = v.value1.value0;
                        $copy_memo = new Cons(v.value0, memo);
                        return;
                    };
                    if (v.value1 instanceof Data_Maybe.Nothing) {
                        $tco_done = true;
                        return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(new Cons(v.value0, memo));
                    };
                    throw new Error("Failed pattern match at Data.List.Types (line 105, column 22 - line 107, column 61): " + [ v.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_source, $copy_memo);
                };
                return $tco_result;
            };
        };
        return go(b)(Nil.value);
    };
});
var unfoldableList = new Data_Unfoldable.Unfoldable(function () {
    return unfoldable1List;
}, function (f) {
    return function (b) {
        var go = function ($copy_source) {
            return function ($copy_memo) {
                var $tco_var_source = $copy_source;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(source, memo) {
                    var v = f(source);
                    if (v instanceof Data_Maybe.Nothing) {
                        $tco_done = true;
                        return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
                    };
                    if (v instanceof Data_Maybe.Just) {
                        $tco_var_source = v.value0.value1;
                        $copy_memo = new Cons(v.value0.value0, memo);
                        return;
                    };
                    throw new Error("Failed pattern match at Data.List.Types (line 112, column 22 - line 114, column 52): " + [ v.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_source, $copy_memo);
                };
                return $tco_result;
            };
        };
        return go(b)(Nil.value);
    };
});
var unfoldable1NonEmptyList = Data_NonEmpty.unfoldable1NonEmpty(unfoldableList);
var foldable1NonEmptyList = Data_NonEmpty.foldable1NonEmpty(foldableList);
var extendNonEmptyList = new Control_Extend.Extend(function () {
    return functorNonEmptyList;
}, function (f) {
    return function (v) {
        var go = function (a) {
            return function (v1) {
                return {
                    val: new Cons(f(new Data_NonEmpty.NonEmpty(a, v1.acc)), v1.val),
                    acc: new Cons(a, v1.acc)
                };
            };
        };
        return new Data_NonEmpty.NonEmpty(f(v), (Data_Foldable.foldr(foldableList)(go)({
            val: Nil.value,
            acc: Nil.value
        })(v.value1)).val);
    };
});
var extendList = new Control_Extend.Extend(function () {
    return functorList;
}, function (f) {
    return function (v) {
        if (v instanceof Nil) {
            return Nil.value;
        };
        if (v instanceof Cons) {
            var go = function (a$prime) {
                return function (v1) {
                    var acc$prime = new Cons(a$prime, v1.acc);
                    return {
                        val: new Cons(f(acc$prime), v1.val),
                        acc: acc$prime
                    };
                };
            };
            return new Cons(f(v), (Data_Foldable.foldr(foldableList)(go)({
                val: Nil.value,
                acc: Nil.value
            })(v.value1)).val);
        };
        throw new Error("Failed pattern match at Data.List.Types (line 152, column 1 - line 152, column 35): " + [ f.constructor.name, v.constructor.name ]);
    };
});
var eq1List = new Data_Eq.Eq1(function (dictEq) {
    return function (xs) {
        return function (ys) {
            var go = function ($copy_v) {
                return function ($copy_v1) {
                    return function ($copy_v2) {
                        var $tco_var_v = $copy_v;
                        var $tco_var_v1 = $copy_v1;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(v, v1, v2) {
                            if (!v2) {
                                $tco_done = true;
                                return false;
                            };
                            if (v instanceof Nil && v1 instanceof Nil) {
                                $tco_done = true;
                                return v2;
                            };
                            if (v instanceof Cons && v1 instanceof Cons) {
                                $tco_var_v = v.value1;
                                $tco_var_v1 = v1.value1;
                                $copy_v2 = v2 && Data_Eq.eq(dictEq)(v1.value0)(v.value0);
                                return;
                            };
                            $tco_done = true;
                            return false;
                        };
                        while (!$tco_done) {
                            $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
                        };
                        return $tco_result;
                    };
                };
            };
            return go(xs)(ys)(true);
        };
    };
});
var eqList = function (dictEq) {
    return new Data_Eq.Eq(Data_Eq.eq1(eq1List)(dictEq));
};
var eqNonEmptyList = function (dictEq) {
    return Data_NonEmpty.eqNonEmpty(eq1List)(dictEq);
};
var ord1List = new Data_Ord.Ord1(function () {
    return eq1List;
}, function (dictOrd) {
    return function (xs) {
        return function (ys) {
            var go = function ($copy_v) {
                return function ($copy_v1) {
                    var $tco_var_v = $copy_v;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(v, v1) {
                        if (v instanceof Nil && v1 instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.EQ.value;
                        };
                        if (v instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.LT.value;
                        };
                        if (v1 instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.GT.value;
                        };
                        if (v instanceof Cons && v1 instanceof Cons) {
                            var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
                            if (v2 instanceof Data_Ordering.EQ) {
                                $tco_var_v = v.value1;
                                $copy_v1 = v1.value1;
                                return;
                            };
                            $tco_done = true;
                            return v2;
                        };
                        throw new Error("Failed pattern match at Data.List.Types (line 55, column 5 - line 55, column 20): " + [ v.constructor.name, v1.constructor.name ]);
                    };
                    while (!$tco_done) {
                        $tco_result = $tco_loop($tco_var_v, $copy_v1);
                    };
                    return $tco_result;
                };
            };
            return go(xs)(ys);
        };
    };
});
var ordList = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqList(dictOrd.Eq0());
    }, Data_Ord.compare1(ord1List)(dictOrd));
};
var ordNonEmptyList = function (dictOrd) {
    return Data_NonEmpty.ordNonEmpty(ord1List)(dictOrd);
};
var comonadNonEmptyList = new Control_Comonad.Comonad(function () {
    return extendNonEmptyList;
}, function (v) {
    return v.value0;
});
var applyList = new Control_Apply.Apply(function () {
    return functorList;
}, function (v) {
    return function (v1) {
        if (v instanceof Nil) {
            return Nil.value;
        };
        if (v instanceof Cons) {
            return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
        };
        throw new Error("Failed pattern match at Data.List.Types (line 127, column 1 - line 127, column 33): " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var applyNonEmptyList = new Control_Apply.Apply(function () {
    return functorNonEmptyList;
}, function (v) {
    return function (v1) {
        return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
    };
});
var bindList = new Control_Bind.Bind(function () {
    return applyList;
}, function (v) {
    return function (v1) {
        if (v instanceof Nil) {
            return Nil.value;
        };
        if (v instanceof Cons) {
            return Data_Semigroup.append(semigroupList)(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));
        };
        throw new Error("Failed pattern match at Data.List.Types (line 134, column 1 - line 134, column 31): " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindNonEmptyList = new Control_Bind.Bind(function () {
    return applyNonEmptyList;
}, function (v) {
    return function (f) {
        var v1 = f(v.value0);
        return new Data_NonEmpty.NonEmpty(v1.value0, Data_Semigroup.append(semigroupList)(v1.value1)(Control_Bind.bind(bindList)(v.value1)(function ($187) {
            return toList(f($187));
        })));
    };
});
var applicativeList = new Control_Applicative.Applicative(function () {
    return applyList;
}, function (a) {
    return new Cons(a, Nil.value);
});
var monadList = new Control_Monad.Monad(function () {
    return applicativeList;
}, function () {
    return bindList;
});
var altNonEmptyList = new Control_Alt.Alt(function () {
    return functorNonEmptyList;
}, Data_Semigroup.append(semigroupNonEmptyList));
var altList = new Control_Alt.Alt(function () {
    return functorList;
}, Data_Semigroup.append(semigroupList));
var plusList = new Control_Plus.Plus(function () {
    return altList;
}, Nil.value);
var alternativeList = new Control_Alternative.Alternative(function () {
    return applicativeList;
}, function () {
    return plusList;
});
var monadZeroList = new Control_MonadZero.MonadZero(function () {
    return alternativeList;
}, function () {
    return monadList;
});
var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
    return monadZeroList;
});
var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
    return applyNonEmptyList;
}, function ($188) {
    return NonEmptyList(Data_NonEmpty.singleton(plusList)($188));
});
var monadNonEmptyList = new Control_Monad.Monad(function () {
    return applicativeNonEmptyList;
}, function () {
    return bindNonEmptyList;
});
var traversable1NonEmptyList = new Data_Semigroup_Traversable.Traversable1(function () {
    return foldable1NonEmptyList;
}, function () {
    return traversableNonEmptyList;
}, function (dictApply) {
    return Data_Semigroup_Traversable.traverse1(traversable1NonEmptyList)(dictApply)(Control_Category.identity(Control_Category.categoryFn));
}, function (dictApply) {
    return function (f) {
        return function (v) {
            return Data_Functor.mapFlipped(dictApply.Functor0())(Data_Foldable.foldl(foldableList)(function (acc) {
                return function ($189) {
                    return Control_Apply.lift2(dictApply)(Data_Function.flip(nelCons))(acc)(f($189));
                };
            })(Data_Functor.map(dictApply.Functor0())(Control_Applicative.pure(applicativeNonEmptyList))(f(v.value0)))(v.value1))(function (v1) {
                return Data_Foldable.foldl(foldableList)(Data_Function.flip(nelCons))(Control_Applicative.pure(applicativeNonEmptyList)(v1.value0))(v1.value1);
            });
        };
    };
});
module.exports = {
    Nil: Nil,
    Cons: Cons,
    NonEmptyList: NonEmptyList,
    toList: toList,
    nelCons: nelCons,
    showList: showList,
    eqList: eqList,
    eq1List: eq1List,
    ordList: ordList,
    ord1List: ord1List,
    semigroupList: semigroupList,
    monoidList: monoidList,
    functorList: functorList,
    functorWithIndexList: functorWithIndexList,
    foldableList: foldableList,
    foldableWithIndexList: foldableWithIndexList,
    unfoldable1List: unfoldable1List,
    unfoldableList: unfoldableList,
    traversableList: traversableList,
    traversableWithIndexList: traversableWithIndexList,
    applyList: applyList,
    applicativeList: applicativeList,
    bindList: bindList,
    monadList: monadList,
    altList: altList,
    plusList: plusList,
    alternativeList: alternativeList,
    monadZeroList: monadZeroList,
    monadPlusList: monadPlusList,
    extendList: extendList,
    newtypeNonEmptyList: newtypeNonEmptyList,
    eqNonEmptyList: eqNonEmptyList,
    ordNonEmptyList: ordNonEmptyList,
    showNonEmptyList: showNonEmptyList,
    functorNonEmptyList: functorNonEmptyList,
    applyNonEmptyList: applyNonEmptyList,
    applicativeNonEmptyList: applicativeNonEmptyList,
    bindNonEmptyList: bindNonEmptyList,
    monadNonEmptyList: monadNonEmptyList,
    altNonEmptyList: altNonEmptyList,
    extendNonEmptyList: extendNonEmptyList,
    comonadNonEmptyList: comonadNonEmptyList,
    semigroupNonEmptyList: semigroupNonEmptyList,
    foldableNonEmptyList: foldableNonEmptyList,
    traversableNonEmptyList: traversableNonEmptyList,
    foldable1NonEmptyList: foldable1NonEmptyList,
    unfoldable1NonEmptyList: unfoldable1NonEmptyList,
    functorWithIndexNonEmptyList: functorWithIndexNonEmptyList,
    foldableWithIndexNonEmptyList: foldableWithIndexNonEmptyList,
    traversableWithIndexNonEmptyList: traversableWithIndexNonEmptyList,
    traversable1NonEmptyList: traversable1NonEmptyList
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Comonad/index.js":21,"../Control.Extend/index.js":24,"../Control.Monad/index.js":55,"../Control.MonadPlus/index.js":56,"../Control.MonadZero/index.js":57,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.FoldableWithIndex/index.js":142,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.FunctorWithIndex/index.js":155,"../Data.HeytingAlgebra/index.js":162,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.NonEmpty/index.js":221,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Ring/index.js":242,"../Data.Semigroup.Foldable/index.js":244,"../Data.Semigroup.Traversable/index.js":246,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.Traversable/index.js":281,"../Data.TraversableWithIndex/index.js":282,"../Data.Tuple/index.js":283,"../Data.Unfoldable/index.js":285,"../Data.Unfoldable1/index.js":287,"../Prelude/index.js":385}],204:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_NonEmpty = require("../Data.NonEmpty/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Prelude = require("../Prelude/index.js");
var Pattern = function (x) {
    return x;
};
var updateAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0 && v2 instanceof Data_List_Types.Cons) {
                return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2.value1));
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
                    return new Data_List_Types.Cons(v2.value0, v3);
                })(updateAt(v - 1 | 0)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var unzip = Data_Foldable.foldr(Data_List_Types.foldableList)(function (v) {
    return function (v1) {
        return new Data_Tuple.Tuple(new Data_List_Types.Cons(v.value0, v1.value0), new Data_List_Types.Cons(v.value1, v1.value1));
    };
})(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_Types.Nil.value));
var uncons = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just({
            head: v.value0,
            tail: v.value1
        });
    };
    throw new Error("Failed pattern match at Data.List (line 259, column 1 - line 259, column 66): " + [ v.constructor.name ]);
};
var toUnfoldable = function (dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
            return new Data_Tuple.Tuple(rec.head, rec.tail);
        })(uncons(xs));
    });
};
var tail = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(v.value1);
    };
    throw new Error("Failed pattern match at Data.List (line 245, column 1 - line 245, column 43): " + [ v.constructor.name ]);
};
var stripPrefix = function (dictEq) {
    return function (v) {
        return function (s) {
            var go = function (prefix) {
                return function (input) {
                    if (prefix instanceof Data_List_Types.Cons && (input instanceof Data_List_Types.Cons && Data_Eq.eq(dictEq)(prefix.value0)(input.value0))) {
                        return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Loop({
                            a: prefix.value1,
                            b: input.value1
                        }));
                    };
                    if (prefix instanceof Data_List_Types.Nil) {
                        return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Done(input));
                    };
                    return Data_Maybe.Nothing.value;
                };
            };
            return Control_Monad_Rec_Class.tailRecM2(Control_Monad_Rec_Class.monadRecMaybe)(go)(v)(s);
        };
    };
};
var span = function (v) {
    return function (v1) {
        if (v1 instanceof Data_List_Types.Cons && v(v1.value0)) {
            var v2 = span(v)(v1.value1);
            return {
                init: new Data_List_Types.Cons(v1.value0, v2.init),
                rest: v2.rest
            };
        };
        return {
            init: Data_List_Types.Nil.value,
            rest: v1
        };
    };
};
var snoc = function (xs) {
    return function (x) {
        return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_List_Types.Cons.create)(new Data_List_Types.Cons(x, Data_List_Types.Nil.value))(xs);
    };
};
var singleton = function (a) {
    return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
};
var sortBy = function (cmp) {
    var merge = function (v) {
        return function (v1) {
            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1.value0))(Data_Ordering.GT.value)) {
                    return new Data_List_Types.Cons(v1.value0, merge(v)(v1.value1));
                };
                if (Data_Boolean.otherwise) {
                    return new Data_List_Types.Cons(v.value0, merge(v.value1)(v1));
                };
            };
            if (v instanceof Data_List_Types.Nil) {
                return v1;
            };
            if (v1 instanceof Data_List_Types.Nil) {
                return v;
            };
            throw new Error("Failed pattern match at Data.List (line 473, column 3 - line 473, column 38): " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
    var mergePairs = function (v) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
            return new Data_List_Types.Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
        };
        return v;
    };
    var mergeAll = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return v.value0;
            };
            $copy_v = mergePairs(v);
            return;
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    var sequences = function (v) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
            if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v.value1.value0))(Data_Ordering.GT.value)) {
                return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);
            };
            if (Data_Boolean.otherwise) {
                return ascending(v.value1.value0)(function (v1) {
                    return new Data_List_Types.Cons(v.value0, v1);
                })(v.value1.value1);
            };
        };
        return singleton(v);
    };
    var descending = function ($copy_a) {
        return function ($copy_as) {
            return function ($copy_v) {
                var $tco_var_a = $copy_a;
                var $tco_var_as = $copy_as;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(a, as, v) {
                    if (v instanceof Data_List_Types.Cons && Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
                        $tco_var_a = v.value0;
                        $tco_var_as = new Data_List_Types.Cons(a, as);
                        $copy_v = v.value1;
                        return;
                    };
                    $tco_done = true;
                    return new Data_List_Types.Cons(new Data_List_Types.Cons(a, as), sequences(v));
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
                };
                return $tco_result;
            };
        };
    };
    var ascending = function ($copy_a) {
        return function ($copy_as) {
            return function ($copy_v) {
                var $tco_var_a = $copy_a;
                var $tco_var_as = $copy_as;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(a, as, v) {
                    if (v instanceof Data_List_Types.Cons && Data_Eq.notEq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
                        $tco_var_a = v.value0;
                        $tco_var_as = function (ys) {
                            return as(new Data_List_Types.Cons(a, ys));
                        };
                        $copy_v = v.value1;
                        return;
                    };
                    $tco_done = true;
                    return new Data_List_Types.Cons(as(singleton(a)), sequences(v));
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
                };
                return $tco_result;
            };
        };
    };
    return function ($337) {
        return mergeAll(sequences($337));
    };
};
var sort = function (dictOrd) {
    return function (xs) {
        return sortBy(Data_Ord.compare(dictOrd))(xs);
    };
};
var tails = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return singleton(Data_List_Types.Nil.value);
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_List_Types.Cons(v, tails(v.value1));
    };
    throw new Error("Failed pattern match at Data.List (line 626, column 1 - line 626, column 43): " + [ v.constructor.name ]);
};
var showPattern = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Pattern " + (Data_Show.show(Data_List_Types.showList(dictShow))(v) + ")");
    });
};
var reverse = (function () {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return acc;
                };
                if (v instanceof Data_List_Types.Cons) {
                    $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                    $copy_v = v.value1;
                    return;
                };
                throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [ acc.constructor.name, v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_v);
            };
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
})();
var take = (function () {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            return function ($copy_v1) {
                var $tco_var_acc = $copy_acc;
                var $tco_var_v = $copy_v;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(acc, v, v1) {
                    if (v < 1) {
                        $tco_done = true;
                        return reverse(acc);
                    };
                    if (v1 instanceof Data_List_Types.Nil) {
                        $tco_done = true;
                        return reverse(acc);
                    };
                    if (v1 instanceof Data_List_Types.Cons) {
                        $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
                        $tco_var_v = v - 1 | 0;
                        $copy_v1 = v1.value1;
                        return;
                    };
                    throw new Error("Failed pattern match at Data.List (line 520, column 3 - line 520, column 35): " + [ acc.constructor.name, v.constructor.name, v1.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_acc, $tco_var_v, $copy_v1);
                };
                return $tco_result;
            };
        };
    };
    return go(Data_List_Types.Nil.value);
})();
var takeWhile = function (p) {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Cons && p(v.value0)) {
                    $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                    $copy_v = v.value1;
                    return;
                };
                $tco_done = true;
                return reverse(acc);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_v);
            };
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
};
var unsnoc = function (lst) {
    var go = function ($copy_v) {
        return function ($copy_acc) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, acc) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return new Data_Maybe.Just({
                        revInit: acc,
                        last: v.value0
                    });
                };
                if (v instanceof Data_List_Types.Cons) {
                    $tco_var_v = v.value1;
                    $copy_acc = new Data_List_Types.Cons(v.value0, acc);
                    return;
                };
                throw new Error("Failed pattern match at Data.List (line 270, column 3 - line 270, column 23): " + [ v.constructor.name, acc.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_acc);
            };
            return $tco_result;
        };
    };
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (h) {
        return {
            init: reverse(h.revInit),
            last: h.last
        };
    })(go(lst)(Data_List_Types.Nil.value));
};
var zipWith = function (f) {
    return function (xs) {
        return function (ys) {
            var go = function ($copy_v) {
                return function ($copy_v1) {
                    return function ($copy_acc) {
                        var $tco_var_v = $copy_v;
                        var $tco_var_v1 = $copy_v1;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(v, v1, acc) {
                            if (v instanceof Data_List_Types.Nil) {
                                $tco_done = true;
                                return acc;
                            };
                            if (v1 instanceof Data_List_Types.Nil) {
                                $tco_done = true;
                                return acc;
                            };
                            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                                $tco_var_v = v.value1;
                                $tco_var_v1 = v1.value1;
                                $copy_acc = new Data_List_Types.Cons(f(v.value0)(v1.value0), acc);
                                return;
                            };
                            throw new Error("Failed pattern match at Data.List (line 718, column 3 - line 718, column 21): " + [ v.constructor.name, v1.constructor.name, acc.constructor.name ]);
                        };
                        while (!$tco_done) {
                            $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_acc);
                        };
                        return $tco_result;
                    };
                };
            };
            return reverse(go(xs)(ys)(Data_List_Types.Nil.value));
        };
    };
};
var zip = zipWith(Data_Tuple.Tuple.create);
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(Data_List_Types.traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
            };
        };
    };
};
var range = function (start) {
    return function (end) {
        if (start === end) {
            return singleton(start);
        };
        if (Data_Boolean.otherwise) {
            var go = function ($copy_s) {
                return function ($copy_e) {
                    return function ($copy_step) {
                        return function ($copy_rest) {
                            var $tco_var_s = $copy_s;
                            var $tco_var_e = $copy_e;
                            var $tco_var_step = $copy_step;
                            var $tco_done = false;
                            var $tco_result;
                            function $tco_loop(s, e, step, rest) {
                                if (s === e) {
                                    $tco_done = true;
                                    return new Data_List_Types.Cons(s, rest);
                                };
                                if (Data_Boolean.otherwise) {
                                    $tco_var_s = s + step | 0;
                                    $tco_var_e = e;
                                    $tco_var_step = step;
                                    $copy_rest = new Data_List_Types.Cons(s, rest);
                                    return;
                                };
                                throw new Error("Failed pattern match at Data.List (line 148, column 3 - line 149, column 65): " + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);
                            };
                            while (!$tco_done) {
                                $tco_result = $tco_loop($tco_var_s, $tco_var_e, $tco_var_step, $copy_rest);
                            };
                            return $tco_result;
                        };
                    };
                };
            };
            return go(end)(start)((function () {
                var $223 = start > end;
                if ($223) {
                    return 1;
                };
                return -1 | 0;
            })())(Data_List_Types.Nil.value);
        };
        throw new Error("Failed pattern match at Data.List (line 144, column 1 - line 144, column 32): " + [ start.constructor.name, end.constructor.name ]);
    };
};
var partition = function (p) {
    return function (xs) {
        var select = function (x) {
            return function (v) {
                var $226 = p(x);
                if ($226) {
                    return {
                        no: v.no,
                        yes: new Data_List_Types.Cons(x, v.yes)
                    };
                };
                return {
                    no: new Data_List_Types.Cons(x, v.no),
                    yes: v.yes
                };
            };
        };
        return Data_Foldable.foldr(Data_List_Types.foldableList)(select)({
            no: Data_List_Types.Nil.value,
            yes: Data_List_Types.Nil.value
        })(xs);
    };
};
var $$null = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return true;
    };
    return false;
};
var newtypePattern = new Data_Newtype.Newtype(function (n) {
    return n;
}, Pattern);
var mapWithIndex = Data_FunctorWithIndex.mapWithIndex(Data_List_Types.functorWithIndexList);
var mapMaybe = function (f) {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return reverse(acc);
                };
                if (v instanceof Data_List_Types.Cons) {
                    var v1 = f(v.value0);
                    if (v1 instanceof Data_Maybe.Nothing) {
                        $tco_var_acc = acc;
                        $copy_v = v.value1;
                        return;
                    };
                    if (v1 instanceof Data_Maybe.Just) {
                        $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
                        $copy_v = v.value1;
                        return;
                    };
                    throw new Error("Failed pattern match at Data.List (line 419, column 5 - line 421, column 32): " + [ v1.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.List (line 417, column 3 - line 417, column 27): " + [ acc.constructor.name, v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_v);
            };
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
};
var manyRec = function (dictMonadRec) {
    return function (dictAlternative) {
        return function (p) {
            var go = function (acc) {
                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(p))(Control_Applicative.pure(dictAlternative.Applicative0())(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function (v) {
                    return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(function (v1) {
                        return new Data_List_Types.Cons(v1, acc);
                    })(function (v1) {
                        return reverse(acc);
                    })(v));
                });
            };
            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go)(Data_List_Types.Nil.value);
        };
    };
};
var someRec = function (dictMonadRec) {
    return function (dictAlternative) {
        return function (v) {
            return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_List_Types.Cons.create)(v))(manyRec(dictMonadRec)(dictAlternative)(v));
        };
    };
};
var some = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_List_Types.Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value));
        };
    };
};
var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
    return function (v) {
        return acc + 1 | 0;
    };
})(0);
var last = function ($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return new Data_Maybe.Just(v.value0);
        };
        if (v instanceof Data_List_Types.Cons) {
            $copy_v = v.value1;
            return;
        };
        $tco_done = true;
        return Data_Maybe.Nothing.value;
    };
    while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
    };
    return $tco_result;
};
var insertBy = function (v) {
    return function (x) {
        return function (v1) {
            if (v1 instanceof Data_List_Types.Nil) {
                return singleton(x);
            };
            if (v1 instanceof Data_List_Types.Cons) {
                var v2 = v(x)(v1.value0);
                if (v2 instanceof Data_Ordering.GT) {
                    return new Data_List_Types.Cons(v1.value0, insertBy(v)(x)(v1.value1));
                };
                return new Data_List_Types.Cons(x, v1);
            };
            throw new Error("Failed pattern match at Data.List (line 216, column 1 - line 216, column 68): " + [ v.constructor.name, x.constructor.name, v1.constructor.name ]);
        };
    };
};
var insertAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0) {
                return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2));
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
                    return new Data_List_Types.Cons(v2.value0, v3);
                })(insertAt(v - 1 | 0)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var insert = function (dictOrd) {
    return insertBy(Data_Ord.compare(dictOrd));
};
var init = function (lst) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
        return v.init;
    })(unsnoc(lst));
};
var index = function ($copy_v) {
    return function ($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
            if (v instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return Data_Maybe.Nothing.value;
            };
            if (v instanceof Data_List_Types.Cons && v1 === 0) {
                $tco_done = true;
                return new Data_Maybe.Just(v.value0);
            };
            if (v instanceof Data_List_Types.Cons) {
                $tco_var_v = v.value1;
                $copy_v1 = v1 - 1 | 0;
                return;
            };
            throw new Error("Failed pattern match at Data.List (line 281, column 1 - line 281, column 44): " + [ v.constructor.name, v1.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
        };
        return $tco_result;
    };
};
var head = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(v.value0);
    };
    throw new Error("Failed pattern match at Data.List (line 230, column 1 - line 230, column 22): " + [ v.constructor.name ]);
};
var transpose = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_List_Types.Nil.value;
    };
    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Nil) {
        return transpose(v.value1);
    };
    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Cons) {
        return new Data_List_Types.Cons(new Data_List_Types.Cons(v.value0.value0, mapMaybe(head)(v.value1)), transpose(new Data_List_Types.Cons(v.value0.value1, mapMaybe(tail)(v.value1))));
    };
    throw new Error("Failed pattern match at Data.List (line 752, column 1 - line 752, column 54): " + [ v.constructor.name ]);
};
var groupBy = function (v) {
    return function (v1) {
        if (v1 instanceof Data_List_Types.Nil) {
            return Data_List_Types.Nil.value;
        };
        if (v1 instanceof Data_List_Types.Cons) {
            var v2 = span(v(v1.value0))(v1.value1);
            return new Data_List_Types.Cons(new Data_NonEmpty.NonEmpty(v1.value0, v2.init), groupBy(v)(v2.rest));
        };
        throw new Error("Failed pattern match at Data.List (line 605, column 1 - line 605, column 80): " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var group = function (dictEq) {
    return groupBy(Data_Eq.eq(dictEq));
};
var group$prime = function (dictOrd) {
    return function ($338) {
        return group(dictOrd.Eq0())(sort(dictOrd)($338));
    };
};
var fromFoldable = function (dictFoldable) {
    return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
};
var foldM = function (dictMonad) {
    return function (v) {
        return function (a) {
            return function (v1) {
                if (v1 instanceof Data_List_Types.Nil) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(a);
                };
                if (v1 instanceof Data_List_Types.Cons) {
                    return Control_Bind.bind(dictMonad.Bind1())(v(a)(v1.value0))(function (a$prime) {
                        return foldM(dictMonad)(v)(a$prime)(v1.value1);
                    });
                };
                throw new Error("Failed pattern match at Data.List (line 763, column 1 - line 763, column 72): " + [ v.constructor.name, a.constructor.name, v1.constructor.name ]);
            };
        };
    };
};
var findIndex = function (fn) {
    var go = function ($copy_v) {
        return function ($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v1 instanceof Data_List_Types.Cons) {
                    if (fn(v1.value0)) {
                        $tco_done = true;
                        return new Data_Maybe.Just(v);
                    };
                    if (Data_Boolean.otherwise) {
                        $tco_var_v = v + 1 | 0;
                        $copy_v1 = v1.value1;
                        return;
                    };
                };
                if (v1 instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.List (line 301, column 3 - line 301, column 35): " + [ v.constructor.name, v1.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
            };
            return $tco_result;
        };
    };
    return go(0);
};
var findLastIndex = function (fn) {
    return function (xs) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
            return (length(xs) - 1 | 0) - v | 0;
        })(findIndex(fn)(reverse(xs)));
    };
};
var filterM = function (dictMonad) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Data_List_Types.Nil) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Types.Nil.value);
            };
            if (v1 instanceof Data_List_Types.Cons) {
                return Control_Bind.bind(dictMonad.Bind1())(v(v1.value0))(function (v2) {
                    return Control_Bind.bind(dictMonad.Bind1())(filterM(dictMonad)(v)(v1.value1))(function (v3) {
                        return Control_Applicative.pure(dictMonad.Applicative0())((function () {
                            if (v2) {
                                return new Data_List_Types.Cons(v1.value0, v3);
                            };
                            return v3;
                        })());
                    });
                });
            };
            throw new Error("Failed pattern match at Data.List (line 403, column 1 - line 403, column 75): " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var filter = function (p) {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return reverse(acc);
                };
                if (v instanceof Data_List_Types.Cons) {
                    if (p(v.value0)) {
                        $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                        $copy_v = v.value1;
                        return;
                    };
                    if (Data_Boolean.otherwise) {
                        $tco_var_acc = acc;
                        $copy_v = v.value1;
                        return;
                    };
                };
                throw new Error("Failed pattern match at Data.List (line 390, column 3 - line 390, column 27): " + [ acc.constructor.name, v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_v);
            };
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
};
var intersectBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v1 instanceof Data_List_Types.Nil) {
                return Data_List_Types.Nil.value;
            };
            if (v2 instanceof Data_List_Types.Nil) {
                return Data_List_Types.Nil.value;
            };
            return filter(function (x) {
                return Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(v(x))(v2);
            })(v1);
        };
    };
};
var intersect = function (dictEq) {
    return intersectBy(Data_Eq.eq(dictEq));
};
var nubBy = function (v) {
    return function (v1) {
        if (v1 instanceof Data_List_Types.Nil) {
            return Data_List_Types.Nil.value;
        };
        if (v1 instanceof Data_List_Types.Cons) {
            return new Data_List_Types.Cons(v1.value0, nubBy(v)(filter(function (y) {
                return !v(v1.value0)(y);
            })(v1.value1)));
        };
        throw new Error("Failed pattern match at Data.List (line 644, column 1 - line 644, column 59): " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var nub = function (dictEq) {
    return nubBy(Data_Eq.eq(dictEq));
};
var eqPattern = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            return Data_Eq.eq(Data_List_Types.eqList(dictEq))(x)(y);
        };
    });
};
var ordPattern = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqPattern(dictOrd.Eq0());
    }, function (x) {
        return function (y) {
            return Data_Ord.compare(Data_List_Types.ordList(dictOrd))(x)(y);
        };
    });
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var dropWhile = function (p) {
    var go = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Types.Cons && p(v.value0)) {
                $copy_v = v.value1;
                return;
            };
            $tco_done = true;
            return v;
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return go;
};
var dropEnd = function (n) {
    return function (xs) {
        return take(length(xs) - n | 0)(xs);
    };
};
var drop = function ($copy_v) {
    return function ($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
            if (v < 1) {
                $tco_done = true;
                return v1;
            };
            if (v1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return Data_List_Types.Nil.value;
            };
            if (v1 instanceof Data_List_Types.Cons) {
                $tco_var_v = v - 1 | 0;
                $copy_v1 = v1.value1;
                return;
            };
            throw new Error("Failed pattern match at Data.List (line 543, column 1 - line 543, column 42): " + [ v.constructor.name, v1.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
        };
        return $tco_result;
    };
};
var slice = function (start) {
    return function (end) {
        return function (xs) {
            return take(end - start | 0)(drop(start)(xs));
        };
    };
};
var takeEnd = function (n) {
    return function (xs) {
        return drop(length(xs) - n | 0)(xs);
    };
};
var deleteBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Data_List_Types.Nil) {
                return Data_List_Types.Nil.value;
            };
            if (v2 instanceof Data_List_Types.Cons && v(v1)(v2.value0)) {
                return v2.value1;
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return new Data_List_Types.Cons(v2.value0, deleteBy(v)(v1)(v2.value1));
            };
            throw new Error("Failed pattern match at Data.List (line 671, column 1 - line 671, column 67): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Data_Semigroup.append(Data_List_Types.semigroupList)(xs)(Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (dictEq) {
    return unionBy(Data_Eq.eq(dictEq));
};
var deleteAt = function (v) {
    return function (v1) {
        if (v === 0 && v1 instanceof Data_List_Types.Cons) {
            return new Data_Maybe.Just(v1.value1);
        };
        if (v1 instanceof Data_List_Types.Cons) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
                return new Data_List_Types.Cons(v1.value0, v2);
            })(deleteAt(v - 1 | 0)(v1.value1));
        };
        return Data_Maybe.Nothing.value;
    };
};
var $$delete = function (dictEq) {
    return deleteBy(Data_Eq.eq(dictEq));
};
var difference = function (dictEq) {
    return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictEq)));
};
var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindList));
var concat = function (v) {
    return Control_Bind.bind(Data_List_Types.bindList)(v)(Control_Category.identity(Control_Category.categoryFn));
};
var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));
var alterAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0 && v2 instanceof Data_List_Types.Cons) {
                return Data_Maybe.Just.create((function () {
                    var v3 = v1(v2.value0);
                    if (v3 instanceof Data_Maybe.Nothing) {
                        return v2.value1;
                    };
                    if (v3 instanceof Data_Maybe.Just) {
                        return new Data_List_Types.Cons(v3.value0, v2.value1);
                    };
                    throw new Error("Failed pattern match at Data.List (line 352, column 3 - line 354, column 23): " + [ v3.constructor.name ]);
                })());
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
                    return new Data_List_Types.Cons(v2.value0, v3);
                })(alterAt(v - 1 | 0)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var modifyAt = function (n) {
    return function (f) {
        return alterAt(n)(function ($339) {
            return Data_Maybe.Just.create(f($339));
        });
    };
};
module.exports = {
    toUnfoldable: toUnfoldable,
    fromFoldable: fromFoldable,
    singleton: singleton,
    range: range,
    some: some,
    someRec: someRec,
    many: many,
    manyRec: manyRec,
    "null": $$null,
    length: length,
    snoc: snoc,
    insert: insert,
    insertBy: insertBy,
    head: head,
    last: last,
    tail: tail,
    init: init,
    uncons: uncons,
    unsnoc: unsnoc,
    index: index,
    elemIndex: elemIndex,
    elemLastIndex: elemLastIndex,
    findIndex: findIndex,
    findLastIndex: findLastIndex,
    insertAt: insertAt,
    deleteAt: deleteAt,
    updateAt: updateAt,
    modifyAt: modifyAt,
    alterAt: alterAt,
    reverse: reverse,
    concat: concat,
    concatMap: concatMap,
    filter: filter,
    filterM: filterM,
    mapMaybe: mapMaybe,
    catMaybes: catMaybes,
    mapWithIndex: mapWithIndex,
    sort: sort,
    sortBy: sortBy,
    Pattern: Pattern,
    stripPrefix: stripPrefix,
    slice: slice,
    take: take,
    takeEnd: takeEnd,
    takeWhile: takeWhile,
    drop: drop,
    dropEnd: dropEnd,
    dropWhile: dropWhile,
    span: span,
    group: group,
    "group'": group$prime,
    groupBy: groupBy,
    partition: partition,
    nub: nub,
    nubBy: nubBy,
    union: union,
    unionBy: unionBy,
    "delete": $$delete,
    deleteBy: deleteBy,
    difference: difference,
    intersect: intersect,
    intersectBy: intersectBy,
    zipWith: zipWith,
    zipWithA: zipWithA,
    zip: zip,
    unzip: unzip,
    transpose: transpose,
    foldM: foldM,
    eqPattern: eqPattern,
    ordPattern: ordPattern,
    newtypePattern: newtypePattern,
    showPattern: showPattern
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Lazy/index.js":25,"../Control.Monad.Rec.Class/index.js":43,"../Control.Semigroupoid/index.js":61,"../Data.Bifunctor/index.js":106,"../Data.Boolean/index.js":110,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.FunctorWithIndex/index.js":155,"../Data.HeytingAlgebra/index.js":162,"../Data.List.Types/index.js":203,"../Data.Maybe/index.js":210,"../Data.Newtype/index.js":220,"../Data.NonEmpty/index.js":221,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.Traversable/index.js":281,"../Data.Tuple/index.js":283,"../Data.Unfoldable/index.js":285,"../Data.Unit/index.js":289,"../Prelude/index.js":385}],205:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Prelude = require("../Prelude/index.js");
var MealyT = function (x) {
    return x;
};
var Emit = (function () {
    function Emit(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Emit.create = function (value0) {
        return function (value1) {
            return new Emit(value0, value1);
        };
    };
    return Emit;
})();
var Halt = (function () {
    function Halt() {

    };
    Halt.value = new Halt();
    return Halt;
})();
var runMealyT = function (v) {
    return v;
};
var stepMealy = function (dictMonad) {
    return Data_Function.flip(runMealyT);
};
var toUnfoldable = function (dictUnfoldable) {
    return function (dictComonad) {
        return function (s) {
            var stepUnfold = function (m) {
                var v = Control_Comonad.extract(dictComonad)(runMealyT(m)(s));
                if (v instanceof Emit) {
                    return Data_Maybe.Just.create(new Data_Tuple.Tuple(v.value0, v.value1));
                };
                if (v instanceof Halt) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.Machine.Mealy (line 121, column 18 - line 123, column 25): " + [ v.constructor.name ]);
            };
            return Data_Unfoldable.unfoldr(dictUnfoldable)(stepUnfold);
        };
    };
};
var runMealy = function (dictMonad) {
    return function (m) {
        var f = function (v) {
            if (v instanceof Halt) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_Unit.unit);
            };
            if (v instanceof Emit) {
                return runMealy(dictMonad)(v.value1);
            };
            throw new Error("Failed pattern match at Data.Machine.Mealy (line 79, column 23 - line 79, column 48): " + [ v.constructor.name ]);
        };
        return Control_Bind.bind(dictMonad.Bind1())(stepMealy(dictMonad)(Data_Unit.unit)(m))(f);
    };
};
var pureMealy = function (dictApplicative) {
    return function ($147) {
        return MealyT(Data_Functor.map(Data_Functor.functorFn)(Control_Applicative.pure(dictApplicative))($147));
    };
};
var mealy = function (dictApplicative) {
    return MealyT;
};
var profunctorMealy = function (dictMonad) {
    return new Data_Profunctor.Profunctor(function (l) {
        return function (r) {
            var remap = function (m) {
                var g = function (v) {
                    if (v instanceof Emit) {
                        return new Emit(r(v.value0), remap(v.value1));
                    };
                    if (v instanceof Halt) {
                        return Halt.value;
                    };
                    throw new Error("Failed pattern match at Data.Machine.Mealy (line 199, column 17 - line 199, column 54): " + [ v.constructor.name ]);
                };
                return mealy(dictMonad.Applicative0())(function (s) {
                    return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(g)(stepMealy(dictMonad)(l(s))(m));
                });
            };
            return remap;
        };
    });
};
var scanl = function (dictMonad) {
    return function (f) {
        var go = function (b) {
            return function (m) {
                return mealy(dictMonad.Applicative0())(function (s) {
                    var g = function (v) {
                        if (v instanceof Halt) {
                            return Halt.value;
                        };
                        if (v instanceof Emit) {
                            var b$prime = f(b)(v.value0);
                            return new Emit(b$prime, go(b$prime)(v.value1));
                        };
                        throw new Error("Failed pattern match at Data.Machine.Mealy (line 130, column 33 - line 130, column 53): " + [ v.constructor.name ]);
                    };
                    return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(g)(stepMealy(dictMonad)(s)(m));
                });
            };
        };
        return go;
    };
};
var semigroupMealy = function (dictMonad) {
    return new Data_Semigroup.Semigroup(function (l) {
        return function (r) {
            return mealy(dictMonad.Applicative0())(function (s) {
                var g = function (v) {
                    if (v instanceof Emit) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(new Emit(v.value0, Data_Semigroup.append(semigroupMealy(dictMonad))(v.value1)(r)));
                    };
                    if (v instanceof Halt) {
                        return stepMealy(dictMonad)(s)(r);
                    };
                    throw new Error("Failed pattern match at Data.Machine.Mealy (line 211, column 35 - line 211, column 74): " + [ v.constructor.name ]);
                };
                return Control_Bind.bind(dictMonad.Bind1())(stepMealy(dictMonad)(s)(l))(g);
            });
        };
    });
};
var monoidMealy = function (dictMonad) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMealy(dictMonad);
    }, mealy(dictMonad.Applicative0())(function (s) {
        return Control_Applicative.pure(dictMonad.Applicative0())(Halt.value);
    }));
};
var semigroupoidMealy = function (dictMonad) {
    return new Control_Semigroupoid.Semigroupoid(function (f) {
        return function (g) {
            var gb = function (v) {
                if (v instanceof Halt) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(Halt.value);
                };
                if (v instanceof Emit) {
                    var fc = function (v1) {
                        if (v1 instanceof Emit) {
                            return new Emit(v1.value0, Control_Semigroupoid.compose(semigroupoidMealy(dictMonad))(v1.value1)(v.value1));
                        };
                        if (v1 instanceof Halt) {
                            return Halt.value;
                        };
                        throw new Error("Failed pattern match at Data.Machine.Mealy (line 224, column 13 - line 224, column 48): " + [ v1.constructor.name ]);
                    };
                    return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(fc)(stepMealy(dictMonad)(v.value0)(f));
                };
                throw new Error("Failed pattern match at Data.Machine.Mealy (line 221, column 11 - line 221, column 30): " + [ v.constructor.name ]);
            };
            return mealy(dictMonad.Applicative0())(function (b) {
                return Control_Bind.bind(dictMonad.Bind1())(stepMealy(dictMonad)(b)(g))(gb);
            });
        };
    });
};
var sink = function (dictMonad) {
    return function (f) {
        return mealy(dictMonad.Applicative0())(function (a) {
            return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Function["const"](new Emit(Data_Unit.unit, sink(dictMonad)(f))))(f(a));
        });
    };
};
var source = function (dictMonad) {
    return function (src) {
        return mealy(dictMonad.Applicative0())(function (v) {
            return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Function.flip(Emit.create)(source(dictMonad)(src)))(src);
        });
    };
};
var strongMealy = function (dictMonad) {
    return new Data_Profunctor_Strong.Strong(function () {
        return profunctorMealy(dictMonad);
    }, function (m) {
        return mealy(dictMonad.Applicative0())(function (s) {
            var d = Data_Tuple.snd(s);
            var g = function (v) {
                if (v instanceof Emit) {
                    return new Emit(new Data_Tuple.Tuple(v.value0, d), Data_Profunctor_Strong.first(strongMealy(dictMonad))(v.value1));
                };
                if (v instanceof Halt) {
                    return Halt.value;
                };
                throw new Error("Failed pattern match at Data.Machine.Mealy (line 205, column 31 - line 205, column 74): " + [ v.constructor.name ]);
            };
            var b = Data_Tuple.fst(s);
            return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(g)(stepMealy(dictMonad)(b)(m));
        });
    }, function ($148) {
        return Data_Profunctor.dimap(profunctorMealy(dictMonad))(Data_Tuple.swap)(Data_Tuple.swap)(Data_Profunctor_Strong.first(strongMealy(dictMonad))($148));
    });
};
var loop = function (dictMonad) {
    return function (m0) {
        var loop$prime = function (m) {
            return mealy(dictMonad.Applicative0())(function (s) {
                return Control_Bind.bind(dictMonad.Bind1())(stepMealy(dictMonad)(s)(m))(function (v) {
                    if (v instanceof Halt) {
                        return stepMealy(dictMonad)(s)(loop(dictMonad)(m0));
                    };
                    if (v instanceof Emit) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(new Emit(v.value0, loop$prime(v.value1)));
                    };
                    throw new Error("Failed pattern match at Data.Machine.Mealy (line 110, column 23 - line 112, column 44): " + [ v.constructor.name ]);
                });
            });
        };
        return loop$prime(m0);
    };
};
var lazyMealy = function (dictMonad) {
    return new Control_Lazy.Lazy(function (f) {
        return mealy(dictMonad.Applicative0())(function (s) {
            return runMealyT(f(Data_Unit.unit))(s);
        });
    });
};
var interleave = function (dictMonad) {
    return function (m1) {
        return function (m2) {
            return mealy(dictMonad.Applicative0())(function (s) {
                return Control_Bind.bind(dictMonad.Bind1())(stepMealy(dictMonad)(s)(m1))(function (v) {
                    if (v instanceof Halt) {
                        return stepMealy(dictMonad)(s)(m2);
                    };
                    if (v instanceof Emit) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(new Emit(v.value0, interleave(dictMonad)(m2)(v.value1)));
                    };
                    throw new Error("Failed pattern match at Data.Machine.Mealy (line 161, column 22 - line 163, column 52): " + [ v.constructor.name ]);
                });
            });
        };
    };
};
var ifte = function (dictMonad) {
    return function (ma) {
        return function (f) {
            return function (mb) {
                var go = function (ma$prime) {
                    return function (v) {
                        if (v instanceof Halt) {
                            return Halt.value;
                        };
                        if (v instanceof Emit) {
                            return new Emit(v.value0, Data_Semigroup.append(semigroupMealy(dictMonad))(v.value1)(ifte(dictMonad)(ma$prime)(f)(mb)));
                        };
                        throw new Error("Failed pattern match at Data.Machine.Mealy (line 174, column 12 - line 176, column 46): " + [ v.constructor.name ]);
                    };
                };
                return mealy(dictMonad.Applicative0())(function (s) {
                    return Control_Bind.bind(dictMonad.Bind1())(stepMealy(dictMonad)(s)(ma))(function (v) {
                        if (v instanceof Halt) {
                            return stepMealy(dictMonad)(s)(mb);
                        };
                        if (v instanceof Emit) {
                            return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(go(v.value1))(stepMealy(dictMonad)(s)(f(v.value0)));
                        };
                        throw new Error("Failed pattern match at Data.Machine.Mealy (line 170, column 22 - line 172, column 47): " + [ v.constructor.name ]);
                    });
                });
            };
        };
    };
};
var hoistStep = function (dictFunctor) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Emit) {
                return new Emit(v1.value0, hoistMealyT(dictFunctor)(v)(v1.value1));
            };
            if (v1 instanceof Halt) {
                return Halt.value;
            };
            throw new Error("Failed pattern match at Data.Machine.Mealy (line 63, column 1 - line 63, column 74): " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var hoistMealyT = function (dictFunctor) {
    return function (f2g) {
        return function (v) {
            var goG = function (s) {
                return Data_Functor.map(dictFunctor)(hoistStep(dictFunctor)(f2g))(f2g(v(s)));
            };
            return goG;
        };
    };
};
var halt = function (dictApplicative) {
    return pureMealy(dictApplicative)(Data_Function["const"](Halt.value));
};
var msplit = function (dictMonad) {
    return function (m) {
        var f = function (v) {
            if (v instanceof Halt) {
                return new Emit(Data_Maybe.Nothing.value, halt(dictMonad.Applicative0()));
            };
            if (v instanceof Emit) {
                return new Emit(Data_Maybe.Just.create(new Data_Tuple.Tuple(v.value0, v.value1)), msplit(dictMonad)(v.value1));
            };
            throw new Error("Failed pattern match at Data.Machine.Mealy (line 156, column 9 - line 156, column 45): " + [ v.constructor.name ]);
        };
        return mealy(dictMonad.Applicative0())(function (s) {
            return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(f)(stepMealy(dictMonad)(s)(m));
        });
    };
};
var singleton = function (dictMonad) {
    return function (a) {
        return pureMealy(dictMonad.Applicative0())(function (s) {
            return new Emit(a, halt(dictMonad.Applicative0()));
        });
    };
};
var take = function (dictMonad) {
    return function (n) {
        return function (m) {
            var f = function (v) {
                if (v instanceof Halt) {
                    return Halt.value;
                };
                if (v instanceof Emit) {
                    return new Emit(v.value0, take(dictMonad)(n - 1 | 0)(v.value1));
                };
                throw new Error("Failed pattern match at Data.Machine.Mealy (line 97, column 41 - line 97, column 61): " + [ v.constructor.name ]);
            };
            var $121 = n <= 0;
            if ($121) {
                return halt(dictMonad.Applicative0());
            };
            return mealy(dictMonad.Applicative0())(function (s) {
                return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(f)(stepMealy(dictMonad)(s)(m));
            });
        };
    };
};
var once = function (dictMonad) {
    return take(dictMonad)(1);
};
var when = function (dictMonad) {
    return function (ma) {
        return function (f) {
            return ifte(dictMonad)(ma)(f)(halt(dictMonad.Applicative0()));
        };
    };
};
var wrapEffect = function (dictMonad) {
    return function (fa) {
        return MealyT(Data_Function["const"](Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Function.flip(Emit.create)(halt(dictMonad.Applicative0())))(fa)));
    };
};
var functorMealy = function (dictMonad) {
    return new Data_Functor.Functor(function (f) {
        return function (m) {
            var g = function (v) {
                if (v instanceof Emit) {
                    return new Emit(f(v.value0), Data_Functor.map(functorMealy(dictMonad))(f)(v.value1));
                };
                if (v instanceof Halt) {
                    return Halt.value;
                };
                throw new Error("Failed pattern match at Data.Machine.Mealy (line 183, column 5 - line 183, column 42): " + [ v.constructor.name ]);
            };
            return mealy(dictMonad.Applicative0())(function (s) {
                return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(g)(stepMealy(dictMonad)(s)(m));
            });
        };
    });
};
var fromMaybe = function (dictMonad) {
    return function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return halt(dictMonad.Applicative0());
        };
        if (v instanceof Data_Maybe.Just) {
            return singleton(dictMonad)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Machine.Mealy (line 140, column 1 - line 140, column 64): " + [ v.constructor.name ]);
    };
};
var fromArray = function (dictMonad) {
    return function (a) {
        var len = Data_Array.length(a);
        var go = function (n) {
            if (n < 0 || n >= len) {
                return halt(dictMonad.Applicative0());
            };
            return Data_Semigroup.append(semigroupMealy(dictMonad))(fromMaybe(dictMonad)(Data_Array.index(a)(n)))(go(n + 1 | 0));
        };
        return go(0);
    };
};
var drop = function (dictMonad) {
    return function (n) {
        return function (m) {
            var $128 = n <= 0;
            if ($128) {
                return m;
            };
            return mealy(dictMonad.Applicative0())(function (s) {
                var f = function (v) {
                    if (v instanceof Halt) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(Halt.value);
                    };
                    if (v instanceof Emit) {
                        return stepMealy(dictMonad)(s)(drop(dictMonad)(n - 1 | 0)(v.value1));
                    };
                    throw new Error("Failed pattern match at Data.Machine.Mealy (line 102, column 39 - line 102, column 64): " + [ v.constructor.name ]);
                };
                return Control_Bind.bind(dictMonad.Bind1())(stepMealy(dictMonad)(s)(m))(f);
            });
        };
    };
};
var collect = function (dictMonad) {
    return scanl(dictMonad)(Data_Function.flip(Data_List_Types.Cons.create))(Data_List_Types.Nil.value);
};
var categoryMealy = function (dictMonad) {
    return new Control_Category.Category(function () {
        return semigroupoidMealy(dictMonad);
    }, pureMealy(dictMonad.Applicative0())(function (t) {
        return new Emit(t, halt(dictMonad.Applicative0()));
    }));
};
var applyMealy = function (dictMonad) {
    return new Control_Apply.Apply(function () {
        return functorMealy(dictMonad);
    }, function (f) {
        return function (x) {
            var ap = function (v) {
                return function (v1) {
                    if (v instanceof Halt) {
                        return Halt.value;
                    };
                    if (v1 instanceof Halt) {
                        return Halt.value;
                    };
                    if (v instanceof Emit && v1 instanceof Emit) {
                        return new Emit(v.value0(v1.value0), Control_Apply.apply(applyMealy(dictMonad))(v.value1)(v1.value1));
                    };
                    throw new Error("Failed pattern match at Data.Machine.Mealy (line 189, column 5 - line 189, column 21): " + [ v.constructor.name, v1.constructor.name ]);
                };
            };
            return mealy(dictMonad.Applicative0())(function (s) {
                return Control_Apply.apply((dictMonad.Bind1()).Apply0())(Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(ap)(stepMealy(dictMonad)(s)(f)))(stepMealy(dictMonad)(s)(x));
            });
        };
    });
};
var bindMealy = function (dictMonad) {
    return new Control_Bind.Bind(function () {
        return applyMealy(dictMonad);
    }, function (m) {
        return function (f) {
            return mealy(dictMonad.Applicative0())(function (s) {
                var g = function (v) {
                    if (v instanceof Emit) {
                        var h = function (v1) {
                            if (v1 instanceof Emit) {
                                return new Emit(v1.value0, Data_Semigroup.append(semigroupMealy(dictMonad))(v1.value1)(Control_Bind.bind(bindMealy(dictMonad))(v.value1)(f)));
                            };
                            if (v1 instanceof Halt) {
                                return Halt.value;
                            };
                            throw new Error("Failed pattern match at Data.Machine.Mealy (line 233, column 34 - line 233, column 75): " + [ v1.constructor.name ]);
                        };
                        return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(h)(stepMealy(dictMonad)(s)(f(v.value0)));
                    };
                    if (v instanceof Halt) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(Halt.value);
                    };
                    throw new Error("Failed pattern match at Data.Machine.Mealy (line 231, column 32 - line 234, column 54): " + [ v.constructor.name ]);
                };
                return Control_Bind.bind(dictMonad.Bind1())(stepMealy(dictMonad)(s)(m))(g);
            });
        };
    });
};
var zipWith = function (dictMonad) {
    return function (f) {
        return function (a) {
            return function (b) {
                return Control_Apply.apply(applyMealy(dictMonad))(Data_Functor.map(functorMealy(dictMonad))(f)(a))(b);
            };
        };
    };
};
var applicativeMealy = function (dictMonad) {
    return new Control_Applicative.Applicative(function () {
        return applyMealy(dictMonad);
    }, function (t) {
        return pureMealy(dictMonad.Applicative0())(function (s) {
            return new Emit(t, halt(dictMonad.Applicative0()));
        });
    });
};
var monadMealy = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeMealy(dictMonad);
    }, function () {
        return bindMealy(dictMonad);
    });
};
var monadEffectMealy = function (dictMonad) {
    return function (dictMonadEffect) {
        return new Effect_Class.MonadEffect(function () {
            return monadMealy(dictMonad);
        }, function ($149) {
            return wrapEffect(dictMonad)(Effect_Class.liftEffect(dictMonadEffect)($149));
        });
    };
};
var altMealy = function (dictMonad) {
    return new Control_Alt.Alt(function () {
        return functorMealy(dictMonad);
    }, function (x) {
        return function (y) {
            return mealy(dictMonad.Applicative0())(function (s) {
                var f = function (v) {
                    if (v instanceof Halt) {
                        return stepMealy(dictMonad)(s)(y);
                    };
                    if (v instanceof Emit) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(new Emit(v.value0, v.value1));
                    };
                    throw new Error("Failed pattern match at Data.Machine.Mealy (line 241, column 31 - line 241, column 61): " + [ v.constructor.name ]);
                };
                return Control_Bind.bind(dictMonad.Bind1())(stepMealy(dictMonad)(s)(x))(f);
            });
        };
    });
};
var plusMealy = function (dictMonad) {
    return new Control_Plus.Plus(function () {
        return altMealy(dictMonad);
    }, halt(dictMonad.Applicative0()));
};
var alternativeMealy = function (dictMonad) {
    return new Control_Alternative.Alternative(function () {
        return applicativeMealy(dictMonad);
    }, function () {
        return plusMealy(dictMonad);
    });
};
var monadZero = function (dictMonad) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeMealy(dictMonad);
    }, function () {
        return monadMealy(dictMonad);
    });
};
var monadPlus = function (dictMonad) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZero(dictMonad);
    });
};
module.exports = {
    runMealyT: runMealyT,
    hoistMealyT: hoistMealyT,
    Emit: Emit,
    Halt: Halt,
    source: source,
    sink: sink,
    stepMealy: stepMealy,
    runMealy: runMealy,
    pureMealy: pureMealy,
    mealy: mealy,
    halt: halt,
    take: take,
    drop: drop,
    loop: loop,
    toUnfoldable: toUnfoldable,
    zipWith: zipWith,
    scanl: scanl,
    collect: collect,
    singleton: singleton,
    fromMaybe: fromMaybe,
    fromArray: fromArray,
    msplit: msplit,
    interleave: interleave,
    when: when,
    ifte: ifte,
    wrapEffect: wrapEffect,
    functorMealy: functorMealy,
    applyMealy: applyMealy,
    applicativeMealy: applicativeMealy,
    profunctorMealy: profunctorMealy,
    strongMealy: strongMealy,
    semigroupMealy: semigroupMealy,
    monoidMealy: monoidMealy,
    semigroupoidMealy: semigroupoidMealy,
    categoryMealy: categoryMealy,
    bindMealy: bindMealy,
    monadMealy: monadMealy,
    altMealy: altMealy,
    plusMealy: plusMealy,
    alternativeMealy: alternativeMealy,
    monadZero: monadZero,
    monadPlus: monadPlus,
    monadEffectMealy: monadEffectMealy,
    lazyMealy: lazyMealy
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Comonad/index.js":21,"../Control.Lazy/index.js":25,"../Control.Monad/index.js":55,"../Control.MonadPlus/index.js":56,"../Control.MonadZero/index.js":57,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Array/index.js":99,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Ord/index.js":229,"../Data.Profunctor.Strong/index.js":237,"../Data.Profunctor/index.js":238,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Tuple/index.js":283,"../Data.Unfoldable/index.js":285,"../Data.Unit/index.js":289,"../Effect.Class/index.js":298,"../Prelude/index.js":385}],206:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Lazy = require("../Data.List.Lazy/index.js");
var Data_List_Lazy_Types = require("../Data.List.Lazy.Types/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var Leaf = (function () {
    function Leaf() {

    };
    Leaf.value = new Leaf();
    return Leaf;
})();
var Two = (function () {
    function Two(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Two.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Two(value0, value1, value2, value3);
                };
            };
        };
    };
    return Two;
})();
var Three = (function () {
    function Three(value0, value1, value2, value3, value4, value5, value6) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
        this.value6 = value6;
    };
    Three.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return function (value6) {
                                return new Three(value0, value1, value2, value3, value4, value5, value6);
                            };
                        };
                    };
                };
            };
        };
    };
    return Three;
})();
var TwoLeft = (function () {
    function TwoLeft(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoLeft(value0, value1, value2);
            };
        };
    };
    return TwoLeft;
})();
var TwoRight = (function () {
    function TwoRight(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoRight(value0, value1, value2);
            };
        };
    };
    return TwoRight;
})();
var ThreeLeft = (function () {
    function ThreeLeft(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeLeft;
})();
var ThreeMiddle = (function () {
    function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeMiddle.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeMiddle;
})();
var ThreeRight = (function () {
    function ThreeRight(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeRight(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeRight;
})();
var KickUp = (function () {
    function KickUp(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    KickUp.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new KickUp(value0, value1, value2, value3);
                };
            };
        };
    };
    return KickUp;
})();
var values = function (v) {
    if (v instanceof Leaf) {
        return Data_List_Types.Nil.value;
    };
    if (v instanceof Two) {
        return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
    };
    if (v instanceof Three) {
        return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
    };
    throw new Error("Failed pattern match at Data.Map.Internal (line 612, column 1 - line 612, column 40): " + [ v.constructor.name ]);
};
var size = function (v) {
    if (v instanceof Leaf) {
        return 0;
    };
    if (v instanceof Two) {
        return (1 + size(v.value0) | 0) + size(v.value3) | 0;
    };
    if (v instanceof Three) {
        return ((2 + size(v.value0) | 0) + size(v.value3) | 0) + size(v.value6) | 0;
    };
    throw new Error("Failed pattern match at Data.Map.Internal (line 662, column 1 - line 662, column 35): " + [ v.constructor.name ]);
};
var singleton = function (k) {
    return function (v) {
        return new Two(Leaf.value, k, v, Leaf.value);
    };
};
var toUnfoldable = function (dictUnfoldable) {
    return function (m) {
        var go = function ($copy_v) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                if (v instanceof Data_List_Types.Cons) {
                    if (v.value0 instanceof Leaf) {
                        $copy_v = v.value1;
                        return;
                    };
                    if (v.value0 instanceof Two && (v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf)) {
                        $tco_done = true;
                        return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), v.value1));
                    };
                    if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
                        $tco_done = true;
                        return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                    };
                    if (v.value0 instanceof Two) {
                        $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                        return;
                    };
                    if (v.value0 instanceof Three) {
                        $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value6, v.value1)))));
                        return;
                    };
                    throw new Error("Failed pattern match at Data.Map.Internal (line 577, column 18 - line 586, column 71): " + [ v.value0.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.Map.Internal (line 576, column 3 - line 576, column 19): " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($copy_v);
            };
            return $tco_result;
        };
        return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
    };
};
var toAscArray = toUnfoldable(Data_Unfoldable.unfoldableArray);
var toUnfoldableUnordered = function (dictUnfoldable) {
    return function (m) {
        var go = function ($copy_v) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                if (v instanceof Data_List_Types.Cons) {
                    if (v.value0 instanceof Leaf) {
                        $copy_v = v.value1;
                        return;
                    };
                    if (v.value0 instanceof Two) {
                        $tco_done = true;
                        return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(v.value0.value3, v.value1))));
                    };
                    if (v.value0 instanceof Three) {
                        $tco_done = true;
                        return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(v.value0.value6, v.value1))))));
                    };
                    throw new Error("Failed pattern match at Data.Map.Internal (line 598, column 18 - line 603, column 77): " + [ v.value0.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.Map.Internal (line 597, column 3 - line 597, column 19): " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($copy_v);
            };
            return $tco_result;
        };
        return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
    };
};
var showTree = function (dictShow) {
    return function (dictShow1) {
        return function (v) {
            if (v instanceof Leaf) {
                return "Leaf";
            };
            if (v instanceof Two) {
                return "Two (" + (showTree(dictShow)(dictShow1)(v.value0) + (") (" + (Data_Show.show(dictShow)(v.value1) + (") (" + (Data_Show.show(dictShow1)(v.value2) + (") (" + (showTree(dictShow)(dictShow1)(v.value3) + ")")))))));
            };
            if (v instanceof Three) {
                return "Three (" + (showTree(dictShow)(dictShow1)(v.value0) + (") (" + (Data_Show.show(dictShow)(v.value1) + (") (" + (Data_Show.show(dictShow1)(v.value2) + (") (" + (showTree(dictShow)(dictShow1)(v.value3) + (") (" + (Data_Show.show(dictShow)(v.value4) + (") (" + (Data_Show.show(dictShow1)(v.value5) + (") (" + (showTree(dictShow)(dictShow1)(v.value6) + ")")))))))))))));
            };
            throw new Error("Failed pattern match at Data.Map.Internal (line 153, column 1 - line 153, column 62): " + [ v.constructor.name ]);
        };
    };
};
var showMap = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (m) {
            return "(fromFoldable " + (Data_Show.show(Data_Show.showArray(Data_Tuple.showTuple(dictShow)(dictShow1)))(toAscArray(m)) + ")");
        });
    };
};
var lookupLE = function (dictOrd) {
    return function (k) {
        var comp = Data_Ord.compare(dictOrd);
        var go = function (v) {
            if (v instanceof Leaf) {
                return Data_Maybe.Nothing.value;
            };
            if (v instanceof Two) {
                var v2 = comp(k)(v.value1);
                if (v2 instanceof Data_Ordering.EQ) {
                    return new Data_Maybe.Just({
                        key: v.value1,
                        value: v.value2
                    });
                };
                if (v2 instanceof Data_Ordering.GT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v.value1,
                        value: v.value2
                    })(go(v.value3)));
                };
                if (v2 instanceof Data_Ordering.LT) {
                    return go(v.value0);
                };
                throw new Error("Failed pattern match at Data.Map.Internal (line 225, column 33 - line 228, column 20): " + [ v2.constructor.name ]);
            };
            if (v instanceof Three) {
                var v3 = comp(k)(v.value4);
                if (v3 instanceof Data_Ordering.EQ) {
                    return new Data_Maybe.Just({
                        key: v.value4,
                        value: v.value5
                    });
                };
                if (v3 instanceof Data_Ordering.GT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v.value4,
                        value: v.value5
                    })(go(v.value6)));
                };
                if (v3 instanceof Data_Ordering.LT) {
                    return go(new Two(v.value0, v.value1, v.value2, v.value3));
                };
                throw new Error("Failed pattern match at Data.Map.Internal (line 229, column 45 - line 232, column 36): " + [ v3.constructor.name ]);
            };
            throw new Error("Failed pattern match at Data.Map.Internal (line 224, column 5 - line 224, column 22): " + [ v.constructor.name ]);
        };
        return go;
    };
};
var lookupGE = function (dictOrd) {
    return function (k) {
        var comp = Data_Ord.compare(dictOrd);
        var go = function (v) {
            if (v instanceof Leaf) {
                return Data_Maybe.Nothing.value;
            };
            if (v instanceof Two) {
                var v2 = comp(k)(v.value1);
                if (v2 instanceof Data_Ordering.EQ) {
                    return new Data_Maybe.Just({
                        key: v.value1,
                        value: v.value2
                    });
                };
                if (v2 instanceof Data_Ordering.LT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v.value1,
                        value: v.value2
                    })(go(v.value0)));
                };
                if (v2 instanceof Data_Ordering.GT) {
                    return go(v.value3);
                };
                throw new Error("Failed pattern match at Data.Map.Internal (line 259, column 33 - line 262, column 21): " + [ v2.constructor.name ]);
            };
            if (v instanceof Three) {
                var v3 = comp(k)(v.value1);
                if (v3 instanceof Data_Ordering.EQ) {
                    return new Data_Maybe.Just({
                        key: v.value1,
                        value: v.value2
                    });
                };
                if (v3 instanceof Data_Ordering.LT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v.value1,
                        value: v.value2
                    })(go(v.value0)));
                };
                if (v3 instanceof Data_Ordering.GT) {
                    return go(new Two(v.value3, v.value4, v.value5, v.value6));
                };
                throw new Error("Failed pattern match at Data.Map.Internal (line 263, column 45 - line 266, column 37): " + [ v3.constructor.name ]);
            };
            throw new Error("Failed pattern match at Data.Map.Internal (line 258, column 5 - line 258, column 22): " + [ v.constructor.name ]);
        };
        return go;
    };
};
var lookup = function (dictOrd) {
    return function (k) {
        var comp = Data_Ord.compare(dictOrd);
        var go = function ($copy_v) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v) {
                if (v instanceof Leaf) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                if (v instanceof Two) {
                    var v2 = comp(k)(v.value1);
                    if (v2 instanceof Data_Ordering.EQ) {
                        $tco_done = true;
                        return new Data_Maybe.Just(v.value2);
                    };
                    if (v2 instanceof Data_Ordering.LT) {
                        $copy_v = v.value0;
                        return;
                    };
                    $copy_v = v.value3;
                    return;
                };
                if (v instanceof Three) {
                    var v3 = comp(k)(v.value1);
                    if (v3 instanceof Data_Ordering.EQ) {
                        $tco_done = true;
                        return new Data_Maybe.Just(v.value2);
                    };
                    var v4 = comp(k)(v.value4);
                    if (v4 instanceof Data_Ordering.EQ) {
                        $tco_done = true;
                        return new Data_Maybe.Just(v.value5);
                    };
                    if (v3 instanceof Data_Ordering.LT) {
                        $copy_v = v.value0;
                        return;
                    };
                    if (v4 instanceof Data_Ordering.GT) {
                        $copy_v = v.value6;
                        return;
                    };
                    $copy_v = v.value3;
                    return;
                };
                throw new Error("Failed pattern match at Data.Map.Internal (line 200, column 5 - line 200, column 22): " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($copy_v);
            };
            return $tco_result;
        };
        return go;
    };
};
var member = function (dictOrd) {
    return function (k) {
        return function (m) {
            return Data_Maybe.isJust(lookup(dictOrd)(k)(m));
        };
    };
};
var keys = function (v) {
    if (v instanceof Leaf) {
        return Data_List_Types.Nil.value;
    };
    if (v instanceof Two) {
        return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(keys(v.value3)));
    };
    if (v instanceof Three) {
        return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value4))(keys(v.value6)))));
    };
    throw new Error("Failed pattern match at Data.Map.Internal (line 606, column 1 - line 606, column 38): " + [ v.constructor.name ]);
};
var isSubmap = function (dictOrd) {
    return function (dictEq) {
        return function (m1) {
            return function (m2) {
                var f = function (v) {
                    return Data_Eq.eq(Data_Maybe.eqMaybe(dictEq))(lookup(dictOrd)(v.value0)(m2))(new Data_Maybe.Just(v.value1));
                };
                return Data_Foldable.all(Data_List_Lazy_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(f)(toUnfoldable(Data_List_Lazy_Types.unfoldableList)(m1));
            };
        };
    };
};
var isEmpty = function (v) {
    if (v instanceof Leaf) {
        return true;
    };
    return false;
};
var functorMap = new Data_Functor.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof Leaf) {
            return Leaf.value;
        };
        if (v1 instanceof Two) {
            return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));
        };
        if (v1 instanceof Three) {
            return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));
        };
        throw new Error("Failed pattern match at Data.Map.Internal (line 96, column 1 - line 96, column 39): " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var functorWithIndexMap = new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorMap;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Leaf) {
            return Leaf.value;
        };
        if (v1 instanceof Two) {
            return new Two(Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value0), v1.value1, v(v1.value1)(v1.value2), Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value3));
        };
        if (v1 instanceof Three) {
            return new Three(Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value0), v1.value1, v(v1.value1)(v1.value2), Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value3), v1.value4, v(v1.value4)(v1.value5), Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value6));
        };
        throw new Error("Failed pattern match at Data.Map.Internal (line 101, column 1 - line 101, column 59): " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var fromZipper = function ($copy_dictOrd) {
    return function ($copy_v) {
        return function ($copy_tree) {
            var $tco_var_dictOrd = $copy_dictOrd;
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(dictOrd, v, tree) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return tree;
                };
                if (v instanceof Data_List_Types.Cons) {
                    if (v.value0 instanceof TwoLeft) {
                        $tco_var_dictOrd = dictOrd;
                        $tco_var_v = v.value1;
                        $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                        return;
                    };
                    if (v.value0 instanceof TwoRight) {
                        $tco_var_dictOrd = dictOrd;
                        $tco_var_v = v.value1;
                        $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                        return;
                    };
                    if (v.value0 instanceof ThreeLeft) {
                        $tco_var_dictOrd = dictOrd;
                        $tco_var_v = v.value1;
                        $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                        return;
                    };
                    if (v.value0 instanceof ThreeMiddle) {
                        $tco_var_dictOrd = dictOrd;
                        $tco_var_v = v.value1;
                        $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                        return;
                    };
                    if (v.value0 instanceof ThreeRight) {
                        $tco_var_dictOrd = dictOrd;
                        $tco_var_v = v.value1;
                        $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                        return;
                    };
                    throw new Error("Failed pattern match at Data.Map.Internal (line 418, column 3 - line 423, column 88): " + [ v.value0.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.Map.Internal (line 415, column 1 - line 415, column 80): " + [ v.constructor.name, tree.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
            };
            return $tco_result;
        };
    };
};
var insert = function (dictOrd) {
    return function (k) {
        return function (v) {
            var up = function ($copy_v1) {
                return function ($copy_v2) {
                    var $tco_var_v1 = $copy_v1;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(v1, v2) {
                        if (v1 instanceof Data_List_Types.Nil) {
                            $tco_done = true;
                            return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                        };
                        if (v1 instanceof Data_List_Types.Cons) {
                            if (v1.value0 instanceof TwoLeft) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                            };
                            if (v1.value0 instanceof TwoRight) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                            };
                            if (v1.value0 instanceof ThreeLeft) {
                                $tco_var_v1 = v1.value1;
                                $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                return;
                            };
                            if (v1.value0 instanceof ThreeMiddle) {
                                $tco_var_v1 = v1.value1;
                                $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                return;
                            };
                            if (v1.value0 instanceof ThreeRight) {
                                $tco_var_v1 = v1.value1;
                                $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                                return;
                            };
                            throw new Error("Failed pattern match at Data.Map.Internal (line 454, column 5 - line 459, column 108): " + [ v1.value0.constructor.name, v2.constructor.name ]);
                        };
                        throw new Error("Failed pattern match at Data.Map.Internal (line 451, column 3 - line 451, column 56): " + [ v1.constructor.name, v2.constructor.name ]);
                    };
                    while (!$tco_done) {
                        $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                    };
                    return $tco_result;
                };
            };
            var comp = Data_Ord.compare(dictOrd);
            var down = function ($copy_ctx) {
                return function ($copy_v1) {
                    var $tco_var_ctx = $copy_ctx;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(ctx, v1) {
                        if (v1 instanceof Leaf) {
                            $tco_done = true;
                            return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                        };
                        if (v1 instanceof Two) {
                            var v2 = comp(k)(v1.value1);
                            if (v2 instanceof Data_Ordering.EQ) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                            };
                            if (v2 instanceof Data_Ordering.LT) {
                                $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                $copy_v1 = v1.value0;
                                return;
                            };
                            $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                            $copy_v1 = v1.value3;
                            return;
                        };
                        if (v1 instanceof Three) {
                            var v3 = comp(k)(v1.value1);
                            if (v3 instanceof Data_Ordering.EQ) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                            };
                            var v4 = comp(k)(v1.value4);
                            if (v4 instanceof Data_Ordering.EQ) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                            };
                            if (v3 instanceof Data_Ordering.LT) {
                                $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                $copy_v1 = v1.value0;
                                return;
                            };
                            if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                $copy_v1 = v1.value3;
                                return;
                            };
                            $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                            $copy_v1 = v1.value6;
                            return;
                        };
                        throw new Error("Failed pattern match at Data.Map.Internal (line 434, column 3 - line 434, column 55): " + [ ctx.constructor.name, v1.constructor.name ]);
                    };
                    while (!$tco_done) {
                        $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                    };
                    return $tco_result;
                };
            };
            return down(Data_List_Types.Nil.value);
        };
    };
};
var pop = function (dictOrd) {
    return function (k) {
        var up = function ($copy_ctxs) {
            return function ($copy_tree) {
                var $tco_var_ctxs = $copy_ctxs;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(ctxs, tree) {
                    if (ctxs instanceof Data_List_Types.Nil) {
                        $tco_done = true;
                        return tree;
                    };
                    if (ctxs instanceof Data_List_Types.Cons) {
                        if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
                        };
                        if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
                        };
                        if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                            $tco_var_ctxs = ctxs.value1;
                            $copy_tree = new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
                            return;
                        };
                        if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                            $tco_var_ctxs = ctxs.value1;
                            $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);
                            return;
                        };
                        if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                        };
                        if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                        };
                        if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                        };
                        if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                        };
                        if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
                        };
                        if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                        };
                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                        };
                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                        };
                        if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                        };
                        if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                        };
                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                        };
                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                        };
                        if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                            $tco_done = true;
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                        };
                        throw new Error("Failed pattern match at Data.Map.Internal (line 511, column 9 - line 528, column 136): " + [ ctxs.value0.constructor.name, tree.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at Data.Map.Internal (line 508, column 5 - line 528, column 136): " + [ ctxs.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
                };
                return $tco_result;
            };
        };
        var removeMaxNode = function ($copy_ctx) {
            return function ($copy_m) {
                var $tco_var_ctx = $copy_ctx;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(ctx, m) {
                    if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
                        $tco_done = true;
                        return up(ctx)(Leaf.value);
                    };
                    if (m instanceof Two) {
                        $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                        $copy_m = m.value3;
                        return;
                    };
                    if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
                        $tco_done = true;
                        return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
                    };
                    if (m instanceof Three) {
                        $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                        $copy_m = m.value6;
                        return;
                    };
                    throw new Error("Failed pattern match at Data.Map.Internal (line 540, column 5 - line 544, column 107): " + [ m.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                };
                return $tco_result;
            };
        };
        var maxNode = function ($copy_m) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(m) {
                if (m instanceof Two && m.value3 instanceof Leaf) {
                    $tco_done = true;
                    return {
                        key: m.value1,
                        value: m.value2
                    };
                };
                if (m instanceof Two) {
                    $copy_m = m.value3;
                    return;
                };
                if (m instanceof Three && m.value6 instanceof Leaf) {
                    $tco_done = true;
                    return {
                        key: m.value4,
                        value: m.value5
                    };
                };
                if (m instanceof Three) {
                    $copy_m = m.value6;
                    return;
                };
                throw new Error("Failed pattern match at Data.Map.Internal (line 531, column 33 - line 535, column 45): " + [ m.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($copy_m);
            };
            return $tco_result;
        };
        var comp = Data_Ord.compare(dictOrd);
        var down = function ($copy_ctx) {
            return function ($copy_m) {
                var $tco_var_ctx = $copy_ctx;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(ctx, m) {
                    if (m instanceof Leaf) {
                        $tco_done = true;
                        return Data_Maybe.Nothing.value;
                    };
                    if (m instanceof Two) {
                        var v = comp(k)(m.value1);
                        if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {
                            $tco_done = true;
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
                        };
                        if (v instanceof Data_Ordering.EQ) {
                            var max = maxNode(m.value0);
                            $tco_done = true;
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
                        };
                        if (v instanceof Data_Ordering.LT) {
                            $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                            $copy_m = m.value0;
                            return;
                        };
                        $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                        $copy_m = m.value3;
                        return;
                    };
                    if (m instanceof Three) {
                        var leaves = (function () {
                            if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                                return true;
                            };
                            return false;
                        })();
                        var v = comp(k)(m.value4);
                        var v3 = comp(k)(m.value1);
                        if (leaves && v3 instanceof Data_Ordering.EQ) {
                            $tco_done = true;
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
                        };
                        if (leaves && v instanceof Data_Ordering.EQ) {
                            $tco_done = true;
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
                        };
                        if (v3 instanceof Data_Ordering.EQ) {
                            var max = maxNode(m.value0);
                            $tco_done = true;
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                        };
                        if (v instanceof Data_Ordering.EQ) {
                            var max = maxNode(m.value3);
                            $tco_done = true;
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
                        };
                        if (v3 instanceof Data_Ordering.LT) {
                            $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                            $copy_m = m.value0;
                            return;
                        };
                        if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {
                            $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                            $copy_m = m.value3;
                            return;
                        };
                        $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                        $copy_m = m.value6;
                        return;
                    };
                    throw new Error("Failed pattern match at Data.Map.Internal (line 481, column 34 - line 504, column 80): " + [ m.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                };
                return $tco_result;
            };
        };
        return down(Data_List_Types.Nil.value);
    };
};
var foldableMap = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (m) {
            return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(values(m));
        };
    };
});
var traversableMap = new Data_Traversable.Traversable(function () {
    return foldableMap;
}, function () {
    return functorMap;
}, function (dictApplicative) {
    return Data_Traversable.traverse(traversableMap)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            if (v instanceof Leaf) {
                return Control_Applicative.pure(dictApplicative)(Leaf.value);
            };
            if (v instanceof Two) {
                return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Two.create)(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value0)))(Control_Applicative.pure(dictApplicative)(v.value1)))(f(v.value2)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value3));
            };
            if (v instanceof Three) {
                return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Three.create)(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value0)))(Control_Applicative.pure(dictApplicative)(v.value1)))(f(v.value2)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value3)))(Control_Applicative.pure(dictApplicative)(v.value4)))(f(v.value5)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value6));
            };
            throw new Error("Failed pattern match at Data.Map.Internal (line 119, column 1 - line 119, column 47): " + [ f.constructor.name, v.constructor.name ]);
        };
    };
});
var foldSubmap = function (dictOrd) {
    return function (dictMonoid) {
        return function (kmin) {
            return function (kmax) {
                return function (f) {
                    var tooSmall = (function () {
                        if (kmin instanceof Data_Maybe.Just) {
                            return function (k) {
                                return Data_Ord.lessThan(dictOrd)(k)(kmin.value0);
                            };
                        };
                        if (kmin instanceof Data_Maybe.Nothing) {
                            return Data_Function["const"](false);
                        };
                        throw new Error("Failed pattern match at Data.Map.Internal (line 319, column 7 - line 323, column 22): " + [ kmin.constructor.name ]);
                    })();
                    var tooLarge = (function () {
                        if (kmax instanceof Data_Maybe.Just) {
                            return function (k) {
                                return Data_Ord.greaterThan(dictOrd)(k)(kmax.value0);
                            };
                        };
                        if (kmax instanceof Data_Maybe.Nothing) {
                            return Data_Function["const"](false);
                        };
                        throw new Error("Failed pattern match at Data.Map.Internal (line 326, column 7 - line 330, column 22): " + [ kmax.constructor.name ]);
                    })();
                    var inBounds = (function () {
                        if (kmin instanceof Data_Maybe.Just && kmax instanceof Data_Maybe.Just) {
                            return function (k) {
                                return Data_Ord.lessThanOrEq(dictOrd)(kmin.value0)(k) && Data_Ord.lessThanOrEq(dictOrd)(k)(kmax.value0);
                            };
                        };
                        if (kmin instanceof Data_Maybe.Just && kmax instanceof Data_Maybe.Nothing) {
                            return function (k) {
                                return Data_Ord.lessThanOrEq(dictOrd)(kmin.value0)(k);
                            };
                        };
                        if (kmin instanceof Data_Maybe.Nothing && kmax instanceof Data_Maybe.Just) {
                            return function (k) {
                                return Data_Ord.lessThanOrEq(dictOrd)(k)(kmax.value0);
                            };
                        };
                        if (kmin instanceof Data_Maybe.Nothing && kmax instanceof Data_Maybe.Nothing) {
                            return Data_Function["const"](true);
                        };
                        throw new Error("Failed pattern match at Data.Map.Internal (line 333, column 7 - line 341, column 21): " + [ kmin.constructor.name, kmax.constructor.name ]);
                    })();
                    var go = function (v) {
                        if (v instanceof Leaf) {
                            return Data_Monoid.mempty(dictMonoid);
                        };
                        if (v instanceof Two) {
                            return Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                var $633 = tooSmall(v.value1);
                                if ($633) {
                                    return Data_Monoid.mempty(dictMonoid);
                                };
                                return go(v.value0);
                            })())(Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                var $634 = inBounds(v.value1);
                                if ($634) {
                                    return f(v.value1)(v.value2);
                                };
                                return Data_Monoid.mempty(dictMonoid);
                            })())((function () {
                                var $635 = tooLarge(v.value1);
                                if ($635) {
                                    return Data_Monoid.mempty(dictMonoid);
                                };
                                return go(v.value3);
                            })()));
                        };
                        if (v instanceof Three) {
                            return Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                var $640 = tooSmall(v.value1);
                                if ($640) {
                                    return Data_Monoid.mempty(dictMonoid);
                                };
                                return go(v.value0);
                            })())(Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                var $641 = inBounds(v.value1);
                                if ($641) {
                                    return f(v.value1)(v.value2);
                                };
                                return Data_Monoid.mempty(dictMonoid);
                            })())(Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                var $642 = tooSmall(v.value4) || tooLarge(v.value1);
                                if ($642) {
                                    return Data_Monoid.mempty(dictMonoid);
                                };
                                return go(v.value3);
                            })())(Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                var $643 = inBounds(v.value4);
                                if ($643) {
                                    return f(v.value4)(v.value5);
                                };
                                return Data_Monoid.mempty(dictMonoid);
                            })())((function () {
                                var $644 = tooLarge(v.value4);
                                if ($644) {
                                    return Data_Monoid.mempty(dictMonoid);
                                };
                                return go(v.value6);
                            })()))));
                        };
                        throw new Error("Failed pattern match at Data.Map.Internal (line 359, column 10 - line 371, column 54): " + [ v.constructor.name ]);
                    };
                    return go;
                };
            };
        };
    };
};
var findMin = (function () {
    var go = function ($copy_v) {
        return function ($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v1 instanceof Leaf) {
                    $tco_done = true;
                    return v;
                };
                if (v1 instanceof Two) {
                    $tco_var_v = new Data_Maybe.Just({
                        key: v1.value1,
                        value: v1.value2
                    });
                    $copy_v1 = v1.value0;
                    return;
                };
                if (v1 instanceof Three) {
                    $tco_var_v = new Data_Maybe.Just({
                        key: v1.value1,
                        value: v1.value2
                    });
                    $copy_v1 = v1.value0;
                    return;
                };
                throw new Error("Failed pattern match at Data.Map.Internal (line 297, column 5 - line 297, column 22): " + [ v.constructor.name, v1.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
            };
            return $tco_result;
        };
    };
    return go(Data_Maybe.Nothing.value);
})();
var lookupGT = function (dictOrd) {
    return function (k) {
        var comp = Data_Ord.compare(dictOrd);
        var go = function (v) {
            if (v instanceof Leaf) {
                return Data_Maybe.Nothing.value;
            };
            if (v instanceof Two) {
                var v2 = comp(k)(v.value1);
                if (v2 instanceof Data_Ordering.EQ) {
                    return findMin(v.value3);
                };
                if (v2 instanceof Data_Ordering.LT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v.value1,
                        value: v.value2
                    })(go(v.value0)));
                };
                if (v2 instanceof Data_Ordering.GT) {
                    return go(v.value3);
                };
                throw new Error("Failed pattern match at Data.Map.Internal (line 276, column 33 - line 279, column 21): " + [ v2.constructor.name ]);
            };
            if (v instanceof Three) {
                var v3 = comp(k)(v.value1);
                if (v3 instanceof Data_Ordering.EQ) {
                    return findMin(new Two(v.value3, v.value4, v.value5, v.value6));
                };
                if (v3 instanceof Data_Ordering.LT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v.value1,
                        value: v.value2
                    })(go(v.value0)));
                };
                if (v3 instanceof Data_Ordering.GT) {
                    return go(new Two(v.value3, v.value4, v.value5, v.value6));
                };
                throw new Error("Failed pattern match at Data.Map.Internal (line 280, column 45 - line 283, column 37): " + [ v3.constructor.name ]);
            };
            throw new Error("Failed pattern match at Data.Map.Internal (line 275, column 5 - line 275, column 22): " + [ v.constructor.name ]);
        };
        return go;
    };
};
var findMax = (function () {
    var go = function ($copy_v) {
        return function ($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v1 instanceof Leaf) {
                    $tco_done = true;
                    return v;
                };
                if (v1 instanceof Two) {
                    $tco_var_v = new Data_Maybe.Just({
                        key: v1.value1,
                        value: v1.value2
                    });
                    $copy_v1 = v1.value3;
                    return;
                };
                if (v1 instanceof Three) {
                    $tco_var_v = new Data_Maybe.Just({
                        key: v1.value4,
                        value: v1.value5
                    });
                    $copy_v1 = v1.value6;
                    return;
                };
                throw new Error("Failed pattern match at Data.Map.Internal (line 289, column 5 - line 289, column 22): " + [ v.constructor.name, v1.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
            };
            return $tco_result;
        };
    };
    return go(Data_Maybe.Nothing.value);
})();
var lookupLT = function (dictOrd) {
    return function (k) {
        var comp = Data_Ord.compare(dictOrd);
        var go = function (v) {
            if (v instanceof Leaf) {
                return Data_Maybe.Nothing.value;
            };
            if (v instanceof Two) {
                var v2 = comp(k)(v.value1);
                if (v2 instanceof Data_Ordering.EQ) {
                    return findMax(v.value0);
                };
                if (v2 instanceof Data_Ordering.GT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v.value1,
                        value: v.value2
                    })(go(v.value3)));
                };
                if (v2 instanceof Data_Ordering.LT) {
                    return go(v.value0);
                };
                throw new Error("Failed pattern match at Data.Map.Internal (line 242, column 33 - line 245, column 20): " + [ v2.constructor.name ]);
            };
            if (v instanceof Three) {
                var v3 = comp(k)(v.value4);
                if (v3 instanceof Data_Ordering.EQ) {
                    return findMax(new Two(v.value0, v.value1, v.value2, v.value3));
                };
                if (v3 instanceof Data_Ordering.GT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v.value4,
                        value: v.value5
                    })(go(v.value6)));
                };
                if (v3 instanceof Data_Ordering.LT) {
                    return go(new Two(v.value0, v.value1, v.value2, v.value3));
                };
                throw new Error("Failed pattern match at Data.Map.Internal (line 246, column 45 - line 249, column 36): " + [ v3.constructor.name ]);
            };
            throw new Error("Failed pattern match at Data.Map.Internal (line 241, column 5 - line 241, column 22): " + [ v.constructor.name ]);
        };
        return go;
    };
};
var eqMap = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (m1) {
            return function (m2) {
                return Data_Eq.eq(Data_Eq.eqArray(Data_Tuple.eqTuple(dictEq)(dictEq1)))(toAscArray(m1))(toAscArray(m2));
            };
        });
    };
};
var ordMap = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqMap(dictOrd.Eq0())(dictOrd1.Eq0());
        }, function (m1) {
            return function (m2) {
                return Data_Ord.compare(Data_Ord.ordArray(Data_Tuple.ordTuple(dictOrd)(dictOrd1)))(toAscArray(m1))(toAscArray(m2));
            };
        });
    };
};
var eq1Map = function (dictEq) {
    return new Data_Eq.Eq1(function (dictEq1) {
        return Data_Eq.eq(eqMap(dictEq)(dictEq1));
    });
};
var ord1Map = function (dictOrd) {
    return new Data_Ord.Ord1(function () {
        return eq1Map(dictOrd.Eq0());
    }, function (dictOrd1) {
        return Data_Ord.compare(ordMap(dictOrd)(dictOrd1));
    });
};
var empty = Leaf.value;
var fromFoldable = function (dictOrd) {
    return function (dictFoldable) {
        return Data_Foldable.foldl(dictFoldable)(function (m) {
            return function (v) {
                return insert(dictOrd)(v.value0)(v.value1)(m);
            };
        })(empty);
    };
};
var filterWithKey = function (dictOrd) {
    return function (predicate) {
        return function ($758) {
            return fromFoldable(dictOrd)(Data_List_Lazy_Types.foldableList)(Data_List_Lazy.filter(Data_Tuple.uncurry(predicate))(toUnfoldable(Data_List_Lazy_Types.unfoldableList)($758)));
        };
    };
};
var filter = function (dictOrd) {
    return function (predicate) {
        return filterWithKey(dictOrd)(Data_Function["const"](predicate));
    };
};
var filterKeys = function (dictOrd) {
    return function (predicate) {
        return filterWithKey(dictOrd)(function ($759) {
            return Data_Function["const"](predicate($759));
        });
    };
};
var fromFoldableWithIndex = function (dictOrd) {
    return function (dictFoldableWithIndex) {
        return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function (k) {
            return function (m) {
                return function (v) {
                    return insert(dictOrd)(k)(v)(m);
                };
            };
        })(empty);
    };
};
var intersectionWith = function (dictOrd) {
    return function (f) {
        return function (m1) {
            return function (m2) {
                var go = function ($copy_v) {
                    return function ($copy_v1) {
                        return function ($copy_m) {
                            var $tco_var_v = $copy_v;
                            var $tco_var_v1 = $copy_v1;
                            var $tco_done = false;
                            var $tco_result;
                            function $tco_loop(v, v1, m) {
                                if (v instanceof Data_List_Types.Nil) {
                                    $tco_done = true;
                                    return m;
                                };
                                if (v1 instanceof Data_List_Types.Nil) {
                                    $tco_done = true;
                                    return m;
                                };
                                if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                                    var v2 = Data_Ord.compare(dictOrd)(v.value0.value0)(v1.value0.value0);
                                    if (v2 instanceof Data_Ordering.LT) {
                                        $tco_var_v = v.value1;
                                        $tco_var_v1 = v1;
                                        $copy_m = m;
                                        return;
                                    };
                                    if (v2 instanceof Data_Ordering.EQ) {
                                        $tco_var_v = v.value1;
                                        $tco_var_v1 = v1.value1;
                                        $copy_m = insert(dictOrd)(v.value0.value0)(f(v.value0.value1)(v1.value0.value1))(m);
                                        return;
                                    };
                                    if (v2 instanceof Data_Ordering.GT) {
                                        $tco_var_v = v;
                                        $tco_var_v1 = v1.value1;
                                        $copy_m = m;
                                        return;
                                    };
                                    throw new Error("Failed pattern match at Data.Map.Internal (line 641, column 5 - line 644, column 27): " + [ v2.constructor.name ]);
                                };
                                throw new Error("Failed pattern match at Data.Map.Internal (line 638, column 3 - line 638, column 17): " + [ v.constructor.name, v1.constructor.name, m.constructor.name ]);
                            };
                            while (!$tco_done) {
                                $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_m);
                            };
                            return $tco_result;
                        };
                    };
                };
                return go(toUnfoldable(Data_List_Types.unfoldableList)(m1))(toUnfoldable(Data_List_Types.unfoldableList)(m2))(empty);
            };
        };
    };
};
var intersection = function (dictOrd) {
    return intersectionWith(dictOrd)(Data_Function["const"]);
};
var $$delete = function (dictOrd) {
    return function (k) {
        return function (m) {
            return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
        };
    };
};
var difference = function (dictOrd) {
    return function (m1) {
        return function (m2) {
            return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictOrd)))(m1)(keys(m2));
        };
    };
};
var checkValid = function (tree) {
    var allHeights = function (v) {
        if (v instanceof Leaf) {
            return Control_Applicative.pure(Data_List_Types.applicativeList)(0);
        };
        if (v instanceof Two) {
            return Data_Functor.map(Data_List_Types.functorList)(function (n) {
                return n + 1 | 0;
            })(Data_Semigroup.append(Data_List_Types.semigroupList)(allHeights(v.value0))(allHeights(v.value3)));
        };
        if (v instanceof Three) {
            return Data_Functor.map(Data_List_Types.functorList)(function (n) {
                return n + 1 | 0;
            })(Data_Semigroup.append(Data_List_Types.semigroupList)(allHeights(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(allHeights(v.value3))(allHeights(v.value6))));
        };
        throw new Error("Failed pattern match at Data.Map.Internal (line 188, column 3 - line 188, column 36): " + [ v.constructor.name ]);
    };
    return Data_List.length(Data_List.nub(Data_Eq.eqInt)(allHeights(tree))) === 1;
};
var asList = Control_Category.identity(Control_Category.categoryFn);
var foldableWithIndexMap = new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableMap;
}, function (dictMonoid) {
    return function (f) {
        return function (m) {
            return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(Data_Tuple.uncurry(f))(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldl(Data_List_Types.foldableList)(function ($760) {
                return Data_Tuple.uncurry(Data_Function.flip(f)($760));
            })(z)(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_Tuple.uncurry(f))(z)(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
        };
    };
});
var mapMaybeWithKey = function (dictOrd) {
    return function (f) {
        return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexMap)(function (k) {
            return function (a) {
                return function (acc) {
                    return Data_Maybe.maybe(acc)(function (b) {
                        return insert(dictOrd)(k)(b)(acc);
                    })(f(k)(a));
                };
            };
        })(empty);
    };
};
var mapMaybe = function (dictOrd) {
    return function ($761) {
        return mapMaybeWithKey(dictOrd)(Data_Function["const"]($761));
    };
};
var traversableWithIndexMap = new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexMap;
}, function () {
    return functorWithIndexMap;
}, function () {
    return traversableMap;
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            if (v instanceof Leaf) {
                return Control_Applicative.pure(dictApplicative)(Leaf.value);
            };
            if (v instanceof Two) {
                return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Two.create)(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(f)(v.value0)))(Control_Applicative.pure(dictApplicative)(v.value1)))(f(v.value1)(v.value2)))(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(f)(v.value3));
            };
            if (v instanceof Three) {
                return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Three.create)(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(f)(v.value0)))(Control_Applicative.pure(dictApplicative)(v.value1)))(f(v.value1)(v.value2)))(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(f)(v.value3)))(Control_Applicative.pure(dictApplicative)(v.value4)))(f(v.value4)(v.value5)))(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(f)(v.value6));
            };
            throw new Error("Failed pattern match at Data.Map.Internal (line 136, column 1 - line 136, column 67): " + [ f.constructor.name, v.constructor.name ]);
        };
    };
});
var alter = function (dictOrd) {
    return function (f) {
        return function (k) {
            return function (m) {
                var v = f(lookup(dictOrd)(k)(m));
                if (v instanceof Data_Maybe.Nothing) {
                    return $$delete(dictOrd)(k)(m);
                };
                if (v instanceof Data_Maybe.Just) {
                    return insert(dictOrd)(k)(v.value0)(m);
                };
                throw new Error("Failed pattern match at Data.Map.Internal (line 549, column 15 - line 551, column 25): " + [ v.constructor.name ]);
            };
        };
    };
};
var fromFoldableWith = function (dictOrd) {
    return function (dictFoldable) {
        return function (f) {
            var combine = function (v) {
                return function (v1) {
                    if (v1 instanceof Data_Maybe.Just) {
                        return Data_Maybe.Just.create(f(v)(v1.value0));
                    };
                    if (v1 instanceof Data_Maybe.Nothing) {
                        return new Data_Maybe.Just(v);
                    };
                    throw new Error("Failed pattern match at Data.Map.Internal (line 566, column 3 - line 566, column 38): " + [ v.constructor.name, v1.constructor.name ]);
                };
            };
            return Data_Foldable.foldl(dictFoldable)(function (m) {
                return function (v) {
                    return alter(dictOrd)(combine(v.value1))(v.value0)(m);
                };
            })(empty);
        };
    };
};
var insertWith = function (dictOrd) {
    return function (f) {
        return function (k) {
            return function (v) {
                return alter(dictOrd)(function ($762) {
                    return Data_Maybe.Just.create(Data_Maybe.maybe(v)(Data_Function.flip(f)(v))($762));
                })(k);
            };
        };
    };
};
var unionWith = function (dictOrd) {
    return function (f) {
        return function (m1) {
            return function (m2) {
                var go = function (m) {
                    return function (v) {
                        return alter(dictOrd)(function ($763) {
                            return Data_Maybe.Just.create(Data_Maybe.maybe(v.value1)(f(v.value1))($763));
                        })(v.value0)(m);
                    };
                };
                return Data_Foldable.foldl(Data_List_Types.foldableList)(go)(m2)(toUnfoldable(Data_List_Types.unfoldableList)(m1));
            };
        };
    };
};
var union = function (dictOrd) {
    return unionWith(dictOrd)(Data_Function["const"]);
};
var semigroupMap = function (dictOrd) {
    return new Data_Semigroup.Semigroup(union(dictOrd));
};
var monoidMap = function (dictOrd) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMap(dictOrd);
    }, empty);
};
var submap = function (dictOrd) {
    return function (kmin) {
        return function (kmax) {
            return foldSubmap(dictOrd)(monoidMap(dictOrd))(kmin)(kmax)(singleton);
        };
    };
};
var unions = function (dictOrd) {
    return function (dictFoldable) {
        return Data_Foldable.foldl(dictFoldable)(union(dictOrd))(empty);
    };
};
var update = function (dictOrd) {
    return function (f) {
        return function (k) {
            return function (m) {
                return alter(dictOrd)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
            };
        };
    };
};
module.exports = {
    showTree: showTree,
    empty: empty,
    isEmpty: isEmpty,
    singleton: singleton,
    checkValid: checkValid,
    insert: insert,
    insertWith: insertWith,
    lookup: lookup,
    lookupLE: lookupLE,
    lookupLT: lookupLT,
    lookupGE: lookupGE,
    lookupGT: lookupGT,
    findMin: findMin,
    findMax: findMax,
    foldSubmap: foldSubmap,
    submap: submap,
    fromFoldable: fromFoldable,
    fromFoldableWith: fromFoldableWith,
    fromFoldableWithIndex: fromFoldableWithIndex,
    toUnfoldable: toUnfoldable,
    toUnfoldableUnordered: toUnfoldableUnordered,
    "delete": $$delete,
    pop: pop,
    member: member,
    alter: alter,
    update: update,
    keys: keys,
    values: values,
    union: union,
    unionWith: unionWith,
    unions: unions,
    intersection: intersection,
    intersectionWith: intersectionWith,
    difference: difference,
    isSubmap: isSubmap,
    size: size,
    filterWithKey: filterWithKey,
    filterKeys: filterKeys,
    filter: filter,
    mapMaybeWithKey: mapMaybeWithKey,
    mapMaybe: mapMaybe,
    eq1Map: eq1Map,
    eqMap: eqMap,
    ord1Map: ord1Map,
    ordMap: ordMap,
    showMap: showMap,
    semigroupMap: semigroupMap,
    monoidMap: monoidMap,
    functorMap: functorMap,
    functorWithIndexMap: functorWithIndexMap,
    foldableMap: foldableMap,
    foldableWithIndexMap: foldableWithIndexMap,
    traversableMap: traversableMap,
    traversableWithIndexMap: traversableWithIndexMap
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Category/index.js":14,"../Control.Semigroupoid/index.js":61,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.FoldableWithIndex/index.js":142,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.FunctorWithIndex/index.js":155,"../Data.HeytingAlgebra/index.js":162,"../Data.List.Lazy.Types/index.js":200,"../Data.List.Lazy/index.js":201,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.Traversable/index.js":281,"../Data.TraversableWithIndex/index.js":282,"../Data.Tuple/index.js":283,"../Data.Unfoldable/index.js":285,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385}],207:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Set = require("../Data.Set/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var keys = function ($0) {
    return Data_Functor["void"](Data_Map_Internal.functorMap)($0);
};
module.exports = {
    keys: keys
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Map.Internal/index.js":206,"../Data.Set/index.js":252,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425}],208:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var First = function (x) {
    return x;
};
var showFirst = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "First (" + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
    });
};
var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        if (v instanceof Data_Maybe.Just) {
            return v;
        };
        return v1;
    };
});
var ordFirst = function (dictOrd) {
    return Data_Maybe.ordMaybe(dictOrd);
};
var ord1First = Data_Maybe.ord1Maybe;
var newtypeFirst = new Data_Newtype.Newtype(function (n) {
    return n;
}, First);
var monoidFirst = new Data_Monoid.Monoid(function () {
    return semigroupFirst;
}, Data_Maybe.Nothing.value);
var monadFirst = Data_Maybe.monadMaybe;
var invariantFirst = Data_Maybe.invariantMaybe;
var functorFirst = Data_Maybe.functorMaybe;
var extendFirst = Data_Maybe.extendMaybe;
var eqFirst = function (dictEq) {
    return Data_Maybe.eqMaybe(dictEq);
};
var eq1First = Data_Maybe.eq1Maybe;
var boundedFirst = function (dictBounded) {
    return Data_Maybe.boundedMaybe(dictBounded);
};
var bindFirst = Data_Maybe.bindMaybe;
var applyFirst = Data_Maybe.applyMaybe;
var applicativeFirst = Data_Maybe.applicativeMaybe;
var altFirst = new Control_Alt.Alt(function () {
    return functorFirst;
}, Data_Semigroup.append(semigroupFirst));
var plusFirst = new Control_Plus.Plus(function () {
    return altFirst;
}, Data_Monoid.mempty(monoidFirst));
var alternativeFirst = new Control_Alternative.Alternative(function () {
    return applicativeFirst;
}, function () {
    return plusFirst;
});
var monadZeroFirst = new Control_MonadZero.MonadZero(function () {
    return alternativeFirst;
}, function () {
    return monadFirst;
});
module.exports = {
    First: First,
    newtypeFirst: newtypeFirst,
    eqFirst: eqFirst,
    eq1First: eq1First,
    ordFirst: ordFirst,
    ord1First: ord1First,
    boundedFirst: boundedFirst,
    functorFirst: functorFirst,
    invariantFirst: invariantFirst,
    applyFirst: applyFirst,
    applicativeFirst: applicativeFirst,
    bindFirst: bindFirst,
    monadFirst: monadFirst,
    extendFirst: extendFirst,
    showFirst: showFirst,
    semigroupFirst: semigroupFirst,
    monoidFirst: monoidFirst,
    altFirst: altFirst,
    plusFirst: plusFirst,
    alternativeFirst: alternativeFirst,
    monadZeroFirst: monadZeroFirst
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Extend/index.js":24,"../Control.Monad/index.js":55,"../Control.MonadZero/index.js":57,"../Control.Plus/index.js":60,"../Data.Bounded/index.js":113,"../Data.Eq/index.js":135,"../Data.Functor.Invariant/index.js":151,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Prelude/index.js":385}],209:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Last = function (x) {
    return x;
};
var showLast = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Last " + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
    });
};
var semigroupLast = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        if (v1 instanceof Data_Maybe.Just) {
            return v1;
        };
        if (v1 instanceof Data_Maybe.Nothing) {
            return v;
        };
        throw new Error("Failed pattern match at Data.Maybe.Last (line 52, column 1 - line 52, column 45): " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var ordLast = function (dictOrd) {
    return Data_Maybe.ordMaybe(dictOrd);
};
var ord1Last = Data_Maybe.ord1Maybe;
var newtypeLast = new Data_Newtype.Newtype(function (n) {
    return n;
}, Last);
var monoidLast = new Data_Monoid.Monoid(function () {
    return semigroupLast;
}, Data_Maybe.Nothing.value);
var monadLast = Data_Maybe.monadMaybe;
var invariantLast = Data_Maybe.invariantMaybe;
var functorLast = Data_Maybe.functorMaybe;
var extendLast = Data_Maybe.extendMaybe;
var eqLast = function (dictEq) {
    return Data_Maybe.eqMaybe(dictEq);
};
var eq1Last = Data_Maybe.eq1Maybe;
var boundedLast = function (dictBounded) {
    return Data_Maybe.boundedMaybe(dictBounded);
};
var bindLast = Data_Maybe.bindMaybe;
var applyLast = Data_Maybe.applyMaybe;
var applicativeLast = Data_Maybe.applicativeMaybe;
var altLast = new Control_Alt.Alt(function () {
    return functorLast;
}, Data_Semigroup.append(semigroupLast));
var plusLast = new Control_Plus.Plus(function () {
    return altLast;
}, Data_Monoid.mempty(monoidLast));
var alternativeLast = new Control_Alternative.Alternative(function () {
    return applicativeLast;
}, function () {
    return plusLast;
});
var monadZeroLast = new Control_MonadZero.MonadZero(function () {
    return alternativeLast;
}, function () {
    return monadLast;
});
module.exports = {
    Last: Last,
    newtypeLast: newtypeLast,
    eqLast: eqLast,
    eq1Last: eq1Last,
    ordLast: ordLast,
    ord1Last: ord1Last,
    boundedLast: boundedLast,
    functorLast: functorLast,
    invariantLast: invariantLast,
    applyLast: applyLast,
    applicativeLast: applicativeLast,
    bindLast: bindLast,
    monadLast: monadLast,
    extendLast: extendLast,
    showLast: showLast,
    semigroupLast: semigroupLast,
    monoidLast: monoidLast,
    altLast: altLast,
    plusLast: plusLast,
    alternativeLast: alternativeLast,
    monadZeroLast: monadZeroLast
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Extend/index.js":24,"../Control.Monad/index.js":55,"../Control.MonadZero/index.js":57,"../Control.Plus/index.js":60,"../Data.Bounded/index.js":113,"../Data.Eq/index.js":135,"../Data.Functor.Invariant/index.js":151,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Prelude/index.js":385}],210:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Prelude = require("../Prelude/index.js");
var Nothing = (function () {
    function Nothing() {

    };
    Nothing.value = new Nothing();
    return Nothing;
})();
var Just = (function () {
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    return Just;
})();
var showMaybe = function (dictShow) {
    return new Data_Show.Show(function (v) {
        if (v instanceof Just) {
            return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
        };
        if (v instanceof Nothing) {
            return "Nothing";
        };
        throw new Error("Failed pattern match at Data.Maybe (line 205, column 1 - line 205, column 47): " + [ v.constructor.name ]);
    });
};
var semigroupMaybe = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            if (v instanceof Nothing) {
                return v1;
            };
            if (v1 instanceof Nothing) {
                return v;
            };
            if (v instanceof Just && v1 instanceof Just) {
                return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Maybe (line 174, column 1 - line 174, column 62): " + [ v.constructor.name, v1.constructor.name ]);
        };
    });
};
var optional = function (dictAlternative) {
    return function (a) {
        return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Just.create)(a))(Control_Applicative.pure(dictAlternative.Applicative0())(Nothing.value));
    };
};
var monoidMaybe = function (dictSemigroup) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMaybe(dictSemigroup);
    }, Nothing.value);
};
var maybe$prime = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Nothing) {
                return v(Data_Unit.unit);
            };
            if (v2 instanceof Just) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe (line 230, column 1 - line 230, column 62): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var maybe = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Nothing) {
                return v;
            };
            if (v2 instanceof Just) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe (line 217, column 1 - line 217, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var isNothing = maybe(true)(Data_Function["const"](false));
var isJust = maybe(false)(Data_Function["const"](true));
var functorMaybe = new Data_Functor.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof Just) {
            return new Just(v(v1.value0));
        };
        return Nothing.value;
    };
});
var invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));
var fromMaybe$prime = function (a) {
    return maybe$prime(a)(Control_Category.identity(Control_Category.categoryFn));
};
var fromMaybe = function (a) {
    return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
};
var fromJust = function (dictPartial) {
    return function (v) {
        if (v instanceof Just) {
            return v.value0;
        };
        throw new Error("Failed pattern match at Data.Maybe (line 268, column 1 - line 268, column 46): " + [ v.constructor.name ]);
    };
};
var extendMaybe = new Control_Extend.Extend(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Nothing) {
            return Nothing.value;
        };
        return new Just(v(v1));
    };
});
var eqMaybe = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            if (x instanceof Nothing && y instanceof Nothing) {
                return true;
            };
            if (x instanceof Just && y instanceof Just) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0);
            };
            return false;
        };
    });
};
var ordMaybe = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqMaybe(dictOrd.Eq0());
    }, function (x) {
        return function (y) {
            if (x instanceof Nothing && y instanceof Nothing) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof Nothing) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof Nothing) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof Just && y instanceof Just) {
                return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe (line 194, column 8 - line 194, column 51): " + [ x.constructor.name, y.constructor.name ]);
        };
    });
};
var eq1Maybe = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqMaybe(dictEq));
});
var ord1Maybe = new Data_Ord.Ord1(function () {
    return eq1Maybe;
}, function (dictOrd) {
    return Data_Ord.compare(ordMaybe(dictOrd));
});
var boundedMaybe = function (dictBounded) {
    return new Data_Bounded.Bounded(function () {
        return ordMaybe(dictBounded.Ord0());
    }, Nothing.value, new Just(Data_Bounded.top(dictBounded)));
};
var applyMaybe = new Control_Apply.Apply(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Just) {
            return Data_Functor.map(functorMaybe)(v.value0)(v1);
        };
        if (v instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 67, column 35): " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindMaybe = new Control_Bind.Bind(function () {
    return applyMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Just) {
            return v1(v.value0);
        };
        if (v instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 125, column 33): " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var applicativeMaybe = new Control_Applicative.Applicative(function () {
    return applyMaybe;
}, Just.create);
var monadMaybe = new Control_Monad.Monad(function () {
    return applicativeMaybe;
}, function () {
    return bindMaybe;
});
var altMaybe = new Control_Alt.Alt(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Nothing) {
            return v1;
        };
        return v;
    };
});
var plusMaybe = new Control_Plus.Plus(function () {
    return altMaybe;
}, Nothing.value);
var alternativeMaybe = new Control_Alternative.Alternative(function () {
    return applicativeMaybe;
}, function () {
    return plusMaybe;
});
var monadZeroMaybe = new Control_MonadZero.MonadZero(function () {
    return alternativeMaybe;
}, function () {
    return monadMaybe;
});
module.exports = {
    Nothing: Nothing,
    Just: Just,
    maybe: maybe,
    "maybe'": maybe$prime,
    fromMaybe: fromMaybe,
    "fromMaybe'": fromMaybe$prime,
    isJust: isJust,
    isNothing: isNothing,
    fromJust: fromJust,
    optional: optional,
    functorMaybe: functorMaybe,
    applyMaybe: applyMaybe,
    applicativeMaybe: applicativeMaybe,
    altMaybe: altMaybe,
    plusMaybe: plusMaybe,
    alternativeMaybe: alternativeMaybe,
    bindMaybe: bindMaybe,
    monadMaybe: monadMaybe,
    monadZeroMaybe: monadZeroMaybe,
    extendMaybe: extendMaybe,
    invariantMaybe: invariantMaybe,
    semigroupMaybe: semigroupMaybe,
    monoidMaybe: monoidMaybe,
    eqMaybe: eqMaybe,
    eq1Maybe: eq1Maybe,
    ordMaybe: ordMaybe,
    ord1Maybe: ord1Maybe,
    boundedMaybe: boundedMaybe,
    showMaybe: showMaybe
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Extend/index.js":24,"../Control.Monad/index.js":55,"../Control.MonadZero/index.js":57,"../Control.Plus/index.js":60,"../Data.Bounded/index.js":113,"../Data.Eq/index.js":135,"../Data.Function/index.js":145,"../Data.Functor.Invariant/index.js":151,"../Data.Functor/index.js":153,"../Data.Monoid/index.js":218,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Data.Unit/index.js":289,"../Prelude/index.js":385}],211:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var MediaType = function (x) {
    return x;
};
var showMediaType = new Data_Show.Show(function (v) {
    return "(MediaType " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var newtypeMediaType = new Data_Newtype.Newtype(function (n) {
    return n;
}, MediaType);
var eqMediaType = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordMediaType = new Data_Ord.Ord(function () {
    return eqMediaType;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
module.exports = {
    MediaType: MediaType,
    newtypeMediaType: newtypeMediaType,
    eqMediaType: eqMediaType,
    ordMediaType: ordMediaType,
    showMediaType: showMediaType
};

},{"../Data.Eq/index.js":135,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Prelude/index.js":385}],212:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Additive = function (x) {
    return x;
};
var showAdditive = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Additive " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupAdditive = function (dictSemiring) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_Semiring.add(dictSemiring)(v)(v1);
        };
    });
};
var ordAdditive = function (dictOrd) {
    return dictOrd;
};
var monoidAdditive = function (dictSemiring) {
    return new Data_Monoid.Monoid(function () {
        return semigroupAdditive(dictSemiring);
    }, Data_Semiring.zero(dictSemiring));
};
var functorAdditive = new Data_Functor.Functor(function (f) {
    return function (m) {
        return f(m);
    };
});
var eqAdditive = function (dictEq) {
    return dictEq;
};
var eq1Additive = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqAdditive(dictEq));
});
var ord1Additive = new Data_Ord.Ord1(function () {
    return eq1Additive;
}, function (dictOrd) {
    return Data_Ord.compare(ordAdditive(dictOrd));
});
var boundedAdditive = function (dictBounded) {
    return dictBounded;
};
var applyAdditive = new Control_Apply.Apply(function () {
    return functorAdditive;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindAdditive = new Control_Bind.Bind(function () {
    return applyAdditive;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeAdditive = new Control_Applicative.Applicative(function () {
    return applyAdditive;
}, Additive);
var monadAdditive = new Control_Monad.Monad(function () {
    return applicativeAdditive;
}, function () {
    return bindAdditive;
});
module.exports = {
    Additive: Additive,
    eqAdditive: eqAdditive,
    eq1Additive: eq1Additive,
    ordAdditive: ordAdditive,
    ord1Additive: ord1Additive,
    boundedAdditive: boundedAdditive,
    showAdditive: showAdditive,
    functorAdditive: functorAdditive,
    applyAdditive: applyAdditive,
    applicativeAdditive: applicativeAdditive,
    bindAdditive: bindAdditive,
    monadAdditive: monadAdditive,
    semigroupAdditive: semigroupAdditive,
    monoidAdditive: monoidAdditive
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Monad/index.js":55,"../Data.Bounded/index.js":113,"../Data.Eq/index.js":135,"../Data.Functor/index.js":153,"../Data.Monoid/index.js":218,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Prelude/index.js":385}],213:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Conj = function (x) {
    return x;
};
var showConj = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Conj " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringConj = function (dictHeytingAlgebra) {
    return new Data_Semiring.Semiring(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
        };
    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra));
};
var semigroupConj = function (dictHeytingAlgebra) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
        };
    });
};
var ordConj = function (dictOrd) {
    return dictOrd;
};
var monoidConj = function (dictHeytingAlgebra) {
    return new Data_Monoid.Monoid(function () {
        return semigroupConj(dictHeytingAlgebra);
    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
};
var functorConj = new Data_Functor.Functor(function (f) {
    return function (m) {
        return f(m);
    };
});
var eqConj = function (dictEq) {
    return dictEq;
};
var eq1Conj = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqConj(dictEq));
});
var ord1Conj = new Data_Ord.Ord1(function () {
    return eq1Conj;
}, function (dictOrd) {
    return Data_Ord.compare(ordConj(dictOrd));
});
var boundedConj = function (dictBounded) {
    return dictBounded;
};
var applyConj = new Control_Apply.Apply(function () {
    return functorConj;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindConj = new Control_Bind.Bind(function () {
    return applyConj;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeConj = new Control_Applicative.Applicative(function () {
    return applyConj;
}, Conj);
var monadConj = new Control_Monad.Monad(function () {
    return applicativeConj;
}, function () {
    return bindConj;
});
module.exports = {
    Conj: Conj,
    eqConj: eqConj,
    eq1Conj: eq1Conj,
    ordConj: ordConj,
    ord1Conj: ord1Conj,
    boundedConj: boundedConj,
    showConj: showConj,
    functorConj: functorConj,
    applyConj: applyConj,
    applicativeConj: applicativeConj,
    bindConj: bindConj,
    monadConj: monadConj,
    semigroupConj: semigroupConj,
    monoidConj: monoidConj,
    semiringConj: semiringConj
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Monad/index.js":55,"../Data.Bounded/index.js":113,"../Data.Eq/index.js":135,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Monoid/index.js":218,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Prelude/index.js":385}],214:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Disj = function (x) {
    return x;
};
var showDisj = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Disj " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringDisj = function (dictHeytingAlgebra) {
    return new Data_Semiring.Semiring(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
        };
    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra));
};
var semigroupDisj = function (dictHeytingAlgebra) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
        };
    });
};
var ordDisj = function (dictOrd) {
    return dictOrd;
};
var monoidDisj = function (dictHeytingAlgebra) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDisj(dictHeytingAlgebra);
    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
};
var functorDisj = new Data_Functor.Functor(function (f) {
    return function (m) {
        return f(m);
    };
});
var eqDisj = function (dictEq) {
    return dictEq;
};
var eq1Disj = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqDisj(dictEq));
});
var ord1Disj = new Data_Ord.Ord1(function () {
    return eq1Disj;
}, function (dictOrd) {
    return Data_Ord.compare(ordDisj(dictOrd));
});
var boundedDisj = function (dictBounded) {
    return dictBounded;
};
var applyDisj = new Control_Apply.Apply(function () {
    return functorDisj;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindDisj = new Control_Bind.Bind(function () {
    return applyDisj;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeDisj = new Control_Applicative.Applicative(function () {
    return applyDisj;
}, Disj);
var monadDisj = new Control_Monad.Monad(function () {
    return applicativeDisj;
}, function () {
    return bindDisj;
});
module.exports = {
    Disj: Disj,
    eqDisj: eqDisj,
    eq1Disj: eq1Disj,
    ordDisj: ordDisj,
    ord1Disj: ord1Disj,
    boundedDisj: boundedDisj,
    showDisj: showDisj,
    functorDisj: functorDisj,
    applyDisj: applyDisj,
    applicativeDisj: applicativeDisj,
    bindDisj: bindDisj,
    monadDisj: monadDisj,
    semigroupDisj: semigroupDisj,
    monoidDisj: monoidDisj,
    semiringDisj: semiringDisj
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Monad/index.js":55,"../Data.Bounded/index.js":113,"../Data.Eq/index.js":135,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Monoid/index.js":218,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Prelude/index.js":385}],215:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Dual = function (x) {
    return x;
};
var showDual = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Dual " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupDual = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_Semigroup.append(dictSemigroup)(v1)(v);
        };
    });
};
var ordDual = function (dictOrd) {
    return dictOrd;
};
var monoidDual = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDual(dictMonoid.Semigroup0());
    }, Data_Monoid.mempty(dictMonoid));
};
var functorDual = new Data_Functor.Functor(function (f) {
    return function (m) {
        return f(m);
    };
});
var eqDual = function (dictEq) {
    return dictEq;
};
var eq1Dual = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqDual(dictEq));
});
var ord1Dual = new Data_Ord.Ord1(function () {
    return eq1Dual;
}, function (dictOrd) {
    return Data_Ord.compare(ordDual(dictOrd));
});
var boundedDual = function (dictBounded) {
    return dictBounded;
};
var applyDual = new Control_Apply.Apply(function () {
    return functorDual;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindDual = new Control_Bind.Bind(function () {
    return applyDual;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeDual = new Control_Applicative.Applicative(function () {
    return applyDual;
}, Dual);
var monadDual = new Control_Monad.Monad(function () {
    return applicativeDual;
}, function () {
    return bindDual;
});
module.exports = {
    Dual: Dual,
    eqDual: eqDual,
    eq1Dual: eq1Dual,
    ordDual: ordDual,
    ord1Dual: ord1Dual,
    boundedDual: boundedDual,
    showDual: showDual,
    functorDual: functorDual,
    applyDual: applyDual,
    applicativeDual: applicativeDual,
    bindDual: bindDual,
    monadDual: monadDual,
    semigroupDual: semigroupDual,
    monoidDual: monoidDual
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Monad/index.js":55,"../Data.Bounded/index.js":113,"../Data.Eq/index.js":135,"../Data.Functor/index.js":153,"../Data.Monoid/index.js":218,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Prelude/index.js":385}],216:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Endo = function (x) {
    return x;
};
var showEndo = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Endo " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupEndo = function (dictSemigroupoid) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Control_Semigroupoid.compose(dictSemigroupoid)(v)(v1);
        };
    });
};
var ordEndo = function (dictOrd) {
    return dictOrd;
};
var monoidEndo = function (dictCategory) {
    return new Data_Monoid.Monoid(function () {
        return semigroupEndo(dictCategory.Semigroupoid0());
    }, Control_Category.identity(dictCategory));
};
var eqEndo = function (dictEq) {
    return dictEq;
};
var boundedEndo = function (dictBounded) {
    return dictBounded;
};
module.exports = {
    Endo: Endo,
    eqEndo: eqEndo,
    ordEndo: ordEndo,
    boundedEndo: boundedEndo,
    showEndo: showEndo,
    semigroupEndo: semigroupEndo,
    monoidEndo: monoidEndo
};

},{"../Control.Category/index.js":14,"../Control.Semigroupoid/index.js":61,"../Data.Bounded/index.js":113,"../Data.Eq/index.js":135,"../Data.Monoid/index.js":218,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Prelude/index.js":385}],217:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Multiplicative = function (x) {
    return x;
};
var showMultiplicative = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Multiplicative " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupMultiplicative = function (dictSemiring) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_Semiring.mul(dictSemiring)(v)(v1);
        };
    });
};
var ordMultiplicative = function (dictOrd) {
    return dictOrd;
};
var monoidMultiplicative = function (dictSemiring) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMultiplicative(dictSemiring);
    }, Data_Semiring.one(dictSemiring));
};
var functorMultiplicative = new Data_Functor.Functor(function (f) {
    return function (m) {
        return f(m);
    };
});
var eqMultiplicative = function (dictEq) {
    return dictEq;
};
var eq1Multiplicative = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqMultiplicative(dictEq));
});
var ord1Multiplicative = new Data_Ord.Ord1(function () {
    return eq1Multiplicative;
}, function (dictOrd) {
    return Data_Ord.compare(ordMultiplicative(dictOrd));
});
var boundedMultiplicative = function (dictBounded) {
    return dictBounded;
};
var applyMultiplicative = new Control_Apply.Apply(function () {
    return functorMultiplicative;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindMultiplicative = new Control_Bind.Bind(function () {
    return applyMultiplicative;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeMultiplicative = new Control_Applicative.Applicative(function () {
    return applyMultiplicative;
}, Multiplicative);
var monadMultiplicative = new Control_Monad.Monad(function () {
    return applicativeMultiplicative;
}, function () {
    return bindMultiplicative;
});
module.exports = {
    Multiplicative: Multiplicative,
    eqMultiplicative: eqMultiplicative,
    eq1Multiplicative: eq1Multiplicative,
    ordMultiplicative: ordMultiplicative,
    ord1Multiplicative: ord1Multiplicative,
    boundedMultiplicative: boundedMultiplicative,
    showMultiplicative: showMultiplicative,
    functorMultiplicative: functorMultiplicative,
    applyMultiplicative: applyMultiplicative,
    applicativeMultiplicative: applicativeMultiplicative,
    bindMultiplicative: bindMultiplicative,
    monadMultiplicative: monadMultiplicative,
    semigroupMultiplicative: semigroupMultiplicative,
    monoidMultiplicative: monoidMultiplicative
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Monad/index.js":55,"../Data.Bounded/index.js":113,"../Data.Eq/index.js":135,"../Data.Functor/index.js":153,"../Data.Monoid/index.js":218,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Prelude/index.js":385}],218:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var Monoid = function (Semigroup0, mempty) {
    this.Semigroup0 = Semigroup0;
    this.mempty = mempty;
};
var MonoidRecord = function (SemigroupRecord0, memptyRecord) {
    this.SemigroupRecord0 = SemigroupRecord0;
    this.memptyRecord = memptyRecord;
};
var monoidUnit = new Monoid(function () {
    return Data_Semigroup.semigroupUnit;
}, Data_Unit.unit);
var monoidString = new Monoid(function () {
    return Data_Semigroup.semigroupString;
}, "");
var monoidRecordNil = new MonoidRecord(function () {
    return Data_Semigroup.semigroupRecordNil;
}, function (v) {
    return {};
});
var monoidOrdering = new Monoid(function () {
    return Data_Ordering.semigroupOrdering;
}, Data_Ordering.EQ.value);
var monoidArray = new Monoid(function () {
    return Data_Semigroup.semigroupArray;
}, [  ]);
var memptyRecord = function (dict) {
    return dict.memptyRecord;
};
var monoidRecord = function (dictRowToList) {
    return function (dictMonoidRecord) {
        return new Monoid(function () {
            return Data_Semigroup.semigroupRecord(dictRowToList)(dictMonoidRecord.SemigroupRecord0());
        }, memptyRecord(dictMonoidRecord)(Type_Data_RowList.RLProxy.value));
    };
};
var mempty = function (dict) {
    return dict.mempty;
};
var monoidFn = function (dictMonoid) {
    return new Monoid(function () {
        return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
    }, function (v) {
        return mempty(dictMonoid);
    });
};
var monoidRecordCons = function (dictIsSymbol) {
    return function (dictMonoid) {
        return function (dictCons) {
            return function (dictMonoidRecord) {
                return new MonoidRecord(function () {
                    return Data_Semigroup.semigroupRecordCons(dictIsSymbol)(dictCons)(dictMonoidRecord.SemigroupRecord0())(dictMonoid.Semigroup0());
                }, function (v) {
                    var tail = memptyRecord(dictMonoidRecord)(Type_Data_RowList.RLProxy.value);
                    var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                    var insert = Record_Unsafe.unsafeSet(key);
                    return insert(mempty(dictMonoid))(tail);
                });
            };
        };
    };
};
var power = function (dictMonoid) {
    return function (x) {
        var go = function (p) {
            if (p <= 0) {
                return mempty(dictMonoid);
            };
            if (p === 1) {
                return x;
            };
            if (Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(p)(2) === 0) {
                var x$prime = go(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(p)(2));
                return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x$prime);
            };
            if (Data_Boolean.otherwise) {
                var x$prime = go(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(p)(2));
                return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x));
            };
            throw new Error("Failed pattern match at Data.Monoid (line 66, column 3 - line 66, column 17): " + [ p.constructor.name ]);
        };
        return go;
    };
};
var guard = function (dictMonoid) {
    return function (v) {
        return function (v1) {
            if (v) {
                return v1;
            };
            if (!v) {
                return mempty(dictMonoid);
            };
            throw new Error("Failed pattern match at Data.Monoid (line 74, column 1 - line 74, column 49): " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
module.exports = {
    Monoid: Monoid,
    mempty: mempty,
    power: power,
    guard: guard,
    MonoidRecord: MonoidRecord,
    memptyRecord: memptyRecord,
    monoidUnit: monoidUnit,
    monoidOrdering: monoidOrdering,
    monoidFn: monoidFn,
    monoidString: monoidString,
    monoidArray: monoidArray,
    monoidRecord: monoidRecord,
    monoidRecordNil: monoidRecordNil,
    monoidRecordCons: monoidRecordCons
};

},{"../Data.Boolean/index.js":110,"../Data.Eq/index.js":135,"../Data.EuclideanRing/index.js":137,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Semigroup/index.js":248,"../Data.Symbol/index.js":274,"../Data.Unit/index.js":289,"../Record.Unsafe/index.js":390,"../Type.Data.RowList/index.js":418}],219:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
module.exports = {};

},{}],220:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");
var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");
var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");
var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");
var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");
var Data_Semigroup_First = require("../Data.Semigroup.First/index.js");
var Data_Semigroup_Last = require("../Data.Semigroup.Last/index.js");
var Prelude = require("../Prelude/index.js");
var Newtype = function (unwrap, wrap) {
    this.unwrap = unwrap;
    this.wrap = wrap;
};
var wrap = function (dict) {
    return dict.wrap;
};
var unwrap = function (dict) {
    return dict.unwrap;
};
var underF2 = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($66) {
                            return function ($67) {
                                return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(Data_Function.on(f)(Data_Functor.map(dictFunctor)(wrap(dictNewtype)))($66)($67));
                            };
                        };
                    };
                };
            };
        };
    };
};
var underF = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($68) {
                            return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($68)));
                        };
                    };
                };
            };
        };
    };
};
var under2 = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (v) {
            return function (f) {
                return function ($69) {
                    return function ($70) {
                        return unwrap(dictNewtype1)(Data_Function.on(f)(wrap(dictNewtype))($69)($70));
                    };
                };
            };
        };
    };
};
var under = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (v) {
            return function (f) {
                return function ($71) {
                    return unwrap(dictNewtype1)(f(wrap(dictNewtype)($71)));
                };
            };
        };
    };
};
var un = function (dictNewtype) {
    return function (v) {
        return unwrap(dictNewtype);
    };
};
var traverse = function (dictFunctor) {
    return function (dictNewtype) {
        return function (v) {
            return function (f) {
                return function ($72) {
                    return Data_Functor.map(dictFunctor)(wrap(dictNewtype))(f(unwrap(dictNewtype)($72)));
                };
            };
        };
    };
};
var overF2 = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($73) {
                            return function ($74) {
                                return Data_Functor.map(dictFunctor1)(wrap(dictNewtype1))(Data_Function.on(f)(Data_Functor.map(dictFunctor)(unwrap(dictNewtype)))($73)($74));
                            };
                        };
                    };
                };
            };
        };
    };
};
var overF = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($75) {
                            return Data_Functor.map(dictFunctor1)(wrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(unwrap(dictNewtype))($75)));
                        };
                    };
                };
            };
        };
    };
};
var over2 = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (v) {
            return function (f) {
                return function ($76) {
                    return function ($77) {
                        return wrap(dictNewtype1)(Data_Function.on(f)(unwrap(dictNewtype))($76)($77));
                    };
                };
            };
        };
    };
};
var over = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (v) {
            return function (f) {
                return function ($78) {
                    return wrap(dictNewtype1)(f(unwrap(dictNewtype)($78)));
                };
            };
        };
    };
};
var op = function (dictNewtype) {
    return un(dictNewtype);
};
var newtypeMultiplicative = new Newtype(function (v) {
    return v;
}, Data_Monoid_Multiplicative.Multiplicative);
var newtypeLast = new Newtype(function (v) {
    return v;
}, Data_Semigroup_Last.Last);
var newtypeFirst = new Newtype(function (v) {
    return v;
}, Data_Semigroup_First.First);
var newtypeEndo = new Newtype(function (v) {
    return v;
}, Data_Monoid_Endo.Endo);
var newtypeDual = new Newtype(function (v) {
    return v;
}, Data_Monoid_Dual.Dual);
var newtypeDisj = new Newtype(function (v) {
    return v;
}, Data_Monoid_Disj.Disj);
var newtypeConj = new Newtype(function (v) {
    return v;
}, Data_Monoid_Conj.Conj);
var newtypeAdditive = new Newtype(function (v) {
    return v;
}, Data_Monoid_Additive.Additive);
var collect = function (dictFunctor) {
    return function (dictNewtype) {
        return function (v) {
            return function (f) {
                return function ($79) {
                    return wrap(dictNewtype)(f(Data_Functor.map(dictFunctor)(unwrap(dictNewtype))($79)));
                };
            };
        };
    };
};
var alaF = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($80) {
                            return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($80)));
                        };
                    };
                };
            };
        };
    };
};
var ala = function (dictFunctor) {
    return function (dictNewtype) {
        return function (dictNewtype1) {
            return function (v) {
                return function (f) {
                    return Data_Functor.map(dictFunctor)(unwrap(dictNewtype))(f(wrap(dictNewtype1)));
                };
            };
        };
    };
};
module.exports = {
    unwrap: unwrap,
    wrap: wrap,
    Newtype: Newtype,
    un: un,
    op: op,
    ala: ala,
    alaF: alaF,
    over: over,
    overF: overF,
    under: under,
    underF: underF,
    over2: over2,
    overF2: overF2,
    under2: under2,
    underF2: underF2,
    traverse: traverse,
    collect: collect,
    newtypeAdditive: newtypeAdditive,
    newtypeMultiplicative: newtypeMultiplicative,
    newtypeConj: newtypeConj,
    newtypeDisj: newtypeDisj,
    newtypeDual: newtypeDual,
    newtypeEndo: newtypeEndo,
    newtypeFirst: newtypeFirst,
    newtypeLast: newtypeLast
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Monoid.Additive/index.js":212,"../Data.Monoid.Conj/index.js":213,"../Data.Monoid.Disj/index.js":214,"../Data.Monoid.Dual/index.js":215,"../Data.Monoid.Endo/index.js":216,"../Data.Monoid.Multiplicative/index.js":217,"../Data.Semigroup.First/index.js":243,"../Data.Semigroup.Last/index.js":245,"../Prelude/index.js":385}],221:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");
var Prelude = require("../Prelude/index.js");
var NonEmpty = (function () {
    function NonEmpty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    NonEmpty.create = function (value0) {
        return function (value1) {
            return new NonEmpty(value0, value1);
        };
    };
    return NonEmpty;
})();
var unfoldable1NonEmpty = function (dictUnfoldable) {
    return new Data_Unfoldable1.Unfoldable1(function (f) {
        return function (b) {
            return Data_Tuple.uncurry(NonEmpty.create)(Data_Functor.map(Data_Tuple.functorTuple)(Data_Unfoldable.unfoldr(dictUnfoldable)(Data_Functor.map(Data_Maybe.functorMaybe)(f)))(f(b)));
        };
    });
};
var tail = function (v) {
    return v.value1;
};
var singleton = function (dictPlus) {
    return function (a) {
        return new NonEmpty(a, Control_Plus.empty(dictPlus));
    };
};
var showNonEmpty = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            return "(NonEmpty " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var oneOf = function (dictAlternative) {
    return function (v) {
        return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Control_Applicative.pure(dictAlternative.Applicative0())(v.value0))(v.value1);
    };
};
var head = function (v) {
    return v.value0;
};
var functorNonEmpty = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (m) {
            return new NonEmpty(f(m.value0), Data_Functor.map(dictFunctor)(f)(m.value1));
        };
    });
};
var functorWithIndex = function (dictFunctorWithIndex) {
    return new Data_FunctorWithIndex.FunctorWithIndex(function () {
        return functorNonEmpty(dictFunctorWithIndex.Functor0());
    }, function (f) {
        return function (v) {
            return new NonEmpty(f(Data_Maybe.Nothing.value)(v.value0), Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex)(function ($146) {
                return f(Data_Maybe.Just.create($146));
            })(v.value1));
        };
    });
};
var fromNonEmpty = function (f) {
    return function (v) {
        return f(v.value0)(v.value1);
    };
};
var foldl1 = function (dictFoldable) {
    return function (f) {
        return function (v) {
            return Data_Foldable.foldl(dictFoldable)(f)(v.value0)(v.value1);
        };
    };
};
var foldableNonEmpty = function (dictFoldable) {
    return new Data_Foldable.Foldable(function (dictMonoid) {
        return function (f) {
            return function (v) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
            };
        };
    }, function (f) {
        return function (b) {
            return function (v) {
                return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
            };
        };
    }, function (f) {
        return function (b) {
            return function (v) {
                return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
            };
        };
    });
};
var foldableWithIndexNonEmpty = function (dictFoldableWithIndex) {
    return new Data_FoldableWithIndex.FoldableWithIndex(function () {
        return foldableNonEmpty(dictFoldableWithIndex.Foldable0());
    }, function (dictMonoid) {
        return function (f) {
            return function (v) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(f(Data_Maybe.Nothing.value)(v.value0))(Data_FoldableWithIndex.foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function ($147) {
                    return f(Data_Maybe.Just.create($147));
                })(v.value1));
            };
        };
    }, function (f) {
        return function (b) {
            return function (v) {
                return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function ($148) {
                    return f(Data_Maybe.Just.create($148));
                })(f(Data_Maybe.Nothing.value)(b)(v.value0))(v.value1);
            };
        };
    }, function (f) {
        return function (b) {
            return function (v) {
                return f(Data_Maybe.Nothing.value)(v.value0)(Data_FoldableWithIndex.foldrWithIndex(dictFoldableWithIndex)(function ($149) {
                    return f(Data_Maybe.Just.create($149));
                })(b)(v.value1));
            };
        };
    });
};
var traversableNonEmpty = function (dictTraversable) {
    return new Data_Traversable.Traversable(function () {
        return foldableNonEmpty(dictTraversable.Foldable1());
    }, function () {
        return functorNonEmpty(dictTraversable.Functor0());
    }, function (dictApplicative) {
        return function (v) {
            return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(NonEmpty.create)(v.value0))(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v.value1));
        };
    }, function (dictApplicative) {
        return function (f) {
            return function (v) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(NonEmpty.create)(f(v.value0)))(Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)(v.value1));
            };
        };
    });
};
var traversableWithIndexNonEmpty = function (dictTraversableWithIndex) {
    return new Data_TraversableWithIndex.TraversableWithIndex(function () {
        return foldableWithIndexNonEmpty(dictTraversableWithIndex.FoldableWithIndex1());
    }, function () {
        return functorWithIndex(dictTraversableWithIndex.FunctorWithIndex0());
    }, function () {
        return traversableNonEmpty(dictTraversableWithIndex.Traversable2());
    }, function (dictApplicative) {
        return function (f) {
            return function (v) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(NonEmpty.create)(f(Data_Maybe.Nothing.value)(v.value0)))(Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function ($150) {
                    return f(Data_Maybe.Just.create($150));
                })(v.value1));
            };
        };
    });
};
var foldable1NonEmpty = function (dictFoldable) {
    return new Data_Semigroup_Foldable.Foldable1(function () {
        return foldableNonEmpty(dictFoldable);
    }, function (dictSemigroup) {
        return Data_Semigroup_Foldable.foldMap1(foldable1NonEmpty(dictFoldable))(dictSemigroup)(Control_Category.identity(Control_Category.categoryFn));
    }, function (dictSemigroup) {
        return function (f) {
            return function (v) {
                return Data_Foldable.foldl(dictFoldable)(function (s) {
                    return function (a1) {
                        return Data_Semigroup.append(dictSemigroup)(s)(f(a1));
                    };
                })(f(v.value0))(v.value1);
            };
        };
    });
};
var eqNonEmpty = function (dictEq1) {
    return function (dictEq) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq1(dictEq1)(dictEq)(x.value1)(y.value1);
            };
        });
    };
};
var ordNonEmpty = function (dictOrd1) {
    return function (dictOrd) {
        return new Data_Ord.Ord(function () {
            return eqNonEmpty(dictOrd1.Eq10())(dictOrd.Eq0());
        }, function (x) {
            return function (y) {
                var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                if (v instanceof Data_Ordering.LT) {
                    return Data_Ordering.LT.value;
                };
                if (v instanceof Data_Ordering.GT) {
                    return Data_Ordering.GT.value;
                };
                return Data_Ord.compare1(dictOrd1)(dictOrd)(x.value1)(y.value1);
            };
        });
    };
};
var eq1NonEmpty = function (dictEq1) {
    return new Data_Eq.Eq1(function (dictEq) {
        return Data_Eq.eq(eqNonEmpty(dictEq1)(dictEq));
    });
};
var ord1NonEmpty = function (dictOrd1) {
    return new Data_Ord.Ord1(function () {
        return eq1NonEmpty(dictOrd1.Eq10());
    }, function (dictOrd) {
        return Data_Ord.compare(ordNonEmpty(dictOrd1)(dictOrd));
    });
};
module.exports = {
    NonEmpty: NonEmpty,
    singleton: singleton,
    foldl1: foldl1,
    fromNonEmpty: fromNonEmpty,
    oneOf: oneOf,
    head: head,
    tail: tail,
    showNonEmpty: showNonEmpty,
    eqNonEmpty: eqNonEmpty,
    eq1NonEmpty: eq1NonEmpty,
    ordNonEmpty: ordNonEmpty,
    ord1NonEmpty: ord1NonEmpty,
    functorNonEmpty: functorNonEmpty,
    functorWithIndex: functorWithIndex,
    foldableNonEmpty: foldableNonEmpty,
    foldableWithIndexNonEmpty: foldableWithIndexNonEmpty,
    traversableNonEmpty: traversableNonEmpty,
    traversableWithIndexNonEmpty: traversableWithIndexNonEmpty,
    foldable1NonEmpty: foldable1NonEmpty,
    unfoldable1NonEmpty: unfoldable1NonEmpty
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Category/index.js":14,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.FoldableWithIndex/index.js":142,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.FunctorWithIndex/index.js":155,"../Data.HeytingAlgebra/index.js":162,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Semigroup.Foldable/index.js":244,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Data.Traversable/index.js":281,"../Data.TraversableWithIndex/index.js":282,"../Data.Tuple/index.js":283,"../Data.Unfoldable/index.js":285,"../Data.Unfoldable1/index.js":287,"../Prelude/index.js":385}],222:[function(require,module,exports){
"use strict";

exports["null"] = null;

exports.nullable = function (a, r, f) {
  return a == null ? r : f(a);
};

exports.notNull = function (x) {
  return x;
};

},{}],223:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
var toMaybe = function (n) {
    return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
};
var showNullable = function (dictShow) {
    return new Data_Show.Show(function ($5) {
        return Data_Maybe.maybe("null")(Data_Show.show(dictShow))(toMaybe($5));
    });
};
var eqNullable = function (dictEq) {
    return new Data_Eq.Eq(Data_Function.on(Data_Eq.eq(Data_Maybe.eqMaybe(dictEq)))(toMaybe));
};
var ordNullable = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqNullable(dictOrd.Eq0());
    }, Data_Function.on(Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd)))(toMaybe));
};
var eq1Nullable = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqNullable(dictEq));
});
var ord1Nullable = new Data_Ord.Ord1(function () {
    return eq1Nullable;
}, function (dictOrd) {
    return Data_Ord.compare(ordNullable(dictOrd));
});
module.exports = {
    toMaybe: toMaybe,
    toNullable: toNullable,
    showNullable: showNullable,
    eqNullable: eqNullable,
    eq1Nullable: eq1Nullable,
    ordNullable: ordNullable,
    ord1Nullable: ord1Nullable,
    "null": $foreign["null"],
    notNull: $foreign.notNull
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Eq/index.js":135,"../Data.Function.Uncurried/index.js":144,"../Data.Function/index.js":145,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Show/index.js":254,"../Prelude/index.js":385,"./foreign.js":222}],224:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Max = function (x) {
    return x;
};
var showMax = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Max " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupMax = function (dictOrd) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_Ord.max(dictOrd)(v)(v1);
        };
    });
};
var newtypeMax = new Data_Newtype.Newtype(function (n) {
    return n;
}, Max);
var monoidMax = function (dictBounded) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMax(dictBounded.Ord0());
    }, Data_Bounded.bottom(dictBounded));
};
var eqMax = function (dictEq) {
    return dictEq;
};
var ordMax = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqMax(dictOrd.Eq0());
    }, function (v) {
        return function (v1) {
            return Data_Ord.compare(dictOrd)(v)(v1);
        };
    });
};
module.exports = {
    Max: Max,
    newtypeMax: newtypeMax,
    eqMax: eqMax,
    ordMax: ordMax,
    semigroupMax: semigroupMax,
    monoidMax: monoidMax,
    showMax: showMax
};

},{"../Data.Bounded/index.js":113,"../Data.Eq/index.js":135,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Prelude/index.js":385}],225:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Min = function (x) {
    return x;
};
var showMin = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Min " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupMin = function (dictOrd) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_Ord.min(dictOrd)(v)(v1);
        };
    });
};
var newtypeMin = new Data_Newtype.Newtype(function (n) {
    return n;
}, Min);
var monoidMin = function (dictBounded) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMin(dictBounded.Ord0());
    }, Data_Bounded.top(dictBounded));
};
var eqMin = function (dictEq) {
    return dictEq;
};
var ordMin = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqMin(dictOrd.Eq0());
    }, function (v) {
        return function (v1) {
            return Data_Ord.compare(dictOrd)(v)(v1);
        };
    });
};
module.exports = {
    Min: Min,
    newtypeMin: newtypeMin,
    eqMin: eqMin,
    ordMin: ordMin,
    semigroupMin: semigroupMin,
    monoidMin: monoidMin,
    showMin: showMin
};

},{"../Data.Bounded/index.js":113,"../Data.Eq/index.js":135,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Prelude/index.js":385}],226:[function(require,module,exports){
"use strict";

exports.unsafeCompareImpl = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (x) {
        return function (y) {
          return x < y ? lt : x === y ? eq : gt;
        };
      };
    };
  };
};

},{}],227:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
module.exports = {
    unsafeCompare: unsafeCompare
};

},{"../Data.Ordering/index.js":230,"./foreign.js":226}],228:[function(require,module,exports){
"use strict";

exports.ordArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;
      while (i < xlen && i < ylen) {
        var x = xs[i];
        var y = ys[i];
        var o = f(x)(y);
        if (o !== 0) {
          return o;
        }
        i++;
      }
      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};

},{}],229:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Ord_Unsafe = require("../Data.Ord.Unsafe/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Data_Void = require("../Data.Void/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var Ord = function (Eq0, compare) {
    this.Eq0 = Eq0;
    this.compare = compare;
};
var Ord1 = function (Eq10, compare1) {
    this.Eq10 = Eq10;
    this.compare1 = compare1;
};
var OrdRecord = function (EqRecord0, compareRecord) {
    this.EqRecord0 = EqRecord0;
    this.compareRecord = compareRecord;
};
var ordVoid = new Ord(function () {
    return Data_Eq.eqVoid;
}, function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
var ordUnit = new Ord(function () {
    return Data_Eq.eqUnit;
}, function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
var ordString = new Ord(function () {
    return Data_Eq.eqString;
}, Data_Ord_Unsafe.unsafeCompare);
var ordRecordNil = new OrdRecord(function () {
    return Data_Eq.eqRowNil;
}, function (v) {
    return function (v1) {
        return function (v2) {
            return Data_Ordering.EQ.value;
        };
    };
});
var ordOrdering = new Ord(function () {
    return Data_Ordering.eqOrdering;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Ordering.LT && v1 instanceof Data_Ordering.LT) {
            return Data_Ordering.EQ.value;
        };
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.EQ) {
            return Data_Ordering.EQ.value;
        };
        if (v instanceof Data_Ordering.GT && v1 instanceof Data_Ordering.GT) {
            return Data_Ordering.EQ.value;
        };
        if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.LT) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.GT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        throw new Error("Failed pattern match at Data.Ord (line 73, column 1 - line 73, column 37): " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var ordNumber = new Ord(function () {
    return Data_Eq.eqNumber;
}, Data_Ord_Unsafe.unsafeCompare);
var ordInt = new Ord(function () {
    return Data_Eq.eqInt;
}, Data_Ord_Unsafe.unsafeCompare);
var ordChar = new Ord(function () {
    return Data_Eq.eqChar;
}, Data_Ord_Unsafe.unsafeCompare);
var ordBoolean = new Ord(function () {
    return Data_Eq.eqBoolean;
}, Data_Ord_Unsafe.unsafeCompare);
var compareRecord = function (dict) {
    return dict.compareRecord;
};
var ordRecord = function (dictRowToList) {
    return function (dictOrdRecord) {
        return new Ord(function () {
            return Data_Eq.eqRec(dictRowToList)(dictOrdRecord.EqRecord0());
        }, compareRecord(dictOrdRecord)(Type_Data_RowList.RLProxy.value));
    };
};
var compare1 = function (dict) {
    return dict.compare1;
};
var compare = function (dict) {
    return dict.compare;
};
var comparing = function (dictOrd) {
    return function (f) {
        return function (x) {
            return function (y) {
                return compare(dictOrd)(f(x))(f(y));
            };
        };
    };
};
var greaterThan = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.GT) {
                return true;
            };
            return false;
        };
    };
};
var greaterThanOrEq = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.LT) {
                return false;
            };
            return true;
        };
    };
};
var signum = function (dictOrd) {
    return function (dictRing) {
        return function (x) {
            var $43 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
            if ($43) {
                return Data_Semiring.one(dictRing.Semiring0());
            };
            return Data_Ring.negate(dictRing)(Data_Semiring.one(dictRing.Semiring0()));
        };
    };
};
var lessThan = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.LT) {
                return true;
            };
            return false;
        };
    };
};
var lessThanOrEq = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.GT) {
                return false;
            };
            return true;
        };
    };
};
var max = function (dictOrd) {
    return function (x) {
        return function (y) {
            var v = compare(dictOrd)(x)(y);
            if (v instanceof Data_Ordering.LT) {
                return y;
            };
            if (v instanceof Data_Ordering.EQ) {
                return x;
            };
            if (v instanceof Data_Ordering.GT) {
                return x;
            };
            throw new Error("Failed pattern match at Data.Ord (line 128, column 3 - line 131, column 12): " + [ v.constructor.name ]);
        };
    };
};
var min = function (dictOrd) {
    return function (x) {
        return function (y) {
            var v = compare(dictOrd)(x)(y);
            if (v instanceof Data_Ordering.LT) {
                return x;
            };
            if (v instanceof Data_Ordering.EQ) {
                return x;
            };
            if (v instanceof Data_Ordering.GT) {
                return y;
            };
            throw new Error("Failed pattern match at Data.Ord (line 119, column 3 - line 122, column 12): " + [ v.constructor.name ]);
        };
    };
};
var ordArray = function (dictOrd) {
    return new Ord(function () {
        return Data_Eq.eqArray(dictOrd.Eq0());
    }, (function () {
        var toDelta = function (x) {
            return function (y) {
                var v = compare(dictOrd)(x)(y);
                if (v instanceof Data_Ordering.EQ) {
                    return 0;
                };
                if (v instanceof Data_Ordering.LT) {
                    return 1;
                };
                if (v instanceof Data_Ordering.GT) {
                    return -1 | 0;
                };
                throw new Error("Failed pattern match at Data.Ord (line 66, column 7 - line 71, column 1): " + [ v.constructor.name ]);
            };
        };
        return function (xs) {
            return function (ys) {
                return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
            };
        };
    })());
};
var ord1Array = new Ord1(function () {
    return Data_Eq.eq1Array;
}, function (dictOrd) {
    return compare(ordArray(dictOrd));
});
var ordRecordCons = function (dictOrdRecord) {
    return function (dictCons) {
        return function (dictIsSymbol) {
            return function (dictOrd) {
                return new OrdRecord(function () {
                    return Data_Eq.eqRowCons(dictOrdRecord.EqRecord0())(dictCons)(dictIsSymbol)(dictOrd.Eq0());
                }, function (v) {
                    return function (ra) {
                        return function (rb) {
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                            var left = compare(dictOrd)(Record_Unsafe.unsafeGet(key)(ra))(Record_Unsafe.unsafeGet(key)(rb));
                            var $49 = Data_Eq.notEq(Data_Ordering.eqOrdering)(left)(Data_Ordering.EQ.value);
                            if ($49) {
                                return left;
                            };
                            return compareRecord(dictOrdRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                        };
                    };
                });
            };
        };
    };
};
var clamp = function (dictOrd) {
    return function (low) {
        return function (hi) {
            return function (x) {
                return min(dictOrd)(hi)(max(dictOrd)(low)(x));
            };
        };
    };
};
var between = function (dictOrd) {
    return function (low) {
        return function (hi) {
            return function (x) {
                if (lessThan(dictOrd)(x)(low)) {
                    return false;
                };
                if (greaterThan(dictOrd)(x)(hi)) {
                    return false;
                };
                return true;
            };
        };
    };
};
var abs = function (dictOrd) {
    return function (dictRing) {
        return function (x) {
            var $53 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
            if ($53) {
                return x;
            };
            return Data_Ring.negate(dictRing)(x);
        };
    };
};
module.exports = {
    Ord: Ord,
    compare: compare,
    Ord1: Ord1,
    compare1: compare1,
    lessThan: lessThan,
    lessThanOrEq: lessThanOrEq,
    greaterThan: greaterThan,
    greaterThanOrEq: greaterThanOrEq,
    comparing: comparing,
    min: min,
    max: max,
    clamp: clamp,
    between: between,
    abs: abs,
    signum: signum,
    OrdRecord: OrdRecord,
    compareRecord: compareRecord,
    ordBoolean: ordBoolean,
    ordInt: ordInt,
    ordNumber: ordNumber,
    ordString: ordString,
    ordChar: ordChar,
    ordUnit: ordUnit,
    ordVoid: ordVoid,
    ordArray: ordArray,
    ordOrdering: ordOrdering,
    ord1Array: ord1Array,
    ordRecordNil: ordRecordNil,
    ordRecordCons: ordRecordCons,
    ordRecord: ordRecord
};

},{"../Data.Eq/index.js":135,"../Data.Ord.Unsafe/index.js":227,"../Data.Ordering/index.js":230,"../Data.Ring/index.js":242,"../Data.Semiring/index.js":251,"../Data.Symbol/index.js":274,"../Data.Unit/index.js":289,"../Data.Void/index.js":291,"../Record.Unsafe/index.js":390,"../Type.Data.RowList/index.js":418,"./foreign.js":228}],230:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var LT = (function () {
    function LT() {

    };
    LT.value = new LT();
    return LT;
})();
var GT = (function () {
    function GT() {

    };
    GT.value = new GT();
    return GT;
})();
var EQ = (function () {
    function EQ() {

    };
    EQ.value = new EQ();
    return EQ;
})();
var showOrdering = new Data_Show.Show(function (v) {
    if (v instanceof LT) {
        return "LT";
    };
    if (v instanceof GT) {
        return "GT";
    };
    if (v instanceof EQ) {
        return "EQ";
    };
    throw new Error("Failed pattern match at Data.Ordering (line 26, column 1 - line 26, column 39): " + [ v.constructor.name ]);
});
var semigroupOrdering = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        if (v instanceof LT) {
            return LT.value;
        };
        if (v instanceof GT) {
            return GT.value;
        };
        if (v instanceof EQ) {
            return v1;
        };
        throw new Error("Failed pattern match at Data.Ordering (line 21, column 1 - line 21, column 49): " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var invert = function (v) {
    if (v instanceof GT) {
        return LT.value;
    };
    if (v instanceof EQ) {
        return EQ.value;
    };
    if (v instanceof LT) {
        return GT.value;
    };
    throw new Error("Failed pattern match at Data.Ordering (line 33, column 1 - line 33, column 31): " + [ v.constructor.name ]);
};
var eqOrdering = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof LT && v1 instanceof LT) {
            return true;
        };
        if (v instanceof GT && v1 instanceof GT) {
            return true;
        };
        if (v instanceof EQ && v1 instanceof EQ) {
            return true;
        };
        return false;
    };
});
module.exports = {
    LT: LT,
    GT: GT,
    EQ: EQ,
    invert: invert,
    eqOrdering: eqOrdering,
    semigroupOrdering: semigroupOrdering,
    showOrdering: showOrdering
};

},{"../Data.Eq/index.js":135,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254}],231:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Prelude = require("../Prelude/index.js");
var Choice = function (Profunctor0, left, right) {
    this.Profunctor0 = Profunctor0;
    this.left = left;
    this.right = right;
};
var right = function (dict) {
    return dict.right;
};
var left = function (dict) {
    return dict.left;
};
var splitChoice = function (dictCategory) {
    return function (dictChoice) {
        return function (l) {
            return function (r) {
                return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(left(dictChoice)(l))(right(dictChoice)(r));
            };
        };
    };
};
var fanin = function (dictCategory) {
    return function (dictChoice) {
        return function (l) {
            return function (r) {
                var join = Data_Profunctor.dimap(dictChoice.Profunctor0())(Data_Either.either(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn)))(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(dictCategory));
                return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(splitChoice(dictCategory)(dictChoice)(l)(r))(join);
            };
        };
    };
};
var choiceFn = new Choice(function () {
    return Data_Profunctor.profunctorFn;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Data_Either.Left) {
            return Data_Either.Left.create(v(v1.value0));
        };
        if (v1 instanceof Data_Either.Right) {
            return new Data_Either.Right(v1.value0);
        };
        throw new Error("Failed pattern match at Data.Profunctor.Choice (line 32, column 1 - line 32, column 33): " + [ v.constructor.name, v1.constructor.name ]);
    };
}, Data_Functor.map(Data_Either.functorEither));
module.exports = {
    left: left,
    right: right,
    Choice: Choice,
    splitChoice: splitChoice,
    fanin: fanin,
    choiceFn: choiceFn
};

},{"../Control.Category/index.js":14,"../Control.Semigroupoid/index.js":61,"../Data.Either/index.js":131,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Profunctor/index.js":238,"../Prelude/index.js":385}],232:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Prelude = require("../Prelude/index.js");
var Closed = function (Profunctor0, closed) {
    this.Profunctor0 = Profunctor0;
    this.closed = closed;
};
var closedFunction = new Closed(function () {
    return Data_Profunctor.profunctorFn;
}, Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
var closed = function (dict) {
    return dict.closed;
};
module.exports = {
    closed: closed,
    Closed: Closed,
    closedFunction: closedFunction
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Profunctor/index.js":238,"../Prelude/index.js":385}],233:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Either = require("../Data.Either/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Cochoice = function (Profunctor0, unleft, unright) {
    this.Profunctor0 = Profunctor0;
    this.unleft = unleft;
    this.unright = unright;
};
var unright = function (dict) {
    return dict.unright;
};
var unleft = function (dict) {
    return dict.unleft;
};
module.exports = {
    unleft: unleft,
    unright: unright,
    Cochoice: Cochoice
};

},{"../Data.Either/index.js":131,"../Data.Profunctor/index.js":238}],234:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Distributive = require("../Data.Distributive/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Closed = require("../Data.Profunctor.Closed/index.js");
var Data_Profunctor_Cochoice = require("../Data.Profunctor.Cochoice/index.js");
var Data_Profunctor_Costrong = require("../Data.Profunctor.Costrong/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var Costar = function (x) {
    return x;
};
var semigroupoidCostar = function (dictExtend) {
    return new Control_Semigroupoid.Semigroupoid(function (v) {
        return function (v1) {
            return Control_Extend.composeCoKleisliFlipped(dictExtend)(v)(v1);
        };
    });
};
var profunctorCostar = function (dictFunctor) {
    return new Data_Profunctor.Profunctor(function (f) {
        return function (g) {
            return function (v) {
                return function ($54) {
                    return g(v(Data_Functor.map(dictFunctor)(f)($54)));
                };
            };
        };
    });
};
var strongCostar = function (dictComonad) {
    return new Data_Profunctor_Strong.Strong(function () {
        return profunctorCostar((dictComonad.Extend0()).Functor0());
    }, function (v) {
        return function (x) {
            return new Data_Tuple.Tuple(v(Data_Functor.map((dictComonad.Extend0()).Functor0())(Data_Tuple.fst)(x)), Data_Tuple.snd(Control_Comonad.extract(dictComonad)(x)));
        };
    }, function (v) {
        return function (x) {
            return new Data_Tuple.Tuple(Data_Tuple.fst(Control_Comonad.extract(dictComonad)(x)), v(Data_Functor.map((dictComonad.Extend0()).Functor0())(Data_Tuple.snd)(x)));
        };
    });
};
var newtypeCostar = new Data_Newtype.Newtype(function (n) {
    return n;
}, Costar);
var hoistCostar = function (f) {
    return function (v) {
        return Data_Profunctor.lcmap(Data_Profunctor.profunctorFn)(f)(v);
    };
};
var functorCostar = new Data_Functor.Functor(function (f) {
    return function (v) {
        return function ($55) {
            return f(v($55));
        };
    };
});
var invariantCostar = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorCostar));
var distributiveCostar = new Data_Distributive.Distributive(function () {
    return functorCostar;
}, function (dictFunctor) {
    return function (f) {
        return function ($56) {
            return Data_Distributive.distribute(distributiveCostar)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($56));
        };
    };
}, function (dictFunctor) {
    return function (f) {
        return function (a) {
            return Data_Functor.map(dictFunctor)(function (v) {
                return v(a);
            })(f);
        };
    };
});
var costrongCostar = function (dictFunctor) {
    return new Data_Profunctor_Costrong.Costrong(function () {
        return profunctorCostar(dictFunctor);
    }, function (v) {
        return function (fb) {
            var bd = v(Data_Functor.map(dictFunctor)(function (a) {
                return new Data_Tuple.Tuple(a, Data_Tuple.snd(bd));
            })(fb));
            return Data_Tuple.fst(bd);
        };
    }, function (v) {
        return function (fb) {
            var db = v(Data_Functor.map(dictFunctor)(function (a) {
                return new Data_Tuple.Tuple(Data_Tuple.fst(db), a);
            })(fb));
            return Data_Tuple.snd(db);
        };
    });
};
var cochoiceCostar = function (dictApplicative) {
    return new Data_Profunctor_Cochoice.Cochoice(function () {
        return profunctorCostar((dictApplicative.Apply0()).Functor0());
    }, function (v) {
        var g = function ($57) {
            return Data_Either.either(Control_Category.identity(Control_Category.categoryFn))(function (r) {
                return g(Control_Applicative.pure(dictApplicative)(new Data_Either.Right(r)));
            })(v($57));
        };
        return function ($58) {
            return g(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Either.Left.create)($58));
        };
    }, function (v) {
        var g = function ($59) {
            return Data_Either.either(function (l) {
                return g(Control_Applicative.pure(dictApplicative)(new Data_Either.Left(l)));
            })(Control_Category.identity(Control_Category.categoryFn))(v($59));
        };
        return function ($60) {
            return g(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Either.Right.create)($60));
        };
    });
};
var closedCostar = function (dictFunctor) {
    return new Data_Profunctor_Closed.Closed(function () {
        return profunctorCostar(dictFunctor);
    }, function (v) {
        return function (g) {
            return function (x) {
                return v(Data_Functor.map(dictFunctor)(function (v1) {
                    return v1(x);
                })(g));
            };
        };
    });
};
var categoryCostar = function (dictComonad) {
    return new Control_Category.Category(function () {
        return semigroupoidCostar(dictComonad.Extend0());
    }, Control_Comonad.extract(dictComonad));
};
var applyCostar = new Control_Apply.Apply(function () {
    return functorCostar;
}, function (v) {
    return function (v1) {
        return function (a) {
            return v(a)(v1(a));
        };
    };
});
var bindCostar = new Control_Bind.Bind(function () {
    return applyCostar;
}, function (v) {
    return function (f) {
        return function (x) {
            var v1 = f(v(x));
            return v1(x);
        };
    };
});
var applicativeCostar = new Control_Applicative.Applicative(function () {
    return applyCostar;
}, function (a) {
    return function (v) {
        return a;
    };
});
var monadCostar = new Control_Monad.Monad(function () {
    return applicativeCostar;
}, function () {
    return bindCostar;
});
module.exports = {
    Costar: Costar,
    hoistCostar: hoistCostar,
    newtypeCostar: newtypeCostar,
    semigroupoidCostar: semigroupoidCostar,
    categoryCostar: categoryCostar,
    functorCostar: functorCostar,
    invariantCostar: invariantCostar,
    applyCostar: applyCostar,
    applicativeCostar: applicativeCostar,
    bindCostar: bindCostar,
    monadCostar: monadCostar,
    distributiveCostar: distributiveCostar,
    profunctorCostar: profunctorCostar,
    strongCostar: strongCostar,
    costrongCostar: costrongCostar,
    cochoiceCostar: cochoiceCostar,
    closedCostar: closedCostar
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Comonad/index.js":21,"../Control.Extend/index.js":24,"../Control.Monad/index.js":55,"../Control.Semigroupoid/index.js":61,"../Data.Distributive/index.js":128,"../Data.Either/index.js":131,"../Data.Function/index.js":145,"../Data.Functor.Invariant/index.js":151,"../Data.Functor/index.js":153,"../Data.Newtype/index.js":220,"../Data.Profunctor.Closed/index.js":232,"../Data.Profunctor.Cochoice/index.js":233,"../Data.Profunctor.Costrong/index.js":235,"../Data.Profunctor.Strong/index.js":237,"../Data.Profunctor/index.js":238,"../Data.Tuple/index.js":283,"../Prelude/index.js":385}],235:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Costrong = function (Profunctor0, unfirst, unsecond) {
    this.Profunctor0 = Profunctor0;
    this.unfirst = unfirst;
    this.unsecond = unsecond;
};
var unsecond = function (dict) {
    return dict.unsecond;
};
var unfirst = function (dict) {
    return dict.unfirst;
};
module.exports = {
    unfirst: unfirst,
    unsecond: unsecond,
    Costrong: Costrong
};

},{"../Data.Profunctor/index.js":238,"../Data.Tuple/index.js":283}],236:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Distributive = require("../Data.Distributive/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");
var Data_Profunctor_Closed = require("../Data.Profunctor.Closed/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var Star = function (x) {
    return x;
};
var semigroupoidStar = function (dictBind) {
    return new Control_Semigroupoid.Semigroupoid(function (v) {
        return function (v1) {
            return function (x) {
                return Control_Bind.bind(dictBind)(v1(x))(v);
            };
        };
    });
};
var profunctorStar = function (dictFunctor) {
    return new Data_Profunctor.Profunctor(function (f) {
        return function (g) {
            return function (v) {
                return function ($78) {
                    return Data_Functor.map(dictFunctor)(g)(v(f($78)));
                };
            };
        };
    });
};
var strongStar = function (dictFunctor) {
    return new Data_Profunctor_Strong.Strong(function () {
        return profunctorStar(dictFunctor);
    }, function (v) {
        return function (v1) {
            return Data_Functor.map(dictFunctor)(function (v2) {
                return new Data_Tuple.Tuple(v2, v1.value1);
            })(v(v1.value0));
        };
    }, function (v) {
        return function (v1) {
            return Data_Functor.map(dictFunctor)(Data_Tuple.Tuple.create(v1.value0))(v(v1.value1));
        };
    });
};
var newtypeStar = new Data_Newtype.Newtype(function (n) {
    return n;
}, Star);
var invariantStar = function (dictInvariant) {
    return new Data_Functor_Invariant.Invariant(function (f) {
        return function (g) {
            return function (v) {
                return function ($79) {
                    return Data_Functor_Invariant.imap(dictInvariant)(f)(g)(v($79));
                };
            };
        };
    });
};
var hoistStar = function (f) {
    return function (v) {
        return function ($80) {
            return f(v($80));
        };
    };
};
var functorStar = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return function ($81) {
                return Data_Functor.map(dictFunctor)(f)(v($81));
            };
        };
    });
};
var distributiveStar = function (dictDistributive) {
    return new Data_Distributive.Distributive(function () {
        return functorStar(dictDistributive.Functor0());
    }, function (dictFunctor) {
        return function (f) {
            return function ($82) {
                return Data_Distributive.distribute(distributiveStar(dictDistributive))(dictFunctor)(Data_Functor.map(dictFunctor)(f)($82));
            };
        };
    }, function (dictFunctor) {
        return function (f) {
            return function (a) {
                return Data_Distributive.collect(dictDistributive)(dictFunctor)(function (v) {
                    return v(a);
                })(f);
            };
        };
    });
};
var closedStar = function (dictDistributive) {
    return new Data_Profunctor_Closed.Closed(function () {
        return profunctorStar(dictDistributive.Functor0());
    }, function (v) {
        return function (g) {
            return Data_Distributive.distribute(dictDistributive)(Data_Functor.functorFn)(function ($83) {
                return v(g($83));
            });
        };
    });
};
var choiceStar = function (dictApplicative) {
    return new Data_Profunctor_Choice.Choice(function () {
        return profunctorStar((dictApplicative.Apply0()).Functor0());
    }, function (v) {
        return Star(Data_Either.either(function ($84) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Either.Left.create)(v($84));
        })(function ($85) {
            return Control_Applicative.pure(dictApplicative)(Data_Either.Right.create($85));
        }));
    }, function (v) {
        return Star(Data_Either.either(function ($86) {
            return Control_Applicative.pure(dictApplicative)(Data_Either.Left.create($86));
        })(function ($87) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Either.Right.create)(v($87));
        }));
    });
};
var categoryStar = function (dictMonad) {
    return new Control_Category.Category(function () {
        return semigroupoidStar(dictMonad.Bind1());
    }, Control_Applicative.pure(dictMonad.Applicative0()));
};
var applyStar = function (dictApply) {
    return new Control_Apply.Apply(function () {
        return functorStar(dictApply.Functor0());
    }, function (v) {
        return function (v1) {
            return function (a) {
                return Control_Apply.apply(dictApply)(v(a))(v1(a));
            };
        };
    });
};
var bindStar = function (dictBind) {
    return new Control_Bind.Bind(function () {
        return applyStar(dictBind.Apply0());
    }, function (v) {
        return function (f) {
            return function (x) {
                return Control_Bind.bind(dictBind)(v(x))(function (a) {
                    var v1 = f(a);
                    return v1(x);
                });
            };
        };
    });
};
var applicativeStar = function (dictApplicative) {
    return new Control_Applicative.Applicative(function () {
        return applyStar(dictApplicative.Apply0());
    }, function (a) {
        return function (v) {
            return Control_Applicative.pure(dictApplicative)(a);
        };
    });
};
var monadStar = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeStar(dictMonad.Applicative0());
    }, function () {
        return bindStar(dictMonad.Bind1());
    });
};
var altStar = function (dictAlt) {
    return new Control_Alt.Alt(function () {
        return functorStar(dictAlt.Functor0());
    }, function (v) {
        return function (v1) {
            return function (a) {
                return Control_Alt.alt(dictAlt)(v(a))(v1(a));
            };
        };
    });
};
var plusStar = function (dictPlus) {
    return new Control_Plus.Plus(function () {
        return altStar(dictPlus.Alt0());
    }, function (v) {
        return Control_Plus.empty(dictPlus);
    });
};
var alternativeStar = function (dictAlternative) {
    return new Control_Alternative.Alternative(function () {
        return applicativeStar(dictAlternative.Applicative0());
    }, function () {
        return plusStar(dictAlternative.Plus1());
    });
};
var monadZeroStar = function (dictMonadZero) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeStar(dictMonadZero.Alternative1());
    }, function () {
        return monadStar(dictMonadZero.Monad0());
    });
};
var monadPlusStar = function (dictMonadPlus) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZeroStar(dictMonadPlus.MonadZero0());
    });
};
module.exports = {
    Star: Star,
    hoistStar: hoistStar,
    newtypeStar: newtypeStar,
    semigroupoidStar: semigroupoidStar,
    categoryStar: categoryStar,
    functorStar: functorStar,
    invariantStar: invariantStar,
    applyStar: applyStar,
    applicativeStar: applicativeStar,
    bindStar: bindStar,
    monadStar: monadStar,
    altStar: altStar,
    plusStar: plusStar,
    alternativeStar: alternativeStar,
    monadZeroStar: monadZeroStar,
    monadPlusStar: monadPlusStar,
    distributiveStar: distributiveStar,
    profunctorStar: profunctorStar,
    strongStar: strongStar,
    choiceStar: choiceStar,
    closedStar: closedStar
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Monad/index.js":55,"../Control.MonadPlus/index.js":56,"../Control.MonadZero/index.js":57,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Distributive/index.js":128,"../Data.Either/index.js":131,"../Data.Function/index.js":145,"../Data.Functor.Invariant/index.js":151,"../Data.Functor/index.js":153,"../Data.Newtype/index.js":220,"../Data.Profunctor.Choice/index.js":231,"../Data.Profunctor.Closed/index.js":232,"../Data.Profunctor.Strong/index.js":237,"../Data.Profunctor/index.js":238,"../Data.Tuple/index.js":283,"../Prelude/index.js":385}],237:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var Strong = function (Profunctor0, first, second) {
    this.Profunctor0 = Profunctor0;
    this.first = first;
    this.second = second;
};
var strongFn = new Strong(function () {
    return Data_Profunctor.profunctorFn;
}, function (a2b) {
    return function (v) {
        return new Data_Tuple.Tuple(a2b(v.value0), v.value1);
    };
}, Data_Functor.map(Data_Tuple.functorTuple));
var second = function (dict) {
    return dict.second;
};
var first = function (dict) {
    return dict.first;
};
var splitStrong = function (dictCategory) {
    return function (dictStrong) {
        return function (l) {
            return function (r) {
                return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(first(dictStrong)(l))(second(dictStrong)(r));
            };
        };
    };
};
var fanout = function (dictCategory) {
    return function (dictStrong) {
        return function (l) {
            return function (r) {
                var split = Data_Profunctor.dimap(dictStrong.Profunctor0())(Control_Category.identity(Control_Category.categoryFn))(function (a) {
                    return new Data_Tuple.Tuple(a, a);
                })(Control_Category.identity(dictCategory));
                return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(split)(splitStrong(dictCategory)(dictStrong)(l)(r));
            };
        };
    };
};
module.exports = {
    first: first,
    second: second,
    Strong: Strong,
    splitStrong: splitStrong,
    fanout: fanout,
    strongFn: strongFn
};

},{"../Control.Category/index.js":14,"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Profunctor/index.js":238,"../Data.Tuple/index.js":283,"../Prelude/index.js":385}],238:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Prelude = require("../Prelude/index.js");
var Profunctor = function (dimap) {
    this.dimap = dimap;
};
var profunctorFn = new Profunctor(function (a2b) {
    return function (c2d) {
        return function (b2c) {
            return function ($9) {
                return c2d(b2c(a2b($9)));
            };
        };
    };
});
var dimap = function (dict) {
    return dict.dimap;
};
var lcmap = function (dictProfunctor) {
    return function (a2b) {
        return dimap(dictProfunctor)(a2b)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var rmap = function (dictProfunctor) {
    return function (b2c) {
        return dimap(dictProfunctor)(Control_Category.identity(Control_Category.categoryFn))(b2c);
    };
};
var unwrapIso = function (dictProfunctor) {
    return function (dictNewtype) {
        return dimap(dictProfunctor)(Data_Newtype.wrap(dictNewtype))(Data_Newtype.unwrap(dictNewtype));
    };
};
var wrapIso = function (dictProfunctor) {
    return function (dictNewtype) {
        return function (v) {
            return dimap(dictProfunctor)(Data_Newtype.unwrap(dictNewtype))(Data_Newtype.wrap(dictNewtype));
        };
    };
};
var arr = function (dictCategory) {
    return function (dictProfunctor) {
        return function (f) {
            return rmap(dictProfunctor)(f)(Control_Category.identity(dictCategory));
        };
    };
};
module.exports = {
    dimap: dimap,
    Profunctor: Profunctor,
    lcmap: lcmap,
    rmap: rmap,
    arr: arr,
    unwrapIso: unwrapIso,
    wrapIso: wrapIso,
    profunctorFn: profunctorFn
};

},{"../Control.Category/index.js":14,"../Control.Semigroupoid/index.js":61,"../Data.Newtype/index.js":220,"../Prelude/index.js":385}],239:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");
var Data_DivisionRing = require("../Data.DivisionRing/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Ratio = (function () {
    function Ratio(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Ratio.create = function (value0) {
        return function (value1) {
            return new Ratio(value0, value1);
        };
    };
    return Ratio;
})();
var showRatio = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return Data_Show.show(dictShow)(v.value0) + (" % " + Data_Show.show(dictShow)(v.value1));
    });
};
var reduce = function (dictOrd) {
    return function (dictEuclideanRing) {
        return function (n) {
            return function (d) {
                var g = Data_EuclideanRing.gcd(dictOrd.Eq0())(dictEuclideanRing)(n)(d);
                var d$prime = Data_EuclideanRing.div(dictEuclideanRing)(d)(g);
                return new Ratio(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(Data_EuclideanRing.div(dictEuclideanRing)(n)(g))(Data_Ord.signum(dictOrd)((dictEuclideanRing.CommutativeRing0()).Ring0())(d$prime)), Data_Ord.abs(dictOrd)((dictEuclideanRing.CommutativeRing0()).Ring0())(d$prime));
            };
        };
    };
};
var semiringRatio = function (dictOrd) {
    return function (dictEuclideanRing) {
        return new Data_Semiring.Semiring(function (v) {
            return function (v1) {
                return reduce(dictOrd)(dictEuclideanRing)(Data_Semiring.add(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value0)(v1.value1))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value1)(v1.value0)))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value1)(v1.value1));
            };
        }, function (v) {
            return function (v1) {
                return reduce(dictOrd)(dictEuclideanRing)(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value0)(v1.value0))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value1)(v1.value1));
            };
        }, new Ratio(Data_Semiring.one(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()), Data_Semiring.one(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())), new Ratio(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()), Data_Semiring.one(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())));
    };
};
var ringRatio = function (dictOrd) {
    return function (dictEuclideanRing) {
        return new Data_Ring.Ring(function () {
            return semiringRatio(dictOrd)(dictEuclideanRing);
        }, function (v) {
            return function (v1) {
                return reduce(dictOrd)(dictEuclideanRing)(Data_Ring.sub((dictEuclideanRing.CommutativeRing0()).Ring0())(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value0)(v1.value1))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value1)(v1.value0)))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value1)(v1.value1));
            };
        });
    };
};
var numerator = function (v) {
    return v.value0;
};
var eqRatio = function (dictEq) {
    return new Data_Eq.Eq(function (v) {
        return function (v1) {
            return Data_Eq.eq(dictEq)(v.value0)(v1.value0) && Data_Eq.eq(dictEq)(v.value1)(v1.value1);
        };
    });
};
var ordRatio = function (dictOrd) {
    return function (dictEuclideanRing) {
        return new Data_Ord.Ord(function () {
            return eqRatio(dictOrd.Eq0());
        }, function (x) {
            return function (y) {
                var v = Data_Ring.sub(ringRatio(dictOrd)(dictEuclideanRing))(x)(y);
                var $70 = Data_Eq.eq(dictOrd.Eq0())(v.value0)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                if ($70) {
                    return Data_Ordering.EQ.value;
                };
                var v1 = Data_Ord.greaterThan(dictOrd)(v.value1)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                var v2 = Data_Ord.greaterThan(dictOrd)(v.value0)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                if (v2 && v1) {
                    return Data_Ordering.GT.value;
                };
                if (!v2 && !v1) {
                    return Data_Ordering.GT.value;
                };
                return Data_Ordering.LT.value;
            };
        });
    };
};
var divisionRingRatio = function (dictOrd) {
    return function (dictEuclideanRing) {
        return new Data_DivisionRing.DivisionRing(function () {
            return ringRatio(dictOrd)(dictEuclideanRing);
        }, function (v) {
            return new Ratio(v.value1, v.value0);
        });
    };
};
var denominator = function (v) {
    return v.value1;
};
var commutativeRingRatio = function (dictOrd) {
    return function (dictEuclideanRing) {
        return new Data_CommutativeRing.CommutativeRing(function () {
            return ringRatio(dictOrd)(dictEuclideanRing);
        });
    };
};
var euclideanRingRatio = function (dictOrd) {
    return function (dictEuclideanRing) {
        return new Data_EuclideanRing.EuclideanRing(function () {
            return commutativeRingRatio(dictOrd)(dictEuclideanRing);
        }, function (v) {
            return 1;
        }, function (v) {
            return function (v1) {
                return reduce(dictOrd)(dictEuclideanRing)(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value0)(v1.value1))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value1)(v1.value0));
            };
        }, function (v) {
            return function (v1) {
                return Data_Semiring.zero(semiringRatio(dictOrd)(dictEuclideanRing));
            };
        });
    };
};
module.exports = {
    reduce: reduce,
    numerator: numerator,
    denominator: denominator,
    showRatio: showRatio,
    eqRatio: eqRatio,
    ordRatio: ordRatio,
    semiringRatio: semiringRatio,
    ringRatio: ringRatio,
    commutativeRingRatio: commutativeRingRatio,
    euclideanRingRatio: euclideanRingRatio,
    divisionRingRatio: divisionRingRatio
};

},{"../Data.CommutativeRing/index.js":118,"../Data.DivisionRing/index.js":129,"../Data.Eq/index.js":135,"../Data.EuclideanRing/index.js":137,"../Data.HeytingAlgebra/index.js":162,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Prelude/index.js":385}],240:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ratio = require("../Data.Ratio/index.js");
var Prelude = require("../Prelude/index.js");
var toNumber = function (x) {
    return Data_Int.toNumber(Data_Ratio.numerator(x)) / Data_Int.toNumber(Data_Ratio.denominator(x));
};
var fromInt = function (i) {
    return Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(i)(1);
};
module.exports = {
    toNumber: toNumber,
    fromInt: fromInt
};

},{"../Data.EuclideanRing/index.js":137,"../Data.Int/index.js":167,"../Data.Ord/index.js":229,"../Data.Ratio/index.js":239,"../Prelude/index.js":385}],241:[function(require,module,exports){
"use strict";

exports.intSub = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x - y | 0;
  };
};

exports.numSub = function (n1) {
  return function (n2) {
    return n1 - n2;
  };
};

},{}],242:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var Ring = function (Semiring0, sub) {
    this.Semiring0 = Semiring0;
    this.sub = sub;
};
var RingRecord = function (SemiringRecord0, subRecord) {
    this.SemiringRecord0 = SemiringRecord0;
    this.subRecord = subRecord;
};
var subRecord = function (dict) {
    return dict.subRecord;
};
var sub = function (dict) {
    return dict.sub;
};
var ringUnit = new Ring(function () {
    return Data_Semiring.semiringUnit;
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
});
var ringRecordNil = new RingRecord(function () {
    return Data_Semiring.semiringRecordNil;
}, function (v) {
    return function (v1) {
        return function (v2) {
            return {};
        };
    };
});
var ringRecordCons = function (dictIsSymbol) {
    return function (dictCons) {
        return function (dictRingRecord) {
            return function (dictRing) {
                return new RingRecord(function () {
                    return Data_Semiring.semiringRecordCons(dictIsSymbol)(dictCons)(dictRingRecord.SemiringRecord0())(dictRing.Semiring0());
                }, function (v) {
                    return function (ra) {
                        return function (rb) {
                            var tail = subRecord(dictRingRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            var get = Record_Unsafe.unsafeGet(key);
                            return insert(sub(dictRing)(get(ra))(get(rb)))(tail);
                        };
                    };
                });
            };
        };
    };
};
var ringRecord = function (dictRowToList) {
    return function (dictRingRecord) {
        return new Ring(function () {
            return Data_Semiring.semiringRecord(dictRowToList)(dictRingRecord.SemiringRecord0());
        }, subRecord(dictRingRecord)(Type_Data_RowList.RLProxy.value));
    };
};
var ringNumber = new Ring(function () {
    return Data_Semiring.semiringNumber;
}, $foreign.numSub);
var ringInt = new Ring(function () {
    return Data_Semiring.semiringInt;
}, $foreign.intSub);
var ringFn = function (dictRing) {
    return new Ring(function () {
        return Data_Semiring.semiringFn(dictRing.Semiring0());
    }, function (f) {
        return function (g) {
            return function (x) {
                return sub(dictRing)(f(x))(g(x));
            };
        };
    });
};
var negate = function (dictRing) {
    return function (a) {
        return sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a);
    };
};
module.exports = {
    Ring: Ring,
    sub: sub,
    negate: negate,
    RingRecord: RingRecord,
    subRecord: subRecord,
    ringInt: ringInt,
    ringNumber: ringNumber,
    ringUnit: ringUnit,
    ringFn: ringFn,
    ringRecord: ringRecord,
    ringRecordNil: ringRecordNil,
    ringRecordCons: ringRecordCons
};

},{"../Data.Semiring/index.js":251,"../Data.Symbol/index.js":274,"../Data.Unit/index.js":289,"../Record.Unsafe/index.js":390,"../Type.Data.RowList/index.js":418,"./foreign.js":241}],243:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var First = function (x) {
    return x;
};
var showFirst = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(First " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupFirst = new Data_Semigroup.Semigroup(function (x) {
    return function (v) {
        return x;
    };
});
var ordFirst = function (dictOrd) {
    return dictOrd;
};
var functorFirst = new Data_Functor.Functor(function (f) {
    return function (m) {
        return f(m);
    };
});
var eqFirst = function (dictEq) {
    return dictEq;
};
var eq1First = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqFirst(dictEq));
});
var ord1First = new Data_Ord.Ord1(function () {
    return eq1First;
}, function (dictOrd) {
    return Data_Ord.compare(ordFirst(dictOrd));
});
var boundedFirst = function (dictBounded) {
    return dictBounded;
};
var applyFirst = new Control_Apply.Apply(function () {
    return functorFirst;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindFirst = new Control_Bind.Bind(function () {
    return applyFirst;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeFirst = new Control_Applicative.Applicative(function () {
    return applyFirst;
}, First);
var monadFirst = new Control_Monad.Monad(function () {
    return applicativeFirst;
}, function () {
    return bindFirst;
});
module.exports = {
    First: First,
    eqFirst: eqFirst,
    eq1First: eq1First,
    ordFirst: ordFirst,
    ord1First: ord1First,
    boundedFirst: boundedFirst,
    showFirst: showFirst,
    functorFirst: functorFirst,
    applyFirst: applyFirst,
    applicativeFirst: applicativeFirst,
    bindFirst: bindFirst,
    monadFirst: monadFirst,
    semigroupFirst: semigroupFirst
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Monad/index.js":55,"../Data.Bounded/index.js":113,"../Data.Eq/index.js":135,"../Data.Functor/index.js":153,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Prelude/index.js":385}],244:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Apply = require("../Control.Apply/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord_Max = require("../Data.Ord.Max/index.js");
var Data_Ord_Min = require("../Data.Ord.Min/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Prelude = require("../Prelude/index.js");
var JoinWith = function (x) {
    return x;
};
var Act = function (x) {
    return x;
};
var Foldable1 = function (Foldable0, fold1, foldMap1) {
    this.Foldable0 = Foldable0;
    this.fold1 = fold1;
    this.foldMap1 = foldMap1;
};
var semigroupJoinWith = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return JoinWith(function (j) {
                return Data_Semigroup.append(dictSemigroup)(v(j))(Data_Semigroup.append(dictSemigroup)(j)(v1(j)));
            });
        };
    });
};
var semigroupAct = function (dictApply) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Control_Apply.applySecond(dictApply)(v)(v1);
        };
    });
};
var joinee = function (v) {
    return v;
};
var getAct = function (v) {
    return v;
};
var foldMap1 = function (dict) {
    return dict.foldMap1;
};
var intercalateMap = function (dictFoldable1) {
    return function (dictSemigroup) {
        return function (j) {
            return function (f) {
                return function (foldable) {
                    return joinee(foldMap1(dictFoldable1)(semigroupJoinWith(dictSemigroup))(function ($43) {
                        return JoinWith(Data_Function["const"](f($43)));
                    })(foldable))(j);
                };
            };
        };
    };
};
var intercalate = function (dictFoldable1) {
    return function (dictSemigroup) {
        return Data_Function.flip(intercalateMap(dictFoldable1)(dictSemigroup))(Control_Category.identity(Control_Category.categoryFn));
    };
};
var maximum = function (dictOrd) {
    return function (dictFoldable1) {
        return Data_Newtype.ala(Data_Functor.functorFn)(Data_Ord_Max.newtypeMax)(Data_Ord_Max.newtypeMax)(Data_Ord_Max.Max)(foldMap1(dictFoldable1)(Data_Ord_Max.semigroupMax(dictOrd)));
    };
};
var minimum = function (dictOrd) {
    return function (dictFoldable1) {
        return Data_Newtype.ala(Data_Functor.functorFn)(Data_Ord_Min.newtypeMin)(Data_Ord_Min.newtypeMin)(Data_Ord_Min.Min)(foldMap1(dictFoldable1)(Data_Ord_Min.semigroupMin(dictOrd)));
    };
};
var traverse1_ = function (dictFoldable1) {
    return function (dictApply) {
        return function (f) {
            return function (t) {
                return Data_Functor.voidRight(dictApply.Functor0())(Data_Unit.unit)(getAct(foldMap1(dictFoldable1)(semigroupAct(dictApply))(function ($44) {
                    return Act(f($44));
                })(t)));
            };
        };
    };
};
var for1_ = function (dictFoldable1) {
    return function (dictApply) {
        return Data_Function.flip(traverse1_(dictFoldable1)(dictApply));
    };
};
var sequence1_ = function (dictFoldable1) {
    return function (dictApply) {
        return traverse1_(dictFoldable1)(dictApply)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var fold1Default = function (dictFoldable1) {
    return function (dictSemigroup) {
        return foldMap1(dictFoldable1)(dictSemigroup)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var foldableDual = new Foldable1(function () {
    return Data_Foldable.foldableDual;
}, function (dictSemigroup) {
    return fold1Default(foldableDual)(dictSemigroup);
}, function (dictSemigroup) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
});
var foldableMultiplicative = new Foldable1(function () {
    return Data_Foldable.foldableMultiplicative;
}, function (dictSemigroup) {
    return fold1Default(foldableMultiplicative)(dictSemigroup);
}, function (dictSemigroup) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
});
var fold1 = function (dict) {
    return dict.fold1;
};
var foldMap1Default = function (dictFoldable1) {
    return function (dictFunctor) {
        return function (dictSemigroup) {
            return function (f) {
                return function ($45) {
                    return fold1(dictFoldable1)(dictSemigroup)(Data_Functor.map(dictFunctor)(f)($45));
                };
            };
        };
    };
};
module.exports = {
    Foldable1: Foldable1,
    foldMap1: foldMap1,
    fold1: fold1,
    traverse1_: traverse1_,
    for1_: for1_,
    sequence1_: sequence1_,
    foldMap1Default: foldMap1Default,
    fold1Default: fold1Default,
    intercalate: intercalate,
    intercalateMap: intercalateMap,
    maximum: maximum,
    minimum: minimum,
    foldableDual: foldableDual,
    foldableMultiplicative: foldableMultiplicative
};

},{"../Control.Apply/index.js":9,"../Control.Category/index.js":14,"../Control.Semigroupoid/index.js":61,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Monoid.Dual/index.js":215,"../Data.Monoid.Multiplicative/index.js":217,"../Data.Newtype/index.js":220,"../Data.Ord.Max/index.js":224,"../Data.Ord.Min/index.js":225,"../Data.Semigroup/index.js":248,"../Data.Unit/index.js":289,"../Prelude/index.js":385}],245:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Last = function (x) {
    return x;
};
var showLast = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Last " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupLast = new Data_Semigroup.Semigroup(function (v) {
    return function (x) {
        return x;
    };
});
var ordLast = function (dictOrd) {
    return dictOrd;
};
var functorLast = new Data_Functor.Functor(function (f) {
    return function (m) {
        return f(m);
    };
});
var eqLast = function (dictEq) {
    return dictEq;
};
var eq1Last = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqLast(dictEq));
});
var ord1Last = new Data_Ord.Ord1(function () {
    return eq1Last;
}, function (dictOrd) {
    return Data_Ord.compare(ordLast(dictOrd));
});
var boundedLast = function (dictBounded) {
    return dictBounded;
};
var applyLast = new Control_Apply.Apply(function () {
    return functorLast;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindLast = new Control_Bind.Bind(function () {
    return applyLast;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeLast = new Control_Applicative.Applicative(function () {
    return applyLast;
}, Last);
var monadLast = new Control_Monad.Monad(function () {
    return applicativeLast;
}, function () {
    return bindLast;
});
module.exports = {
    Last: Last,
    eqLast: eqLast,
    eq1Last: eq1Last,
    ordLast: ordLast,
    ord1Last: ord1Last,
    boundedLast: boundedLast,
    showLast: showLast,
    functorLast: functorLast,
    applyLast: applyLast,
    applicativeLast: applicativeLast,
    bindLast: bindLast,
    monadLast: monadLast,
    semigroupLast: semigroupLast
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Monad/index.js":55,"../Data.Bounded/index.js":113,"../Data.Eq/index.js":135,"../Data.Functor/index.js":153,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Prelude/index.js":385}],246:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Prelude = require("../Prelude/index.js");
var Traversable1 = function (Foldable10, Traversable1, sequence1, traverse1) {
    this.Foldable10 = Foldable10;
    this.Traversable1 = Traversable1;
    this.sequence1 = sequence1;
    this.traverse1 = traverse1;
};
var traverse1 = function (dict) {
    return dict.traverse1;
};
var sequence1Default = function (dictTraversable1) {
    return function (dictApply) {
        return traverse1(dictTraversable1)(dictApply)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var traversableDual = new Traversable1(function () {
    return Data_Semigroup_Foldable.foldableDual;
}, function () {
    return Data_Traversable.traversableDual;
}, function (dictApply) {
    return sequence1Default(traversableDual)(dictApply);
}, function (dictApply) {
    return function (f) {
        return function (v) {
            return Data_Functor.map(dictApply.Functor0())(Data_Monoid_Dual.Dual)(f(v));
        };
    };
});
var traversableMultiplicative = new Traversable1(function () {
    return Data_Semigroup_Foldable.foldableMultiplicative;
}, function () {
    return Data_Traversable.traversableMultiplicative;
}, function (dictApply) {
    return sequence1Default(traversableMultiplicative)(dictApply);
}, function (dictApply) {
    return function (f) {
        return function (v) {
            return Data_Functor.map(dictApply.Functor0())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
        };
    };
});
var sequence1 = function (dict) {
    return dict.sequence1;
};
var traverse1Default = function (dictTraversable1) {
    return function (dictApply) {
        return function (f) {
            return function (ta) {
                return sequence1(dictTraversable1)(dictApply)(Data_Functor.map((dictTraversable1.Traversable1()).Functor0())(f)(ta));
            };
        };
    };
};
module.exports = {
    sequence1: sequence1,
    traverse1: traverse1,
    Traversable1: Traversable1,
    traverse1Default: traverse1Default,
    sequence1Default: sequence1Default,
    traversableDual: traversableDual,
    traversableMultiplicative: traversableMultiplicative
};

},{"../Control.Category/index.js":14,"../Data.Functor/index.js":153,"../Data.Monoid.Dual/index.js":215,"../Data.Monoid.Multiplicative/index.js":217,"../Data.Semigroup.Foldable/index.js":244,"../Data.Traversable/index.js":281,"../Prelude/index.js":385}],247:[function(require,module,exports){
"use strict";

exports.concatString = function (s1) {
  return function (s2) {
    return s1 + s2;
  };
};

exports.concatArray = function (xs) {
  return function (ys) {
    if (xs.length === 0) return ys;
    if (ys.length === 0) return xs;
    return xs.concat(ys);
  };
};

},{}],248:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Data_Void = require("../Data.Void/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var Semigroup = function (append) {
    this.append = append;
};
var SemigroupRecord = function (appendRecord) {
    this.appendRecord = appendRecord;
};
var semigroupVoid = new Semigroup(function (v) {
    return Data_Void.absurd;
});
var semigroupUnit = new Semigroup(function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
});
var semigroupString = new Semigroup($foreign.concatString);
var semigroupRecordNil = new SemigroupRecord(function (v) {
    return function (v1) {
        return function (v2) {
            return {};
        };
    };
});
var semigroupArray = new Semigroup($foreign.concatArray);
var appendRecord = function (dict) {
    return dict.appendRecord;
};
var semigroupRecord = function (dictRowToList) {
    return function (dictSemigroupRecord) {
        return new Semigroup(appendRecord(dictSemigroupRecord)(Type_Data_RowList.RLProxy.value));
    };
};
var append = function (dict) {
    return dict.append;
};
var semigroupFn = function (dictSemigroup) {
    return new Semigroup(function (f) {
        return function (g) {
            return function (x) {
                return append(dictSemigroup)(f(x))(g(x));
            };
        };
    });
};
var semigroupRecordCons = function (dictIsSymbol) {
    return function (dictCons) {
        return function (dictSemigroupRecord) {
            return function (dictSemigroup) {
                return new SemigroupRecord(function (v) {
                    return function (ra) {
                        return function (rb) {
                            var tail = appendRecord(dictSemigroupRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            var get = Record_Unsafe.unsafeGet(key);
                            return insert(append(dictSemigroup)(get(ra))(get(rb)))(tail);
                        };
                    };
                });
            };
        };
    };
};
module.exports = {
    Semigroup: Semigroup,
    append: append,
    SemigroupRecord: SemigroupRecord,
    appendRecord: appendRecord,
    semigroupString: semigroupString,
    semigroupUnit: semigroupUnit,
    semigroupVoid: semigroupVoid,
    semigroupFn: semigroupFn,
    semigroupArray: semigroupArray,
    semigroupRecord: semigroupRecord,
    semigroupRecordNil: semigroupRecordNil,
    semigroupRecordCons: semigroupRecordCons
};

},{"../Data.Symbol/index.js":274,"../Data.Unit/index.js":289,"../Data.Void/index.js":291,"../Record.Unsafe/index.js":390,"../Type.Data.RowList/index.js":418,"./foreign.js":247}],249:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Prelude = require("../Prelude/index.js");
var Free = function (x) {
    return x;
};
var showFree = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Free " + (Data_Show.show(Data_List_Types.showList(Data_List_Types.showList(dictShow)))(v) + ")");
    });
};
var semiringFree = new Data_Semiring.Semiring(function (v) {
    return function (v1) {
        return Data_Semigroup.append(Data_List_Types.semigroupList)(v)(v1);
    };
}, function (v) {
    return function (v1) {
        return Control_Bind.bind(Data_List_Types.bindList)(v)(function (v2) {
            return Control_Bind.bind(Data_List_Types.bindList)(v1)(function (v3) {
                return Control_Applicative.pure(Data_List_Types.applicativeList)(Data_Semigroup.append(Data_List_Types.semigroupList)(v2)(v3));
            });
        });
    };
}, Data_List.singleton(Data_List_Types.Nil.value), Data_List_Types.Nil.value);
var newtypeFree = new Data_Newtype.Newtype(function (n) {
    return n;
}, Free);
var liftFree = function (dictSemiring) {
    return function (f) {
        return function (v) {
            return Data_Foldable.sum(Data_List_Types.foldableList)(dictSemiring)(Data_Functor.map(Data_List_Types.functorList)(function ($60) {
                return Data_Foldable.product(Data_List_Types.foldableList)(dictSemiring)(Data_Functor.map(Data_List_Types.functorList)(f)($60));
            })(v));
        };
    };
};
var functorFree = new Data_Functor.Functor(function (fn) {
    return function (v) {
        return Free(Data_Functor.map(Data_List_Types.functorList)(Data_Functor.map(Data_List_Types.functorList)(fn))(v));
    };
});
var free = function (a) {
    return Data_List.singleton(Data_List.singleton(a));
};
var lowerFree = function (dictSemiring) {
    return function (f) {
        return function (a) {
            return f(free(a));
        };
    };
};
var foldableFree = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (fn) {
        return function (v) {
            return Data_Foldable.fold(Data_List_Types.foldableList)(dictMonoid)(Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_List_Types.monoidList)(Data_Functor.map(Data_List_Types.functorList)(fn))(v));
        };
    };
}, function (fn) {
    return function (accum) {
        return function (v) {
            return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Foldable.foldl(Data_List_Types.foldableList)(fn))(accum)(v);
        };
    };
}, function (fn) {
    return function (accum) {
        return function (v) {
            return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_Function.flip(Data_Foldable.foldr(Data_List_Types.foldableList)(fn)))(accum)(v);
        };
    };
});
var traversableFree = new Data_Traversable.Traversable(function () {
    return foldableFree;
}, function () {
    return functorFree;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Free)(Data_Traversable.sequence(Data_List_Types.traversableList)(dictApplicative)(Data_Functor.map(Data_List_Types.functorList)(Data_Traversable.sequence(Data_List_Types.traversableList)(dictApplicative))(v)));
    };
}, function (dictApplicative) {
    return function (fn) {
        return function (freeA) {
            return Data_Traversable.sequence(traversableFree)(dictApplicative)(Data_Functor.map(functorFree)(fn)(freeA));
        };
    };
});
var eqFree = function (dictEq) {
    return new Data_Eq.Eq(function (v) {
        return function (v1) {
            return Data_Eq.eq(Data_List_Types.eqList(Data_List_Types.eqList(dictEq)))(v)(v1);
        };
    });
};
var ordFree = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqFree(dictOrd.Eq0());
    }, function (v) {
        return function (v1) {
            return Data_Ord.compare(Data_List_Types.ordList(Data_List_Types.ordList(dictOrd)))(v)(v1);
        };
    });
};
var applyFree = new Control_Apply.Apply(function () {
    return functorFree;
}, function (v) {
    return function (v1) {
        return Free(Control_Bind.bind(Data_List_Types.bindList)(v)(function (v2) {
            return Control_Bind.bind(Data_List_Types.bindList)(v1)(function (v3) {
                return Control_Applicative.pure(Data_List_Types.applicativeList)(Control_Apply.apply(Data_List_Types.applyList)(v2)(v3));
            });
        }));
    };
});
var applicativeFree = new Control_Applicative.Applicative(function () {
    return applyFree;
}, free);
module.exports = {
    Free: Free,
    free: free,
    liftFree: liftFree,
    lowerFree: lowerFree,
    newtypeFree: newtypeFree,
    showFree: showFree,
    eqFree: eqFree,
    ordFree: ordFree,
    semiringFree: semiringFree,
    functorFree: functorFree,
    applyFree: applyFree,
    applicativeFree: applicativeFree,
    foldableFree: foldableFree,
    traversableFree: traversableFree
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Semigroupoid/index.js":61,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.Traversable/index.js":281,"../Prelude/index.js":385}],250:[function(require,module,exports){
"use strict";

exports.intAdd = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x + y | 0;
  };
};

exports.intMul = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x * y | 0;
  };
};

exports.numAdd = function (n1) {
  return function (n2) {
    return n1 + n2;
  };
};

exports.numMul = function (n1) {
  return function (n2) {
    return n1 * n2;
  };
};

},{}],251:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Data_Row = require("../Type.Data.Row/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var Semiring = function (add, mul, one, zero) {
    this.add = add;
    this.mul = mul;
    this.one = one;
    this.zero = zero;
};
var SemiringRecord = function (addRecord, mulRecord, oneRecord, zeroRecord) {
    this.addRecord = addRecord;
    this.mulRecord = mulRecord;
    this.oneRecord = oneRecord;
    this.zeroRecord = zeroRecord;
};
var zeroRecord = function (dict) {
    return dict.zeroRecord;
};
var zero = function (dict) {
    return dict.zero;
};
var semiringUnit = new Semiring(function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, Data_Unit.unit, Data_Unit.unit);
var semiringRecordNil = new SemiringRecord(function (v) {
    return function (v1) {
        return function (v2) {
            return {};
        };
    };
}, function (v) {
    return function (v1) {
        return function (v2) {
            return {};
        };
    };
}, function (v) {
    return function (v1) {
        return {};
    };
}, function (v) {
    return function (v1) {
        return {};
    };
});
var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
var oneRecord = function (dict) {
    return dict.oneRecord;
};
var one = function (dict) {
    return dict.one;
};
var mulRecord = function (dict) {
    return dict.mulRecord;
};
var mul = function (dict) {
    return dict.mul;
};
var addRecord = function (dict) {
    return dict.addRecord;
};
var semiringRecord = function (dictRowToList) {
    return function (dictSemiringRecord) {
        return new Semiring(addRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value), mulRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value), oneRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value), zeroRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value));
    };
};
var add = function (dict) {
    return dict.add;
};
var semiringFn = function (dictSemiring) {
    return new Semiring(function (f) {
        return function (g) {
            return function (x) {
                return add(dictSemiring)(f(x))(g(x));
            };
        };
    }, function (f) {
        return function (g) {
            return function (x) {
                return mul(dictSemiring)(f(x))(g(x));
            };
        };
    }, function (v) {
        return one(dictSemiring);
    }, function (v) {
        return zero(dictSemiring);
    });
};
var semiringRecordCons = function (dictIsSymbol) {
    return function (dictCons) {
        return function (dictSemiringRecord) {
            return function (dictSemiring) {
                return new SemiringRecord(function (v) {
                    return function (ra) {
                        return function (rb) {
                            var tail = addRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            var get = Record_Unsafe.unsafeGet(key);
                            return insert(add(dictSemiring)(get(ra))(get(rb)))(tail);
                        };
                    };
                }, function (v) {
                    return function (ra) {
                        return function (rb) {
                            var tail = mulRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            var get = Record_Unsafe.unsafeGet(key);
                            return insert(mul(dictSemiring)(get(ra))(get(rb)))(tail);
                        };
                    };
                }, function (v) {
                    return function (v1) {
                        var tail = oneRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value);
                        var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                        var insert = Record_Unsafe.unsafeSet(key);
                        return insert(one(dictSemiring))(tail);
                    };
                }, function (v) {
                    return function (v1) {
                        var tail = zeroRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value);
                        var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                        var insert = Record_Unsafe.unsafeSet(key);
                        return insert(zero(dictSemiring))(tail);
                    };
                });
            };
        };
    };
};
module.exports = {
    Semiring: Semiring,
    add: add,
    zero: zero,
    mul: mul,
    one: one,
    SemiringRecord: SemiringRecord,
    addRecord: addRecord,
    mulRecord: mulRecord,
    oneRecord: oneRecord,
    zeroRecord: zeroRecord,
    semiringInt: semiringInt,
    semiringNumber: semiringNumber,
    semiringFn: semiringFn,
    semiringUnit: semiringUnit,
    semiringRecord: semiringRecord,
    semiringRecordNil: semiringRecordNil,
    semiringRecordCons: semiringRecordCons
};

},{"../Data.Symbol/index.js":274,"../Data.Unit/index.js":289,"../Record.Unsafe/index.js":390,"../Type.Data.Row/index.js":417,"../Type.Data.RowList/index.js":418,"./foreign.js":250}],252:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_ST = require("../Control.Monad.ST/index.js");
var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Array_ST = require("../Data.Array.ST/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var $$Set = function (x) {
    return x;
};
var union = function (dictOrd) {
    return function (v) {
        return function (v1) {
            return Data_Map_Internal.union(dictOrd)(v)(v1);
        };
    };
};
var toList = function (v) {
    return Data_Map_Internal.keys(v);
};
var toUnfoldable = function (dictUnfoldable) {
    return function ($64) {
        return Data_List.toUnfoldable(dictUnfoldable)(toList($64));
    };
};
var size = function (v) {
    return Data_Map_Internal.size(v);
};
var singleton = function (a) {
    return Data_Map_Internal.singleton(a)(Data_Unit.unit);
};
var showSet = function (dictShow) {
    return new Data_Show.Show(function (s) {
        return "(fromFoldable " + (Data_Show.show(Data_List_Types.showList(dictShow))(toList(s)) + ")");
    });
};
var semigroupSet = function (dictOrd) {
    return new Data_Semigroup.Semigroup(union(dictOrd));
};
var member = function (dictOrd) {
    return function (a) {
        return function (v) {
            return Data_Map_Internal.member(dictOrd)(a)(v);
        };
    };
};
var isEmpty = function (v) {
    return Data_Map_Internal.isEmpty(v);
};
var insert = function (dictOrd) {
    return function (a) {
        return function (v) {
            return Data_Map_Internal.insert(dictOrd)(a)(Data_Unit.unit)(v);
        };
    };
};
var foldableSet = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function ($65) {
            return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(toList($65));
        };
    };
}, function (f) {
    return function (x) {
        return function ($66) {
            return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(x)(toList($66));
        };
    };
}, function (f) {
    return function (x) {
        return function ($67) {
            return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(x)(toList($67));
        };
    };
});
var findMin = function (v) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
        return v1.key;
    })(Data_Map_Internal.findMin(v));
};
var findMax = function (v) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
        return v1.key;
    })(Data_Map_Internal.findMax(v));
};
var filter = function (dictOrd) {
    return function (f) {
        return function (v) {
            return Data_Map_Internal.filterWithKey(dictOrd)(function (k) {
                return function (v1) {
                    return f(k);
                };
            })(v);
        };
    };
};
var eqSet = function (dictEq) {
    return new Data_Eq.Eq(function (v) {
        return function (v1) {
            return Data_Eq.eq(Data_Map_Internal.eqMap(dictEq)(Data_Eq.eqUnit))(v)(v1);
        };
    });
};
var ordSet = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqSet(dictOrd.Eq0());
    }, function (s1) {
        return function (s2) {
            return Data_Ord.compare(Data_List_Types.ordList(dictOrd))(toList(s1))(toList(s2));
        };
    });
};
var eq1Set = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqSet(dictEq));
});
var ord1Set = new Data_Ord.Ord1(function () {
    return eq1Set;
}, function (dictOrd) {
    return Data_Ord.compare(ordSet(dictOrd));
});
var empty = Data_Map_Internal.empty;
var fromFoldable = function (dictFoldable) {
    return function (dictOrd) {
        return Data_Foldable.foldl(dictFoldable)(function (m) {
            return function (a) {
                return insert(dictOrd)(a)(m);
            };
        })(empty);
    };
};
var intersection = function (dictOrd) {
    return function (s1) {
        return function (s2) {
            var toArray = function ($68) {
                return Data_Array.fromFoldable(Data_List_Types.foldableList)(toList($68));
            };
            var rs = toArray(s2);
            var rl = Data_Array.length(rs);
            var ls = toArray(s1);
            var ll = Data_Array.length(ls);
            var intersect = function (acc) {
                var go = function (l) {
                    return function (r) {
                        var $59 = l < ll && r < rl;
                        if ($59) {
                            var v = Data_Ord.compare(dictOrd)(ls[l])(rs[r]);
                            if (v instanceof Data_Ordering.EQ) {
                                return function __do() {
                                    var v1 = Data_Array_ST.push(ls[l])(acc)();
                                    return new Control_Monad_Rec_Class.Loop({
                                        a: l + 1 | 0,
                                        b: r + 1 | 0
                                    });
                                };
                            };
                            if (v instanceof Data_Ordering.LT) {
                                return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)(new Control_Monad_Rec_Class.Loop({
                                    a: l + 1 | 0,
                                    b: r
                                }));
                            };
                            if (v instanceof Data_Ordering.GT) {
                                return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)(new Control_Monad_Rec_Class.Loop({
                                    a: l,
                                    b: r + 1 | 0
                                }));
                            };
                            throw new Error("Failed pattern match at Data.Set (line 176, column 12 - line 181, column 43): " + [ v.constructor.name ]);
                        };
                        return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)(new Control_Monad_Rec_Class.Done(acc));
                    };
                };
                return Control_Monad_Rec_Class.tailRecM2(Control_Monad_ST_Internal.monadRecST)(go)(0)(0);
            };
            return fromFoldable(Data_Foldable.foldableArray)(dictOrd)(Control_Bind.bind(Control_Monad_ST_Internal.bindST)(Control_Bind.bind(Control_Monad_ST_Internal.bindST)(Data_Array_ST.empty)(intersect))(Data_Array_ST.unsafeFreeze)());
        };
    };
};
var map = function (dictOrd) {
    return function (f) {
        return Data_Foldable.foldl(foldableSet)(function (m) {
            return function (a) {
                return insert(dictOrd)(f(a))(m);
            };
        })(empty);
    };
};
var mapMaybe = function (dictOrd) {
    return function (f) {
        return Data_Foldable.foldr(foldableSet)(function (a) {
            return function (acc) {
                return Data_Maybe.maybe(acc)(function (b) {
                    return insert(dictOrd)(b)(acc);
                })(f(a));
            };
        })(empty);
    };
};
var monoidSet = function (dictOrd) {
    return new Data_Monoid.Monoid(function () {
        return semigroupSet(dictOrd);
    }, empty);
};
var unions = function (dictFoldable) {
    return function (dictOrd) {
        return Data_Foldable.foldl(dictFoldable)(union(dictOrd))(empty);
    };
};
var $$delete = function (dictOrd) {
    return function (a) {
        return function (v) {
            return Data_Map_Internal["delete"](dictOrd)(a)(v);
        };
    };
};
var difference = function (dictOrd) {
    return function (s1) {
        return function (s2) {
            return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictOrd)))(s1)(toList(s2));
        };
    };
};
var subset = function (dictOrd) {
    return function (s1) {
        return function (s2) {
            return isEmpty(difference(dictOrd)(s1)(s2));
        };
    };
};
var properSubset = function (dictOrd) {
    return function (s1) {
        return function (s2) {
            return subset(dictOrd)(s1)(s2) && Data_Eq.notEq(eqSet(dictOrd.Eq0()))(s1)(s2);
        };
    };
};
var checkValid = function (v) {
    return Data_Map_Internal.checkValid(v);
};
module.exports = {
    fromFoldable: fromFoldable,
    toUnfoldable: toUnfoldable,
    empty: empty,
    isEmpty: isEmpty,
    singleton: singleton,
    map: map,
    checkValid: checkValid,
    insert: insert,
    member: member,
    "delete": $$delete,
    size: size,
    findMin: findMin,
    findMax: findMax,
    union: union,
    unions: unions,
    difference: difference,
    subset: subset,
    properSubset: properSubset,
    intersection: intersection,
    filter: filter,
    mapMaybe: mapMaybe,
    eqSet: eqSet,
    eq1Set: eq1Set,
    showSet: showSet,
    ordSet: ordSet,
    ord1Set: ord1Set,
    monoidSet: monoidSet,
    semigroupSet: semigroupSet,
    foldableSet: foldableSet
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Control.Monad.Rec.Class/index.js":43,"../Control.Monad.ST.Internal/index.js":45,"../Control.Monad.ST/index.js":47,"../Control.Semigroupoid/index.js":61,"../Data.Array.ST/index.js":97,"../Data.Array/index.js":99,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Map.Internal/index.js":206,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.Unfoldable/index.js":285,"../Data.Unit/index.js":289,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385}],253:[function(require,module,exports){
"use strict";

exports.showIntImpl = function (n) {
  return n.toString();
};

exports.showNumberImpl = function (n) {
  var str = n.toString();
  return isNaN(str + ".0") ? str : str + ".0";
};

exports.showCharImpl = function (c) {
  var code = c.charCodeAt(0);
  if (code < 0x20 || code === 0x7F) {
    switch (c) {
      case "\x07": return "'\\a'";
      case "\b": return "'\\b'";
      case "\f": return "'\\f'";
      case "\n": return "'\\n'";
      case "\r": return "'\\r'";
      case "\t": return "'\\t'";
      case "\v": return "'\\v'";
    }
    return "'\\" + code.toString(10) + "'";
  }
  return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
};

exports.showStringImpl = function (s) {
  var l = s.length;
  return "\"" + s.replace(
    /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
    function (c, i) {
      switch (c) {
        case "\"":
        case "\\":
          return "\\" + c;
        case "\x07": return "\\a";
        case "\b": return "\\b";
        case "\f": return "\\f";
        case "\n": return "\\n";
        case "\r": return "\\r";
        case "\t": return "\\t";
        case "\v": return "\\v";
      }
      var k = i + 1;
      var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
      return "\\" + c.charCodeAt(0).toString(10) + empty;
    }
  ) + "\"";
};

exports.showArrayImpl = function (f) {
  return function (xs) {
    var ss = [];
    for (var i = 0, l = xs.length; i < l; i++) {
      ss[i] = f(xs[i]);
    }
    return "[" + ss.join(",") + "]";
  };
};

exports.cons = function (head) {
  return function (tail) {
    return [head].concat(tail);
  };
};

exports.join = function (separator) {
  return function (xs) {
    return xs.join(separator);
  };
};

},{}],254:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var Show = function (show) {
    this.show = show;
};
var ShowRecordFields = function (showRecordFields) {
    this.showRecordFields = showRecordFields;
};
var showString = new Show($foreign.showStringImpl);
var showRecordFieldsNil = new ShowRecordFields(function (v) {
    return function (v1) {
        return [  ];
    };
});
var showRecordFields = function (dict) {
    return dict.showRecordFields;
};
var showRecord = function (dictRowToList) {
    return function (dictShowRecordFields) {
        return new Show(function (record) {
            var v = showRecordFields(dictShowRecordFields)(Type_Data_RowList.RLProxy.value)(record);
            if (v.length === 0) {
                return "{}";
            };
            return $foreign.join(" ")([ "{", $foreign.join(", ")(v), "}" ]);
        });
    };
};
var showNumber = new Show($foreign.showNumberImpl);
var showInt = new Show($foreign.showIntImpl);
var showChar = new Show($foreign.showCharImpl);
var showBoolean = new Show(function (v) {
    if (v) {
        return "true";
    };
    if (!v) {
        return "false";
    };
    throw new Error("Failed pattern match at Data.Show (line 20, column 1 - line 20, column 37): " + [ v.constructor.name ]);
});
var show = function (dict) {
    return dict.show;
};
var showArray = function (dictShow) {
    return new Show($foreign.showArrayImpl(show(dictShow)));
};
var showRecordFieldsCons = function (dictIsSymbol) {
    return function (dictShowRecordFields) {
        return function (dictShow) {
            return new ShowRecordFields(function (v) {
                return function (record) {
                    var tail = showRecordFields(dictShowRecordFields)(Type_Data_RowList.RLProxy.value)(record);
                    var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                    var focus = Record_Unsafe.unsafeGet(key)(record);
                    return $foreign.cons($foreign.join(": ")([ key, show(dictShow)(focus) ]))(tail);
                };
            });
        };
    };
};
module.exports = {
    Show: Show,
    show: show,
    ShowRecordFields: ShowRecordFields,
    showRecordFields: showRecordFields,
    showBoolean: showBoolean,
    showInt: showInt,
    showNumber: showNumber,
    showChar: showChar,
    showString: showString,
    showArray: showArray,
    showRecord: showRecord,
    showRecordFieldsNil: showRecordFieldsNil,
    showRecordFieldsCons: showRecordFieldsCons
};

},{"../Data.Symbol/index.js":274,"../Record.Unsafe/index.js":390,"../Type.Data.RowList/index.js":418,"./foreign.js":253}],255:[function(require,module,exports){
"use strict";
/* global Symbol */

var hasArrayFrom = typeof Array.from === "function";
var hasStringIterator =
  typeof Symbol !== "undefined" &&
  Symbol != null &&
  typeof Symbol.iterator !== "undefined" &&
  typeof String.prototype[Symbol.iterator] === "function";
var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
var hasCodePointAt = typeof String.prototype.codePointAt === "function";

exports._unsafeCodePointAt0 = function (fallback) {
  return hasCodePointAt
    ? function (str) { return str.codePointAt(0); }
    : fallback;
};

exports._codePointAt = function (fallback) {
  return function (Just) {
    return function (Nothing) {
      return function (unsafeCodePointAt0) {
        return function (index) {
          return function (str) {
            var length = str.length;
            if (index < 0 || index >= length) return Nothing;
            if (hasStringIterator) {
              var iter = str[Symbol.iterator]();
              for (var i = index;; --i) {
                var o = iter.next();
                if (o.done) return Nothing;
                if (i === 0) return Just(unsafeCodePointAt0(o.value));
              }
            }
            return fallback(index)(str);
          };
        };
      };
    };
  };
};

exports._countPrefix = function (fallback) {
  return function (unsafeCodePointAt0) {
    if (hasStringIterator) {
      return function (pred) {
        return function (str) {
          var iter = str[Symbol.iterator]();
          for (var cpCount = 0; ; ++cpCount) {
            var o = iter.next();
            if (o.done) return cpCount;
            var cp = unsafeCodePointAt0(o.value);
            if (!pred(cp)) return cpCount;
          }
        };
      };
    }
    return fallback;
  };
};

exports._fromCodePointArray = function (singleton) {
  return hasFromCodePoint
    ? function (cps) {
      // Function.prototype.apply will fail for very large second parameters,
      // so we don't use it for arrays with 10,000 or more entries.
      if (cps.length < 10e3) {
        return String.fromCodePoint.apply(String, cps);
      }
      return cps.map(singleton).join("");
    }
    : function (cps) {
      return cps.map(singleton).join("");
    };
};

exports._singleton = function (fallback) {
  return hasFromCodePoint ? String.fromCodePoint : fallback;
};

exports._take = function (fallback) {
  return function (n) {
    if (hasStringIterator) {
      return function (str) {
        var accum = "";
        var iter = str[Symbol.iterator]();
        for (var i = 0; i < n; ++i) {
          var o = iter.next();
          if (o.done) return accum;
          accum += o.value;
        }
        return accum;
      };
    }
    return fallback(n);
  };
};

exports._toCodePointArray = function (fallback) {
  return function (unsafeCodePointAt0) {
    if (hasArrayFrom) {
      return function (str) {
        return Array.from(str, unsafeCodePointAt0);
      };
    }
    return fallback;
  };
};

},{}],256:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Data_String_Pattern = require("../Data.String.Pattern/index.js");
var Data_String_Unsafe = require("../Data.String.Unsafe/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Prelude = require("../Prelude/index.js");
var CodePoint = function (x) {
    return x;
};
var unsurrogate = function (lead) {
    return function (trail) {
        return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
    };
};
var showCodePoint = new Data_Show.Show(function (v) {
    return "(CodePoint 0x" + (Data_String_Common.toUpper(Data_Int.toStringAs(Data_Int.hexadecimal)(v)) + ")");
});
var isTrail = function (cu) {
    return 56320 <= cu && cu <= 57343;
};
var isLead = function (cu) {
    return 55296 <= cu && cu <= 56319;
};
var uncons = function (s) {
    var v = Data_String_CodeUnits.length(s);
    if (v === 0) {
        return Data_Maybe.Nothing.value;
    };
    if (v === 1) {
        return new Data_Maybe.Just({
            head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
            tail: ""
        });
    };
    var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
    var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
    var $21 = isLead(cu0) && isTrail(cu1);
    if ($21) {
        return new Data_Maybe.Just({
            head: unsurrogate(cu0)(cu1),
            tail: Data_String_CodeUnits.drop(2)(s)
        });
    };
    return new Data_Maybe.Just({
        head: cu0,
        tail: Data_String_CodeUnits.drop(1)(s)
    });
};
var unconsButWithTuple = function (s) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
        return new Data_Tuple.Tuple(v.head, v.tail);
    })(uncons(s));
};
var toCodePointArrayFallback = function (s) {
    return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
};
var unsafeCodePointAt0Fallback = function (s) {
    var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
    var $25 = isLead(cu0) && Data_String_CodeUnits.length(s) > 1;
    if ($25) {
        var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
        var $26 = isTrail(cu1);
        if ($26) {
            return unsurrogate(cu0)(cu1);
        };
        return cu0;
    };
    return cu0;
};
var unsafeCodePointAt0 = $foreign["_unsafeCodePointAt0"](unsafeCodePointAt0Fallback);
var toCodePointArray = $foreign["_toCodePointArray"](toCodePointArrayFallback)(unsafeCodePointAt0);
var length = function ($52) {
    return Data_Array.length(toCodePointArray($52));
};
var lastIndexOf = function (p) {
    return function (s) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (i) {
            return length(Data_String_CodeUnits.take(i)(s));
        })(Data_String_CodeUnits.lastIndexOf(p)(s));
    };
};
var indexOf = function (p) {
    return function (s) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (i) {
            return length(Data_String_CodeUnits.take(i)(s));
        })(Data_String_CodeUnits.indexOf(p)(s));
    };
};
var fromCharCode = function ($53) {
    return Data_String_CodeUnits.singleton(Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar))($53));
};
var singletonFallback = function (v) {
    if (v <= 65535) {
        return fromCharCode(v);
    };
    var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
    var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
    return fromCharCode(lead) + fromCharCode(trail);
};
var fromCodePointArray = $foreign["_fromCodePointArray"](singletonFallback);
var singleton = $foreign["_singleton"](singletonFallback);
var takeFallback = function (n) {
    return function (v) {
        if (n < 1) {
            return "";
        };
        var v1 = uncons(v);
        if (v1 instanceof Data_Maybe.Just) {
            return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
        };
        return v;
    };
};
var take = $foreign["_take"](takeFallback);
var lastIndexOf$prime = function (p) {
    return function (i) {
        return function (s) {
            var i$prime = Data_String_CodeUnits.length(take(i)(s));
            return Data_Functor.map(Data_Maybe.functorMaybe)(function (k) {
                return length(Data_String_CodeUnits.take(k)(s));
            })(Data_String_CodeUnits["lastIndexOf'"](p)(i$prime)(s));
        };
    };
};
var splitAt = function (i) {
    return function (s) {
        var before = take(i)(s);
        return {
            before: before,
            after: Data_String_CodeUnits.drop(Data_String_CodeUnits.length(before))(s)
        };
    };
};
var eqCodePoint = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordCodePoint = new Data_Ord.Ord(function () {
    return eqCodePoint;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
    };
});
var drop = function (n) {
    return function (s) {
        return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
    };
};
var indexOf$prime = function (p) {
    return function (i) {
        return function (s) {
            var s$prime = drop(i)(s);
            return Data_Functor.map(Data_Maybe.functorMaybe)(function (k) {
                return i + length(Data_String_CodeUnits.take(k)(s$prime)) | 0;
            })(Data_String_CodeUnits.indexOf(p)(s$prime));
        };
    };
};
var countTail = function ($copy_p) {
    return function ($copy_s) {
        return function ($copy_accum) {
            var $tco_var_p = $copy_p;
            var $tco_var_s = $copy_s;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(p, s, accum) {
                var v = uncons(s);
                if (v instanceof Data_Maybe.Just) {
                    var $39 = p(v.value0.head);
                    if ($39) {
                        $tco_var_p = p;
                        $tco_var_s = v.value0.tail;
                        $copy_accum = accum + 1 | 0;
                        return;
                    };
                    $tco_done = true;
                    return accum;
                };
                $tco_done = true;
                return accum;
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_p, $tco_var_s, $copy_accum);
            };
            return $tco_result;
        };
    };
};
var countFallback = function (p) {
    return function (s) {
        return countTail(p)(s)(0);
    };
};
var countPrefix = $foreign["_countPrefix"](countFallback)(unsafeCodePointAt0);
var dropWhile = function (p) {
    return function (s) {
        return drop(countPrefix(p)(s))(s);
    };
};
var takeWhile = function (p) {
    return function (s) {
        return take(countPrefix(p)(s))(s);
    };
};
var codePointFromChar = function ($54) {
    return CodePoint(Data_Enum.fromEnum(Data_Enum.boundedEnumChar)($54));
};
var codePointAtFallback = function ($copy_n) {
    return function ($copy_s) {
        var $tco_var_n = $copy_n;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(n, s) {
            var v = uncons(s);
            if (v instanceof Data_Maybe.Just) {
                var $44 = n === 0;
                if ($44) {
                    $tco_done = true;
                    return new Data_Maybe.Just(v.value0.head);
                };
                $tco_var_n = n - 1 | 0;
                $copy_s = v.value0.tail;
                return;
            };
            $tco_done = true;
            return Data_Maybe.Nothing.value;
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_n, $copy_s);
        };
        return $tco_result;
    };
};
var codePointAt = function (v) {
    return function (v1) {
        if (v < 0) {
            return Data_Maybe.Nothing.value;
        };
        if (v === 0 && v1 === "") {
            return Data_Maybe.Nothing.value;
        };
        if (v === 0) {
            return new Data_Maybe.Just(unsafeCodePointAt0(v1));
        };
        return $foreign["_codePointAt"](codePointAtFallback)(Data_Maybe.Just.create)(Data_Maybe.Nothing.value)(unsafeCodePointAt0)(v)(v1);
    };
};
var boundedCodePoint = new Data_Bounded.Bounded(function () {
    return ordCodePoint;
}, 0, 1114111);
var boundedEnumCodePoint = new Data_Enum.BoundedEnum(function () {
    return boundedCodePoint;
}, function () {
    return enumCodePoint;
}, 1114111 + 1 | 0, function (v) {
    return v;
}, function (n) {
    if (n >= 0 && n <= 1114111) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.String.CodePoints (line 63, column 1 - line 63, column 55): " + [ n.constructor.name ]);
});
var enumCodePoint = new Data_Enum.Enum(function () {
    return ordCodePoint;
}, Data_Enum.defaultPred(Data_Enum.toEnum(boundedEnumCodePoint))(Data_Enum.fromEnum(boundedEnumCodePoint)), Data_Enum.defaultSucc(Data_Enum.toEnum(boundedEnumCodePoint))(Data_Enum.fromEnum(boundedEnumCodePoint)));
module.exports = {
    codePointFromChar: codePointFromChar,
    singleton: singleton,
    fromCodePointArray: fromCodePointArray,
    toCodePointArray: toCodePointArray,
    codePointAt: codePointAt,
    uncons: uncons,
    length: length,
    countPrefix: countPrefix,
    indexOf: indexOf,
    "indexOf'": indexOf$prime,
    lastIndexOf: lastIndexOf,
    "lastIndexOf'": lastIndexOf$prime,
    take: take,
    takeWhile: takeWhile,
    drop: drop,
    dropWhile: dropWhile,
    splitAt: splitAt,
    eqCodePoint: eqCodePoint,
    ordCodePoint: ordCodePoint,
    showCodePoint: showCodePoint,
    boundedCodePoint: boundedCodePoint,
    enumCodePoint: enumCodePoint,
    boundedEnumCodePoint: boundedEnumCodePoint
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Array/index.js":99,"../Data.Boolean/index.js":110,"../Data.Bounded/index.js":113,"../Data.Enum/index.js":133,"../Data.Eq/index.js":135,"../Data.EuclideanRing/index.js":137,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Int/index.js":167,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.String.CodeUnits/index.js":258,"../Data.String.Common/index.js":260,"../Data.String.Pattern/index.js":266,"../Data.String.Unsafe/index.js":271,"../Data.Tuple/index.js":283,"../Data.Unfoldable/index.js":285,"../Prelude/index.js":385,"./foreign.js":255}],257:[function(require,module,exports){
"use strict";

exports.fromCharArray = function (a) {
  return a.join("");
};

exports.toCharArray = function (s) {
  return s.split("");
};

exports.singleton = function (c) {
  return c;
};

exports._charAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
      };
    };
  };
};

exports._toChar = function (just) {
  return function (nothing) {
    return function (s) {
      return s.length === 1 ? just(s) : nothing;
    };
  };
};

exports.length = function (s) {
  return s.length;
};

exports.countPrefix = function (p) {
  return function (s) {
    var i = 0;
    while (i < s.length && p(s.charAt(i))) i++;
    return i;
  };
};

exports._indexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.indexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_indexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.indexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports._lastIndexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.lastIndexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_lastIndexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.lastIndexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports.take = function (n) {
  return function (s) {
    return s.substr(0, n);
  };
};

exports.drop = function (n) {
  return function (s) {
    return s.substring(n);
  };
};

exports._slice = function (b) {
  return function (e) {
    return function (s) {
      return s.slice(b,e);
    };
  };
};

exports.splitAt = function (i) {
  return function (s) {
    return { before: s.substring(0, i), after: s.substring(i) };
  };
};

},{}],258:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_String_Pattern = require("../Data.String.Pattern/index.js");
var Data_String_Unsafe = require("../Data.String.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var uncons = function (v) {
    if (v === "") {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just({
        head: Data_String_Unsafe.charAt(0)(v),
        tail: $foreign.drop(1)(v)
    });
};
var toChar = $foreign["_toChar"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var takeWhile = function (p) {
    return function (s) {
        return $foreign.take($foreign.countPrefix(p)(s))(s);
    };
};
var takeRight = function (i) {
    return function (s) {
        return $foreign.drop($foreign.length(s) - i | 0)(s);
    };
};
var slice = function (b) {
    return function (e) {
        return function (s) {
            var l = $foreign.length(s);
            var norm = function (x) {
                if (x < 0) {
                    return l + x | 0;
                };
                if (Data_Boolean.otherwise) {
                    return x;
                };
                throw new Error("Failed pattern match at Data.String.CodeUnits (line 314, column 5 - line 315, column 27): " + [ x.constructor.name ]);
            };
            var e$prime = norm(e);
            var b$prime = norm(b);
            var $7 = b$prime < 0 || (b$prime >= l || (e$prime < 0 || (e$prime > l || b$prime > e$prime)));
            if ($7) {
                return Data_Maybe.Nothing.value;
            };
            return new Data_Maybe.Just($foreign["_slice"](b)(e)(s));
        };
    };
};
var lastIndexOf$prime = $foreign["_lastIndexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var lastIndexOf = $foreign["_lastIndexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripSuffix = function (v) {
    return function (str) {
        var v1 = lastIndexOf(v)(str);
        if (v1 instanceof Data_Maybe.Just && v1.value0 === ($foreign.length(str) - $foreign.length(v) | 0)) {
            return Data_Maybe.Just.create($foreign.take(v1.value0)(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var indexOf$prime = $foreign["_indexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var indexOf = $foreign["_indexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripPrefix = function (v) {
    return function (str) {
        var v1 = indexOf(v)(str);
        if (v1 instanceof Data_Maybe.Just && v1.value0 === 0) {
            return Data_Maybe.Just.create($foreign.drop($foreign.length(v))(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var dropWhile = function (p) {
    return function (s) {
        return $foreign.drop($foreign.countPrefix(p)(s))(s);
    };
};
var dropRight = function (i) {
    return function (s) {
        return $foreign.take($foreign.length(s) - i | 0)(s);
    };
};
var contains = function (pat) {
    return function ($16) {
        return Data_Maybe.isJust(indexOf(pat)($16));
    };
};
var charAt = $foreign["_charAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
    stripPrefix: stripPrefix,
    stripSuffix: stripSuffix,
    contains: contains,
    charAt: charAt,
    toChar: toChar,
    uncons: uncons,
    indexOf: indexOf,
    "indexOf'": indexOf$prime,
    lastIndexOf: lastIndexOf,
    "lastIndexOf'": lastIndexOf$prime,
    takeRight: takeRight,
    takeWhile: takeWhile,
    dropRight: dropRight,
    dropWhile: dropWhile,
    slice: slice,
    singleton: $foreign.singleton,
    fromCharArray: $foreign.fromCharArray,
    toCharArray: $foreign.toCharArray,
    length: $foreign.length,
    countPrefix: $foreign.countPrefix,
    take: $foreign.take,
    drop: $foreign.drop,
    splitAt: $foreign.splitAt
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Boolean/index.js":110,"../Data.Eq/index.js":135,"../Data.Function/index.js":145,"../Data.HeytingAlgebra/index.js":162,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ring/index.js":242,"../Data.Semiring/index.js":251,"../Data.String.Pattern/index.js":266,"../Data.String.Unsafe/index.js":271,"../Prelude/index.js":385,"./foreign.js":257}],259:[function(require,module,exports){
"use strict";

exports._localeCompare = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (s1) {
        return function (s2) {
          var result = s1.localeCompare(s2);
          return result < 0 ? lt : result > 0 ? gt : eq;
        };
      };
    };
  };
};

exports.replace = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(s1, s2);
    };
  };
};

exports.replaceAll = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2); // eslint-disable-line no-useless-escape
    };
  };
};

exports.split = function (sep) {
  return function (s) {
    return s.split(sep);
  };
};

exports.toLower = function (s) {
  return s.toLowerCase();
};

exports.toUpper = function (s) {
  return s.toUpperCase();
};

exports.trim = function (s) {
  return s.trim();
};

exports.joinWith = function (s) {
  return function (xs) {
    return xs.join(s);
  };
};

},{}],260:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_String_Pattern = require("../Data.String.Pattern/index.js");
var Prelude = require("../Prelude/index.js");
var $$null = function (s) {
    return s === "";
};
var localeCompare = $foreign["_localeCompare"](Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
module.exports = {
    "null": $$null,
    localeCompare: localeCompare,
    replace: $foreign.replace,
    replaceAll: $foreign.replaceAll,
    split: $foreign.split,
    toLower: $foreign.toLower,
    toUpper: $foreign.toUpper,
    trim: $foreign.trim,
    joinWith: $foreign.joinWith
};

},{"../Data.Eq/index.js":135,"../Data.Ordering/index.js":230,"../Data.String.Pattern/index.js":266,"../Prelude/index.js":385,"./foreign.js":259}],261:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Gen = require("../Control.Monad.Gen/index.js");
var Control_Monad_Gen_Class = require("../Control.Monad.Gen.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Data_Char_Gen = require("../Data.Char.Gen/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Prelude = require("../Prelude/index.js");
var genString = function (dictMonadRec) {
    return function (dictMonadGen) {
        return function (genChar) {
            return Control_Monad_Gen_Class.sized(dictMonadGen)(function (size) {
                return Control_Bind.bind((dictMonadGen.Monad0()).Bind1())(Control_Monad_Gen_Class.chooseInt(dictMonadGen)(1)(Data_Ord.max(Data_Ord.ordInt)(1)(size)))(function (v) {
                    return Control_Monad_Gen_Class.resize(dictMonadGen)(Data_Function["const"](v))(Data_Functor.map((((dictMonadGen.Monad0()).Bind1()).Apply0()).Functor0())(Data_String_CodeUnits.fromCharArray)(Control_Monad_Gen.unfoldable(dictMonadRec)(dictMonadGen)(Data_Unfoldable.unfoldableArray)(genChar)));
                });
            });
        };
    };
};
var genUnicodeString = function (dictMonadRec) {
    return function (dictMonadGen) {
        return genString(dictMonadRec)(dictMonadGen)(Data_Char_Gen.genUnicodeChar(dictMonadGen));
    };
};
var genDigitString = function (dictMonadRec) {
    return function (dictMonadGen) {
        return genString(dictMonadRec)(dictMonadGen)(Data_Char_Gen.genDigitChar(dictMonadGen));
    };
};
var genAsciiString$prime = function (dictMonadRec) {
    return function (dictMonadGen) {
        return genString(dictMonadRec)(dictMonadGen)(Data_Char_Gen["genAsciiChar'"](dictMonadGen));
    };
};
var genAsciiString = function (dictMonadRec) {
    return function (dictMonadGen) {
        return genString(dictMonadRec)(dictMonadGen)(Data_Char_Gen.genAsciiChar(dictMonadGen));
    };
};
var genAlphaUppercaseString = function (dictMonadRec) {
    return function (dictMonadGen) {
        return genString(dictMonadRec)(dictMonadGen)(Data_Char_Gen.genAlphaUppercase(dictMonadGen));
    };
};
var genAlphaString = function (dictMonadRec) {
    return function (dictMonadGen) {
        return genString(dictMonadRec)(dictMonadGen)(Data_Char_Gen.genAlpha(dictMonadGen));
    };
};
var genAlphaLowercaseString = function (dictMonadRec) {
    return function (dictMonadGen) {
        return genString(dictMonadRec)(dictMonadGen)(Data_Char_Gen.genAlphaLowercase(dictMonadGen));
    };
};
module.exports = {
    genString: genString,
    genUnicodeString: genUnicodeString,
    genAsciiString: genAsciiString,
    "genAsciiString'": genAsciiString$prime,
    genDigitString: genDigitString,
    genAlphaString: genAlphaString,
    genAlphaLowercaseString: genAlphaLowercaseString,
    genAlphaUppercaseString: genAlphaUppercaseString
};

},{"../Control.Bind/index.js":13,"../Control.Monad.Gen.Class/index.js":34,"../Control.Monad.Gen/index.js":36,"../Control.Monad.Rec.Class/index.js":43,"../Data.Char.Gen/index.js":116,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Ord/index.js":229,"../Data.String.CodeUnits/index.js":258,"../Data.Unfoldable/index.js":285,"../Prelude/index.js":385}],262:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Array_NonEmpty = require("../Data.Array.NonEmpty/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");
var Data_String_CodePoints = require("../Data.String.CodePoints/index.js");
var Data_String_NonEmpty_Internal = require("../Data.String.NonEmpty.Internal/index.js");
var Data_String_Pattern = require("../Data.String.Pattern/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var toNonEmptyString = Unsafe_Coerce.unsafeCoerce;
var snoc = function (c) {
    return function (s) {
        return toNonEmptyString(s + Data_String_CodePoints.singleton(c));
    };
};
var singleton = function ($12) {
    return toNonEmptyString(Data_String_CodePoints.singleton($12));
};
var liftS = Unsafe_Coerce.unsafeCoerce;
var takeWhile = function (f) {
    return function ($13) {
        return Data_String_NonEmpty_Internal.fromString(liftS(Data_String_CodePoints.takeWhile(f))($13));
    };
};
var lastIndexOf$prime = function (pat) {
    return function ($14) {
        return liftS(Data_String_CodePoints["lastIndexOf'"](pat)($14));
    };
};
var lastIndexOf = function ($15) {
    return liftS(Data_String_CodePoints.lastIndexOf($15));
};
var indexOf$prime = function (pat) {
    return function ($16) {
        return liftS(Data_String_CodePoints["indexOf'"](pat)($16));
    };
};
var indexOf = function ($17) {
    return liftS(Data_String_CodePoints.indexOf($17));
};
var fromNonEmptyString = Unsafe_Coerce.unsafeCoerce;
var length = function ($18) {
    return Data_String_CodePoints.length(fromNonEmptyString($18));
};
var splitAt = function (i) {
    return function (nes) {
        var v = Data_String_CodePoints.splitAt(i)(fromNonEmptyString(nes));
        return {
            before: Data_String_NonEmpty_Internal.fromString(v.before),
            after: Data_String_NonEmpty_Internal.fromString(v.after)
        };
    };
};
var take = function (i) {
    return function (nes) {
        var s = fromNonEmptyString(nes);
        var $9 = i < 1;
        if ($9) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(toNonEmptyString(Data_String_CodePoints.take(i)(s)));
    };
};
var toCodePointArray = function ($19) {
    return Data_String_CodePoints.toCodePointArray(fromNonEmptyString($19));
};
var toNonEmptyCodePointArray = function ($20) {
    return Data_Maybe.fromJust()(Data_Array_NonEmpty.fromArray(toCodePointArray($20)));
};
var uncons = function (nes) {
    var s = fromNonEmptyString(nes);
    return {
        head: Data_Maybe.fromJust()(Data_String_CodePoints.codePointAt(0)(s)),
        tail: Data_String_NonEmpty_Internal.fromString(Data_String_CodePoints.drop(1)(s))
    };
};
var fromFoldable1 = function (dictFoldable1) {
    return Data_Semigroup_Foldable.foldMap1(dictFoldable1)(Data_String_NonEmpty_Internal.semigroupNonEmptyString)(singleton);
};
var fromCodePointArray = function (v) {
    if (v.length === 0) {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just(toNonEmptyString(Data_String_CodePoints.fromCodePointArray(v)));
};
var fromNonEmptyCodePointArray = function ($21) {
    return Data_Maybe.fromJust()(fromCodePointArray(Data_Array_NonEmpty.toArray($21)));
};
var dropWhile = function (f) {
    return function ($22) {
        return Data_String_NonEmpty_Internal.fromString(liftS(Data_String_CodePoints.dropWhile(f))($22));
    };
};
var drop = function (i) {
    return function (nes) {
        var s = fromNonEmptyString(nes);
        var $11 = i >= Data_String_CodePoints.length(s);
        if ($11) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(toNonEmptyString(Data_String_CodePoints.drop(i)(s)));
    };
};
var countPrefix = function ($23) {
    return liftS(Data_String_CodePoints.countPrefix($23));
};
var cons = function (c) {
    return function (s) {
        return toNonEmptyString(Data_String_CodePoints.singleton(c) + s);
    };
};
var codePointAt = function ($24) {
    return liftS(Data_String_CodePoints.codePointAt($24));
};
module.exports = {
    fromCodePointArray: fromCodePointArray,
    fromNonEmptyCodePointArray: fromNonEmptyCodePointArray,
    singleton: singleton,
    cons: cons,
    snoc: snoc,
    fromFoldable1: fromFoldable1,
    toCodePointArray: toCodePointArray,
    toNonEmptyCodePointArray: toNonEmptyCodePointArray,
    codePointAt: codePointAt,
    indexOf: indexOf,
    "indexOf'": indexOf$prime,
    lastIndexOf: lastIndexOf,
    "lastIndexOf'": lastIndexOf$prime,
    uncons: uncons,
    length: length,
    take: take,
    takeWhile: takeWhile,
    drop: drop,
    dropWhile: dropWhile,
    countPrefix: countPrefix,
    splitAt: splitAt
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Array.NonEmpty/index.js":93,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Semigroup.Foldable/index.js":244,"../Data.Semigroup/index.js":248,"../Data.String.CodePoints/index.js":256,"../Data.String.NonEmpty.Internal/index.js":264,"../Data.String.Pattern/index.js":266,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425}],263:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Array_NonEmpty = require("../Data.Array.NonEmpty/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");
var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");
var Data_String_NonEmpty_Internal = require("../Data.String.NonEmpty.Internal/index.js");
var Data_String_Pattern = require("../Data.String.Pattern/index.js");
var Data_String_Unsafe = require("../Data.String.Unsafe/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var toNonEmptyString = Unsafe_Coerce.unsafeCoerce;
var snoc = function (c) {
    return function (s) {
        return toNonEmptyString(s + Data_String_CodeUnits.singleton(c));
    };
};
var singleton = function ($13) {
    return toNonEmptyString(Data_String_CodeUnits.singleton($13));
};
var liftS = Unsafe_Coerce.unsafeCoerce;
var takeWhile = function (f) {
    return function ($14) {
        return Data_String_NonEmpty_Internal.fromString(liftS(Data_String_CodeUnits.takeWhile(f))($14));
    };
};
var lastIndexOf$prime = function (pat) {
    return function ($15) {
        return liftS(Data_String_CodeUnits["lastIndexOf'"](pat)($15));
    };
};
var lastIndexOf = function ($16) {
    return liftS(Data_String_CodeUnits.lastIndexOf($16));
};
var indexOf$prime = function (pat) {
    return function ($17) {
        return liftS(Data_String_CodeUnits["indexOf'"](pat)($17));
    };
};
var indexOf = function ($18) {
    return liftS(Data_String_CodeUnits.indexOf($18));
};
var fromNonEmptyString = Unsafe_Coerce.unsafeCoerce;
var length = function ($19) {
    return Data_String_CodeUnits.length(fromNonEmptyString($19));
};
var splitAt = function (i) {
    return function (nes) {
        var v = Data_String_CodeUnits.splitAt(i)(fromNonEmptyString(nes));
        return {
            before: Data_String_NonEmpty_Internal.fromString(v.before),
            after: Data_String_NonEmpty_Internal.fromString(v.after)
        };
    };
};
var take = function (i) {
    return function (nes) {
        var s = fromNonEmptyString(nes);
        var $8 = i < 1;
        if ($8) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(toNonEmptyString(Data_String_CodeUnits.take(i)(s)));
    };
};
var takeRight = function (i) {
    return function (nes) {
        var s = fromNonEmptyString(nes);
        var $9 = i < 1;
        if ($9) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(toNonEmptyString(Data_String_CodeUnits.takeRight(i)(s)));
    };
};
var toChar = function ($20) {
    return Data_String_CodeUnits.toChar(fromNonEmptyString($20));
};
var toCharArray = function ($21) {
    return Data_String_CodeUnits.toCharArray(fromNonEmptyString($21));
};
var toNonEmptyCharArray = function ($22) {
    return Data_Maybe.fromJust()(Data_Array_NonEmpty.fromArray(toCharArray($22)));
};
var uncons = function (nes) {
    var s = fromNonEmptyString(nes);
    return {
        head: Data_String_Unsafe.charAt(0)(s),
        tail: Data_String_NonEmpty_Internal.fromString(Data_String_CodeUnits.drop(1)(s))
    };
};
var fromFoldable1 = function (dictFoldable1) {
    return function ($23) {
        return Data_Semigroup_Foldable.fold1(dictFoldable1)(Data_String_NonEmpty_Internal.semigroupNonEmptyString)($23);
    };
};
var fromCharArray = function (v) {
    if (v.length === 0) {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just(toNonEmptyString(Data_String_CodeUnits.fromCharArray(v)));
};
var fromNonEmptyCharArray = function ($24) {
    return Data_Maybe.fromJust()(fromCharArray(Data_Array_NonEmpty.toArray($24)));
};
var dropWhile = function (f) {
    return function ($25) {
        return Data_String_NonEmpty_Internal.fromString(liftS(Data_String_CodeUnits.dropWhile(f))($25));
    };
};
var dropRight = function (i) {
    return function (nes) {
        var s = fromNonEmptyString(nes);
        var $11 = i >= Data_String_CodeUnits.length(s);
        if ($11) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(toNonEmptyString(Data_String_CodeUnits.dropRight(i)(s)));
    };
};
var drop = function (i) {
    return function (nes) {
        var s = fromNonEmptyString(nes);
        var $12 = i >= Data_String_CodeUnits.length(s);
        if ($12) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(toNonEmptyString(Data_String_CodeUnits.drop(i)(s)));
    };
};
var countPrefix = function ($26) {
    return liftS(Data_String_CodeUnits.countPrefix($26));
};
var cons = function (c) {
    return function (s) {
        return toNonEmptyString(Data_String_CodeUnits.singleton(c) + s);
    };
};
var charAt = function ($27) {
    return liftS(Data_String_CodeUnits.charAt($27));
};
module.exports = {
    fromCharArray: fromCharArray,
    fromNonEmptyCharArray: fromNonEmptyCharArray,
    singleton: singleton,
    cons: cons,
    snoc: snoc,
    fromFoldable1: fromFoldable1,
    toCharArray: toCharArray,
    toNonEmptyCharArray: toNonEmptyCharArray,
    charAt: charAt,
    toChar: toChar,
    indexOf: indexOf,
    "indexOf'": indexOf$prime,
    lastIndexOf: lastIndexOf,
    "lastIndexOf'": lastIndexOf$prime,
    uncons: uncons,
    length: length,
    take: take,
    takeRight: takeRight,
    takeWhile: takeWhile,
    drop: drop,
    dropRight: dropRight,
    dropWhile: dropWhile,
    countPrefix: countPrefix,
    splitAt: splitAt
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Array.NonEmpty/index.js":93,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Semigroup.Foldable/index.js":244,"../Data.Semigroup/index.js":248,"../Data.String.CodeUnits/index.js":258,"../Data.String.NonEmpty.Internal/index.js":264,"../Data.String.Pattern/index.js":266,"../Data.String.Unsafe/index.js":271,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425}],264:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Bind = require("../Control.Bind/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_String = require("../Data.String/index.js");
var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Data_String_Pattern = require("../Data.String.Pattern/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var NonEmptyString = function (x) {
    return x;
};
var NonEmptyReplacement = function (x) {
    return x;
};
var MakeNonEmpty = function (nes) {
    this.nes = nes;
};
var toUpper = function (v) {
    return Data_String_Common.toUpper(v);
};
var toString = function (v) {
    return v;
};
var toLower = function (v) {
    return Data_String_Common.toLower(v);
};
var showNonEmptyString = new Data_Show.Show(function (v) {
    return "(NonEmptyString.unsafeFromString " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var showNonEmptyReplacement = new Data_Show.Show(function (v) {
    return "(NonEmptyReplacement " + (Data_Show.show(showNonEmptyString)(v) + ")");
});
var semigroupNonEmptyString = Data_Semigroup.semigroupString;
var semigroupNonEmptyReplacement = semigroupNonEmptyString;
var replaceAll = function (pat) {
    return function (v) {
        return function (v1) {
            return Data_String_Common.replaceAll(pat)(v)(v1);
        };
    };
};
var replace = function (pat) {
    return function (v) {
        return function (v1) {
            return Data_String_Common.replace(pat)(v)(v1);
        };
    };
};
var prependString = function (s1) {
    return function (v) {
        return s1 + v;
    };
};
var ordNonEmptyString = Data_Ord.ordString;
var ordNonEmptyReplacement = ordNonEmptyString;
var nonEmptyNonEmpty = function (dictIsSymbol) {
    return new MakeNonEmpty(function (p) {
        return Data_Symbol.reflectSymbol(dictIsSymbol)(p);
    });
};
var nes = function (dict) {
    return dict.nes;
};
var makeNonEmptyBad = function (dictFail) {
    return new MakeNonEmpty(function (v) {
        return "";
    });
};
var localeCompare = function (v) {
    return function (v1) {
        return Data_String_Common.localeCompare(v)(v1);
    };
};
var liftS = function (f) {
    return function (v) {
        return f(v);
    };
};
var joinWith1 = function (dictFoldable1) {
    return function (v) {
        return function ($46) {
            return NonEmptyString(Data_Foldable.intercalate(dictFoldable1.Foldable0())(Data_Monoid.monoidString)(v)($46));
        };
    };
};
var joinWith = function (dictFoldable) {
    return function (splice) {
        return function ($47) {
            return Data_Foldable.intercalate(dictFoldable)(Data_Monoid.monoidString)(splice)($47);
        };
    };
};
var join1With = function (dictFoldable1) {
    return function (splice) {
        return function ($48) {
            return NonEmptyString(joinWith(dictFoldable1.Foldable0())(splice)($48));
        };
    };
};
var fromString = function (v) {
    if (v === "") {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just(v);
};
var stripPrefix = function (pat) {
    return Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(fromString)(liftS(Data_String_CodeUnits.stripPrefix(pat)));
};
var stripSuffix = function (pat) {
    return Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(fromString)(liftS(Data_String_CodeUnits.stripSuffix(pat)));
};
var trim = function (v) {
    return fromString(Data_String_Common.trim(v));
};
var unsafeFromString = function (dictPartial) {
    return function ($49) {
        return Data_Maybe.fromJust(dictPartial)(fromString($49));
    };
};
var eqNonEmptyString = Data_Eq.eqString;
var eqNonEmptyReplacement = eqNonEmptyString;
var contains = function ($50) {
    return liftS(Data_String_CodeUnits.contains($50));
};
var appendString = function (v) {
    return function (s2) {
        return v + s2;
    };
};
module.exports = {
    nes: nes,
    NonEmptyString: NonEmptyString,
    MakeNonEmpty: MakeNonEmpty,
    NonEmptyReplacement: NonEmptyReplacement,
    fromString: fromString,
    unsafeFromString: unsafeFromString,
    toString: toString,
    appendString: appendString,
    prependString: prependString,
    stripPrefix: stripPrefix,
    stripSuffix: stripSuffix,
    contains: contains,
    localeCompare: localeCompare,
    replace: replace,
    replaceAll: replaceAll,
    toLower: toLower,
    toUpper: toUpper,
    trim: trim,
    joinWith: joinWith,
    join1With: join1With,
    joinWith1: joinWith1,
    liftS: liftS,
    eqNonEmptyString: eqNonEmptyString,
    ordNonEmptyString: ordNonEmptyString,
    semigroupNonEmptyString: semigroupNonEmptyString,
    showNonEmptyString: showNonEmptyString,
    makeNonEmptyBad: makeNonEmptyBad,
    nonEmptyNonEmpty: nonEmptyNonEmpty,
    eqNonEmptyReplacement: eqNonEmptyReplacement,
    ordNonEmptyReplacement: ordNonEmptyReplacement,
    semigroupNonEmptyReplacement: semigroupNonEmptyReplacement,
    showNonEmptyReplacement: showNonEmptyReplacement
};

},{"../Control.Bind/index.js":13,"../Control.Semigroupoid/index.js":61,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Ord/index.js":229,"../Data.Semigroup.Foldable/index.js":244,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Data.String.CodeUnits/index.js":258,"../Data.String.Common/index.js":260,"../Data.String.Pattern/index.js":266,"../Data.String/index.js":272,"../Data.Symbol/index.js":274,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425}],265:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_String_NonEmpty_CodePoints = require("../Data.String.NonEmpty.CodePoints/index.js");
var Data_String_NonEmpty_Internal = require("../Data.String.NonEmpty.Internal/index.js");
var Data_String_Pattern = require("../Data.String.Pattern/index.js");
module.exports = {};

},{"../Data.String.NonEmpty.CodePoints/index.js":262,"../Data.String.NonEmpty.Internal/index.js":264,"../Data.String.Pattern/index.js":266}],266:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Replacement = function (x) {
    return x;
};
var Pattern = function (x) {
    return x;
};
var showReplacement = new Data_Show.Show(function (v) {
    return "(Replacement " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var showPattern = new Data_Show.Show(function (v) {
    return "(Pattern " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var newtypeReplacement = new Data_Newtype.Newtype(function (n) {
    return n;
}, Replacement);
var newtypePattern = new Data_Newtype.Newtype(function (n) {
    return n;
}, Pattern);
var eqReplacement = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordReplacement = new Data_Ord.Ord(function () {
    return eqReplacement;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
var eqPattern = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordPattern = new Data_Ord.Ord(function () {
    return eqPattern;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
module.exports = {
    Pattern: Pattern,
    Replacement: Replacement,
    eqPattern: eqPattern,
    ordPattern: ordPattern,
    newtypePattern: newtypePattern,
    showPattern: showPattern,
    eqReplacement: eqReplacement,
    ordReplacement: ordReplacement,
    newtypeReplacement: newtypeReplacement,
    showReplacement: showReplacement
};

},{"../Data.Eq/index.js":135,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Prelude/index.js":385}],267:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_String = require("../Data.String/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Prelude = require("../Prelude/index.js");
var RegexFlags = (function () {
    function RegexFlags(value0) {
        this.value0 = value0;
    };
    RegexFlags.create = function (value0) {
        return new RegexFlags(value0);
    };
    return RegexFlags;
})();
var unicode = new RegexFlags({
    global: false,
    ignoreCase: false,
    multiline: false,
    sticky: false,
    unicode: true
});
var sticky = new RegexFlags({
    global: false,
    ignoreCase: false,
    multiline: false,
    sticky: true,
    unicode: false
});
var showRegexFlags = new Data_Show.Show(function (v) {
    var usedFlags = Data_Semigroup.append(Data_Semigroup.semigroupArray)([  ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.voidLeft(Data_Functor.functorArray)(Control_MonadZero.guard(Control_MonadZero.monadZeroArray)(v.value0.global))("global"))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.voidLeft(Data_Functor.functorArray)(Control_MonadZero.guard(Control_MonadZero.monadZeroArray)(v.value0.ignoreCase))("ignoreCase"))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.voidLeft(Data_Functor.functorArray)(Control_MonadZero.guard(Control_MonadZero.monadZeroArray)(v.value0.multiline))("multiline"))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.voidLeft(Data_Functor.functorArray)(Control_MonadZero.guard(Control_MonadZero.monadZeroArray)(v.value0.sticky))("sticky"))(Data_Functor.voidLeft(Data_Functor.functorArray)(Control_MonadZero.guard(Control_MonadZero.monadZeroArray)(v.value0.unicode))("unicode"))))));
    var $6 = Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqString))(usedFlags)([  ]);
    if ($6) {
        return "noFlags";
    };
    return "(" + (Data_String_Common.joinWith(" <> ")(usedFlags) + ")");
});
var semigroupRegexFlags = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return new RegexFlags({
            global: v.value0.global || v1.value0.global,
            ignoreCase: v.value0.ignoreCase || v1.value0.ignoreCase,
            multiline: v.value0.multiline || v1.value0.multiline,
            sticky: v.value0.sticky || v1.value0.sticky,
            unicode: v.value0.unicode || v1.value0.unicode
        });
    };
});
var noFlags = new RegexFlags({
    global: false,
    ignoreCase: false,
    multiline: false,
    sticky: false,
    unicode: false
});
var multiline = new RegexFlags({
    global: false,
    ignoreCase: false,
    multiline: true,
    sticky: false,
    unicode: false
});
var monoidRegexFlags = new Data_Monoid.Monoid(function () {
    return semigroupRegexFlags;
}, noFlags);
var ignoreCase = new RegexFlags({
    global: false,
    ignoreCase: true,
    multiline: false,
    sticky: false,
    unicode: false
});
var global = new RegexFlags({
    global: true,
    ignoreCase: false,
    multiline: false,
    sticky: false,
    unicode: false
});
var eqRegexFlags = new Data_Eq.Eq(function (v) {
    return function (v1) {
        return v.value0.global === v1.value0.global && (v.value0.ignoreCase === v1.value0.ignoreCase && (v.value0.multiline === v1.value0.multiline && (v.value0.sticky === v1.value0.sticky && v.value0.unicode === v1.value0.unicode)));
    };
});
module.exports = {
    RegexFlags: RegexFlags,
    noFlags: noFlags,
    global: global,
    ignoreCase: ignoreCase,
    multiline: multiline,
    sticky: sticky,
    unicode: unicode,
    semigroupRegexFlags: semigroupRegexFlags,
    monoidRegexFlags: monoidRegexFlags,
    eqRegexFlags: eqRegexFlags,
    showRegexFlags: showRegexFlags
};

},{"../Control.MonadPlus/index.js":56,"../Control.MonadZero/index.js":57,"../Data.Eq/index.js":135,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Monoid/index.js":218,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Data.String.Common/index.js":260,"../Data.String/index.js":272,"../Prelude/index.js":385}],268:[function(require,module,exports){
"use strict";

exports["showRegex'"] = function (r) {
  return "" + r;
};

exports["regex'"] = function (left) {
  return function (right) {
    return function (s1) {
      return function (s2) {
        try {
          return right(new RegExp(s1, s2));
        } catch (e) {
          return left(e.message);
        }
      };
    };
  };
};

exports.source = function (r) {
  return r.source;
};

exports["flags'"] = function (r) {
  return {
    multiline: r.multiline,
    ignoreCase: r.ignoreCase,
    global: r.global,
    sticky: !!r.sticky,
    unicode: !!r.unicode
  };
};

exports.test = function (r) {
  return function (s) {
    var lastIndex = r.lastIndex;
    var result = r.test(s);
    r.lastIndex = lastIndex;
    return result;
  };
};

exports._match = function (just) {
  return function (nothing) {
    return function (r) {
      return function (s) {
        var m = s.match(r);
        if (m == null || m.length === 0) {
          return nothing;
        } else {
          for (var i = 0; i < m.length; i++) {
            m[i] = m[i] == null ? nothing : just(m[i]);
          }
          return just(m);
        }
      };
    };
  };
};

exports.replace = function (r) {
  return function (s1) {
    return function (s2) {
      return s2.replace(r, s1);
    };
  };
};

exports["replace'"] = function (r) {
  return function (f) {
    return function (s2) {
      return s2.replace(r, function (match) {
        return f(match)(Array.prototype.splice.call(arguments, 1, arguments.length - 3));
      });
    };
  };
};

exports._search = function (just) {
  return function (nothing) {
    return function (r) {
      return function (s) {
        var result = s.search(r);
        return result === -1 ? nothing : just(result);
      };
    };
  };
};

exports.split = function (r) {
  return function (s) {
    return s.split(r);
  };
};

},{}],269:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Array_NonEmpty = require("../Data.Array.NonEmpty/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_String = require("../Data.String/index.js");
var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");
var Data_String_Pattern = require("../Data.String.Pattern/index.js");
var Data_String_Regex_Flags = require("../Data.String.Regex.Flags/index.js");
var Prelude = require("../Prelude/index.js");
var showRegex = new Data_Show.Show($foreign["showRegex'"]);
var search = $foreign["_search"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var renderFlags = function (v) {
    return (function () {
        if (v.value0.global) {
            return "g";
        };
        return "";
    })() + ((function () {
        if (v.value0.ignoreCase) {
            return "i";
        };
        return "";
    })() + ((function () {
        if (v.value0.multiline) {
            return "m";
        };
        return "";
    })() + ((function () {
        if (v.value0.sticky) {
            return "y";
        };
        return "";
    })() + (function () {
        if (v.value0.unicode) {
            return "u";
        };
        return "";
    })())));
};
var regex = function (s) {
    return function (f) {
        return $foreign["regex'"](Data_Either.Left.create)(Data_Either.Right.create)(s)(renderFlags(f));
    };
};
var parseFlags = function (s) {
    return new Data_String_Regex_Flags.RegexFlags({
        global: Data_String_CodeUnits.contains("g")(s),
        ignoreCase: Data_String_CodeUnits.contains("i")(s),
        multiline: Data_String_CodeUnits.contains("m")(s),
        sticky: Data_String_CodeUnits.contains("y")(s),
        unicode: Data_String_CodeUnits.contains("u")(s)
    });
};
var match = $foreign["_match"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var flags = function ($8) {
    return Data_String_Regex_Flags.RegexFlags.create($foreign["flags'"]($8));
};
module.exports = {
    regex: regex,
    flags: flags,
    renderFlags: renderFlags,
    parseFlags: parseFlags,
    match: match,
    search: search,
    showRegex: showRegex,
    source: $foreign.source,
    test: $foreign.test,
    replace: $foreign.replace,
    "replace'": $foreign["replace'"],
    split: $foreign.split
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Array.NonEmpty/index.js":93,"../Data.Either/index.js":131,"../Data.Function/index.js":145,"../Data.Maybe/index.js":210,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Data.String.CodeUnits/index.js":258,"../Data.String.Pattern/index.js":266,"../Data.String.Regex.Flags/index.js":267,"../Data.String/index.js":272,"../Prelude/index.js":385,"./foreign.js":268}],270:[function(require,module,exports){
"use strict";

exports.charAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charAt(i);
    throw new Error("Data.String.Unsafe.charAt: Invalid index.");
  };
};

exports.char = function (s) {
  if (s.length === 1) return s.charAt(0);
  throw new Error("Data.String.Unsafe.char: Expected string of length 1.");
};

},{}],271:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
module.exports = {
    "char": $foreign["char"],
    charAt: $foreign.charAt
};

},{"./foreign.js":270}],272:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_String_CodePoints = require("../Data.String.CodePoints/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Data_String_Pattern = require("../Data.String.Pattern/index.js");
module.exports = {};

},{"../Data.String.CodePoints/index.js":256,"../Data.String.Common/index.js":260,"../Data.String.Pattern/index.js":266}],273:[function(require,module,exports){
"use strict";

// module Data.Symbol

exports.unsafeCoerce = function (arg) {
  return arg;
};


},{}],274:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var SProxy = (function () {
    function SProxy() {

    };
    SProxy.value = new SProxy();
    return SProxy;
})();
var IsSymbol = function (reflectSymbol) {
    this.reflectSymbol = reflectSymbol;
};
var reifySymbol = function (s) {
    return function (f) {
        return $foreign.unsafeCoerce(function (dictIsSymbol) {
            return f(dictIsSymbol);
        })({
            reflectSymbol: function (v) {
                return s;
            }
        })(SProxy.value);
    };
};
var reflectSymbol = function (dict) {
    return dict.reflectSymbol;
};
module.exports = {
    IsSymbol: IsSymbol,
    reflectSymbol: reflectSymbol,
    reifySymbol: reifySymbol,
    SProxy: SProxy
};

},{"./foreign.js":273}],275:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Second = function (x) {
    return x;
};
var Minute = function (x) {
    return x;
};
var Millisecond = function (x) {
    return x;
};
var Hour = function (x) {
    return x;
};
var showSecond = new Data_Show.Show(function (v) {
    return "(Second " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var showMinute = new Data_Show.Show(function (v) {
    return "(Minute " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var showMillisecond = new Data_Show.Show(function (v) {
    return "(Millisecond " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var showHour = new Data_Show.Show(function (v) {
    return "(Hour " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var ordSecond = Data_Ord.ordInt;
var ordMinute = Data_Ord.ordInt;
var ordMillisecond = Data_Ord.ordInt;
var ordHour = Data_Ord.ordInt;
var eqSecond = Data_Eq.eqInt;
var eqMinute = Data_Eq.eqInt;
var eqMillisecond = Data_Eq.eqInt;
var eqHour = Data_Eq.eqInt;
var boundedSecond = new Data_Bounded.Bounded(function () {
    return ordSecond;
}, 0, 59);
var boundedMinute = new Data_Bounded.Bounded(function () {
    return ordMinute;
}, 0, 59);
var boundedMillisecond = new Data_Bounded.Bounded(function () {
    return ordMillisecond;
}, 0, 999);
var boundedHour = new Data_Bounded.Bounded(function () {
    return ordHour;
}, 0, 23);
var boundedEnumSecond = new Data_Enum.BoundedEnum(function () {
    return boundedSecond;
}, function () {
    return enumSecond;
}, 60, function (v) {
    return v;
}, function (n) {
    if (n >= 0 && n <= 59) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Time.Component (line 90, column 1 - line 90, column 49): " + [ n.constructor.name ]);
});
var enumSecond = new Data_Enum.Enum(function () {
    return ordSecond;
}, function ($28) {
    return Data_Enum.toEnum(boundedEnumSecond)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumSecond)($28)));
}, function ($29) {
    return Data_Enum.toEnum(boundedEnumSecond)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumSecond)($29)));
});
var boundedEnumMinute = new Data_Enum.BoundedEnum(function () {
    return boundedMinute;
}, function () {
    return enumMinute;
}, 60, function (v) {
    return v;
}, function (n) {
    if (n >= 0 && n <= 59) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Time.Component (line 61, column 1 - line 61, column 49): " + [ n.constructor.name ]);
});
var enumMinute = new Data_Enum.Enum(function () {
    return ordMinute;
}, function ($30) {
    return Data_Enum.toEnum(boundedEnumMinute)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMinute)($30)));
}, function ($31) {
    return Data_Enum.toEnum(boundedEnumMinute)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMinute)($31)));
});
var boundedEnumMillisecond = new Data_Enum.BoundedEnum(function () {
    return boundedMillisecond;
}, function () {
    return enumMillisecond;
}, 1000, function (v) {
    return v;
}, function (n) {
    if (n >= 0 && n <= 999) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Time.Component (line 120, column 1 - line 120, column 59): " + [ n.constructor.name ]);
});
var enumMillisecond = new Data_Enum.Enum(function () {
    return ordMillisecond;
}, function ($32) {
    return Data_Enum.toEnum(boundedEnumMillisecond)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMillisecond)($32)));
}, function ($33) {
    return Data_Enum.toEnum(boundedEnumMillisecond)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMillisecond)($33)));
});
var boundedEnumHour = new Data_Enum.BoundedEnum(function () {
    return boundedHour;
}, function () {
    return enumHour;
}, 24, function (v) {
    return v;
}, function (n) {
    if (n >= 0 && n <= 23) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Time.Component (line 32, column 1 - line 32, column 45): " + [ n.constructor.name ]);
});
var enumHour = new Data_Enum.Enum(function () {
    return ordHour;
}, function ($34) {
    return Data_Enum.toEnum(boundedEnumHour)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumHour)($34)));
}, function ($35) {
    return Data_Enum.toEnum(boundedEnumHour)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumHour)($35)));
});
module.exports = {
    eqHour: eqHour,
    ordHour: ordHour,
    boundedHour: boundedHour,
    enumHour: enumHour,
    boundedEnumHour: boundedEnumHour,
    showHour: showHour,
    eqMinute: eqMinute,
    ordMinute: ordMinute,
    boundedMinute: boundedMinute,
    enumMinute: enumMinute,
    boundedEnumMinute: boundedEnumMinute,
    showMinute: showMinute,
    eqSecond: eqSecond,
    ordSecond: ordSecond,
    boundedSecond: boundedSecond,
    enumSecond: enumSecond,
    boundedEnumSecond: boundedEnumSecond,
    showSecond: showSecond,
    eqMillisecond: eqMillisecond,
    ordMillisecond: ordMillisecond,
    boundedMillisecond: boundedMillisecond,
    enumMillisecond: enumMillisecond,
    boundedEnumMillisecond: boundedEnumMillisecond,
    showMillisecond: showMillisecond
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Boolean/index.js":110,"../Data.Bounded/index.js":113,"../Data.Enum/index.js":133,"../Data.Eq/index.js":135,"../Data.HeytingAlgebra/index.js":162,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Prelude/index.js":385}],276:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Seconds = function (x) {
    return x;
};
var Minutes = function (x) {
    return x;
};
var Milliseconds = function (x) {
    return x;
};
var Hours = function (x) {
    return x;
};
var Days = function (x) {
    return x;
};
var Duration = function (fromDuration, toDuration) {
    this.fromDuration = fromDuration;
    this.toDuration = toDuration;
};
var toDuration = function (dict) {
    return dict.toDuration;
};
var showSeconds = new Data_Show.Show(function (v) {
    return "(Seconds " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showMinutes = new Data_Show.Show(function (v) {
    return "(Minutes " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showMilliseconds = new Data_Show.Show(function (v) {
    return "(Milliseconds " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showHours = new Data_Show.Show(function (v) {
    return "(Hours " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showDays = new Data_Show.Show(function (v) {
    return "(Days " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var semigroupSeconds = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return v + v1;
    };
});
var semigroupMinutes = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return v + v1;
    };
});
var semigroupMilliseconds = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return v + v1;
    };
});
var semigroupHours = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return v + v1;
    };
});
var semigroupDays = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return v + v1;
    };
});
var ordSeconds = Data_Ord.ordNumber;
var ordMinutes = Data_Ord.ordNumber;
var ordMilliseconds = Data_Ord.ordNumber;
var ordHours = Data_Ord.ordNumber;
var ordDays = Data_Ord.ordNumber;
var newtypeSeconds = new Data_Newtype.Newtype(function (n) {
    return n;
}, Seconds);
var newtypeMinutes = new Data_Newtype.Newtype(function (n) {
    return n;
}, Minutes);
var newtypeMilliseconds = new Data_Newtype.Newtype(function (n) {
    return n;
}, Milliseconds);
var newtypeHours = new Data_Newtype.Newtype(function (n) {
    return n;
}, Hours);
var newtypeDays = new Data_Newtype.Newtype(function (n) {
    return n;
}, Days);
var monoidSeconds = new Data_Monoid.Monoid(function () {
    return semigroupSeconds;
}, 0.0);
var monoidMinutes = new Data_Monoid.Monoid(function () {
    return semigroupMinutes;
}, 0.0);
var monoidMilliseconds = new Data_Monoid.Monoid(function () {
    return semigroupMilliseconds;
}, 0.0);
var monoidHours = new Data_Monoid.Monoid(function () {
    return semigroupHours;
}, 0.0);
var monoidDays = new Data_Monoid.Monoid(function () {
    return semigroupDays;
}, 0.0);
var fromDuration = function (dict) {
    return dict.fromDuration;
};
var negateDuration = function (dictDuration) {
    return function ($56) {
        return toDuration(dictDuration)(Data_Newtype.over(newtypeMilliseconds)(newtypeMilliseconds)(Milliseconds)(Data_Ring.negate(Data_Ring.ringNumber))(fromDuration(dictDuration)($56)));
    };
};
var eqSeconds = Data_Eq.eqNumber;
var eqMinutes = Data_Eq.eqNumber;
var eqMilliseconds = Data_Eq.eqNumber;
var eqHours = Data_Eq.eqNumber;
var eqDays = Data_Eq.eqNumber;
var durationSeconds = new Duration(Data_Newtype.over(newtypeSeconds)(newtypeMilliseconds)(Seconds)(function (v) {
    return v * 1000.0;
}), Data_Newtype.over(newtypeMilliseconds)(newtypeSeconds)(Milliseconds)(function (v) {
    return v / 1000.0;
}));
var durationMinutes = new Duration(Data_Newtype.over(newtypeMinutes)(newtypeMilliseconds)(Minutes)(function (v) {
    return v * 60000.0;
}), Data_Newtype.over(newtypeMilliseconds)(newtypeMinutes)(Milliseconds)(function (v) {
    return v / 60000.0;
}));
var durationMilliseconds = new Duration(Control_Category.identity(Control_Category.categoryFn), Control_Category.identity(Control_Category.categoryFn));
var durationHours = new Duration(Data_Newtype.over(newtypeHours)(newtypeMilliseconds)(Hours)(function (v) {
    return v * 3600000.0;
}), Data_Newtype.over(newtypeMilliseconds)(newtypeHours)(Milliseconds)(function (v) {
    return v / 3600000.0;
}));
var durationDays = new Duration(Data_Newtype.over(newtypeDays)(newtypeMilliseconds)(Days)(function (v) {
    return v * 8.64e7;
}), Data_Newtype.over(newtypeMilliseconds)(newtypeDays)(Milliseconds)(function (v) {
    return v / 8.64e7;
}));
var convertDuration = function (dictDuration) {
    return function (dictDuration1) {
        return function ($57) {
            return toDuration(dictDuration1)(fromDuration(dictDuration)($57));
        };
    };
};
module.exports = {
    fromDuration: fromDuration,
    toDuration: toDuration,
    Milliseconds: Milliseconds,
    Seconds: Seconds,
    Minutes: Minutes,
    Hours: Hours,
    Days: Days,
    Duration: Duration,
    convertDuration: convertDuration,
    negateDuration: negateDuration,
    newtypeMilliseconds: newtypeMilliseconds,
    eqMilliseconds: eqMilliseconds,
    ordMilliseconds: ordMilliseconds,
    semigroupMilliseconds: semigroupMilliseconds,
    monoidMilliseconds: monoidMilliseconds,
    showMilliseconds: showMilliseconds,
    newtypeSeconds: newtypeSeconds,
    eqSeconds: eqSeconds,
    ordSeconds: ordSeconds,
    semigroupSeconds: semigroupSeconds,
    monoidSeconds: monoidSeconds,
    showSeconds: showSeconds,
    newtypeMinutes: newtypeMinutes,
    eqMinutes: eqMinutes,
    ordMinutes: ordMinutes,
    semigroupMinutes: semigroupMinutes,
    monoidMinutes: monoidMinutes,
    showMinutes: showMinutes,
    newtypeHours: newtypeHours,
    eqHours: eqHours,
    ordHours: ordHours,
    semigroupHours: semigroupHours,
    monoidHours: monoidHours,
    showHours: showHours,
    newtypeDays: newtypeDays,
    eqDays: eqDays,
    ordDays: ordDays,
    semigroupDays: semigroupDays,
    monoidDays: monoidDays,
    showDays: showDays,
    durationMilliseconds: durationMilliseconds,
    durationSeconds: durationSeconds,
    durationMinutes: durationMinutes,
    durationHours: durationHours,
    durationDays: durationDays
};

},{"../Control.Category/index.js":14,"../Control.Semigroupoid/index.js":61,"../Data.Eq/index.js":135,"../Data.EuclideanRing/index.js":137,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Prelude/index.js":385}],277:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Apply = require("../Control.Apply/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Time_Component = require("../Data.Time.Component/index.js");
var Data_Time_Duration = require("../Data.Time.Duration/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var $$Math = require("../Math/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var Time = (function () {
    function Time(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Time.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Time(value0, value1, value2, value3);
                };
            };
        };
    };
    return Time;
})();
var showTime = new Data_Show.Show(function (v) {
    return "(Time " + (Data_Show.show(Data_Time_Component.showHour)(v.value0) + (" " + (Data_Show.show(Data_Time_Component.showMinute)(v.value1) + (" " + (Data_Show.show(Data_Time_Component.showSecond)(v.value2) + (" " + (Data_Show.show(Data_Time_Component.showMillisecond)(v.value3) + ")")))))));
});
var setSecond = function (s) {
    return function (v) {
        return new Time(v.value0, v.value1, s, v.value3);
    };
};
var setMinute = function (m) {
    return function (v) {
        return new Time(v.value0, m, v.value2, v.value3);
    };
};
var setMillisecond = function (ms) {
    return function (v) {
        return new Time(v.value0, v.value1, v.value2, ms);
    };
};
var setHour = function (h) {
    return function (v) {
        return new Time(h, v.value1, v.value2, v.value3);
    };
};
var second = function (v) {
    return v.value2;
};
var minute = function (v) {
    return v.value1;
};
var millisecond = function (v) {
    return v.value3;
};
var millisToTime = function (v) {
    var hours = $$Math.floor(v / 3600000.0);
    var minutes = $$Math.floor((v - hours * 3600000.0) / 60000.0);
    var seconds = $$Math.floor((v - (hours * 3600000.0 + minutes * 60000.0)) / 1000.0);
    var milliseconds = v - (hours * 3600000.0 + minutes * 60000.0 + seconds * 1000.0);
    return Data_Maybe.fromJust()(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Time.create)(Data_Enum.toEnum(Data_Time_Component.boundedEnumHour)(Data_Int.floor(hours))))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMinute)(Data_Int.floor(minutes))))(Data_Enum.toEnum(Data_Time_Component.boundedEnumSecond)(Data_Int.floor(seconds))))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Int.floor(milliseconds))));
};
var hour = function (v) {
    return v.value0;
};
var timeToMillis = function (t) {
    return Data_Time_Duration.Milliseconds(3600000.0 * Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(hour(t))) + 60000.0 * Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(minute(t))) + 1000.0 * Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(second(t))) + Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(millisecond(t))));
};
var eqTime = new Data_Eq.Eq(function (x) {
    return function (y) {
        return Data_Eq.eq(Data_Time_Component.eqHour)(x.value0)(y.value0) && Data_Eq.eq(Data_Time_Component.eqMinute)(x.value1)(y.value1) && Data_Eq.eq(Data_Time_Component.eqSecond)(x.value2)(y.value2) && Data_Eq.eq(Data_Time_Component.eqMillisecond)(x.value3)(y.value3);
    };
});
var ordTime = new Data_Ord.Ord(function () {
    return eqTime;
}, function (x) {
    return function (y) {
        var v = Data_Ord.compare(Data_Time_Component.ordHour)(x.value0)(y.value0);
        if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        var v1 = Data_Ord.compare(Data_Time_Component.ordMinute)(x.value1)(y.value1);
        if (v1 instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        var v2 = Data_Ord.compare(Data_Time_Component.ordSecond)(x.value2)(y.value2);
        if (v2 instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v2 instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        return Data_Ord.compare(Data_Time_Component.ordMillisecond)(x.value3)(y.value3);
    };
});
var diff = function (dictDuration) {
    return function (t1) {
        return function (t2) {
            return Data_Time_Duration.toDuration(dictDuration)(Data_Semigroup.append(Data_Time_Duration.semigroupMilliseconds)(timeToMillis(t1))(Data_Time_Duration.negateDuration(Data_Time_Duration.durationMilliseconds)(timeToMillis(t2))));
        };
    };
};
var boundedTime = new Data_Bounded.Bounded(function () {
    return ordTime;
}, new Time(Data_Bounded.bottom(Data_Time_Component.boundedHour), Data_Bounded.bottom(Data_Time_Component.boundedMinute), Data_Bounded.bottom(Data_Time_Component.boundedSecond), Data_Bounded.bottom(Data_Time_Component.boundedMillisecond)), new Time(Data_Bounded.top(Data_Time_Component.boundedHour), Data_Bounded.top(Data_Time_Component.boundedMinute), Data_Bounded.top(Data_Time_Component.boundedSecond), Data_Bounded.top(Data_Time_Component.boundedMillisecond)));
var maxTime = timeToMillis(Data_Bounded.top(boundedTime));
var minTime = timeToMillis(Data_Bounded.bottom(boundedTime));
var adjust = function (dictDuration) {
    return function (d) {
        return function (t) {
            var tLength = timeToMillis(t);
            var d$prime = Data_Time_Duration.fromDuration(dictDuration)(d);
            var wholeDays = Data_Time_Duration.Days($$Math.floor(Data_Newtype.unwrap(Data_Time_Duration.newtypeMilliseconds)(d$prime) / 8.64e7));
            var msAdjust = Data_Semigroup.append(Data_Time_Duration.semigroupMilliseconds)(d$prime)(Data_Time_Duration.negateDuration(Data_Time_Duration.durationMilliseconds)(Data_Time_Duration.fromDuration(Data_Time_Duration.durationDays)(wholeDays)));
            var msAdjusted = Data_Semigroup.append(Data_Time_Duration.semigroupMilliseconds)(tLength)(msAdjust);
            var wrap = (function () {
                var $112 = Data_Ord.greaterThan(Data_Time_Duration.ordMilliseconds)(msAdjusted)(maxTime);
                if ($112) {
                    return 1.0;
                };
                var $113 = Data_Ord.lessThan(Data_Time_Duration.ordMilliseconds)(msAdjusted)(minTime);
                if ($113) {
                    return -1.0;
                };
                return 0.0;
            })();
            return new Data_Tuple.Tuple(Data_Semigroup.append(Data_Time_Duration.semigroupDays)(wholeDays)(wrap), millisToTime(Data_Semigroup.append(Data_Time_Duration.semigroupMilliseconds)(msAdjusted)(8.64e7 * -wrap)));
        };
    };
};
module.exports = {
    Time: Time,
    hour: hour,
    setHour: setHour,
    minute: minute,
    setMinute: setMinute,
    second: second,
    setSecond: setSecond,
    millisecond: millisecond,
    setMillisecond: setMillisecond,
    adjust: adjust,
    diff: diff,
    eqTime: eqTime,
    ordTime: ordTime,
    boundedTime: boundedTime,
    showTime: showTime
};

},{"../Control.Apply/index.js":9,"../Data.Bounded/index.js":113,"../Data.Enum/index.js":133,"../Data.Eq/index.js":135,"../Data.EuclideanRing/index.js":137,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Int/index.js":167,"../Data.Maybe/index.js":210,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.Time.Component/index.js":275,"../Data.Time.Duration/index.js":276,"../Data.Tuple/index.js":283,"../Math/index.js":364,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385}],278:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Traversable_Accum = require("../Data.Traversable.Accum/index.js");
var Prelude = require("../Prelude/index.js");
var StateR = function (x) {
    return x;
};
var StateL = function (x) {
    return x;
};
var stateR = function (v) {
    return v;
};
var stateL = function (v) {
    return v;
};
var functorStateR = new Data_Functor.Functor(function (f) {
    return function (k) {
        return function (s) {
            var v = stateR(k)(s);
            return {
                accum: v.accum,
                value: f(v.value)
            };
        };
    };
});
var functorStateL = new Data_Functor.Functor(function (f) {
    return function (k) {
        return function (s) {
            var v = stateL(k)(s);
            return {
                accum: v.accum,
                value: f(v.value)
            };
        };
    };
});
var applyStateR = new Control_Apply.Apply(function () {
    return functorStateR;
}, function (f) {
    return function (x) {
        return function (s) {
            var v = stateR(x)(s);
            var v1 = stateR(f)(v.accum);
            return {
                accum: v1.accum,
                value: v1.value(v.value)
            };
        };
    };
});
var applyStateL = new Control_Apply.Apply(function () {
    return functorStateL;
}, function (f) {
    return function (x) {
        return function (s) {
            var v = stateL(f)(s);
            var v1 = stateL(x)(v.accum);
            return {
                accum: v1.accum,
                value: v.value(v1.value)
            };
        };
    };
});
var applicativeStateR = new Control_Applicative.Applicative(function () {
    return applyStateR;
}, function (a) {
    return function (s) {
        return {
            accum: s,
            value: a
        };
    };
});
var applicativeStateL = new Control_Applicative.Applicative(function () {
    return applyStateL;
}, function (a) {
    return function (s) {
        return {
            accum: s,
            value: a
        };
    };
});
module.exports = {
    StateL: StateL,
    stateL: stateL,
    StateR: StateR,
    stateR: stateR,
    functorStateL: functorStateL,
    applyStateL: applyStateL,
    applicativeStateL: applicativeStateL,
    functorStateR: functorStateR,
    applyStateR: applyStateR,
    applicativeStateR: applicativeStateR
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Data.Functor/index.js":153,"../Data.Traversable.Accum/index.js":279,"../Prelude/index.js":385}],279:[function(require,module,exports){
arguments[4][219][0].apply(exports,arguments)
},{"dup":219}],280:[function(require,module,exports){
"use strict";

// jshint maxparams: 3

exports.traverseArrayImpl = function () {
  function array1(a) {
    return [a];
  }

  function array2(a) {
    return function (b) {
      return [a, b];
    };
  }

  function array3(a) {
    return function (b) {
      return function (c) {
        return [a, b, c];
      };
    };
  }

  function concat2(xs) {
    return function (ys) {
      return xs.concat(ys);
    };
  }

  return function (apply) {
    return function (map) {
      return function (pure) {
        return function (f) {
          return function (array) {
            function go(bot, top) {
              switch (top - bot) {
              case 0: return pure([]);
              case 1: return map(array1)(f(array[bot]));
              case 2: return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));
              case 3: return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
              default:
                // This slightly tricky pivot selection aims to produce two
                // even-length partitions where possible.
                var pivot = bot + Math.floor((top - bot) / 4) * 2;
                return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
              }
            }
            return go(0, array.length);
          };
        };
      };
    };
  };
}();

},{}],281:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Category = require("../Control.Category/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Maybe_First = require("../Data.Maybe.First/index.js");
var Data_Maybe_Last = require("../Data.Maybe.Last/index.js");
var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");
var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");
var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");
var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");
var Data_Traversable_Accum = require("../Data.Traversable.Accum/index.js");
var Data_Traversable_Accum_Internal = require("../Data.Traversable.Accum.Internal/index.js");
var Prelude = require("../Prelude/index.js");
var Traversable = function (Foldable1, Functor0, sequence, traverse) {
    this.Foldable1 = Foldable1;
    this.Functor0 = Functor0;
    this.sequence = sequence;
    this.traverse = traverse;
};
var traverse = function (dict) {
    return dict.traverse;
};
var traversableMultiplicative = new Traversable(function () {
    return Data_Foldable.foldableMultiplicative;
}, function () {
    return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Multiplicative.Multiplicative)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
        };
    };
});
var traversableMaybe = new Traversable(function () {
    return Data_Foldable.foldableMaybe;
}, function () {
    return Data_Maybe.functorMaybe;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
        };
        if (v instanceof Data_Maybe.Just) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Traversable (line 86, column 1 - line 86, column 47): " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
            };
            if (v1 instanceof Data_Maybe.Just) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Traversable (line 86, column 1 - line 86, column 47): " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var traversableDual = new Traversable(function () {
    return Data_Foldable.foldableDual;
}, function () {
    return Data_Monoid_Dual.functorDual;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Dual.Dual)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Dual.Dual)(f(v));
        };
    };
});
var traversableDisj = new Traversable(function () {
    return Data_Foldable.foldableDisj;
}, function () {
    return Data_Monoid_Disj.functorDisj;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Disj.Disj)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Disj.Disj)(f(v));
        };
    };
});
var traversableConj = new Traversable(function () {
    return Data_Foldable.foldableConj;
}, function () {
    return Data_Monoid_Conj.functorConj;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Conj.Conj)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Conj.Conj)(f(v));
        };
    };
});
var traversableAdditive = new Traversable(function () {
    return Data_Foldable.foldableAdditive;
}, function () {
    return Data_Monoid_Additive.functorAdditive;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Additive.Additive)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Additive.Additive)(f(v));
        };
    };
});
var sequenceDefault = function (dictTraversable) {
    return function (dictApplicative) {
        return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
    };
};
var traversableArray = new Traversable(function () {
    return Data_Foldable.foldableArray;
}, function () {
    return Data_Functor.functorArray;
}, function (dictApplicative) {
    return sequenceDefault(traversableArray)(dictApplicative);
}, function (dictApplicative) {
    return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
});
var sequence = function (dict) {
    return dict.sequence;
};
var traversableFirst = new Traversable(function () {
    return Data_Foldable.foldableFirst;
}, function () {
    return Data_Maybe_First.functorFirst;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_First.First)(sequence(traversableMaybe)(dictApplicative)(v));
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_First.First)(traverse(traversableMaybe)(dictApplicative)(f)(v));
        };
    };
});
var traversableLast = new Traversable(function () {
    return Data_Foldable.foldableLast;
}, function () {
    return Data_Maybe_Last.functorLast;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_Last.Last)(sequence(traversableMaybe)(dictApplicative)(v));
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_Last.Last)(traverse(traversableMaybe)(dictApplicative)(f)(v));
        };
    };
});
var traverseDefault = function (dictTraversable) {
    return function (dictApplicative) {
        return function (f) {
            return function (ta) {
                return sequence(dictTraversable)(dictApplicative)(Data_Functor.map(dictTraversable.Functor0())(f)(ta));
            };
        };
    };
};
var mapAccumR = function (dictTraversable) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return Data_Traversable_Accum_Internal.stateR(traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateR)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanr = function (dictTraversable) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumR(dictTraversable)(function (b) {
                    return function (a) {
                        var b$prime = f(a)(b);
                        return {
                            accum: b$prime,
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var mapAccumL = function (dictTraversable) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return Data_Traversable_Accum_Internal.stateL(traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateL)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanl = function (dictTraversable) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumL(dictTraversable)(function (b) {
                    return function (a) {
                        var b$prime = f(b)(a);
                        return {
                            accum: b$prime,
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var $$for = function (dictApplicative) {
    return function (dictTraversable) {
        return function (x) {
            return function (f) {
                return traverse(dictTraversable)(dictApplicative)(f)(x);
            };
        };
    };
};
module.exports = {
    Traversable: Traversable,
    traverse: traverse,
    sequence: sequence,
    traverseDefault: traverseDefault,
    sequenceDefault: sequenceDefault,
    "for": $$for,
    scanl: scanl,
    scanr: scanr,
    mapAccumL: mapAccumL,
    mapAccumR: mapAccumR,
    traversableArray: traversableArray,
    traversableMaybe: traversableMaybe,
    traversableFirst: traversableFirst,
    traversableLast: traversableLast,
    traversableAdditive: traversableAdditive,
    traversableDual: traversableDual,
    traversableConj: traversableConj,
    traversableDisj: traversableDisj,
    traversableMultiplicative: traversableMultiplicative
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Category/index.js":14,"../Data.Foldable/index.js":141,"../Data.Functor/index.js":153,"../Data.Maybe.First/index.js":208,"../Data.Maybe.Last/index.js":209,"../Data.Maybe/index.js":210,"../Data.Monoid.Additive/index.js":212,"../Data.Monoid.Conj/index.js":213,"../Data.Monoid.Disj/index.js":214,"../Data.Monoid.Dual/index.js":215,"../Data.Monoid.Multiplicative/index.js":217,"../Data.Traversable.Accum.Internal/index.js":278,"../Data.Traversable.Accum/index.js":279,"../Prelude/index.js":385,"./foreign.js":280}],282:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Maybe_First = require("../Data.Maybe.First/index.js");
var Data_Maybe_Last = require("../Data.Maybe.Last/index.js");
var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");
var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");
var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");
var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Traversable_Accum = require("../Data.Traversable.Accum/index.js");
var Data_Traversable_Accum_Internal = require("../Data.Traversable.Accum.Internal/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Prelude = require("../Prelude/index.js");
var TraversableWithIndex = function (FoldableWithIndex1, FunctorWithIndex0, Traversable2, traverseWithIndex) {
    this.FoldableWithIndex1 = FoldableWithIndex1;
    this.FunctorWithIndex0 = FunctorWithIndex0;
    this.Traversable2 = Traversable2;
    this.traverseWithIndex = traverseWithIndex;
};
var traverseWithIndexDefault = function (dictTraversableWithIndex) {
    return function (dictApplicative) {
        return function (f) {
            return function ($19) {
                return Data_Traversable.sequence(dictTraversableWithIndex.Traversable2())(dictApplicative)(Data_FunctorWithIndex.mapWithIndex(dictTraversableWithIndex.FunctorWithIndex0())(f)($19));
            };
        };
    };
};
var traverseWithIndex = function (dict) {
    return dict.traverseWithIndex;
};
var traverseDefault = function (dictTraversableWithIndex) {
    return function (dictApplicative) {
        return function (f) {
            return traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(Data_Function["const"](f));
        };
    };
};
var traversableWithIndexMultiplicative = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexMultiplicative;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexMultiplicative;
}, function () {
    return Data_Traversable.traversableMultiplicative;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableMultiplicative)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexMaybe = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexMaybe;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexMaybe;
}, function () {
    return Data_Traversable.traversableMaybe;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableMaybe)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexLast = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexLast;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexLast;
}, function () {
    return Data_Traversable.traversableLast;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableLast)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexFirst = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexFirst;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexFirst;
}, function () {
    return Data_Traversable.traversableFirst;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableFirst)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexDual = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexDual;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexDual;
}, function () {
    return Data_Traversable.traversableDual;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableDual)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexDisj = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexDisj;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexDisj;
}, function () {
    return Data_Traversable.traversableDisj;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableDisj)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexConj = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexConj;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexConj;
}, function () {
    return Data_Traversable.traversableConj;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableConj)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexArray = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexArray;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexArray;
}, function () {
    return Data_Traversable.traversableArray;
}, function (dictApplicative) {
    return traverseWithIndexDefault(traversableWithIndexArray)(dictApplicative);
});
var traversableWithIndexAdditive = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexAdditive;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexAdditive;
}, function () {
    return Data_Traversable.traversableAdditive;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableAdditive)(dictApplicative)(f(Data_Unit.unit));
    };
});
var mapAccumRWithIndex = function (dictTraversableWithIndex) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return Data_Traversable_Accum_Internal.stateR(traverseWithIndex(dictTraversableWithIndex)(Data_Traversable_Accum_Internal.applicativeStateR)(function (i) {
                    return function (a) {
                        return function (s) {
                            return f(i)(s)(a);
                        };
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanrWithIndex = function (dictTraversableWithIndex) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumRWithIndex(dictTraversableWithIndex)(function (i) {
                    return function (b) {
                        return function (a) {
                            var b$prime = f(i)(a)(b);
                            return {
                                accum: b$prime,
                                value: b$prime
                            };
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var mapAccumLWithIndex = function (dictTraversableWithIndex) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return Data_Traversable_Accum_Internal.stateL(traverseWithIndex(dictTraversableWithIndex)(Data_Traversable_Accum_Internal.applicativeStateL)(function (i) {
                    return function (a) {
                        return function (s) {
                            return f(i)(s)(a);
                        };
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanlWithIndex = function (dictTraversableWithIndex) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumLWithIndex(dictTraversableWithIndex)(function (i) {
                    return function (b) {
                        return function (a) {
                            var b$prime = f(i)(b)(a);
                            return {
                                accum: b$prime,
                                value: b$prime
                            };
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var forWithIndex = function (dictApplicative) {
    return function (dictTraversableWithIndex) {
        return Data_Function.flip(traverseWithIndex(dictTraversableWithIndex)(dictApplicative));
    };
};
module.exports = {
    TraversableWithIndex: TraversableWithIndex,
    traverseWithIndex: traverseWithIndex,
    traverseWithIndexDefault: traverseWithIndexDefault,
    forWithIndex: forWithIndex,
    scanlWithIndex: scanlWithIndex,
    mapAccumLWithIndex: mapAccumLWithIndex,
    scanrWithIndex: scanrWithIndex,
    mapAccumRWithIndex: mapAccumRWithIndex,
    traverseDefault: traverseDefault,
    traversableWithIndexArray: traversableWithIndexArray,
    traversableWithIndexMaybe: traversableWithIndexMaybe,
    traversableWithIndexFirst: traversableWithIndexFirst,
    traversableWithIndexLast: traversableWithIndexLast,
    traversableWithIndexAdditive: traversableWithIndexAdditive,
    traversableWithIndexDual: traversableWithIndexDual,
    traversableWithIndexConj: traversableWithIndexConj,
    traversableWithIndexDisj: traversableWithIndexDisj,
    traversableWithIndexMultiplicative: traversableWithIndexMultiplicative
};

},{"../Control.Semigroupoid/index.js":61,"../Data.FoldableWithIndex/index.js":142,"../Data.Function/index.js":145,"../Data.FunctorWithIndex/index.js":155,"../Data.Maybe.First/index.js":208,"../Data.Maybe.Last/index.js":209,"../Data.Maybe/index.js":210,"../Data.Monoid.Additive/index.js":212,"../Data.Monoid.Conj/index.js":213,"../Data.Monoid.Disj/index.js":214,"../Data.Monoid.Dual/index.js":215,"../Data.Monoid.Multiplicative/index.js":217,"../Data.Traversable.Accum.Internal/index.js":278,"../Data.Traversable.Accum/index.js":279,"../Data.Traversable/index.js":281,"../Data.Unit/index.js":289,"../Prelude/index.js":385}],283:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Biapplicative = require("../Control.Biapplicative/index.js");
var Control_Biapply = require("../Control.Biapply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Bifoldable = require("../Data.Bifoldable/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Bitraversable = require("../Data.Bitraversable/index.js");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");
var Data_Distributive = require("../Data.Distributive/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Maybe_First = require("../Data.Maybe.First/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Prelude = require("../Prelude/index.js");
var Type_Equality = require("../Type.Equality/index.js");
var Tuple = (function () {
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    return Tuple;
})();
var uncurry = function (f) {
    return function (v) {
        return f(v.value0)(v.value1);
    };
};
var swap = function (v) {
    return new Tuple(v.value1, v.value0);
};
var snd = function (v) {
    return v.value1;
};
var showTuple = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            return "(Tuple " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var semiringTuple = function (dictSemiring) {
    return function (dictSemiring1) {
        return new Data_Semiring.Semiring(function (v) {
            return function (v1) {
                return new Tuple(Data_Semiring.add(dictSemiring)(v.value0)(v1.value0), Data_Semiring.add(dictSemiring1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return function (v1) {
                return new Tuple(Data_Semiring.mul(dictSemiring)(v.value0)(v1.value0), Data_Semiring.mul(dictSemiring1)(v.value1)(v1.value1));
            };
        }, new Tuple(Data_Semiring.one(dictSemiring), Data_Semiring.one(dictSemiring1)), new Tuple(Data_Semiring.zero(dictSemiring), Data_Semiring.zero(dictSemiring1)));
    };
};
var semigroupoidTuple = new Control_Semigroupoid.Semigroupoid(function (v) {
    return function (v1) {
        return new Tuple(v1.value0, v.value1);
    };
});
var semigroupTuple = function (dictSemigroup) {
    return function (dictSemigroup1) {
        return new Data_Semigroup.Semigroup(function (v) {
            return function (v1) {
                return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value1));
            };
        });
    };
};
var ringTuple = function (dictRing) {
    return function (dictRing1) {
        return new Data_Ring.Ring(function () {
            return semiringTuple(dictRing.Semiring0())(dictRing1.Semiring0());
        }, function (v) {
            return function (v1) {
                return new Tuple(Data_Ring.sub(dictRing)(v.value0)(v1.value0), Data_Ring.sub(dictRing1)(v.value1)(v1.value1));
            };
        });
    };
};
var monoidTuple = function (dictMonoid) {
    return function (dictMonoid1) {
        return new Data_Monoid.Monoid(function () {
            return semigroupTuple(dictMonoid.Semigroup0())(dictMonoid1.Semigroup0());
        }, new Tuple(Data_Monoid.mempty(dictMonoid), Data_Monoid.mempty(dictMonoid1)));
    };
};
var lookup = function (dictFoldable) {
    return function (dictEq) {
        return function (a) {
            return function ($312) {
                return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(Data_Foldable.foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
                    var $163 = Data_Eq.eq(dictEq)(a)(v.value0);
                    if ($163) {
                        return new Data_Maybe.Just(v.value1);
                    };
                    return Data_Maybe.Nothing.value;
                })($312));
            };
        };
    };
};
var heytingAlgebraTuple = function (dictHeytingAlgebra) {
    return function (dictHeytingAlgebra1) {
        return new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
            return function (v1) {
                return new Tuple(Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.conj(dictHeytingAlgebra1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return function (v1) {
                return new Tuple(Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.disj(dictHeytingAlgebra1)(v.value1)(v1.value1));
            };
        }, new Tuple(Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra1)), function (v) {
            return function (v1) {
                return new Tuple(Data_HeytingAlgebra.implies(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.implies(dictHeytingAlgebra1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return new Tuple(Data_HeytingAlgebra.not(dictHeytingAlgebra)(v.value0), Data_HeytingAlgebra.not(dictHeytingAlgebra1)(v.value1));
        }, new Tuple(Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra1)));
    };
};
var functorTuple = new Data_Functor.Functor(function (f) {
    return function (m) {
        return new Tuple(m.value0, f(m.value1));
    };
});
var functorWithIndexTuple = new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorTuple;
}, function (f) {
    return Data_Functor.map(functorTuple)(f(Data_Unit.unit));
});
var invariantTuple = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorTuple));
var fst = function (v) {
    return v.value0;
};
var lazyTuple = function (dictLazy) {
    return function (dictLazy1) {
        return new Control_Lazy.Lazy(function (f) {
            return new Tuple(Control_Lazy.defer(dictLazy)(function (v) {
                return fst(f(Data_Unit.unit));
            }), Control_Lazy.defer(dictLazy1)(function (v) {
                return snd(f(Data_Unit.unit));
            }));
        });
    };
};
var foldableTuple = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v.value1)(z);
        };
    };
});
var foldableWithIndexTuple = new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableTuple;
}, function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(Data_Unit.unit)(v.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(Data_Unit.unit)(z)(v.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(Data_Unit.unit)(v.value1)(z);
        };
    };
});
var traversableTuple = new Data_Traversable.Traversable(function () {
    return foldableTuple;
}, function () {
    return functorTuple;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create(v.value0))(v.value1);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create(v.value0))(f(v.value1));
        };
    };
});
var traversableWithIndexTuple = new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexTuple;
}, function () {
    return functorWithIndexTuple;
}, function () {
    return traversableTuple;
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create(v.value0))(f(Data_Unit.unit)(v.value1));
        };
    };
});
var foldable1Tuple = new Data_Semigroup_Foldable.Foldable1(function () {
    return foldableTuple;
}, function (dictSemigroup) {
    return function (v) {
        return v.value1;
    };
}, function (dictSemigroup) {
    return function (f) {
        return function (v) {
            return f(v.value1);
        };
    };
});
var traversable1Tuple = new Data_Semigroup_Traversable.Traversable1(function () {
    return foldable1Tuple;
}, function () {
    return traversableTuple;
}, function (dictApply) {
    return function (v) {
        return Data_Functor.map(dictApply.Functor0())(Tuple.create(v.value0))(v.value1);
    };
}, function (dictApply) {
    return function (f) {
        return function (v) {
            return Data_Functor.map(dictApply.Functor0())(Tuple.create(v.value0))(f(v.value1));
        };
    };
});
var extendTuple = new Control_Extend.Extend(function () {
    return functorTuple;
}, function (f) {
    return function (v) {
        return new Tuple(v.value0, f(v));
    };
});
var eqTuple = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
            };
        });
    };
};
var ordTuple = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqTuple(dictOrd.Eq0())(dictOrd1.Eq0());
        }, function (x) {
            return function (y) {
                var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                if (v instanceof Data_Ordering.LT) {
                    return Data_Ordering.LT.value;
                };
                if (v instanceof Data_Ordering.GT) {
                    return Data_Ordering.GT.value;
                };
                return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
            };
        });
    };
};
var eq1Tuple = function (dictEq) {
    return new Data_Eq.Eq1(function (dictEq1) {
        return Data_Eq.eq(eqTuple(dictEq)(dictEq1));
    });
};
var ord1Tuple = function (dictOrd) {
    return new Data_Ord.Ord1(function () {
        return eq1Tuple(dictOrd.Eq0());
    }, function (dictOrd1) {
        return Data_Ord.compare(ordTuple(dictOrd)(dictOrd1));
    });
};
var distributiveTuple = function (dictTypeEquals) {
    return new Data_Distributive.Distributive(function () {
        return functorTuple;
    }, function (dictFunctor) {
        return Data_Distributive.collectDefault(distributiveTuple(dictTypeEquals))(dictFunctor);
    }, function (dictFunctor) {
        return function ($313) {
            return Tuple.create(Type_Equality.from(dictTypeEquals)(Data_Unit.unit))(Data_Functor.map(dictFunctor)(snd)($313));
        };
    });
};
var curry = function (f) {
    return function (a) {
        return function (b) {
            return f(new Tuple(a, b));
        };
    };
};
var comonadTuple = new Control_Comonad.Comonad(function () {
    return extendTuple;
}, snd);
var commutativeRingTuple = function (dictCommutativeRing) {
    return function (dictCommutativeRing1) {
        return new Data_CommutativeRing.CommutativeRing(function () {
            return ringTuple(dictCommutativeRing.Ring0())(dictCommutativeRing1.Ring0());
        });
    };
};
var boundedTuple = function (dictBounded) {
    return function (dictBounded1) {
        return new Data_Bounded.Bounded(function () {
            return ordTuple(dictBounded.Ord0())(dictBounded1.Ord0());
        }, new Tuple(Data_Bounded.bottom(dictBounded), Data_Bounded.bottom(dictBounded1)), new Tuple(Data_Bounded.top(dictBounded), Data_Bounded.top(dictBounded1)));
    };
};
var booleanAlgebraTuple = function (dictBooleanAlgebra) {
    return function (dictBooleanAlgebra1) {
        return new Data_BooleanAlgebra.BooleanAlgebra(function () {
            return heytingAlgebraTuple(dictBooleanAlgebra.HeytingAlgebra0())(dictBooleanAlgebra1.HeytingAlgebra0());
        });
    };
};
var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            return new Tuple(f(v.value0), g(v.value1));
        };
    };
});
var bifoldableTuple = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
    return function (f) {
        return function (g) {
            return function (v) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(g(v.value1));
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (v) {
                return g(f(z)(v.value0))(v.value1);
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (v) {
                return f(v.value0)(g(v.value1)(z));
            };
        };
    };
});
var bitraversableTuple = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableTuple;
}, function () {
    return bifunctorTuple;
}, function (dictApplicative) {
    return function (v) {
        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create)(v.value0))(v.value1);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (g) {
            return function (v) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create)(f(v.value0)))(g(v.value1));
            };
        };
    };
});
var biapplyTuple = new Control_Biapply.Biapply(function () {
    return bifunctorTuple;
}, function (v) {
    return function (v1) {
        return new Tuple(v.value0(v1.value0), v.value1(v1.value1));
    };
});
var biapplicativeTuple = new Control_Biapplicative.Biapplicative(function () {
    return biapplyTuple;
}, Tuple.create);
var applyTuple = function (dictSemigroup) {
    return new Control_Apply.Apply(function () {
        return functorTuple;
    }, function (v) {
        return function (v1) {
            return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v.value1(v1.value1));
        };
    });
};
var bindTuple = function (dictSemigroup) {
    return new Control_Bind.Bind(function () {
        return applyTuple(dictSemigroup);
    }, function (v) {
        return function (f) {
            var v1 = f(v.value1);
            return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v1.value1);
        };
    });
};
var applicativeTuple = function (dictMonoid) {
    return new Control_Applicative.Applicative(function () {
        return applyTuple(dictMonoid.Semigroup0());
    }, Tuple.create(Data_Monoid.mempty(dictMonoid)));
};
var monadTuple = function (dictMonoid) {
    return new Control_Monad.Monad(function () {
        return applicativeTuple(dictMonoid);
    }, function () {
        return bindTuple(dictMonoid.Semigroup0());
    });
};
module.exports = {
    Tuple: Tuple,
    fst: fst,
    snd: snd,
    curry: curry,
    uncurry: uncurry,
    swap: swap,
    lookup: lookup,
    showTuple: showTuple,
    eqTuple: eqTuple,
    eq1Tuple: eq1Tuple,
    ordTuple: ordTuple,
    ord1Tuple: ord1Tuple,
    boundedTuple: boundedTuple,
    semigroupoidTuple: semigroupoidTuple,
    semigroupTuple: semigroupTuple,
    monoidTuple: monoidTuple,
    semiringTuple: semiringTuple,
    ringTuple: ringTuple,
    commutativeRingTuple: commutativeRingTuple,
    heytingAlgebraTuple: heytingAlgebraTuple,
    booleanAlgebraTuple: booleanAlgebraTuple,
    functorTuple: functorTuple,
    functorWithIndexTuple: functorWithIndexTuple,
    invariantTuple: invariantTuple,
    bifunctorTuple: bifunctorTuple,
    applyTuple: applyTuple,
    biapplyTuple: biapplyTuple,
    applicativeTuple: applicativeTuple,
    biapplicativeTuple: biapplicativeTuple,
    bindTuple: bindTuple,
    monadTuple: monadTuple,
    extendTuple: extendTuple,
    comonadTuple: comonadTuple,
    lazyTuple: lazyTuple,
    foldableTuple: foldableTuple,
    foldable1Tuple: foldable1Tuple,
    foldableWithIndexTuple: foldableWithIndexTuple,
    bifoldableTuple: bifoldableTuple,
    traversableTuple: traversableTuple,
    traversable1Tuple: traversable1Tuple,
    traversableWithIndexTuple: traversableWithIndexTuple,
    bitraversableTuple: bitraversableTuple,
    distributiveTuple: distributiveTuple
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Biapplicative/index.js":10,"../Control.Biapply/index.js":11,"../Control.Bind/index.js":13,"../Control.Comonad/index.js":21,"../Control.Extend/index.js":24,"../Control.Lazy/index.js":25,"../Control.Monad/index.js":55,"../Control.Semigroupoid/index.js":61,"../Data.Bifoldable/index.js":100,"../Data.Bifunctor/index.js":106,"../Data.Bitraversable/index.js":109,"../Data.BooleanAlgebra/index.js":111,"../Data.Bounded/index.js":113,"../Data.CommutativeRing/index.js":118,"../Data.Distributive/index.js":128,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.FoldableWithIndex/index.js":142,"../Data.Function/index.js":145,"../Data.Functor.Invariant/index.js":151,"../Data.Functor/index.js":153,"../Data.FunctorWithIndex/index.js":155,"../Data.HeytingAlgebra/index.js":162,"../Data.Maybe.First/index.js":208,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Ring/index.js":242,"../Data.Semigroup.Foldable/index.js":244,"../Data.Semigroup.Traversable/index.js":246,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.Traversable/index.js":281,"../Data.TraversableWithIndex/index.js":282,"../Data.Unit/index.js":289,"../Prelude/index.js":385,"../Type.Equality/index.js":420}],284:[function(require,module,exports){
"use strict";

exports.unfoldrArrayImpl = function (isNothing) {
  return function (fromJust) {
    return function (fst) {
      return function (snd) {
        return function (f) {
          return function (b) {
            var result = [];
            var value = b;
            while (true) { // eslint-disable-line no-constant-condition
              var maybe = f(value);
              if (isNothing(maybe)) return result;
              var tuple = fromJust(maybe);
              result.push(fst(tuple));
              value = snd(tuple);
            }
          };
        };
      };
    };
  };
};

},{}],285:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var Unfoldable = function (Unfoldable10, unfoldr) {
    this.Unfoldable10 = Unfoldable10;
    this.unfoldr = unfoldr;
};
var unfoldr = function (dict) {
    return dict.unfoldr;
};
var unfoldableArray = new Unfoldable(function () {
    return Data_Unfoldable1.unfoldable1Array;
}, $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
var replicate = function (dictUnfoldable) {
    return function (n) {
        return function (v) {
            var step = function (i) {
                var $7 = i <= 0;
                if ($7) {
                    return Data_Maybe.Nothing.value;
                };
                return new Data_Maybe.Just(new Data_Tuple.Tuple(v, i - 1 | 0));
            };
            return unfoldr(dictUnfoldable)(step)(n);
        };
    };
};
var replicateA = function (dictApplicative) {
    return function (dictUnfoldable) {
        return function (dictTraversable) {
            return function (n) {
                return function (m) {
                    return Data_Traversable.sequence(dictTraversable)(dictApplicative)(replicate(dictUnfoldable)(n)(m));
                };
            };
        };
    };
};
var none = function (dictUnfoldable) {
    return unfoldr(dictUnfoldable)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Unit.unit);
};
var fromMaybe = function (dictUnfoldable) {
    return unfoldr(dictUnfoldable)(function (b) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Maybe.Nothing.value))(b);
    });
};
module.exports = {
    Unfoldable: Unfoldable,
    unfoldr: unfoldr,
    replicate: replicate,
    replicateA: replicateA,
    none: none,
    fromMaybe: fromMaybe,
    unfoldableArray: unfoldableArray
};

},{"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ring/index.js":242,"../Data.Traversable/index.js":281,"../Data.Tuple/index.js":283,"../Data.Unfoldable1/index.js":287,"../Data.Unit/index.js":289,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385,"./foreign.js":284}],286:[function(require,module,exports){
"use strict";

exports.unfoldr1ArrayImpl = function (isNothing) {
  return function (fromJust) {
    return function (fst) {
      return function (snd) {
        return function (f) {
          return function (b) {
            var result = [];
            var value = b;
            while (true) { // eslint-disable-line no-constant-condition
              var tuple = f(value);
              result.push(fst(tuple));
              var maybe = snd(tuple);
              if (isNothing(maybe)) return result;
              value = fromJust(maybe);
            }
          };
        };
      };
    };
  };
};

},{}],287:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var Unfoldable1 = function (unfoldr1) {
    this.unfoldr1 = unfoldr1;
};
var unfoldr1 = function (dict) {
    return dict.unfoldr1;
};
var unfoldable1Array = new Unfoldable1($foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
var replicate1 = function (dictUnfoldable1) {
    return function (n) {
        return function (v) {
            var step = function (i) {
                if (i <= 0) {
                    return new Data_Tuple.Tuple(v, Data_Maybe.Nothing.value);
                };
                if (Data_Boolean.otherwise) {
                    return new Data_Tuple.Tuple(v, new Data_Maybe.Just(i - 1 | 0));
                };
                throw new Error("Failed pattern match at Data.Unfoldable1 (line 47, column 5 - line 47, column 39): " + [ i.constructor.name ]);
            };
            return unfoldr1(dictUnfoldable1)(step)(n - 1 | 0);
        };
    };
};
var replicate1A = function (dictApply) {
    return function (dictUnfoldable1) {
        return function (dictTraversable1) {
            return function (n) {
                return function (m) {
                    return Data_Semigroup_Traversable.sequence1(dictTraversable1)(dictApply)(replicate1(dictUnfoldable1)(n)(m));
                };
            };
        };
    };
};
var singleton = function (dictUnfoldable1) {
    return replicate1(dictUnfoldable1)(1);
};
var range = function (dictUnfoldable1) {
    return function (start) {
        return function (end) {
            var go = function (delta) {
                return function (i) {
                    var i$prime = i + delta | 0;
                    return new Data_Tuple.Tuple(i, (function () {
                        var $8 = i === end;
                        if ($8) {
                            return Data_Maybe.Nothing.value;
                        };
                        return new Data_Maybe.Just(i$prime);
                    })());
                };
            };
            var delta = (function () {
                var $9 = end >= start;
                if ($9) {
                    return 1;
                };
                return -1 | 0;
            })();
            return unfoldr1(dictUnfoldable1)(go(delta))(start);
        };
    };
};
module.exports = {
    Unfoldable1: Unfoldable1,
    unfoldr1: unfoldr1,
    replicate1: replicate1,
    replicate1A: replicate1A,
    singleton: singleton,
    range: range,
    unfoldable1Array: unfoldable1Array
};

},{"../Data.Boolean/index.js":110,"../Data.Eq/index.js":135,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ring/index.js":242,"../Data.Semigroup.Traversable/index.js":246,"../Data.Semiring/index.js":251,"../Data.Tuple/index.js":283,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385,"./foreign.js":286}],288:[function(require,module,exports){
"use strict";

exports.unit = {};

},{}],289:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Show = require("../Data.Show/index.js");
var showUnit = new Data_Show.Show(function (v) {
    return "unit";
});
module.exports = {
    showUnit: showUnit,
    unit: $foreign.unit
};

},{"../Data.Show/index.js":254,"./foreign.js":288}],290:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Prelude = require("../Prelude/index.js");
var V = function (x) {
    return x;
};
var unV = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Data_Either.Left) {
                return v(v2.value0);
            };
            if (v2 instanceof Data_Either.Right) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Validation.Semiring (line 48, column 1 - line 48, column 77): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var toEither = function (v) {
    return v;
};
var showV = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            if (v instanceof Data_Either.Left) {
                return "invalid (" + (Data_Show.show(dictShow)(v.value0) + ")");
            };
            if (v instanceof Data_Either.Right) {
                return "pure (" + (Data_Show.show(dictShow1)(v.value0) + ")");
            };
            throw new Error("Failed pattern match at Data.Validation.Semiring (line 81, column 10 - line 85, column 1): " + [ v.constructor.name ]);
        });
    };
};
var newtypeV = new Data_Newtype.Newtype(function (n) {
    return n;
}, V);
var isValid = function (v) {
    if (v instanceof Data_Either.Right) {
        return true;
    };
    return false;
};
var invalid = function ($71) {
    return V(Data_Either.Left.create($71));
};
var functorV = Data_Either.functorEither;
var foldableV = new Data_Foldable.Foldable(function (dictMonoid) {
    return unV(Data_Function["const"](Data_Monoid.mempty(dictMonoid)));
}, function (f) {
    return function (b) {
        return unV(Data_Function["const"](b))(f(b));
    };
}, function (f) {
    return function (b) {
        return unV(Data_Function["const"](b))(Data_Function.flip(f)(b));
    };
});
var traversableV = new Data_Traversable.Traversable(function () {
    return foldableV;
}, function () {
    return functorV;
}, function (dictApplicative) {
    return unV(function ($72) {
        return Control_Applicative.pure(dictApplicative)(V(Data_Either.Left.create($72)));
    })(Data_Functor.map((dictApplicative.Apply0()).Functor0())(function ($73) {
        return V(Data_Either.Right.create($73));
    }));
}, function (dictApplicative) {
    return function (f) {
        return unV(function ($74) {
            return Control_Applicative.pure(dictApplicative)(V(Data_Either.Left.create($74)));
        })(function ($75) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(function ($76) {
                return V(Data_Either.Right.create($76));
            })(f($75));
        });
    };
});
var eqV = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                return Data_Eq.eq(Data_Either.eqEither(dictEq)(dictEq1))(x)(y);
            };
        });
    };
};
var ordV = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqV(dictOrd.Eq0())(dictOrd1.Eq0());
        }, function (x) {
            return function (y) {
                return Data_Ord.compare(Data_Either.ordEither(dictOrd)(dictOrd1))(x)(y);
            };
        });
    };
};
var eq1V = function (dictEq) {
    return new Data_Eq.Eq1(function (dictEq1) {
        return Data_Eq.eq(eqV(dictEq)(dictEq1));
    });
};
var ord1V = function (dictOrd) {
    return new Data_Ord.Ord1(function () {
        return eq1V(dictOrd.Eq0());
    }, function (dictOrd1) {
        return Data_Ord.compare(ordV(dictOrd)(dictOrd1));
    });
};
var bifunctorV = Data_Either.bifunctorEither;
var applyV = function (dictSemiring) {
    return new Control_Apply.Apply(function () {
        return functorV;
    }, function (v) {
        return function (v1) {
            if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
                return new Data_Either.Left(Data_Semiring.mul(dictSemiring)(v.value0)(v1.value0));
            };
            if (v instanceof Data_Either.Left) {
                return new Data_Either.Left(v.value0);
            };
            if (v1 instanceof Data_Either.Left) {
                return new Data_Either.Left(v1.value0);
            };
            if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) {
                return new Data_Either.Right(v.value0(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Validation.Semiring (line 89, column 1 - line 89, column 49): " + [ v.constructor.name, v1.constructor.name ]);
        };
    });
};
var semigroupV = function (dictSemiring) {
    return function (dictSemigroup) {
        return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyV(dictSemiring))(Data_Semigroup.append(dictSemigroup)));
    };
};
var applicativeV = function (dictSemiring) {
    return new Control_Applicative.Applicative(function () {
        return applyV(dictSemiring);
    }, function ($77) {
        return V(Data_Either.Right.create($77));
    });
};
var monoidV = function (dictSemiring) {
    return function (dictMonoid) {
        return new Data_Monoid.Monoid(function () {
            return semigroupV(dictSemiring)(dictMonoid.Semigroup0());
        }, Control_Applicative.pure(applicativeV(dictSemiring))(Data_Monoid.mempty(dictMonoid)));
    };
};
var andThen = function (v1) {
    return function (f) {
        return unV(invalid)(f)(v1);
    };
};
var altV = function (dictSemiring) {
    return new Control_Alt.Alt(function () {
        return functorV;
    }, function (v) {
        return function (v1) {
            if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
                return new Data_Either.Left(Data_Semiring.add(dictSemiring)(v.value0)(v1.value0));
            };
            if (v instanceof Data_Either.Left) {
                return v1;
            };
            if (v instanceof Data_Either.Right) {
                return new Data_Either.Right(v.value0);
            };
            throw new Error("Failed pattern match at Data.Validation.Semiring (line 104, column 1 - line 104, column 45): " + [ v.constructor.name, v1.constructor.name ]);
        };
    });
};
var plusV = function (dictSemiring) {
    return new Control_Plus.Plus(function () {
        return altV(dictSemiring);
    }, new Data_Either.Left(Data_Semiring.zero(dictSemiring)));
};
module.exports = {
    V: V,
    unV: unV,
    invalid: invalid,
    isValid: isValid,
    toEither: toEither,
    andThen: andThen,
    newtypeV: newtypeV,
    eqV: eqV,
    eq1V: eq1V,
    ordV: ordV,
    ord1V: ord1V,
    showV: showV,
    functorV: functorV,
    bifunctorV: bifunctorV,
    applyV: applyV,
    applicativeV: applicativeV,
    semigroupV: semigroupV,
    monoidV: monoidV,
    altV: altV,
    plusV: plusV,
    foldableV: foldableV,
    traversableV: traversableV
};

},{"../Control.Alt/index.js":4,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Bifunctor/index.js":106,"../Data.Either/index.js":131,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.Traversable/index.js":281,"../Prelude/index.js":385}],291:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Show = require("../Data.Show/index.js");
var Void = function (x) {
    return x;
};
var absurd = function (a) {
    var spin = function ($copy_v) {
        var $tco_result;
        function $tco_loop(v) {
            $copy_v = v;
            return;
        };
        while (!false) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return spin(a);
};
var showVoid = new Data_Show.Show(absurd);
module.exports = {
    absurd: absurd,
    showVoid: showVoid
};

},{"../Data.Show/index.js":254}],292:[function(require,module,exports){
/* globals exports, setTimeout */
"use strict";

var AVar = function () {

  function MutableQueue () {
    this.head = null;
    this.last = null;
    this.size = 0;
  }

  function MutableCell (queue, value) {
    this.queue = queue;
    this.value = value;
    this.next  = null;
    this.prev  = null;
  }

  function AVar (value) {
    this.draining = false;
    this.error    = null;
    this.value    = value;
    this.takes    = new MutableQueue();
    this.reads    = new MutableQueue();
    this.puts     = new MutableQueue();
  }

  var EMPTY = {};

  function runEff(eff) {
    try {
      eff();
    } catch (error) {
      setTimeout(function () {
        throw error;
      }, 0);
    }
  }

  function putLast (queue, value) {
    var cell = new MutableCell(queue, value);
    switch (queue.size) {
    case 0:
      queue.head = cell;
      break;
    case 1:
      cell.prev = queue.head;
      queue.head.next = cell;
      queue.last = cell;
      break;
    default:
      cell.prev = queue.last;
      queue.last.next = cell;
      queue.last = cell;
    }
    queue.size++;
    return cell;
  }

  function takeLast (queue) {
    var cell;
    switch (queue.size) {
    case 0:
      return null;
    case 1:
      cell = queue.head;
      queue.head = null;
      break;
    case 2:
      cell = queue.last;
      queue.head.next = null;
      queue.last = null;
      break;
    default:
      cell = queue.last;
      queue.last = cell.prev;
      queue.last.next = null;
    }
    cell.prev = null;
    cell.queue = null;
    queue.size--;
    return cell.value;
  }

  function takeHead (queue) {
    var cell;
    switch (queue.size) {
    case 0:
      return null;
    case 1:
      cell = queue.head;
      queue.head = null;
      break;
    case 2:
      cell = queue.head;
      queue.last.prev = null;
      queue.head = queue.last;
      queue.last = null;
      break;
    default:
      cell = queue.head;
      queue.head = cell.next;
      queue.head.prev = null;
    }
    cell.next = null;
    cell.queue = null;
    queue.size--;
    return cell.value;
  }

  function deleteCell (cell) {
    if (cell.queue === null) {
      return;
    }
    if (cell.queue.last === cell) {
      takeLast(cell.queue);
      return;
    }
    if (cell.queue.head === cell) {
      takeHead(cell.queue);
      return;
    }
    if (cell.prev) {
      cell.prev.next = cell.next;
    }
    if (cell.next) {
      cell.next.prev = cell.prev;
    }
    cell.queue.size--;
    cell.queue = null;
    cell.value = null;
    cell.next  = null;
    cell.prev  = null;
  }

  function drainVar (util, avar) {
    if (avar.draining) {
      return;
    }

    var ps = avar.puts;
    var ts = avar.takes;
    var rs = avar.reads;
    var p, r, t, value, rsize;

    avar.draining = true;

    while (1) { // eslint-disable-line no-constant-condition
      p = null;
      r = null;
      t = null;
      value = avar.value;
      rsize = rs.size;

      if (avar.error !== null) {
        value = util.left(avar.error);
        while (p = takeHead(ps)) { // eslint-disable-line no-cond-assign
          runEff(p.cb(value));
        }
        while (r = takeHead(rs)) { // eslint-disable-line no-cond-assign
          runEff(r(value));
        }
        while (t = takeHead(ts)) { // eslint-disable-line no-cond-assign
          runEff(t(value));
        }
        break;
      }

      // Process the next put. We do not immediately invoke the callback
      // because we want to preserve ordering. If there are takes/reads
      // we want to run those first.
      if (value === EMPTY && (p = takeHead(ps))) {
        avar.value = value = p.value;
      }

      if (value !== EMPTY) {
        // We go ahead and queue up the next take for the same reasons as
        // above. Invoking the read callbacks can affect the mutable queue.
        t = takeHead(ts);
        // We only want to process the reads queued up before running these
        // callbacks so we guard on rsize.
        while (rsize-- && (r = takeHead(rs))) {
          runEff(r(util.right(value)));
        }
        if (t !== null) {
          avar.value = EMPTY;
          runEff(t(util.right(value)));
        }
      }

      if (p !== null) {
        runEff(p.cb(util.right(void 0)));
      }

      // Callbacks could have queued up more items so we need to guard on the
      // actual mutable properties.
      if (avar.value === EMPTY && ps.size === 0 || avar.value !== EMPTY && ts.size === 0) {
        break;
      }
    }
    avar.draining = false;
  }

  AVar.EMPTY      = EMPTY;
  AVar.putLast    = putLast;
  AVar.takeLast   = takeLast;
  AVar.takeHead   = takeHead;
  AVar.deleteCell = deleteCell;
  AVar.drainVar   = drainVar;

  return AVar;
}();

exports.empty = function () {
  return new AVar(AVar.EMPTY);
};

exports._newVar = function (value) {
  return function () {
    return new AVar(value);
  };
};

exports._killVar = function (util, error, avar) {
  return function () {
    if (avar.error === null) {
      avar.error = error;
      avar.value = AVar.EMPTY;
      AVar.drainVar(util, avar);
    }
  };
};

exports._putVar = function (util, value, avar, cb) {
  return function () {
    var cell = AVar.putLast(avar.puts, { cb: cb, value: value });
    AVar.drainVar(util, avar);
    return function () {
      AVar.deleteCell(cell);
    };
  };
};

exports._takeVar = function (util, avar, cb) {
  return function () {
    var cell = AVar.putLast(avar.takes, cb);
    AVar.drainVar(util, avar);
    return function () {
      AVar.deleteCell(cell);
    };
  };
};

exports._readVar = function (util, avar, cb) {
  return function () {
    var cell = AVar.putLast(avar.reads, cb);
    AVar.drainVar(util, avar);
    return function () {
      AVar.deleteCell(cell);
    };
  };
};

exports._tryPutVar = function (util, value, avar) {
  return function () {
    if (avar.value === AVar.EMPTY && avar.error === null) {
      avar.value = value;
      AVar.drainVar(util, avar);
      return true;
    } else {
      return false;
    }
  };
};

exports._tryTakeVar = function (util, avar) {
  return function () {
    var value = avar.value;
    if (value === AVar.EMPTY) {
      return util.nothing;
    } else {
      avar.value = AVar.EMPTY;
      AVar.drainVar(util, avar);
      return util.just(value);
    }
  };
};

exports._tryReadVar = function (util, avar) {
  return function () {
    if (avar.value === AVar.EMPTY) {
      return util.nothing;
    } else {
      return util.just(avar.value);
    }
  };
};

exports._status = function (util, avar) {
  return function () {
    if (avar.error) {
      return util.killed(avar.error);
    }
    if (avar.value === AVar.EMPTY) {
      return util.empty;
    }
    return util.filled(avar.value);
  };
};


},{}],293:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Prelude = require("../Prelude/index.js");
var Killed = (function () {
    function Killed(value0) {
        this.value0 = value0;
    };
    Killed.create = function (value0) {
        return new Killed(value0);
    };
    return Killed;
})();
var Filled = (function () {
    function Filled(value0) {
        this.value0 = value0;
    };
    Filled.create = function (value0) {
        return new Filled(value0);
    };
    return Filled;
})();
var Empty = (function () {
    function Empty() {

    };
    Empty.value = new Empty();
    return Empty;
})();
var $$new = $foreign["_newVar"];
var isKilled = function (v) {
    if (v instanceof Killed) {
        return true;
    };
    return false;
};
var isFilled = function (v) {
    if (v instanceof Filled) {
        return true;
    };
    return false;
};
var isEmpty = function (v) {
    if (v instanceof Empty) {
        return true;
    };
    return false;
};
var ffiUtil = {
    left: Data_Either.Left.create,
    right: Data_Either.Right.create,
    nothing: Data_Maybe.Nothing.value,
    just: Data_Maybe.Just.create,
    killed: Killed.create,
    filled: Filled.create,
    empty: Empty.value
};
var kill = function (err) {
    return function (avar) {
        return $foreign["_killVar"](ffiUtil, err, avar);
    };
};
var put = function (value) {
    return function (avar) {
        return function (cb) {
            return $foreign["_putVar"](ffiUtil, value, avar, cb);
        };
    };
};
var read = function (avar) {
    return function (cb) {
        return $foreign["_readVar"](ffiUtil, avar, cb);
    };
};
var status = function (avar) {
    return $foreign["_status"](ffiUtil, avar);
};
var take = function (avar) {
    return function (cb) {
        return $foreign["_takeVar"](ffiUtil, avar, cb);
    };
};
var tryPut = function (value) {
    return function (avar) {
        return $foreign["_tryPutVar"](ffiUtil, value, avar);
    };
};
var tryRead = function (avar) {
    return $foreign["_tryReadVar"](ffiUtil, avar);
};
var tryTake = function (avar) {
    return $foreign["_tryTakeVar"](ffiUtil, avar);
};
module.exports = {
    Killed: Killed,
    Filled: Filled,
    Empty: Empty,
    "new": $$new,
    take: take,
    tryTake: tryTake,
    put: put,
    tryPut: tryPut,
    read: read,
    tryRead: tryRead,
    kill: kill,
    status: status,
    isEmpty: isEmpty,
    isFilled: isFilled,
    isKilled: isKilled,
    empty: $foreign.empty
};

},{"../Data.Either/index.js":131,"../Data.Function.Uncurried/index.js":144,"../Data.Maybe/index.js":210,"../Effect.Exception/index.js":302,"../Effect/index.js":312,"../Prelude/index.js":385,"./foreign.js":292}],294:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Effect_AVar = require("../Effect.AVar/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Prelude = require("../Prelude/index.js");
var tryTake = function ($6) {
    return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.tryTake($6));
};
var tryRead = function ($7) {
    return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.tryRead($7));
};
var tryPut = function (value) {
    return function ($8) {
        return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.tryPut(value)($8));
    };
};
var take = function (avar) {
    return Effect_Aff.makeAff(function (k) {
        return function __do() {
            var v = Effect_AVar.take(avar)(k)();
            return Effect_Aff.effectCanceler(v);
        };
    });
};
var status = function ($9) {
    return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.status($9));
};
var read = function (avar) {
    return Effect_Aff.makeAff(function (k) {
        return function __do() {
            var v = Effect_AVar.read(avar)(k)();
            return Effect_Aff.effectCanceler(v);
        };
    });
};
var put = function (value) {
    return function (avar) {
        return Effect_Aff.makeAff(function (k) {
            return function __do() {
                var v = Effect_AVar.put(value)(avar)(k)();
                return Effect_Aff.effectCanceler(v);
            };
        });
    };
};
var $$new = function ($10) {
    return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar["new"]($10));
};
var kill = function (error) {
    return function ($11) {
        return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.kill(error)($11));
    };
};
var empty = Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.empty);
module.exports = {
    "new": $$new,
    empty: empty,
    status: status,
    take: take,
    tryTake: tryTake,
    put: put,
    tryPut: tryPut,
    read: read,
    tryRead: tryRead,
    kill: kill
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Control.Semigroupoid/index.js":61,"../Data.Maybe/index.js":210,"../Effect.AVar/index.js":293,"../Effect.Aff/index.js":297,"../Effect.Class/index.js":298,"../Effect.Exception/index.js":302,"../Effect/index.js":312,"../Prelude/index.js":385}],295:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Monad_Cont_Trans = require("../Control.Monad.Cont.Trans/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Control_Monad_List_Trans = require("../Control.Monad.List.Trans/index.js");
var Control_Monad_Maybe_Trans = require("../Control.Monad.Maybe.Trans/index.js");
var Control_Monad_RWS_Trans = require("../Control.Monad.RWS.Trans/index.js");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");
var Control_Monad_State_Trans = require("../Control.Monad.State.Trans/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Monad_Writer_Trans = require("../Control.Monad.Writer.Trans/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Prelude = require("../Prelude/index.js");
var MonadAff = function (MonadEffect0, liftAff) {
    this.MonadEffect0 = MonadEffect0;
    this.liftAff = liftAff;
};
var monadAffAff = new MonadAff(function () {
    return Effect_Aff.monadEffectAff;
}, Control_Category.identity(Control_Category.categoryFn));
var liftAff = function (dict) {
    return dict.liftAff;
};
var monadAffContT = function (dictMonadAff) {
    return new MonadAff(function () {
        return Control_Monad_Cont_Trans.monadEffectContT(dictMonadAff.MonadEffect0());
    }, function ($10) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Cont_Trans.monadTransContT)((dictMonadAff.MonadEffect0()).Monad0())(liftAff(dictMonadAff)($10));
    });
};
var monadAffExceptT = function (dictMonadAff) {
    return new MonadAff(function () {
        return Control_Monad_Except_Trans.monadEffectExceptT(dictMonadAff.MonadEffect0());
    }, function ($11) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)((dictMonadAff.MonadEffect0()).Monad0())(liftAff(dictMonadAff)($11));
    });
};
var monadAffListT = function (dictMonadAff) {
    return new MonadAff(function () {
        return Control_Monad_List_Trans.monadEffectListT(dictMonadAff.MonadEffect0());
    }, function ($12) {
        return Control_Monad_Trans_Class.lift(Control_Monad_List_Trans.monadTransListT)((dictMonadAff.MonadEffect0()).Monad0())(liftAff(dictMonadAff)($12));
    });
};
var monadAffMaybe = function (dictMonadAff) {
    return new MonadAff(function () {
        return Control_Monad_Maybe_Trans.monadEffectMaybe(dictMonadAff.MonadEffect0());
    }, function ($13) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)((dictMonadAff.MonadEffect0()).Monad0())(liftAff(dictMonadAff)($13));
    });
};
var monadAffRWS = function (dictMonadAff) {
    return function (dictMonoid) {
        return new MonadAff(function () {
            return Control_Monad_RWS_Trans.monadEffectRWS(dictMonoid)(dictMonadAff.MonadEffect0());
        }, function ($14) {
            return Control_Monad_Trans_Class.lift(Control_Monad_RWS_Trans.monadTransRWST(dictMonoid))((dictMonadAff.MonadEffect0()).Monad0())(liftAff(dictMonadAff)($14));
        });
    };
};
var monadAffReader = function (dictMonadAff) {
    return new MonadAff(function () {
        return Control_Monad_Reader_Trans.monadEffectReader(dictMonadAff.MonadEffect0());
    }, function ($15) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)((dictMonadAff.MonadEffect0()).Monad0())(liftAff(dictMonadAff)($15));
    });
};
var monadAffState = function (dictMonadAff) {
    return new MonadAff(function () {
        return Control_Monad_State_Trans.monadEffectState(dictMonadAff.MonadEffect0());
    }, function ($16) {
        return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)((dictMonadAff.MonadEffect0()).Monad0())(liftAff(dictMonadAff)($16));
    });
};
var monadAffWriter = function (dictMonadAff) {
    return function (dictMonoid) {
        return new MonadAff(function () {
            return Control_Monad_Writer_Trans.monadEffectWriter(dictMonoid)(dictMonadAff.MonadEffect0());
        }, function ($17) {
            return Control_Monad_Trans_Class.lift(Control_Monad_Writer_Trans.monadTransWriterT(dictMonoid))((dictMonadAff.MonadEffect0()).Monad0())(liftAff(dictMonadAff)($17));
        });
    };
};
module.exports = {
    liftAff: liftAff,
    MonadAff: MonadAff,
    monadAffAff: monadAffAff,
    monadAffContT: monadAffContT,
    monadAffExceptT: monadAffExceptT,
    monadAffListT: monadAffListT,
    monadAffMaybe: monadAffMaybe,
    monadAffReader: monadAffReader,
    monadAffRWS: monadAffRWS,
    monadAffState: monadAffState,
    monadAffWriter: monadAffWriter
};

},{"../Control.Category/index.js":14,"../Control.Monad.Cont.Trans/index.js":27,"../Control.Monad.Except.Trans/index.js":29,"../Control.Monad.List.Trans/index.js":37,"../Control.Monad.Maybe.Trans/index.js":38,"../Control.Monad.RWS.Trans/index.js":39,"../Control.Monad.Reader.Trans/index.js":41,"../Control.Monad.State.Trans/index.js":49,"../Control.Monad.Trans.Class/index.js":52,"../Control.Monad.Writer.Trans/index.js":54,"../Control.Semigroupoid/index.js":61,"../Effect.Aff/index.js":297,"../Effect.Class/index.js":298,"../Prelude/index.js":385}],296:[function(require,module,exports){
(function (setImmediate,clearImmediate){
/* globals setImmediate, clearImmediate, setTimeout, clearTimeout */
/* jshint -W083, -W098, -W003 */
"use strict";

var Aff = function () {
  // A unique value for empty.
  var EMPTY = {};

  /*

  An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.

  data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)

  */
  var PURE    = "Pure";
  var THROW   = "Throw";
  var CATCH   = "Catch";
  var SYNC    = "Sync";
  var ASYNC   = "Async";
  var BIND    = "Bind";
  var BRACKET = "Bracket";
  var FORK    = "Fork";
  var SEQ     = "Sequential";

  /*

  data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)

  */
  var MAP   = "Map";
  var APPLY = "Apply";
  var ALT   = "Alt";

  // Various constructors used in interpretation
  var CONS      = "Cons";      // Cons-list, for stacks
  var RESUME    = "Resume";    // Continue indiscriminately
  var RELEASE   = "Release";   // Continue with bracket finalizers
  var FINALIZER = "Finalizer"; // A non-interruptible effect
  var FINALIZED = "Finalized"; // Marker for finalization
  var FORKED    = "Forked";    // Reference to a forked fiber, with resumption stack
  var FIBER     = "Fiber";     // Actual fiber reference
  var THUNK     = "Thunk";     // Primed effect, ready to invoke

  function Aff(tag, _1, _2, _3) {
    this.tag = tag;
    this._1  = _1;
    this._2  = _2;
    this._3  = _3;
  }

  function AffCtr(tag) {
    var fn = function (_1, _2, _3) {
      return new Aff(tag, _1, _2, _3);
    };
    fn.tag = tag;
    return fn;
  }

  function nonCanceler(error) {
    return new Aff(PURE, void 0);
  }

  function runEff(eff) {
    try {
      eff();
    } catch (error) {
      setTimeout(function () {
        throw error;
      }, 0);
    }
  }

  function runSync(left, right, eff) {
    try {
      return right(eff());
    } catch (error) {
      return left(error);
    }
  }

  function runAsync(left, eff, k) {
    try {
      return eff(k)();
    } catch (error) {
      k(left(error))();
      return nonCanceler;
    }
  }

  var Scheduler = function () {
    var limit    = 1024;
    var size     = 0;
    var ix       = 0;
    var queue    = new Array(limit);
    var draining = false;

    function drain() {
      var thunk;
      draining = true;
      while (size !== 0) {
        size--;
        thunk     = queue[ix];
        queue[ix] = void 0;
        ix        = (ix + 1) % limit;
        thunk();
      }
      draining = false;
    }

    return {
      isDraining: function () {
        return draining;
      },
      enqueue: function (cb) {
        var i, tmp;
        if (size === limit) {
          tmp = draining;
          drain();
          draining = tmp;
        }

        queue[(ix + size) % limit] = cb;
        size++;

        if (!draining) {
          drain();
        }
      }
    };
  }();

  function Supervisor(util) {
    var fibers  = {};
    var fiberId = 0;
    var count   = 0;

    return {
      register: function (fiber) {
        var fid = fiberId++;
        fiber.onComplete({
          rethrow: true,
          handler: function (result) {
            return function () {
              count--;
              delete fibers[fid];
            };
          }
        });
        fibers[fid] = fiber;
        count++;
      },
      isEmpty: function () {
        return count === 0;
      },
      killAll: function (killError, cb) {
        return function () {
          var killCount = 0;
          var kills     = {};

          function kill(fid) {
            kills[fid] = fibers[fid].kill(killError, function (result) {
              return function () {
                delete kills[fid];
                killCount--;
                if (util.isLeft(result) && util.fromLeft(result)) {
                  setTimeout(function () {
                    throw util.fromLeft(result);
                  }, 0);
                }
                if (killCount === 0) {
                  cb();
                }
              };
            })();
          }

          for (var k in fibers) {
            if (fibers.hasOwnProperty(k)) {
              killCount++;
              kill(k);
            }
          }

          fibers  = {};
          fiberId = 0;
          count   = 0;

          return function (error) {
            return new Aff(SYNC, function () {
              for (var k in kills) {
                if (kills.hasOwnProperty(k)) {
                  kills[k]();
                }
              }
            });
          };
        };
      }
    };
  }

  // Fiber state machine
  var SUSPENDED   = 0; // Suspended, pending a join.
  var CONTINUE    = 1; // Interpret the next instruction.
  var STEP_BIND   = 2; // Apply the next bind.
  var STEP_RESULT = 3; // Handle potential failure from a result.
  var PENDING     = 4; // An async effect is running.
  var RETURN      = 5; // The current stack has returned.
  var COMPLETED   = 6; // The entire fiber has completed.

  function Fiber(util, supervisor, aff) {
    // Monotonically increasing tick, increased on each asynchronous turn.
    var runTick = 0;

    // The current branch of the state machine.
    var status = SUSPENDED;

    // The current point of interest for the state machine branch.
    var step      = aff;  // Successful step
    var fail      = null; // Failure step
    var interrupt = null; // Asynchronous interrupt

    // Stack of continuations for the current fiber.
    var bhead = null;
    var btail = null;

    // Stack of attempts and finalizers for error recovery. Every `Cons` is also
    // tagged with current `interrupt` state. We use this to track which items
    // should be ignored or evaluated as a result of a kill.
    var attempts = null;

    // A special state is needed for Bracket, because it cannot be killed. When
    // we enter a bracket acquisition or finalizer, we increment the counter,
    // and then decrement once complete.
    var bracketCount = 0;

    // Each join gets a new id so they can be revoked.
    var joinId  = 0;
    var joins   = null;
    var rethrow = true;

    // Each invocation of `run` requires a tick. When an asynchronous effect is
    // resolved, we must check that the local tick coincides with the fiber
    // tick before resuming. This prevents multiple async continuations from
    // accidentally resuming the same fiber. A common example may be invoking
    // the provided callback in `makeAff` more than once, but it may also be an
    // async effect resuming after the fiber was already cancelled.
    function run(localRunTick) {
      var tmp, result, attempt;
      while (true) {
        tmp       = null;
        result    = null;
        attempt   = null;

        switch (status) {
        case STEP_BIND:
          status = CONTINUE;
          step   = bhead(step);
          if (btail === null) {
            bhead = null;
          } else {
            bhead = btail._1;
            btail = btail._2;
          }
          break;

        case STEP_RESULT:
          if (util.isLeft(step)) {
            status = RETURN;
            fail   = step;
            step   = null;
          } else if (bhead === null) {
            status = RETURN;
          } else {
            status = STEP_BIND;
            step   = util.fromRight(step);
          }
          break;

        case CONTINUE:
          switch (step.tag) {
          case BIND:
            if (bhead) {
              btail = new Aff(CONS, bhead, btail);
            }
            bhead  = step._2;
            status = CONTINUE;
            step   = step._1;
            break;

          case PURE:
            if (bhead === null) {
              status = RETURN;
              step   = util.right(step._1);
            } else {
              status = STEP_BIND;
              step   = step._1;
            }
            break;

          case SYNC:
            status = STEP_RESULT;
            step   = runSync(util.left, util.right, step._1);
            break;

          case ASYNC:
            status = PENDING;
            step   = runAsync(util.left, step._1, function (result) {
              return function () {
                if (runTick !== localRunTick) {
                  return;
                }
                runTick++;
                Scheduler.enqueue(function () {
                  // It's possible to interrupt the fiber between enqueuing and
                  // resuming, so we need to check that the runTick is still
                  // valid.
                  if (runTick !== localRunTick + 1) {
                    return;
                  }
                  status = STEP_RESULT;
                  step   = result;
                  run(runTick);
                });
              };
            });
            return;

          case THROW:
            status = RETURN;
            fail   = util.left(step._1);
            step   = null;
            break;

          // Enqueue the Catch so that we can call the error handler later on
          // in case of an exception.
          case CATCH:
            if (bhead === null) {
              attempts = new Aff(CONS, step, attempts, interrupt);
            } else {
              attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
            }
            bhead    = null;
            btail    = null;
            status   = CONTINUE;
            step     = step._1;
            break;

          // Enqueue the Bracket so that we can call the appropriate handlers
          // after resource acquisition.
          case BRACKET:
            bracketCount++;
            if (bhead === null) {
              attempts = new Aff(CONS, step, attempts, interrupt);
            } else {
              attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
            }
            bhead  = null;
            btail  = null;
            status = CONTINUE;
            step   = step._1;
            break;

          case FORK:
            status = STEP_RESULT;
            tmp    = Fiber(util, supervisor, step._2);
            if (supervisor) {
              supervisor.register(tmp);
            }
            if (step._1) {
              tmp.run();
            }
            step = util.right(tmp);
            break;

          case SEQ:
            status = CONTINUE;
            step   = sequential(util, supervisor, step._1);
            break;
          }
          break;

        case RETURN:
          bhead = null;
          btail = null;
          // If the current stack has returned, and we have no other stacks to
          // resume or finalizers to run, the fiber has halted and we can
          // invoke all join callbacks. Otherwise we need to resume.
          if (attempts === null) {
            status = COMPLETED;
            step   = interrupt || fail || step;
          } else {
            // The interrupt status for the enqueued item.
            tmp      = attempts._3;
            attempt  = attempts._1;
            attempts = attempts._2;

            switch (attempt.tag) {
            // We cannot recover from an interrupt. Otherwise we should
            // continue stepping, or run the exception handler if an exception
            // was raised.
            case CATCH:
              // We should compare the interrupt status as well because we
              // only want it to apply if there has been an interrupt since
              // enqueuing the catch.
              if (interrupt && interrupt !== tmp) {
                status = RETURN;
              } else if (fail) {
                status = CONTINUE;
                step   = attempt._2(util.fromLeft(fail));
                fail   = null;
              }
              break;

            // We cannot resume from an interrupt or exception.
            case RESUME:
              // As with Catch, we only want to ignore in the case of an
              // interrupt since enqueing the item.
              if (interrupt && interrupt !== tmp || fail) {
                status = RETURN;
              } else {
                bhead  = attempt._1;
                btail  = attempt._2;
                status = STEP_BIND;
                step   = util.fromRight(step);
              }
              break;

            // If we have a bracket, we should enqueue the handlers,
            // and continue with the success branch only if the fiber has
            // not been interrupted. If the bracket acquisition failed, we
            // should not run either.
            case BRACKET:
              bracketCount--;
              if (fail === null) {
                result   = util.fromRight(step);
                // We need to enqueue the Release with the same interrupt
                // status as the Bracket that is initiating it.
                attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);
                // We should only coninue as long as the interrupt status has not changed or
                // we are currently within a non-interruptable finalizer.
                if (interrupt === tmp || bracketCount > 0) {
                  status = CONTINUE;
                  step   = attempt._3(result);
                }
              }
              break;

            // Enqueue the appropriate handler. We increase the bracket count
            // because it should not be cancelled.
            case RELEASE:
              bracketCount++;
              attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
              status   = CONTINUE;
              // It has only been killed if the interrupt status has changed
              // since we enqueued the item.
              if (interrupt && interrupt !== tmp) {
                step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
              } else if (fail) {
                step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
              } else {
                step = attempt._1.completed(util.fromRight(step))(attempt._2);
              }
              fail = null;
              break;

            case FINALIZER:
              bracketCount++;
              attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
              status   = CONTINUE;
              step     = attempt._1;
              break;

            case FINALIZED:
              bracketCount--;
              status = RETURN;
              step   = attempt._1;
              fail   = attempt._2;
              break;
            }
          }
          break;

        case COMPLETED:
          for (var k in joins) {
            if (joins.hasOwnProperty(k)) {
              rethrow = rethrow && joins[k].rethrow;
              runEff(joins[k].handler(step));
            }
          }
          joins = null;
          // If we have an interrupt and a fail, then the thread threw while
          // running finalizers. This should always rethrow in a fresh stack.
          if (interrupt && fail) {
            setTimeout(function () {
              throw util.fromLeft(fail);
            }, 0);
          // If we have an unhandled exception, and no other fiber has joined
          // then we need to throw the exception in a fresh stack.
          } else if (util.isLeft(step) && rethrow) {
            setTimeout(function () {
              // Guard on reathrow because a completely synchronous fiber can
              // still have an observer which was added after-the-fact.
              if (rethrow) {
                throw util.fromLeft(step);
              }
            }, 0);
          }
          return;
        case SUSPENDED:
          status = CONTINUE;
          break;
        case PENDING: return;
        }
      }
    }

    function onComplete(join) {
      return function () {
        if (status === COMPLETED) {
          rethrow = rethrow && join.rethrow;
          join.handler(step)();
          return function () {};
        }

        var jid    = joinId++;
        joins      = joins || {};
        joins[jid] = join;

        return function() {
          if (joins !== null) {
            delete joins[jid];
          }
        };
      };
    }

    function kill(error, cb) {
      return function () {
        if (status === COMPLETED) {
          cb(util.right(void 0))();
          return function () {};
        }

        var canceler = onComplete({
          rethrow: false,
          handler: function (/* unused */) {
            return cb(util.right(void 0));
          }
        })();

        switch (status) {
        case SUSPENDED:
          interrupt = util.left(error);
          status    = COMPLETED;
          step      = interrupt;
          run(runTick);
          break;
        case PENDING:
          if (interrupt === null) {
            interrupt = util.left(error);
          }
          if (bracketCount === 0) {
            if (status === PENDING) {
              attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
            }
            status   = RETURN;
            step     = null;
            fail     = null;
            run(++runTick);
          }
          break;
        default:
          if (interrupt === null) {
            interrupt = util.left(error);
          }
          if (bracketCount === 0) {
            status = RETURN;
            step   = null;
            fail   = null;
          }
        }

        return canceler;
      };
    }

    function join(cb) {
      return function () {
        var canceler = onComplete({
          rethrow: false,
          handler: cb
        })();
        if (status === SUSPENDED) {
          run(runTick);
        }
        return canceler;
      };
    }

    return {
      kill: kill,
      join: join,
      onComplete: onComplete,
      isSuspended: function () {
        return status === SUSPENDED;
      },
      run: function () {
        if (status === SUSPENDED) {
          if (!Scheduler.isDraining()) {
            Scheduler.enqueue(function () {
              run(runTick);
            });
          } else {
            run(runTick);
          }
        }
      }
    };
  }

  function runPar(util, supervisor, par, cb) {
    // Table of all forked fibers.
    var fiberId   = 0;
    var fibers    = {};

    // Table of currently running cancelers, as a product of `Alt` behavior.
    var killId    = 0;
    var kills     = {};

    // Error used for early cancelation on Alt branches.
    var early     = new Error("[ParAff] Early exit");

    // Error used to kill the entire tree.
    var interrupt = null;

    // The root pointer of the tree.
    var root      = EMPTY;

    // Walks a tree, invoking all the cancelers. Returns the table of pending
    // cancellation fibers.
    function kill(error, par, cb) {
      var step  = par;
      var head  = null;
      var tail  = null;
      var count = 0;
      var kills = {};
      var tmp, kid;

      loop: while (true) {
        tmp = null;

        switch (step.tag) {
        case FORKED:
          if (step._3 === EMPTY) {
            tmp = fibers[step._1];
            kills[count++] = tmp.kill(error, function (result) {
              return function () {
                count--;
                if (count === 0) {
                  cb(result)();
                }
              };
            });
          }
          // Terminal case.
          if (head === null) {
            break loop;
          }
          // Go down the right side of the tree.
          step = head._2;
          if (tail === null) {
            head = null;
          } else {
            head = tail._1;
            tail = tail._2;
          }
          break;
        case MAP:
          step = step._2;
          break;
        case APPLY:
        case ALT:
          if (head) {
            tail = new Aff(CONS, head, tail);
          }
          head = step;
          step = step._1;
          break;
        }
      }

      if (count === 0) {
        cb(util.right(void 0))();
      } else {
        // Run the cancelation effects. We alias `count` because it's mutable.
        kid = 0;
        tmp = count;
        for (; kid < tmp; kid++) {
          kills[kid] = kills[kid]();
        }
      }

      return kills;
    }

    // When a fiber resolves, we need to bubble back up the tree with the
    // result, computing the applicative nodes.
    function join(result, head, tail) {
      var fail, step, lhs, rhs, tmp, kid;

      if (util.isLeft(result)) {
        fail = result;
        step = null;
      } else {
        step = result;
        fail = null;
      }

      loop: while (true) {
        lhs = null;
        rhs = null;
        tmp = null;
        kid = null;

        // We should never continue if the entire tree has been interrupted.
        if (interrupt !== null) {
          return;
        }

        // We've made it all the way to the root of the tree, which means
        // the tree has fully evaluated.
        if (head === null) {
          cb(fail || step)();
          return;
        }

        // The tree has already been computed, so we shouldn't try to do it
        // again. This should never happen.
        // TODO: Remove this?
        if (head._3 !== EMPTY) {
          return;
        }

        switch (head.tag) {
        case MAP:
          if (fail === null) {
            head._3 = util.right(head._1(util.fromRight(step)));
            step    = head._3;
          } else {
            head._3 = fail;
          }
          break;
        case APPLY:
          lhs = head._1._3;
          rhs = head._2._3;
          // If we have a failure we should kill the other side because we
          // can't possible yield a result anymore.
          if (fail) {
            head._3 = fail;
            tmp     = true;
            kid     = killId++;

            kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function (/* unused */) {
              return function () {
                delete kills[kid];
                if (tmp) {
                  tmp = false;
                } else if (tail === null) {
                  join(fail, null, null);
                } else {
                  join(fail, tail._1, tail._2);
                }
              };
            });

            if (tmp) {
              tmp = false;
              return;
            }
          } else if (lhs === EMPTY || rhs === EMPTY) {
            // We can only proceed if both sides have resolved.
            return;
          } else {
            step    = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
            head._3 = step;
          }
          break;
        case ALT:
          lhs = head._1._3;
          rhs = head._2._3;
          // We can only proceed if both have resolved or we have a success
          if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
            return;
          }
          // If both sides resolve with an error, we should continue with the
          // first error
          if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
            fail    = step === lhs ? rhs : lhs;
            step    = null;
            head._3 = fail;
          } else {
            head._3 = step;
            tmp     = true;
            kid     = killId++;
            // Once a side has resolved, we need to cancel the side that is still
            // pending before we can continue.
            kills[kid] = kill(early, step === lhs ? head._2 : head._1, function (/* unused */) {
              return function () {
                delete kills[kid];
                if (tmp) {
                  tmp = false;
                } else if (tail === null) {
                  join(step, null, null);
                } else {
                  join(step, tail._1, tail._2);
                }
              };
            });

            if (tmp) {
              tmp = false;
              return;
            }
          }
          break;
        }

        if (tail === null) {
          head = null;
        } else {
          head = tail._1;
          tail = tail._2;
        }
      }
    }

    function resolve(fiber) {
      return function (result) {
        return function () {
          delete fibers[fiber._1];
          fiber._3 = result;
          join(result, fiber._2._1, fiber._2._2);
        };
      };
    }

    // Walks the applicative tree, substituting non-applicative nodes with
    // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
    // as a mutable slot for memoization. In an unresolved state, the `_3`
    // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
    // the left side first, because both operations are left-associative. As
    // we `RETURN` from those branches, we then walk the right side.
    function run() {
      var status = CONTINUE;
      var step   = par;
      var head   = null;
      var tail   = null;
      var tmp, fid;

      loop: while (true) {
        tmp = null;
        fid = null;

        switch (status) {
        case CONTINUE:
          switch (step.tag) {
          case MAP:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }
            head = new Aff(MAP, step._1, EMPTY, EMPTY);
            step = step._2;
            break;
          case APPLY:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }
            head = new Aff(APPLY, EMPTY, step._2, EMPTY);
            step = step._1;
            break;
          case ALT:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }
            head = new Aff(ALT, EMPTY, step._2, EMPTY);
            step = step._1;
            break;
          default:
            // When we hit a leaf value, we suspend the stack in the `FORKED`.
            // When the fiber resolves, it can bubble back up the tree.
            fid    = fiberId++;
            status = RETURN;
            tmp    = step;
            step   = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
            tmp    = Fiber(util, supervisor, tmp);
            tmp.onComplete({
              rethrow: false,
              handler: resolve(step)
            })();
            fibers[fid] = tmp;
            if (supervisor) {
              supervisor.register(tmp);
            }
          }
          break;
        case RETURN:
          // Terminal case, we are back at the root.
          if (head === null) {
            break loop;
          }
          // If we are done with the right side, we need to continue down the
          // left. Otherwise we should continue up the stack.
          if (head._1 === EMPTY) {
            head._1 = step;
            status  = CONTINUE;
            step    = head._2;
            head._2 = EMPTY;
          } else {
            head._2 = step;
            step    = head;
            if (tail === null) {
              head  = null;
            } else {
              head  = tail._1;
              tail  = tail._2;
            }
          }
        }
      }

      // Keep a reference to the tree root so it can be cancelled.
      root = step;

      for (fid = 0; fid < fiberId; fid++) {
        fibers[fid].run();
      }
    }

    // Cancels the entire tree. If there are already subtrees being canceled,
    // we need to first cancel those joins. We will then add fresh joins for
    // all pending branches including those that were in the process of being
    // canceled.
    function cancel(error, cb) {
      interrupt = util.left(error);
      var innerKills;
      for (var kid in kills) {
        if (kills.hasOwnProperty(kid)) {
          innerKills = kills[kid];
          for (kid in innerKills) {
            if (innerKills.hasOwnProperty(kid)) {
              innerKills[kid]();
            }
          }
        }
      }

      kills = null;
      var newKills = kill(error, root, cb);

      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            for (var kid in newKills) {
              if (newKills.hasOwnProperty(kid)) {
                newKills[kid]();
              }
            }
            return nonCanceler;
          };
        });
      };
    }

    run();

    return function (killError) {
      return new Aff(ASYNC, function (killCb) {
        return function () {
          return cancel(killError, killCb);
        };
      });
    };
  }

  function sequential(util, supervisor, par) {
    return new Aff(ASYNC, function (cb) {
      return function () {
        return runPar(util, supervisor, par, cb);
      };
    });
  }

  Aff.EMPTY       = EMPTY;
  Aff.Pure        = AffCtr(PURE);
  Aff.Throw       = AffCtr(THROW);
  Aff.Catch       = AffCtr(CATCH);
  Aff.Sync        = AffCtr(SYNC);
  Aff.Async       = AffCtr(ASYNC);
  Aff.Bind        = AffCtr(BIND);
  Aff.Bracket     = AffCtr(BRACKET);
  Aff.Fork        = AffCtr(FORK);
  Aff.Seq         = AffCtr(SEQ);
  Aff.ParMap      = AffCtr(MAP);
  Aff.ParApply    = AffCtr(APPLY);
  Aff.ParAlt      = AffCtr(ALT);
  Aff.Fiber       = Fiber;
  Aff.Supervisor  = Supervisor;
  Aff.Scheduler   = Scheduler;
  Aff.nonCanceler = nonCanceler;

  return Aff;
}();

exports._pure = Aff.Pure;

exports._throwError = Aff.Throw;

exports._catchError = function (aff) {
  return function (k) {
    return Aff.Catch(aff, k);
  };
};

exports._map = function (f) {
  return function (aff) {
    if (aff.tag === Aff.Pure.tag) {
      return Aff.Pure(f(aff._1));
    } else {
      return Aff.Bind(aff, function (value) {
        return Aff.Pure(f(value));
      });
    }
  };
};

exports._bind = function (aff) {
  return function (k) {
    return Aff.Bind(aff, k);
  };
};

exports._fork = function (immediate) {
  return function (aff) {
    return Aff.Fork(immediate, aff);
  };
};

exports._liftEffect = Aff.Sync;

exports._parAffMap = function (f) {
  return function (aff) {
    return Aff.ParMap(f, aff);
  };
};

exports._parAffApply = function (aff1) {
  return function (aff2) {
    return Aff.ParApply(aff1, aff2);
  };
};

exports._parAffAlt = function (aff1) {
  return function (aff2) {
    return Aff.ParAlt(aff1, aff2);
  };
};

exports.makeAff = Aff.Async;

exports.generalBracket = function (acquire) {
  return function (options) {
    return function (k) {
      return Aff.Bracket(acquire, options, k);
    };
  };
};

exports._makeFiber = function (util, aff) {
  return function () {
    return Aff.Fiber(util, null, aff);
  };
};

exports._makeSupervisedFiber = function (util, aff) {
  return function () {
    var supervisor = Aff.Supervisor(util);
    return {
      fiber: Aff.Fiber(util, supervisor, aff),
      supervisor: supervisor
    };
  };
};

exports._killAll = function (error, supervisor, cb) {
  return supervisor.killAll(error, cb);
};

exports._delay = function () {
  function setDelay(n, k) {
    if (n === 0 && typeof setImmediate !== "undefined") {
      return setImmediate(k);
    } else {
      return setTimeout(k, n);
    }
  }

  function clearDelay(n, t) {
    if (n === 0 && typeof clearImmediate !== "undefined") {
      return clearImmediate(t);
    } else {
      return clearTimeout(t);
    }
  }

  return function (right, ms) {
    return Aff.Async(function (cb) {
      return function () {
        var timer = setDelay(ms, cb(right()));
        return function () {
          return Aff.Sync(function () {
            return right(clearDelay(ms, timer));
          });
        };
      };
    });
  };
}();

exports._sequential = Aff.Seq;

}).call(this,require("timers").setImmediate,require("timers").clearImmediate)
},{"timers":3}],297:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Parallel = require("../Control.Parallel/index.js");
var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Time_Duration = require("../Data.Time.Duration/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Effect_Unsafe = require("../Effect.Unsafe/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Fiber = function (x) {
    return x;
};
var FFIUtil = function (x) {
    return x;
};
var Canceler = function (x) {
    return x;
};
var suspendAff = $foreign["_fork"](false);
var newtypeCanceler = new Data_Newtype.Newtype(function (n) {
    return n;
}, Canceler);
var functorParAff = new Data_Functor.Functor($foreign["_parAffMap"]);
var functorAff = new Data_Functor.Functor($foreign["_map"]);
var forkAff = $foreign["_fork"](true);
var ffiUtil = (function () {
    var unsafeFromRight = function (v) {
        if (v instanceof Data_Either.Right) {
            return v.value0;
        };
        if (v instanceof Data_Either.Left) {
            return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
        };
        throw new Error("Failed pattern match at Effect.Aff (line 400, column 21 - line 402, column 31): " + [ v.constructor.name ]);
    };
    var unsafeFromLeft = function (v) {
        if (v instanceof Data_Either.Left) {
            return v.value0;
        };
        if (v instanceof Data_Either.Right) {
            return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
        };
        throw new Error("Failed pattern match at Effect.Aff (line 395, column 20 - line 399, column 3): " + [ v.constructor.name ]);
    };
    var isLeft = function (v) {
        if (v instanceof Data_Either.Left) {
            return true;
        };
        if (v instanceof Data_Either.Right) {
            return false;
        };
        throw new Error("Failed pattern match at Effect.Aff (line 390, column 12 - line 392, column 20): " + [ v.constructor.name ]);
    };
    return {
        isLeft: isLeft,
        fromLeft: unsafeFromLeft,
        fromRight: unsafeFromRight,
        left: Data_Either.Left.create,
        right: Data_Either.Right.create
    };
})();
var makeFiber = function (aff) {
    return $foreign["_makeFiber"](ffiUtil, aff);
};
var launchAff = function (aff) {
    return function __do() {
        var v = makeFiber(aff)();
        v.run();
        return v;
    };
};
var launchAff_ = function ($49) {
    return Data_Functor["void"](Effect.functorEffect)(launchAff($49));
};
var launchSuspendedAff = makeFiber;
var delay = function (v) {
    return $foreign["_delay"](Data_Either.Right.create, v);
};
var bracket = function (acquire) {
    return function (completed) {
        return $foreign.generalBracket(acquire)({
            killed: Data_Function["const"](completed),
            failed: Data_Function["const"](completed),
            completed: Data_Function["const"](completed)
        });
    };
};
var applyParAff = new Control_Apply.Apply(function () {
    return functorParAff;
}, $foreign["_parAffApply"]);
var semigroupParAff = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyParAff)(Data_Semigroup.append(dictSemigroup)));
};
var monadAff = new Control_Monad.Monad(function () {
    return applicativeAff;
}, function () {
    return bindAff;
});
var bindAff = new Control_Bind.Bind(function () {
    return applyAff;
}, $foreign["_bind"]);
var applyAff = new Control_Apply.Apply(function () {
    return functorAff;
}, Control_Monad.ap(monadAff));
var applicativeAff = new Control_Applicative.Applicative(function () {
    return applyAff;
}, $foreign["_pure"]);
var cancelWith = function (aff) {
    return function (v) {
        return $foreign.generalBracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))({
            killed: function (e) {
                return function (v1) {
                    return v(e);
                };
            },
            failed: Data_Function["const"](Control_Applicative.pure(applicativeAff)),
            completed: Data_Function["const"](Control_Applicative.pure(applicativeAff))
        })(Data_Function["const"](aff));
    };
};
var $$finally = function (fin) {
    return function (a) {
        return bracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(Data_Function["const"](fin))(Data_Function["const"](a));
    };
};
var invincible = function (a) {
    return bracket(a)(Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit)))(Control_Applicative.pure(applicativeAff));
};
var lazyAff = new Control_Lazy.Lazy(function (f) {
    return Control_Bind.bind(bindAff)(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(f);
});
var semigroupAff = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyAff)(Data_Semigroup.append(dictSemigroup)));
};
var monadEffectAff = new Effect_Class.MonadEffect(function () {
    return monadAff;
}, $foreign["_liftEffect"]);
var effectCanceler = function ($50) {
    return Canceler(Data_Function["const"](Effect_Class.liftEffect(monadEffectAff)($50)));
};
var joinFiber = function (v) {
    return $foreign.makeAff(function (k) {
        return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.join(k));
    });
};
var functorFiber = new Data_Functor.Functor(function (f) {
    return function (t) {
        return Effect_Unsafe.unsafePerformEffect(makeFiber(Data_Functor.map(functorAff)(f)(joinFiber(t))));
    };
});
var applyFiber = new Control_Apply.Apply(function () {
    return functorFiber;
}, function (t1) {
    return function (t2) {
        return Effect_Unsafe.unsafePerformEffect(makeFiber(Control_Apply.apply(applyAff)(joinFiber(t1))(joinFiber(t2))));
    };
});
var applicativeFiber = new Control_Applicative.Applicative(function () {
    return applyFiber;
}, function (a) {
    return Effect_Unsafe.unsafePerformEffect(makeFiber(Control_Applicative.pure(applicativeAff)(a)));
});
var killFiber = function (e) {
    return function (v) {
        return Control_Bind.bind(bindAff)(Effect_Class.liftEffect(monadEffectAff)(v.isSuspended))(function (v1) {
            if (v1) {
                return Effect_Class.liftEffect(monadEffectAff)(Data_Functor["void"](Effect.functorEffect)(v.kill(e, Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)))));
            };
            return $foreign.makeAff(function (k) {
                return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.kill(e, k));
            });
        });
    };
};
var fiberCanceler = function ($51) {
    return Canceler(Data_Function.flip(killFiber)($51));
};
var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function () {
    return monadAff;
}, $foreign["_throwError"]);
var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
    return monadThrowAff;
}, $foreign["_catchError"]);
var attempt = Control_Monad_Error_Class["try"](monadErrorAff);
var runAff = function (k) {
    return function (aff) {
        return launchAff(Control_Bind.bindFlipped(bindAff)(function ($52) {
            return Effect_Class.liftEffect(monadEffectAff)(k($52));
        })(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
    };
};
var runAff_ = function (k) {
    return function (aff) {
        return Data_Functor["void"](Effect.functorEffect)(runAff(k)(aff));
    };
};
var runSuspendedAff = function (k) {
    return function (aff) {
        return launchSuspendedAff(Control_Bind.bindFlipped(bindAff)(function ($53) {
            return Effect_Class.liftEffect(monadEffectAff)(k($53));
        })(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
    };
};
var parallelAff = new Control_Parallel_Class.Parallel(function () {
    return applicativeParAff;
}, function () {
    return monadAff;
}, Unsafe_Coerce.unsafeCoerce, $foreign["_sequential"]);
var applicativeParAff = new Control_Applicative.Applicative(function () {
    return applyParAff;
}, function ($54) {
    return Control_Parallel_Class.parallel(parallelAff)(Control_Applicative.pure(applicativeAff)($54));
});
var monoidParAff = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupParAff(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(applicativeParAff)(Data_Monoid.mempty(dictMonoid)));
};
var semigroupCanceler = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return function (err) {
            return Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray)([ v(err), v1(err) ]);
        };
    };
});
var supervise = function (aff) {
    var killError = Effect_Exception.error("[Aff] Child fiber outlived parent");
    var killAll = function (err) {
        return function (sup) {
            return $foreign.makeAff(function (k) {
                return $foreign["_killAll"](err, sup.supervisor, k(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Unit.unit)));
            });
        };
    };
    var acquire = function __do() {
        var v = $foreign["_makeSupervisedFiber"](ffiUtil, aff)();
        v.fiber.run();
        return v;
    };
    return $foreign.generalBracket(Effect_Class.liftEffect(monadEffectAff)(acquire))({
        killed: function (err) {
            return function (sup) {
                return Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray)([ killFiber(err)(sup.fiber), killAll(err)(sup) ]);
            };
        },
        failed: Data_Function["const"](killAll(killError)),
        completed: Data_Function["const"](killAll(killError))
    })(function ($55) {
        return joinFiber((function (v) {
            return v.fiber;
        })($55));
    });
};
var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
    return monadAff;
}, function (k) {
    var go = function (a) {
        return Control_Bind.bind(bindAff)(k(a))(function (v) {
            if (v instanceof Control_Monad_Rec_Class.Done) {
                return Control_Applicative.pure(applicativeAff)(v.value0);
            };
            if (v instanceof Control_Monad_Rec_Class.Loop) {
                return go(v.value0);
            };
            throw new Error("Failed pattern match at Effect.Aff (line 100, column 7 - line 102, column 22): " + [ v.constructor.name ]);
        });
    };
    return go;
});
var monoidAff = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupAff(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(applicativeAff)(Data_Monoid.mempty(dictMonoid)));
};
var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
var monoidCanceler = new Data_Monoid.Monoid(function () {
    return semigroupCanceler;
}, nonCanceler);
var never = $foreign.makeAff(function (v) {
    return Control_Applicative.pure(Effect.applicativeEffect)(Data_Monoid.mempty(monoidCanceler));
});
var apathize = function ($56) {
    return Data_Functor.map(functorAff)(Data_Function["const"](Data_Unit.unit))(attempt($56));
};
var altParAff = new Control_Alt.Alt(function () {
    return functorParAff;
}, $foreign["_parAffAlt"]);
var altAff = new Control_Alt.Alt(function () {
    return functorAff;
}, function (a1) {
    return function (a2) {
        return Control_Monad_Error_Class.catchError(monadErrorAff)(a1)(Data_Function["const"](a2));
    };
});
var plusAff = new Control_Plus.Plus(function () {
    return altAff;
}, Control_Monad_Error_Class.throwError(monadThrowAff)(Effect_Exception.error("Always fails")));
var plusParAff = new Control_Plus.Plus(function () {
    return altParAff;
}, Control_Parallel_Class.parallel(parallelAff)(Control_Plus.empty(plusAff)));
var alternativeParAff = new Control_Alternative.Alternative(function () {
    return applicativeParAff;
}, function () {
    return plusParAff;
});
module.exports = {
    Canceler: Canceler,
    launchAff: launchAff,
    launchAff_: launchAff_,
    launchSuspendedAff: launchSuspendedAff,
    runAff: runAff,
    runAff_: runAff_,
    runSuspendedAff: runSuspendedAff,
    forkAff: forkAff,
    suspendAff: suspendAff,
    supervise: supervise,
    attempt: attempt,
    apathize: apathize,
    delay: delay,
    never: never,
    "finally": $$finally,
    invincible: invincible,
    killFiber: killFiber,
    joinFiber: joinFiber,
    cancelWith: cancelWith,
    bracket: bracket,
    nonCanceler: nonCanceler,
    effectCanceler: effectCanceler,
    fiberCanceler: fiberCanceler,
    functorAff: functorAff,
    applyAff: applyAff,
    applicativeAff: applicativeAff,
    bindAff: bindAff,
    monadAff: monadAff,
    semigroupAff: semigroupAff,
    monoidAff: monoidAff,
    altAff: altAff,
    plusAff: plusAff,
    monadRecAff: monadRecAff,
    monadThrowAff: monadThrowAff,
    monadErrorAff: monadErrorAff,
    monadEffectAff: monadEffectAff,
    lazyAff: lazyAff,
    functorParAff: functorParAff,
    applyParAff: applyParAff,
    applicativeParAff: applicativeParAff,
    semigroupParAff: semigroupParAff,
    monoidParAff: monoidParAff,
    altParAff: altParAff,
    plusParAff: plusParAff,
    alternativeParAff: alternativeParAff,
    parallelAff: parallelAff,
    functorFiber: functorFiber,
    applyFiber: applyFiber,
    applicativeFiber: applicativeFiber,
    newtypeCanceler: newtypeCanceler,
    semigroupCanceler: semigroupCanceler,
    monoidCanceler: monoidCanceler,
    makeAff: $foreign.makeAff,
    generalBracket: $foreign.generalBracket
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Lazy/index.js":25,"../Control.Monad.Error.Class/index.js":28,"../Control.Monad.Rec.Class/index.js":43,"../Control.Monad/index.js":55,"../Control.Parallel.Class/index.js":58,"../Control.Parallel/index.js":59,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Either/index.js":131,"../Data.Foldable/index.js":141,"../Data.Function.Uncurried/index.js":144,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Semigroup/index.js":248,"../Data.Time.Duration/index.js":276,"../Data.Unit/index.js":289,"../Effect.Class/index.js":298,"../Effect.Exception/index.js":302,"../Effect.Unsafe/index.js":310,"../Effect/index.js":312,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"./foreign.js":296}],298:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Effect = require("../Effect/index.js");
var MonadEffect = function (Monad0, liftEffect) {
    this.Monad0 = Monad0;
    this.liftEffect = liftEffect;
};
var monadEffectEffect = new MonadEffect(function () {
    return Effect.monadEffect;
}, Control_Category.identity(Control_Category.categoryFn));
var liftEffect = function (dict) {
    return dict.liftEffect;
};
module.exports = {
    liftEffect: liftEffect,
    MonadEffect: MonadEffect,
    monadEffectEffect: monadEffectEffect
};

},{"../Control.Category/index.js":14,"../Control.Monad/index.js":55,"../Effect/index.js":312}],299:[function(require,module,exports){
"use strict";

exports.log = function (s) {
  return function () {
    console.log(s);
    return {};
  };
};

exports.warn = function (s) {
  return function () {
    console.warn(s);
    return {};
  };
};

exports.error = function (s) {
  return function () {
    console.error(s);
    return {};
  };
};

exports.info = function (s) {
  return function () {
    console.info(s);
    return {};
  };
};

exports.time = function (s) {
  return function () {
    console.time(s);
    return {};
  };
};

exports.timeEnd = function (s) {
  return function () {
    console.timeEnd(s);
    return {};
  };
};

},{}],300:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var warnShow = function (dictShow) {
    return function (a) {
        return $foreign.warn(Data_Show.show(dictShow)(a));
    };
};
var logShow = function (dictShow) {
    return function (a) {
        return $foreign.log(Data_Show.show(dictShow)(a));
    };
};
var infoShow = function (dictShow) {
    return function (a) {
        return $foreign.info(Data_Show.show(dictShow)(a));
    };
};
var errorShow = function (dictShow) {
    return function (a) {
        return $foreign.error(Data_Show.show(dictShow)(a));
    };
};
module.exports = {
    logShow: logShow,
    warnShow: warnShow,
    errorShow: errorShow,
    infoShow: infoShow,
    log: $foreign.log,
    warn: $foreign.warn,
    error: $foreign.error,
    info: $foreign.info,
    time: $foreign.time,
    timeEnd: $foreign.timeEnd
};

},{"../Data.Show/index.js":254,"../Data.Unit/index.js":289,"../Effect/index.js":312,"./foreign.js":299}],301:[function(require,module,exports){
"use strict";

exports.showErrorImpl = function (err) {
  return err.stack || err.toString();
};

exports.error = function (msg) {
  return new Error(msg);
};

exports.message = function (e) {
  return e.message;
};

exports.name = function (e) {
  return e.name || "Error";
};

exports.stackImpl = function (just) {
  return function (nothing) {
    return function (e) {
      return e.stack ? just(e.stack) : nothing;
    };
  };
};

exports.throwException = function (e) {
  return function () {
    throw e;
  };
};

exports.catchException = function (c) {
  return function (t) {
    return function () {
      try {
        return t();
      } catch (e) {
        if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
          return c(e)();
        } else {
          return c(new Error(e.toString()))();
        }
      }
    };
  };
};

},{}],302:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Show = require("../Data.Show/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var $$try = function (action) {
    return $foreign.catchException(function ($0) {
        return Control_Applicative.pure(Effect.applicativeEffect)(Data_Either.Left.create($0));
    })(Data_Functor.map(Effect.functorEffect)(Data_Either.Right.create)(action));
};
var $$throw = function ($1) {
    return $foreign.throwException($foreign.error($1));
};
var stack = $foreign.stackImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var showError = new Data_Show.Show($foreign.showErrorImpl);
module.exports = {
    stack: stack,
    "throw": $$throw,
    "try": $$try,
    showError: showError,
    error: $foreign.error,
    message: $foreign.message,
    name: $foreign.name,
    throwException: $foreign.throwException,
    catchException: $foreign.catchException
};

},{"../Control.Applicative/index.js":7,"../Control.Semigroupoid/index.js":61,"../Data.Either/index.js":131,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Show/index.js":254,"../Effect/index.js":312,"../Prelude/index.js":385,"./foreign.js":301}],303:[function(require,module,exports){
"use strict";

exports.random = Math.random;

},{}],304:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var randomRange = function (min) {
    return function (max) {
        return function __do() {
            var v = $foreign.random();
            return v * (max - min) + min;
        };
    };
};
var randomInt = function (low) {
    return function (high) {
        return function __do() {
            var v = $foreign.random();
            var asNumber = ((Data_Int.toNumber(high) - Data_Int.toNumber(low)) + 1) * v + Data_Int.toNumber(low);
            return Data_Int.floor(asNumber);
        };
    };
};
var randomBool = Data_Functor.map(Effect.functorEffect)(function (v) {
    return v < 0.5;
})($foreign.random);
module.exports = {
    randomInt: randomInt,
    randomRange: randomRange,
    randomBool: randomBool,
    random: $foreign.random
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Int/index.js":167,"../Data.Ord/index.js":229,"../Data.Ring/index.js":242,"../Data.Semiring/index.js":251,"../Effect/index.js":312,"../Prelude/index.js":385,"./foreign.js":303}],305:[function(require,module,exports){
"use strict";

exports.new = function (val) {
  return function () {
    return { value: val };
  };
};

exports.read = function (ref) {
  return function () {
    return ref.value;
  };
};

exports["modify'"] = function (f) {
  return function (ref) {
    return function () {
      var t = f(ref.value);
      ref.value = t.state;
      return t.value;
    };
  };
};

exports.write = function (val) {
  return function (ref) {
    return function () {
      ref.value = val;
      return {};
    };
  };
};

},{}],306:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var modify = function (f) {
    return $foreign["modify'"](function (s) {
        var s$prime = f(s);
        return {
            state: s$prime,
            value: s$prime
        };
    });
};
var modify_ = function (f) {
    return function (s) {
        return Data_Functor["void"](Effect.functorEffect)(modify(f)(s));
    };
};
module.exports = {
    modify: modify,
    modify_: modify_,
    "new": $foreign["new"],
    read: $foreign.read,
    "modify'": $foreign["modify'"],
    write: $foreign.write
};

},{"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Effect/index.js":312,"../Prelude/index.js":385,"./foreign.js":305}],307:[function(require,module,exports){
"use strict";

exports.mkEffectFn1 = function mkEffectFn1(fn) {
  return function(x) {
    return fn(x)();
  };
};

exports.mkEffectFn2 = function mkEffectFn2(fn) {
  return function(a, b) {
    return fn(a)(b)();
  };
};

exports.mkEffectFn3 = function mkEffectFn3(fn) {
  return function(a, b, c) {
    return fn(a)(b)(c)();
  };
};

exports.mkEffectFn4 = function mkEffectFn4(fn) {
  return function(a, b, c, d) {
    return fn(a)(b)(c)(d)();
  };
};

exports.mkEffectFn5 = function mkEffectFn5(fn) {
  return function(a, b, c, d, e) {
    return fn(a)(b)(c)(d)(e)();
  };
};

exports.mkEffectFn6 = function mkEffectFn6(fn) {
  return function(a, b, c, d, e, f) {
    return fn(a)(b)(c)(d)(e)(f)();
  };
};

exports.mkEffectFn7 = function mkEffectFn7(fn) {
  return function(a, b, c, d, e, f, g) {
    return fn(a)(b)(c)(d)(e)(f)(g)();
  };
};

exports.mkEffectFn8 = function mkEffectFn8(fn) {
  return function(a, b, c, d, e, f, g, h) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)();
  };
};

exports.mkEffectFn9 = function mkEffectFn9(fn) {
  return function(a, b, c, d, e, f, g, h, i) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)();
  };
};

exports.mkEffectFn10 = function mkEffectFn10(fn) {
  return function(a, b, c, d, e, f, g, h, i, j) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)();
  };
};

exports.runEffectFn1 = function runEffectFn1(fn) {
  return function(a) {
    return function() {
      return fn(a);
    };
  };
};

exports.runEffectFn2 = function runEffectFn2(fn) {
  return function(a) {
    return function(b) {
      return function() {
        return fn(a, b);
      };
    };
  };
};

exports.runEffectFn3 = function runEffectFn3(fn) {
  return function(a) {
    return function(b) {
      return function(c) {
        return function() {
          return fn(a, b, c);
        };
      };
    };
  };
};

exports.runEffectFn4 = function runEffectFn4(fn) {
  return function(a) {
    return function(b) {
      return function(c) {
        return function(d) {
          return function() {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
};

exports.runEffectFn5 = function runEffectFn5(fn) {
  return function(a) {
    return function(b) {
      return function(c) {
        return function(d) {
          return function(e) {
            return function() {
              return fn(a, b, c, d, e);
            };
          };
        };
      };
    };
  };
};

exports.runEffectFn6 = function runEffectFn6(fn) {
  return function(a) {
    return function(b) {
      return function(c) {
        return function(d) {
          return function(e) {
            return function(f) {
              return function() {
                return fn(a, b, c, d, e, f);
              };
            };
          };
        };
      };
    };
  };
};

exports.runEffectFn7 = function runEffectFn7(fn) {
  return function(a) {
    return function(b) {
      return function(c) {
        return function(d) {
          return function(e) {
            return function(f) {
              return function(g) {
                return function() {
                  return fn(a, b, c, d, e, f, g);
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runEffectFn8 = function runEffectFn8(fn) {
  return function(a) {
    return function(b) {
      return function(c) {
        return function(d) {
          return function(e) {
            return function(f) {
              return function(g) {
                return function(h) {
                  return function() {
                    return fn(a, b, c, d, e, f, g, h);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runEffectFn9 = function runEffectFn9(fn) {
  return function(a) {
    return function(b) {
      return function(c) {
        return function(d) {
          return function(e) {
            return function(f) {
              return function(g) {
                return function(h) {
                  return function(i) {
                    return function() {
                      return fn(a, b, c, d, e, f, g, h, i);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runEffectFn10 = function runEffectFn10(fn) {
  return function(a) {
    return function(b) {
      return function(c) {
        return function(d) {
          return function(e) {
            return function(f) {
              return function(g) {
                return function(h) {
                  return function(i) {
                    return function(j) {
                      return function() {
                        return fn(a, b, c, d, e, f, g, h, i, j);
                      };
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

},{}],308:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Effect = require("../Effect/index.js");
module.exports = {
    mkEffectFn1: $foreign.mkEffectFn1,
    mkEffectFn2: $foreign.mkEffectFn2,
    mkEffectFn3: $foreign.mkEffectFn3,
    mkEffectFn4: $foreign.mkEffectFn4,
    mkEffectFn5: $foreign.mkEffectFn5,
    mkEffectFn6: $foreign.mkEffectFn6,
    mkEffectFn7: $foreign.mkEffectFn7,
    mkEffectFn8: $foreign.mkEffectFn8,
    mkEffectFn9: $foreign.mkEffectFn9,
    mkEffectFn10: $foreign.mkEffectFn10,
    runEffectFn1: $foreign.runEffectFn1,
    runEffectFn2: $foreign.runEffectFn2,
    runEffectFn3: $foreign.runEffectFn3,
    runEffectFn4: $foreign.runEffectFn4,
    runEffectFn5: $foreign.runEffectFn5,
    runEffectFn6: $foreign.runEffectFn6,
    runEffectFn7: $foreign.runEffectFn7,
    runEffectFn8: $foreign.runEffectFn8,
    runEffectFn9: $foreign.runEffectFn9,
    runEffectFn10: $foreign.runEffectFn10
};

},{"../Effect/index.js":312,"./foreign.js":307}],309:[function(require,module,exports){
"use strict";

exports.unsafePerformEffect = function (f) {
  return f();
};

},{}],310:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Effect = require("../Effect/index.js");
module.exports = {
    unsafePerformEffect: $foreign.unsafePerformEffect
};

},{"../Effect/index.js":312,"./foreign.js":309}],311:[function(require,module,exports){
"use strict";

exports.pureE = function (a) {
  return function () {
    return a;
  };
};

exports.bindE = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.untilE = function (f) {
  return function () {
    while (!f());
    return {};
  };
};

exports.whileE = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
      return {};
    };
  };
};

exports.forE = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreachE = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};

},{}],312:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Prelude = require("../Prelude/index.js");
var monadEffect = new Control_Monad.Monad(function () {
    return applicativeEffect;
}, function () {
    return bindEffect;
});
var bindEffect = new Control_Bind.Bind(function () {
    return applyEffect;
}, $foreign.bindE);
var applyEffect = new Control_Apply.Apply(function () {
    return functorEffect;
}, Control_Monad.ap(monadEffect));
var applicativeEffect = new Control_Applicative.Applicative(function () {
    return applyEffect;
}, $foreign.pureE);
var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
var semigroupEffect = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyEffect)(Data_Semigroup.append(dictSemigroup)));
};
var monoidEffect = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupEffect(dictMonoid.Semigroup0());
    }, $foreign.pureE(Data_Monoid.mempty(dictMonoid)));
};
module.exports = {
    functorEffect: functorEffect,
    applyEffect: applyEffect,
    applicativeEffect: applicativeEffect,
    bindEffect: bindEffect,
    monadEffect: monadEffect,
    semigroupEffect: semigroupEffect,
    monoidEffect: monoidEffect,
    untilE: $foreign.untilE,
    whileE: $foreign.whileE,
    forE: $foreign.forE,
    foreachE: $foreign.foreachE
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Monad/index.js":55,"../Data.Functor/index.js":153,"../Data.Monoid/index.js":218,"../Data.Semigroup/index.js":248,"../Prelude/index.js":385,"./foreign.js":311}],313:[function(require,module,exports){
"use strict";

exports.unsafeReadPropImpl = function (f, s, key, value) {
  return value == null ? f : s(value[key]);
};

exports.unsafeHasOwnProperty = function (prop, value) {
  return Object.prototype.hasOwnProperty.call(value, prop);
};

exports.unsafeHasProperty = function (prop, value) {
  return prop in value;
};

},{}],314:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_List_NonEmpty = require("../Data.List.NonEmpty/index.js");
var Foreign = require("../Foreign/index.js");
var Prelude = require("../Prelude/index.js");
var Index = function (errorAt, hasOwnProperty, hasProperty, index) {
    this.errorAt = errorAt;
    this.hasOwnProperty = hasOwnProperty;
    this.hasProperty = hasProperty;
    this.index = index;
};
var Indexable = function (ix) {
    this.ix = ix;
};
var unsafeReadProp = function (k) {
    return function (value) {
        return $foreign.unsafeReadPropImpl(Foreign.fail(new Foreign.TypeMismatch("object", Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
    };
};
var readProp = unsafeReadProp;
var readIndex = unsafeReadProp;
var ix = function (dict) {
    return dict.ix;
};
var index = function (dict) {
    return dict.index;
};
var indexableExceptT = new Indexable(function (dictIndex) {
    return function (f) {
        return function (i) {
            return Control_Bind.bindFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Function.flip(index(dictIndex))(i))(f);
        };
    };
});
var indexableForeign = new Indexable(function (dictIndex) {
    return index(dictIndex);
});
var hasPropertyImpl = function (v) {
    return function (value) {
        if (Foreign.isNull(value)) {
            return false;
        };
        if (Foreign.isUndefined(value)) {
            return false;
        };
        if (Foreign.typeOf(value) === "object" || Foreign.typeOf(value) === "function") {
            return $foreign.unsafeHasProperty(v, value);
        };
        return false;
    };
};
var hasProperty = function (dict) {
    return dict.hasProperty;
};
var hasOwnPropertyImpl = function (v) {
    return function (value) {
        if (Foreign.isNull(value)) {
            return false;
        };
        if (Foreign.isUndefined(value)) {
            return false;
        };
        if (Foreign.typeOf(value) === "object" || Foreign.typeOf(value) === "function") {
            return $foreign.unsafeHasOwnProperty(v, value);
        };
        return false;
    };
};
var indexInt = new Index(Foreign.ErrorAtIndex.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(readIndex));
var indexString = new Index(Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(readProp));
var hasOwnProperty = function (dict) {
    return dict.hasOwnProperty;
};
var errorAt = function (dict) {
    return dict.errorAt;
};
module.exports = {
    Index: Index,
    Indexable: Indexable,
    readProp: readProp,
    readIndex: readIndex,
    ix: ix,
    index: index,
    hasProperty: hasProperty,
    hasOwnProperty: hasOwnProperty,
    errorAt: errorAt,
    indexString: indexString,
    indexInt: indexInt,
    indexableForeign: indexableForeign,
    indexableExceptT: indexableExceptT
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Control.Monad.Except.Trans/index.js":29,"../Data.Eq/index.js":135,"../Data.Function.Uncurried/index.js":144,"../Data.Function/index.js":145,"../Data.HeytingAlgebra/index.js":162,"../Data.Identity/index.js":163,"../Data.List.NonEmpty/index.js":202,"../Foreign/index.js":320,"../Prelude/index.js":385,"./foreign.js":313}],315:[function(require,module,exports){
"use strict";

exports["new"] = function () {
  return {};
};

exports.peekImpl = function (just) {
  return function (nothing) {
    return function (k) {
      return function (m) {
        return function () {
          return {}.hasOwnProperty.call(m, k) ? just(m[k]) : nothing;
        };
      };
    };
  };
};

exports.poke = function (k) {
  return function (v) {
    return function (m) {
      return function () {
        m[k] = v;
        return m;
      };
    };
  };
};

exports["delete"] = function (k) {
  return function (m) {
    return function () {
      delete m[k];
      return m;
    };
  };
};

},{}],316:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Monad_ST = require("../Control.Monad.ST/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var peek = $foreign.peekImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
    peek: peek,
    "new": $foreign["new"],
    poke: $foreign.poke,
    "delete": $foreign["delete"]
};

},{"../Control.Monad.ST/index.js":47,"../Data.Maybe/index.js":210,"./foreign.js":315}],317:[function(require,module,exports){
"use strict";

exports._copyST = function (m) {
  return function () {
    var r = {};
    for (var k in m) {
      if (hasOwnProperty.call(m, k)) {
        r[k] = m[k];
      }
    }
    return r;
  };
};

exports.empty = {};

exports.runST = function (f) {
  return f();
};

exports._fmapObject = function (m0, f) {
  var m = {};
  for (var k in m0) {
    if (hasOwnProperty.call(m0, k)) {
      m[k] = f(m0[k]);
    }
  }
  return m;
};

exports._mapWithKey = function (m0, f) {
  var m = {};
  for (var k in m0) {
    if (hasOwnProperty.call(m0, k)) {
      m[k] = f(k)(m0[k]);
    }
  }
  return m;
};

exports._foldM = function (bind) {
  return function (f) {
    return function (mz) {
      return function (m) {
        var acc = mz;
        function g(k) {
          return function (z) {
            return f(z)(k)(m[k]);
          };
        }
        for (var k in m) {
          if (hasOwnProperty.call(m, k)) {
            acc = bind(acc)(g(k));
          }
        }
        return acc;
      };
    };
  };
};

exports._foldSCObject = function (m, z, f, fromMaybe) {
  var acc = z;
  for (var k in m) {
    if (hasOwnProperty.call(m, k)) {
      var maybeR = f(acc)(k)(m[k]);
      var r = fromMaybe(null)(maybeR);
      if (r === null) return acc;
      else acc = r;
    }
  }
  return acc;
};

exports.all = function (f) {
  return function (m) {
    for (var k in m) {
      if (hasOwnProperty.call(m, k) && !f(k)(m[k])) return false;
    }
    return true;
  };
};

exports.size = function (m) {
  var s = 0;
  for (var k in m) {
    if (hasOwnProperty.call(m, k)) {
      ++s;
    }
  }
  return s;
};

exports._lookup = function (no, yes, k, m) {
  return k in m ? yes(m[k]) : no;
};

exports._unsafeDeleteObject = function (m, k) {
  delete m[k];
  return m;
};

exports._lookupST = function (no, yes, k, m) {
  return function () {
    return k in m ? yes(m[k]) : no;
  };
};

function toArrayWithKey(f) {
  return function (m) {
    var r = [];
    for (var k in m) {
      if (hasOwnProperty.call(m, k)) {
        r.push(f(k)(m[k]));
      }
    }
    return r;
  };
}

exports.toArrayWithKey = toArrayWithKey;

exports.keys = Object.keys || toArrayWithKey(function (k) {
  return function () { return k; };
});

},{}],318:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad_ST = require("../Control.Monad.ST/index.js");
var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Foreign_Object_ST = require("../Foreign.Object.ST/index.js");
var Prelude = require("../Prelude/index.js");
var Type_Row_Homogeneous = require("../Type.Row.Homogeneous/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var values = $foreign.toArrayWithKey(function (v) {
    return function (v1) {
        return v1;
    };
});
var toUnfoldable = function (dictUnfoldable) {
    return function ($45) {
        return Data_Array.toUnfoldable(dictUnfoldable)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)($45));
    };
};
var toAscUnfoldable = function (dictUnfoldable) {
    return function ($46) {
        return Data_Array.toUnfoldable(dictUnfoldable)(Data_Array.sortWith(Data_Ord.ordString)(Data_Tuple.fst)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)($46)));
    };
};
var toAscArray = toAscUnfoldable(Data_Unfoldable.unfoldableArray);
var toArray = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);
var thawST = $foreign["_copyST"];
var singleton = function (k) {
    return function (v) {
        return $foreign.runST(Control_Bind.bindFlipped(Control_Monad_ST_Internal.bindST)(Foreign_Object_ST.poke(k)(v))(Foreign_Object_ST["new"]));
    };
};
var showObject = function (dictShow) {
    return new Data_Show.Show(function (m) {
        return "(fromFoldable " + (Data_Show.show(Data_Show.showArray(Data_Tuple.showTuple(Data_Show.showString)(dictShow)))(toArray(m)) + ")");
    });
};
var mutate = function (f) {
    return function (m) {
        return $foreign.runST(function __do() {
            var v = thawST(m)();
            var v1 = f(v)();
            return v;
        });
    };
};
var member = Data_Function_Uncurried.runFn4($foreign["_lookup"])(false)(Data_Function["const"](true));
var mapWithKey = function (f) {
    return function (m) {
        return $foreign["_mapWithKey"](m, f);
    };
};
var lookup = Data_Function_Uncurried.runFn4($foreign["_lookup"])(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
var isSubmap = function (dictEq) {
    return function (m1) {
        return function (m2) {
            var f = function (k) {
                return function (v) {
                    return $foreign["_lookup"](false, Data_Eq.eq(dictEq)(v), k, m2);
                };
            };
            return $foreign.all(f)(m1);
        };
    };
};
var isEmpty = $foreign.all(function (v) {
    return function (v1) {
        return false;
    };
});
var insert = function (k) {
    return function (v) {
        return mutate(Foreign_Object_ST.poke(k)(v));
    };
};
var functorObject = new Data_Functor.Functor(function (f) {
    return function (m) {
        return $foreign["_fmapObject"](m, f);
    };
});
var functorWithIndexObject = new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorObject;
}, mapWithKey);
var fromHomogeneous = function (dictHomogeneous) {
    return Unsafe_Coerce.unsafeCoerce;
};
var fromFoldableWith = function (dictFoldable) {
    return function (f) {
        return function (l) {
            return $foreign.runST(function __do() {
                var v = Foreign_Object_ST["new"]();
                Data_Foldable.for_(Control_Monad_ST_Internal.applicativeST)(dictFoldable)(l)(function (v1) {
                    return function __do() {
                        var v$prime = $foreign["_lookupST"](v1.value1, f(v1.value1), v1.value0, v)();
                        return Foreign_Object_ST.poke(v1.value0)(v$prime)(v)();
                    };
                })();
                return v;
            });
        };
    };
};
var fromFoldable = function (dictFoldable) {
    return function (l) {
        return $foreign.runST(function __do() {
            var v = Foreign_Object_ST["new"]();
            Data_Foldable.for_(Control_Monad_ST_Internal.applicativeST)(Data_Foldable.foldableArray)(Data_Array.fromFoldable(dictFoldable)(l))(function (v1) {
                return Foreign_Object_ST.poke(v1.value0)(v1.value1)(v);
            })();
            return v;
        });
    };
};
var freezeST = $foreign["_copyST"];
var foldMaybe = function (f) {
    return function (z) {
        return function (m) {
            return $foreign["_foldSCObject"](m, z, f, Data_Maybe.fromMaybe);
        };
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (z) {
            return $foreign["_foldM"](Control_Bind.bind(dictMonad.Bind1()))(f)(Control_Applicative.pure(dictMonad.Applicative0())(z));
        };
    };
};
var semigroupObject = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (m1) {
        return function (m2) {
            return mutate(function (s1) {
                return foldM(Control_Monad_ST_Internal.monadST)(function (s2) {
                    return function (k) {
                        return function (v2) {
                            return Foreign_Object_ST.poke(k)($foreign["_lookup"](v2, function (v1) {
                                return Data_Semigroup.append(dictSemigroup)(v1)(v2);
                            }, k, m2))(s2);
                        };
                    };
                })(s1)(m1);
            })(m2);
        };
    });
};
var monoidObject = function (dictSemigroup) {
    return new Data_Monoid.Monoid(function () {
        return semigroupObject(dictSemigroup);
    }, $foreign.empty);
};
var union = function (m) {
    return mutate(function (s) {
        return foldM(Control_Monad_ST_Internal.monadST)(function (s$prime) {
            return function (k) {
                return function (v) {
                    return Foreign_Object_ST.poke(k)(v)(s$prime);
                };
            };
        })(s)(m);
    });
};
var unions = function (dictFoldable) {
    return Data_Foldable.foldl(dictFoldable)(union)($foreign.empty);
};
var fold = $foreign["_foldM"](Data_Function.applyFlipped);
var foldMap = function (dictMonoid) {
    return function (f) {
        return fold(function (acc) {
            return function (k) {
                return function (v) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(k)(v));
                };
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
};
var foldableObject = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return foldMap(dictMonoid)(Data_Function["const"](f));
    };
}, function (f) {
    return fold(function (z) {
        return function (v) {
            return f(z);
        };
    });
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
});
var foldableWithIndexObject = new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableObject;
}, function (dictMonoid) {
    return foldMap(dictMonoid);
}, function (f) {
    return fold(Data_Function.flip(f));
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Tuple.uncurry(f))(z)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)(m));
        };
    };
});
var traversableWithIndexObject = new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexObject;
}, function () {
    return functorWithIndexObject;
}, function () {
    return traversableObject;
}, function (dictApplicative) {
    return function (f) {
        return function (ms) {
            return fold(function (acc) {
                return function (k) {
                    return function (v) {
                        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Function.flip(insert(k)))(acc))(f(k)(v));
                    };
                };
            })(Control_Applicative.pure(dictApplicative)($foreign.empty))(ms);
        };
    };
});
var traversableObject = new Data_Traversable.Traversable(function () {
    return foldableObject;
}, function () {
    return functorObject;
}, function (dictApplicative) {
    return Data_Traversable.traverse(traversableObject)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
}, function (dictApplicative) {
    return function ($47) {
        return Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexObject)(dictApplicative)(Data_Function["const"]($47));
    };
});
var filterWithKey = function (predicate) {
    return function (m) {
        var go = (function () {
            var step = function (acc) {
                return function (k) {
                    return function (v) {
                        var $41 = predicate(k)(v);
                        if ($41) {
                            return Foreign_Object_ST.poke(k)(v)(acc);
                        };
                        return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)(acc);
                    };
                };
            };
            return function __do() {
                var v = Foreign_Object_ST["new"]();
                return foldM(Control_Monad_ST_Internal.monadST)(step)(v)(m)();
            };
        })();
        return $foreign.runST(go);
    };
};
var filterKeys = function (predicate) {
    return filterWithKey(function ($48) {
        return Data_Function["const"](predicate($48));
    });
};
var filter = function (predicate) {
    return filterWithKey(Data_Function["const"](predicate));
};
var eqObject = function (dictEq) {
    return new Data_Eq.Eq(function (m1) {
        return function (m2) {
            return isSubmap(dictEq)(m1)(m2) && isSubmap(dictEq)(m2)(m1);
        };
    });
};
var ordObject = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqObject(dictOrd.Eq0());
    }, function (m1) {
        return function (m2) {
            return Data_Ord.compare(Data_Ord.ordArray(Data_Tuple.ordTuple(Data_Ord.ordString)(dictOrd)))(toAscArray(m1))(toAscArray(m2));
        };
    });
};
var eq1Object = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqObject(dictEq));
});
var $$delete = function (k) {
    return mutate(Foreign_Object_ST["delete"](k));
};
var pop = function (k) {
    return function (m) {
        return Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(lookup(k)(m))(function (a) {
            return new Data_Tuple.Tuple(a, $$delete(k)(m));
        });
    };
};
var alter = function (f) {
    return function (k) {
        return function (m) {
            var v = f(lookup(k)(m));
            if (v instanceof Data_Maybe.Nothing) {
                return $$delete(k)(m);
            };
            if (v instanceof Data_Maybe.Just) {
                return insert(k)(v.value0)(m);
            };
            throw new Error("Failed pattern match at Foreign.Object (line 207, column 15 - line 209, column 25): " + [ v.constructor.name ]);
        };
    };
};
var update = function (f) {
    return function (k) {
        return function (m) {
            return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
        };
    };
};
module.exports = {
    isEmpty: isEmpty,
    singleton: singleton,
    insert: insert,
    lookup: lookup,
    toUnfoldable: toUnfoldable,
    toAscUnfoldable: toAscUnfoldable,
    fromFoldable: fromFoldable,
    fromFoldableWith: fromFoldableWith,
    fromHomogeneous: fromHomogeneous,
    "delete": $$delete,
    pop: pop,
    member: member,
    alter: alter,
    update: update,
    mapWithKey: mapWithKey,
    filterWithKey: filterWithKey,
    filterKeys: filterKeys,
    filter: filter,
    values: values,
    union: union,
    unions: unions,
    isSubmap: isSubmap,
    fold: fold,
    foldMap: foldMap,
    foldM: foldM,
    foldMaybe: foldMaybe,
    thawST: thawST,
    freezeST: freezeST,
    functorObject: functorObject,
    functorWithIndexObject: functorWithIndexObject,
    foldableObject: foldableObject,
    foldableWithIndexObject: foldableWithIndexObject,
    traversableObject: traversableObject,
    traversableWithIndexObject: traversableWithIndexObject,
    eqObject: eqObject,
    eq1Object: eq1Object,
    ordObject: ordObject,
    showObject: showObject,
    semigroupObject: semigroupObject,
    monoidObject: monoidObject,
    empty: $foreign.empty,
    size: $foreign.size,
    keys: $foreign.keys,
    all: $foreign.all,
    runST: $foreign.runST,
    toArrayWithKey: $foreign.toArrayWithKey
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Monad.ST.Internal/index.js":45,"../Control.Monad.ST/index.js":47,"../Control.Semigroupoid/index.js":61,"../Data.Array/index.js":99,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.FoldableWithIndex/index.js":142,"../Data.Function.Uncurried/index.js":144,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.FunctorWithIndex/index.js":155,"../Data.HeytingAlgebra/index.js":162,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Data.Traversable/index.js":281,"../Data.TraversableWithIndex/index.js":282,"../Data.Tuple/index.js":283,"../Data.Unfoldable/index.js":285,"../Foreign.Object.ST/index.js":316,"../Prelude/index.js":385,"../Type.Row.Homogeneous/index.js":422,"../Unsafe.Coerce/index.js":425,"./foreign.js":317}],319:[function(require,module,exports){
"use strict";

exports.unsafeToForeign = function (value) {
  return value;
};

exports.unsafeFromForeign = function (value) {
  return value;
};

exports.typeOf = function (value) {
  return typeof value;
};

exports.tagOf = function (value) {
  return Object.prototype.toString.call(value).slice(8, -1);
};

exports.isNull = function (value) {
  return value === null;
};

exports.isUndefined = function (value) {
  return value === undefined;
};

exports.isArray = Array.isArray || function (value) {
  return Object.prototype.toString.call(value) === "[object Array]";
};

},{}],320:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Except = require("../Control.Monad.Except/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_List_NonEmpty = require("../Data.List.NonEmpty/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");
var Prelude = require("../Prelude/index.js");
var ForeignError = (function () {
    function ForeignError(value0) {
        this.value0 = value0;
    };
    ForeignError.create = function (value0) {
        return new ForeignError(value0);
    };
    return ForeignError;
})();
var TypeMismatch = (function () {
    function TypeMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TypeMismatch.create = function (value0) {
        return function (value1) {
            return new TypeMismatch(value0, value1);
        };
    };
    return TypeMismatch;
})();
var ErrorAtIndex = (function () {
    function ErrorAtIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtIndex.create = function (value0) {
        return function (value1) {
            return new ErrorAtIndex(value0, value1);
        };
    };
    return ErrorAtIndex;
})();
var ErrorAtProperty = (function () {
    function ErrorAtProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtProperty.create = function (value0) {
        return function (value1) {
            return new ErrorAtProperty(value0, value1);
        };
    };
    return ErrorAtProperty;
})();
var showForeignError = new Data_Show.Show(function (v) {
    if (v instanceof ForeignError) {
        return "(ForeignError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
    };
    if (v instanceof ErrorAtIndex) {
        return "(ErrorAtIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
    };
    if (v instanceof ErrorAtProperty) {
        return "(ErrorAtProperty " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
    };
    if (v instanceof TypeMismatch) {
        return "(TypeMismatch " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
    };
    throw new Error("Failed pattern match at Foreign (line 63, column 1 - line 63, column 47): " + [ v.constructor.name ]);
});
var renderForeignError = function (v) {
    if (v instanceof ForeignError) {
        return v.value0;
    };
    if (v instanceof ErrorAtIndex) {
        return "Error at array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (": " + renderForeignError(v.value1)));
    };
    if (v instanceof ErrorAtProperty) {
        return "Error at property " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + renderForeignError(v.value1)));
    };
    if (v instanceof TypeMismatch) {
        return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
    };
    throw new Error("Failed pattern match at Foreign (line 72, column 1 - line 72, column 45): " + [ v.constructor.name ]);
};
var readUndefined = function (value) {
    if ($foreign.isUndefined(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
    };
    if (Data_Boolean.otherwise) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
    };
    throw new Error("Failed pattern match at Foreign (line 157, column 1 - line 157, column 46): " + [ value.constructor.name ]);
};
var readNullOrUndefined = function (value) {
    if ($foreign.isNull(value) || $foreign.isUndefined(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
    };
    if (Data_Boolean.otherwise) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
    };
    throw new Error("Failed pattern match at Foreign (line 162, column 1 - line 162, column 52): " + [ value.constructor.name ]);
};
var readNull = function (value) {
    if ($foreign.isNull(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
    };
    if (Data_Boolean.otherwise) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
    };
    throw new Error("Failed pattern match at Foreign (line 152, column 1 - line 152, column 41): " + [ value.constructor.name ]);
};
var fail = function ($107) {
    return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($107));
};
var readArray = function (value) {
    if ($foreign.isArray(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
    };
    if (Data_Boolean.otherwise) {
        return fail(new TypeMismatch("array", $foreign.tagOf(value)));
    };
    throw new Error("Failed pattern match at Foreign (line 147, column 1 - line 147, column 42): " + [ value.constructor.name ]);
};
var unsafeReadTagged = function (tag) {
    return function (value) {
        if ($foreign.tagOf(value) === tag) {
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
        };
        if (Data_Boolean.otherwise) {
            return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
        };
        throw new Error("Failed pattern match at Foreign (line 106, column 1 - line 106, column 55): " + [ tag.constructor.name, value.constructor.name ]);
    };
};
var readBoolean = unsafeReadTagged("Boolean");
var readNumber = unsafeReadTagged("Number");
var readInt = function (value) {
    var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Int", $foreign.tagOf(value))));
    var fromNumber = function ($108) {
        return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Int.fromNumber($108));
    };
    return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromNumber))(readNumber(value));
};
var readString = unsafeReadTagged("String");
var readChar = function (value) {
    var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Char", $foreign.tagOf(value))));
    var fromString = function ($109) {
        return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_String_CodeUnits.toChar($109));
    };
    return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromString))(readString(value));
};
var eqForeignError = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof ForeignError && y instanceof ForeignError) {
            return x.value0 === y.value0;
        };
        if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
            return x.value0 === y.value0 && x.value1 === y.value1;
        };
        if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
            return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
            return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
        };
        return false;
    };
});
var ordForeignError = new Data_Ord.Ord(function () {
    return eqForeignError;
}, function (x) {
    return function (y) {
        if (x instanceof ForeignError && y instanceof ForeignError) {
            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
        };
        if (x instanceof ForeignError) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ForeignError) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
            var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
        };
        if (x instanceof TypeMismatch) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TypeMismatch) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
            var v = Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtIndex) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ErrorAtIndex) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
            var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
        };
        throw new Error("Failed pattern match at Foreign (line 61, column 8 - line 61, column 52): " + [ x.constructor.name, y.constructor.name ]);
    };
});
module.exports = {
    ForeignError: ForeignError,
    TypeMismatch: TypeMismatch,
    ErrorAtIndex: ErrorAtIndex,
    ErrorAtProperty: ErrorAtProperty,
    renderForeignError: renderForeignError,
    unsafeReadTagged: unsafeReadTagged,
    readString: readString,
    readChar: readChar,
    readBoolean: readBoolean,
    readNumber: readNumber,
    readInt: readInt,
    readArray: readArray,
    readNull: readNull,
    readUndefined: readUndefined,
    readNullOrUndefined: readNullOrUndefined,
    fail: fail,
    eqForeignError: eqForeignError,
    ordForeignError: ordForeignError,
    showForeignError: showForeignError,
    unsafeToForeign: $foreign.unsafeToForeign,
    unsafeFromForeign: $foreign.unsafeFromForeign,
    typeOf: $foreign.typeOf,
    tagOf: $foreign.tagOf,
    isNull: $foreign.isNull,
    isUndefined: $foreign.isUndefined,
    isArray: $foreign.isArray
};

},{"../Control.Applicative/index.js":7,"../Control.Monad.Error.Class/index.js":28,"../Control.Monad.Except.Trans/index.js":29,"../Control.Monad.Except/index.js":30,"../Control.Semigroupoid/index.js":61,"../Data.Boolean/index.js":110,"../Data.Either/index.js":131,"../Data.Eq/index.js":135,"../Data.Function/index.js":145,"../Data.HeytingAlgebra/index.js":162,"../Data.Identity/index.js":163,"../Data.Int/index.js":167,"../Data.List.NonEmpty/index.js":202,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Data.String.CodeUnits/index.js":258,"../Prelude/index.js":385,"./foreign.js":319}],321:[function(require,module,exports){
/* globals exports, JSON */
"use strict";

exports.unsafeStringify = function (x) {
  return JSON.stringify(x);
};

exports.unsafeToFixed = function (digits) {
  return function (n) {
    return n.toFixed(digits);
  };
};

exports.unsafeToExponential = function (digits) {
  return function (n) {
    return n.toExponential(digits);
  };
};

exports.unsafeToPrecision  = function (digits) {
  return function (n) {
    return n.toPrecision(digits);
  };
};

exports.unsafeDecodeURI = decodeURI;
exports.unsafeEncodeURI = encodeURI;
exports.unsafeDecodeURIComponent = decodeURIComponent;
exports.unsafeEncodeURIComponent = encodeURIComponent;

},{}],322:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
module.exports = {
    unsafeStringify: $foreign.unsafeStringify,
    unsafeToFixed: $foreign.unsafeToFixed,
    unsafeToExponential: $foreign.unsafeToExponential,
    unsafeToPrecision: $foreign.unsafeToPrecision,
    unsafeDecodeURI: $foreign.unsafeDecodeURI,
    unsafeEncodeURI: $foreign.unsafeEncodeURI,
    unsafeDecodeURIComponent: $foreign.unsafeDecodeURIComponent,
    unsafeEncodeURIComponent: $foreign.unsafeEncodeURIComponent
};

},{"./foreign.js":321}],323:[function(require,module,exports){
/* globals exports */
"use strict";

exports.nan = NaN;

exports.isNaN = isNaN;

exports.infinity = Infinity;

exports.isFinite = isFinite;

exports.readInt = function (radix) {
  return function (n) {
    return parseInt(n, radix);
  };
};

exports.readFloat = parseFloat;

},{}],324:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
module.exports = {
    nan: $foreign.nan,
    "isNaN": $foreign["isNaN"],
    infinity: $foreign.infinity,
    "isFinite": $foreign["isFinite"],
    readInt: $foreign.readInt,
    readFloat: $foreign.readFloat
};

},{"./foreign.js":323}],325:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Applicative_Free = require("../Control.Applicative.Free/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Coroutine = require("../Control.Coroutine/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Fork_Class = require("../Control.Monad.Fork.Class/index.js");
var Control_Monad_Free = require("../Control.Monad.Free/index.js");
var Control_Monad_Free_Trans = require("../Control.Monad.Free.Trans/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Parallel = require("../Control.Parallel/index.js");
var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Coyoneda = require("../Data.Coyoneda/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Map = require("../Data.Map/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Set = require("../Data.Set/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Halogen_Aff_Driver_State = require("../Halogen.Aff.Driver.State/index.js");
var Halogen_Data_OrdBox = require("../Halogen.Data.OrdBox/index.js");
var Halogen_Query_EventSource = require("../Halogen.Query.EventSource/index.js");
var Halogen_Query_ForkF = require("../Halogen.Query.ForkF/index.js");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");
var Halogen_Query_InputF = require("../Halogen.Query.InputF/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Reference = require("../Unsafe.Reference/index.js");
var queuingHandler = function (handler) {
    return function (ref) {
        return function (message) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
                if (v instanceof Data_Maybe.Nothing) {
                    return handler(message);
                };
                if (v instanceof Data_Maybe.Just) {
                    return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write(new Data_Maybe.Just(new Data_List_Types.Cons(handler(message), v.value0)))(ref));
                };
                throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 171, column 3 - line 175, column 59): " + [ v.constructor.name ]);
            });
        };
    };
};
var handleLifecycle = function (lchs) {
    return function (f) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
            initializers: Data_List_Types.Nil.value,
            finalizers: Data_List_Types.Nil.value
        })(lchs)))(function () {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(f))(function (v) {
                return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(lchs)))(function (v1) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(v1.finalizers))(function () {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(v1.initializers))(function () {
                            return Control_Applicative.pure(Effect_Aff.applicativeAff)(v);
                        });
                    });
                });
            });
        });
    };
};
var $$eval = function (render) {
    return function (r) {
        var go = function (ref) {
            return function (v) {
                if (v instanceof Halogen_Query_HalogenM.State) {
                    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
                        var v2 = v.value0(v1.state);
                        if (Unsafe_Reference.unsafeRefEq(v1.state)(v2.value1)) {
                            return Control_Applicative.pure(Effect_Aff.applicativeAff)(v2.value0);
                        };
                        if (Data_Boolean.otherwise) {
                            return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
                                component: v1.component,
                                state: v2.value1,
                                refs: v1.refs,
                                children: v1.children,
                                childrenIn: v1.childrenIn,
                                childrenOut: v1.childrenOut,
                                selfRef: v1.selfRef,
                                handler: v1.handler,
                                pendingQueries: v1.pendingQueries,
                                pendingOuts: v1.pendingOuts,
                                pendingHandlers: v1.pendingHandlers,
                                rendering: v1.rendering,
                                prjQuery: v1.prjQuery,
                                fresh: v1.fresh,
                                subscriptions: v1.subscriptions,
                                lifecycleHandlers: v1.lifecycleHandlers
                            })(ref)))(function () {
                                return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(handleLifecycle(v1.lifecycleHandlers)(render(v1.lifecycleHandlers)(ref)))(function () {
                                    return Control_Applicative.pure(Effect_Aff.applicativeAff)(v2.value0);
                                });
                            });
                        };
                        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 76, column 7 - line 82, column 21): " + [ v2.constructor.name ]);
                    });
                };
                if (v instanceof Halogen_Query_HalogenM.Subscribe) {
                    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
                        return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.bind(Effect_Aff.bindAff)(Halogen_Query_EventSource.unEventSource(v.value0))(function (v2) {
                            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["modify'"](function (i) {
                                return {
                                    state: i + 1 | 0,
                                    value: i
                                };
                            })(v1.fresh)))(function (v3) {
                                var done$prime = Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v1.subscriptions)))(function (v4) {
                                    return Control_Applicative.when(Effect_Aff.applicativeAff)(Data_Maybe.maybe(false)(Data_Map_Internal.member(Data_Ord.ordInt)(v3))(v4))(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal["delete"](Data_Ord.ordInt)(v3)))(v1.subscriptions)));
                                });
                                return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.insert(Data_Ord.ordInt)(v3)(done$prime)))(v1.subscriptions)))(function () {
                                    var consumer = Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Coroutine["await"](Effect_Aff.monadAff))(function (v4) {
                                        return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Effect_Aff.monadAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v1.subscriptions))))(function (v5) {
                                            return Control_Applicative.when(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Data_Maybe.isJust(v5))(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Effect_Aff.monadAff)(evalF(ref)(v4)))(function (v6) {
                                                return Control_Applicative.when(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Data_Eq.eq(Halogen_Query_EventSource.eqSubscribeStatus)(v6)(Halogen_Query_EventSource.Listening.value))(consumer);
                                            }));
                                        });
                                    });
                                    return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Coroutine.runProcess(Effect_Aff.monadRecAff)(Control_Coroutine.pullFrom(Effect_Aff.monadRecAff)(consumer)(v2.producer)))(function () {
                                        return done$prime;
                                    });
                                });
                            });
                        })))(function (v2) {
                            return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value1);
                        });
                    });
                };
                if (v instanceof Halogen_Query_HalogenM.Lift) {
                    return v.value0;
                };
                if (v instanceof Halogen_Query_HalogenM.Halt) {
                    return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error(v.value0));
                };
                if (v instanceof Halogen_Query_HalogenM.GetSlots) {
                    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
                        return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value0(Data_Functor.map(Data_List_Types.functorList)(Halogen_Data_OrdBox.unOrdBox)(Data_List.fromFoldable(Data_Set.foldableSet)(Data_Map.keys(v1.children)))));
                    });
                };
                if (v instanceof Halogen_Query_HalogenM.CheckSlot) {
                    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
                        return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value1(Data_Map_Internal.member(Halogen_Data_OrdBox.ordOrdBox)(v1.component.mkOrdBox(v.value0))(v1.children)));
                    });
                };
                if (v instanceof Halogen_Query_HalogenM.ChildQuery) {
                    return evalChildQuery(ref)(v.value0)(v.value1);
                };
                if (v instanceof Halogen_Query_HalogenM.Raise) {
                    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(queuingHandler(v1.handler)(v1.pendingOuts)(v.value0))(function () {
                            return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value1);
                        });
                    });
                };
                if (v instanceof Halogen_Query_HalogenM.Par) {
                    return Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(Control_Applicative_Free.retractFreeAp(Effect_Aff.applicativeParAff)(Control_Applicative_Free.hoistFreeAp(function ($103) {
                        return Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(evalM(ref)($103));
                    })(v.value0)));
                };
                if (v instanceof Halogen_Query_HalogenM.Fork) {
                    return Halogen_Query_ForkF.unFork(function (v1) {
                        return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(evalM(ref)(v1.value0)))(function (v2) {
                            return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(Data_Function.flip(Effect_Aff.killFiber)(v2)));
                        });
                    })(v.value0);
                };
                if (v instanceof Halogen_Query_HalogenM.GetRef) {
                    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
                        return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value1(Data_Map_Internal.lookup(Data_Ord.ordString)(v.value0)(v1.refs)));
                    });
                };
                throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 73, column 12 - line 128, column 33): " + [ v.constructor.name ]);
            };
        };
        var evalM = function (ref) {
            return function (v) {
                return Control_Monad_Free.foldFree(Effect_Aff.monadRecAff)(go(ref))(v);
            };
        };
        var evalF = function (ref) {
            return function (q) {
                return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
                    var v1 = v["component"]["eval"](q);
                    return Control_Monad_Free.foldFree(Effect_Aff.monadRecAff)(go(ref))(v1);
                });
            };
        };
        var evalChildQuery = function (ref) {
            return function (p) {
                return Data_Coyoneda.unCoyoneda(function (k) {
                    return function (q) {
                        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
                            var v1 = Data_Map_Internal.lookup(Halogen_Data_OrdBox.ordOrdBox)(v.component.mkOrdBox(p))(v.children);
                            if (v1 instanceof Data_Maybe.Just) {
                                return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v1.value0)))(function (v2) {
                                    return Halogen_Aff_Driver_State.unDriverStateX(function (ds) {
                                        var v3 = ds.prjQuery(q);
                                        if (v3 instanceof Data_Maybe.Just) {
                                            return Data_Functor.map(Effect_Aff.functorAff)(k)(evalF(ds.selfRef)(v3.value0));
                                        };
                                        if (v3 instanceof Data_Maybe.Nothing) {
                                            return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Query projection failed for child query"));
                                        };
                                        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 141, column 32 - line 143, column 82): " + [ v3.constructor.name ]);
                                    })(v2);
                                });
                            };
                            if (v1 instanceof Data_Maybe.Nothing) {
                                return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Slot lookup failed for child query"));
                            };
                            throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 138, column 5 - line 144, column 73): " + [ v1.constructor.name ]);
                        });
                    };
                });
            };
        };
        return function (v) {
            if (v instanceof Halogen_Query_InputF.RefUpdate) {
                return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(function (v1) {
                    return {
                        component: v1.component,
                        state: v1.state,
                        refs: Data_Map_Internal.alter(Data_Ord.ordString)(Data_Function["const"](v.value1))(v.value0)(v1.refs),
                        children: v1.children,
                        childrenIn: v1.childrenIn,
                        childrenOut: v1.childrenOut,
                        selfRef: v1.selfRef,
                        handler: v1.handler,
                        pendingQueries: v1.pendingQueries,
                        pendingOuts: v1.pendingOuts,
                        pendingHandlers: v1.pendingHandlers,
                        rendering: v1.rendering,
                        prjQuery: v1.prjQuery,
                        fresh: v1.fresh,
                        subscriptions: v1.subscriptions,
                        lifecycleHandlers: v1.lifecycleHandlers
                    };
                })(r)))(function () {
                    return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value2);
                });
            };
            if (v instanceof Halogen_Query_InputF.Query) {
                return evalF(r)(v.value0);
            };
            throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 59, column 3 - line 64, column 25): " + [ v.constructor.name ]);
        };
    };
};
module.exports = {
    handleLifecycle: handleLifecycle,
    "eval": $$eval,
    queuingHandler: queuingHandler
};

},{"../Control.Applicative.Free/index.js":6,"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Control.Coroutine/index.js":22,"../Control.Monad.Error.Class/index.js":28,"../Control.Monad.Fork.Class/index.js":31,"../Control.Monad.Free.Trans/index.js":32,"../Control.Monad.Free/index.js":33,"../Control.Monad.Trans.Class/index.js":52,"../Control.Parallel.Class/index.js":58,"../Control.Parallel/index.js":59,"../Control.Semigroupoid/index.js":61,"../Data.Boolean/index.js":110,"../Data.Coyoneda/index.js":120,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Map.Internal/index.js":206,"../Data.Map/index.js":207,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Semiring/index.js":251,"../Data.Set/index.js":252,"../Data.Tuple/index.js":283,"../Effect.Aff/index.js":297,"../Effect.Class/index.js":298,"../Effect.Exception/index.js":302,"../Effect.Ref/index.js":306,"../Effect/index.js":312,"../Halogen.Aff.Driver.State/index.js":326,"../Halogen.Data.OrdBox/index.js":332,"../Halogen.Query.EventSource/index.js":340,"../Halogen.Query.ForkF/index.js":341,"../Halogen.Query.HalogenM/index.js":342,"../Halogen.Query.InputF/index.js":343,"../Prelude/index.js":385,"../Unsafe.Reference/index.js":427}],326:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Map = require("../Data.Map/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Halogen_Component = require("../Halogen.Component/index.js");
var Halogen_Data_OrdBox = require("../Halogen.Data.OrdBox/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var DriverState = function (x) {
    return x;
};
var unRenderStateX = Unsafe_Coerce.unsafeCoerce;
var unDriverStateX = Unsafe_Coerce.unsafeCoerce;
var renderStateX_ = function (dictApplicative) {
    return function (f) {
        return unDriverStateX(function (st) {
            return Data_Foldable.traverse_(dictApplicative)(Data_Foldable.foldableMaybe)(f)(st.rendering);
        });
    };
};
var mkRenderStateX = function (v) {
    return Unsafe_Coerce.unsafeCoerce;
};
var renderStateX = function (dictFunctor) {
    return function (f) {
        return unDriverStateX(function (st) {
            return mkRenderStateX(st.prjQuery)(f(st.rendering));
        });
    };
};
var mkDriverStateXRef = Unsafe_Coerce.unsafeCoerce;
var initDriverState = function (component) {
    return function (input) {
        return function (handler) {
            return function (prjQuery) {
                return function (lchs) {
                    return function __do() {
                        var v = Effect_Ref["new"]({})();
                        var v1 = Effect_Ref["new"](Data_Map_Internal.empty)();
                        var v2 = Effect_Ref["new"](Data_Map_Internal.empty)();
                        var v3 = Effect_Ref["new"](Data_Functor.voidLeft(Data_Maybe.functorMaybe)(component.initializer)(Data_List_Types.Nil.value))();
                        var v4 = Effect_Ref["new"](new Data_Maybe.Just(Data_List_Types.Nil.value))();
                        var v5 = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                        var v6 = Effect_Ref["new"](0)();
                        var v7 = Effect_Ref["new"](new Data_Maybe.Just(Data_Map_Internal.empty))();
                        var ds = {
                            component: component,
                            state: component.initialState(input),
                            refs: Data_Map_Internal.empty,
                            children: Data_Map_Internal.empty,
                            childrenIn: v1,
                            childrenOut: v2,
                            selfRef: v,
                            handler: handler,
                            pendingQueries: v3,
                            pendingOuts: v4,
                            pendingHandlers: v5,
                            rendering: Data_Maybe.Nothing.value,
                            prjQuery: prjQuery,
                            fresh: v6,
                            subscriptions: v7,
                            lifecycleHandlers: lchs
                        };
                        Effect_Ref.write(ds)(v)();
                        return mkDriverStateXRef(v);
                    };
                };
            };
        };
    };
};
module.exports = {
    DriverState: DriverState,
    unDriverStateX: unDriverStateX,
    mkDriverStateXRef: mkDriverStateXRef,
    renderStateX: renderStateX,
    renderStateX_: renderStateX_,
    unRenderStateX: unRenderStateX,
    initDriverState: initDriverState
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Map.Internal/index.js":206,"../Data.Map/index.js":207,"../Data.Maybe/index.js":210,"../Data.Traversable/index.js":281,"../Effect.Aff/index.js":297,"../Effect.Ref/index.js":306,"../Effect/index.js":312,"../Halogen.Component/index.js":331,"../Halogen.Data.OrdBox/index.js":332,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463}],327:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Coroutine = require("../Control.Coroutine/index.js");
var Control_Monad_Fork_Class = require("../Control.Monad.Fork.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Parallel = require("../Control.Parallel/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Map = require("../Data.Map/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Aff_AVar = require("../Effect.Aff.AVar/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Console = require("../Effect.Console/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Halogen = require("../Halogen/index.js");
var Halogen_Aff_Driver_Eval = require("../Halogen.Aff.Driver.Eval/index.js");
var Halogen_Aff_Driver_State = require("../Halogen.Aff.Driver.State/index.js");
var Halogen_Component = require("../Halogen.Component/index.js");
var Halogen_Data_OrdBox = require("../Halogen.Data.OrdBox/index.js");
var Halogen_Query_InputF = require("../Halogen.Query.InputF/index.js");
var Prelude = require("../Prelude/index.js");
var newLifecycleHandlers = Effect_Ref["new"]({
    initializers: Data_List_Types.Nil.value,
    finalizers: Data_List_Types.Nil.value
});
var handleAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));
var runUI = function (renderSpec) {
    return function (component) {
        return function (i) {
            var subscribe = function (fresh) {
                return function (ref) {
                    return function (consumer) {
                        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_AVar.empty)(function (v) {
                            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                var v1 = Effect_Ref.read(fresh)();
                                Effect_Ref.modify_(function (v2) {
                                    return v2 + 1 | 0;
                                })(fresh)();
                                Effect_Ref.modify_(Data_Map_Internal.insert(Data_Ord.ordInt)(v1)(v))(ref)();
                                return v1;
                            }))(function (v1) {
                                var producer = Control_Coroutine.producer(Effect_Aff.monadAff)(Data_Functor.map(Effect_Aff.functorAff)(Data_Either.Left.create)(Effect_Aff_AVar.take(v)));
                                return Data_Functor["void"](Effect_Aff.functorAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Coroutine.runProcess(Effect_Aff.monadRecAff)(Control_Coroutine.connect(Effect_Aff.monadRecAff)(Effect_Aff.parallelAff)(producer)(consumer)))(function () {
                                    return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Map_Internal["delete"](Data_Ord.ordInt)(v1))(ref)))(function () {
                                        return Effect_Aff_AVar.kill(Effect_Exception.error("ended"))(v);
                                    });
                                })));
                            });
                        });
                    };
                };
            };
            var rootHandler = function (ref) {
                return function (message) {
                    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
                        return Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Map_Internal.foldableMap)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_Functor.map(Data_Map_Internal.functorMap)(Effect_Aff_AVar.put(message))(v));
                    });
                };
            };
            var handlePending = function (ref) {
                return function __do() {
                    var v = Effect_Ref.read(ref)();
                    Effect_Ref.write(Data_Maybe.Nothing.value)(ref)();
                    return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v)(function ($63) {
                        return handleAff(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_List.reverse($63)));
                    })();
                };
            };
            var cleanupSubscriptions = function (v) {
                return function __do() {
                    Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function ($64) {
                        return handleAff(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Map_Internal.foldableMap)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))($64));
                    }))(Effect_Ref.read(v.subscriptions))();
                    return Effect_Ref.write(Data_Maybe.Nothing.value)(v.subscriptions)();
                };
            };
            var squashChildInitializers = function (lchs) {
                return function (preInits) {
                    return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                        var parentInitializer = Data_Functor.map(Data_Maybe.functorMaybe)(function ($65) {
                            return evalF(st.selfRef)(Halogen_Query_InputF.Query.create($65));
                        })(st.component.initializer);
                        return Effect_Ref.modify_(function (handlers) {
                            return {
                                initializers: new Data_List_Types.Cons(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(Data_List.reverse(handlers.initializers)))(function () {
                                    return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.sequence_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(parentInitializer))(function () {
                                        return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                            handlePending(st.pendingQueries)();
                                            return handlePending(st.pendingOuts)();
                                        });
                                    });
                                }), preInits),
                                finalizers: handlers.finalizers
                            };
                        })(lchs);
                    });
                };
            };
            var runComponent = function (lchs) {
                return function (handler) {
                    return function (j) {
                        return function (prjQuery) {
                            return Halogen_Component.unComponent(function (c) {
                                return function __do() {
                                    var v = newLifecycleHandlers();
                                    var v1 = Halogen_Aff_Driver_State.initDriverState(c)(j)(handler)(prjQuery)(v)();
                                    var v2 = Effect_Ref.read(lchs)();
                                    Effect_Ref.write({
                                        initializers: Data_List_Types.Nil.value,
                                        finalizers: v2.finalizers
                                    })(lchs)();
                                    Control_Bind.bindFlipped(Effect.bindEffect)(Halogen_Aff_Driver_State.unDriverStateX(function ($66) {
                                        return render(lchs)((function (v3) {
                                            return v3.selfRef;
                                        })($66));
                                    }))(Effect_Ref.read(v1))();
                                    Control_Bind.bindFlipped(Effect.bindEffect)(squashChildInitializers(lchs)(v2.initializers))(Effect_Ref.read(v1))();
                                    return v1;
                                };
                            });
                        };
                    };
                };
            };
            var renderChild = function (lchs) {
                return function (handler) {
                    return function (mkOrdBox) {
                        return function (childrenInRef) {
                            return function (childrenOutRef) {
                                return Halogen_Component.unComponentSlot(function (p) {
                                    return function (ctor) {
                                        return function (input) {
                                            return function (inputQuery) {
                                                return function (outputQuery) {
                                                    return function (prjQuery) {
                                                        var ordP = mkOrdBox(p);
                                                        return function __do() {
                                                            var v = Effect_Ref.read(childrenInRef)();
                                                            var v1 = (function () {
                                                                var v1 = Data_Map_Internal.pop(Halogen_Data_OrdBox.ordOrdBox)(ordP)(v);
                                                                if (v1 instanceof Data_Maybe.Just) {
                                                                    Effect_Ref.write(v1.value0.value1)(childrenInRef)();
                                                                    Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(inputQuery(input))(function (q) {
                                                                        return function __do() {
                                                                            var v2 = Effect_Ref.read(v1.value0.value0)();
                                                                            return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                                                                                return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(st.prjQuery(q))(function ($67) {
                                                                                    return handleAff(evalF(st.selfRef)(Halogen_Query_InputF.Query.create($67)));
                                                                                });
                                                                            })(v2)();
                                                                        };
                                                                    })();
                                                                    return v1.value0.value0;
                                                                };
                                                                if (v1 instanceof Data_Maybe.Nothing) {
                                                                    return runComponent(lchs)(function ($68) {
                                                                        return Data_Maybe.maybe(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit))(handler)(outputQuery($68));
                                                                    })(input)(prjQuery)(ctor)();
                                                                };
                                                                throw new Error("Failed pattern match at Halogen.Aff.Driver (line 258, column 14 - line 266, column 92): " + [ v1.constructor.name ]);
                                                            })();
                                                            var v2 = Data_Functor.map(Effect.functorEffect)(Data_Map_Internal.member(Halogen_Data_OrdBox.ordOrdBox)(ordP))(Effect_Ref.read(childrenOutRef))();
                                                            Control_Applicative.when(Effect.applicativeEffect)(v2)(Effect_Console.warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur"))();
                                                            Effect_Ref.modify_(Data_Map_Internal.insert(Halogen_Data_OrdBox.ordOrdBox)(ordP)(v1))(childrenOutRef)();
                                                            return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(v1))(Halogen_Aff_Driver_State.renderStateX(Effect.functorEffect)(function (v3) {
                                                                if (v3 instanceof Data_Maybe.Nothing) {
                                                                    return Effect_Exception["throw"]("Halogen internal error: child was not initialized in renderChild");
                                                                };
                                                                if (v3 instanceof Data_Maybe.Just) {
                                                                    return Control_Applicative.pure(Effect.applicativeEffect)(renderSpec.renderChild(v3.value0));
                                                                };
                                                                throw new Error("Failed pattern match at Halogen.Aff.Driver (line 271, column 37 - line 273, column 50): " + [ v3.constructor.name ]);
                                                            }))();
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                });
                            };
                        };
                    };
                };
            };
            var render = function (lchs) {
                return function ($$var) {
                    return function __do() {
                        var v = Effect_Ref.read($$var)();
                        var v1 = Data_Functor.map(Effect.functorEffect)(Data_Maybe.isNothing)(Effect_Ref.read(v.pendingHandlers))();
                        Control_Applicative.when(Effect.applicativeEffect)(v1)(Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(v.pendingHandlers))();
                        Effect_Ref.write(Data_Map_Internal.empty)(v.childrenOut)();
                        Effect_Ref.write(v.children)(v.childrenIn)();
                        var handler = Halogen_Aff_Driver_Eval.queuingHandler(function ($69) {
                            return Data_Functor["void"](Effect_Aff.functorAff)(evalF(v.selfRef)($69));
                        })(v.pendingHandlers);
                        var childHandler = Halogen_Aff_Driver_Eval.queuingHandler(function ($70) {
                            return handler(Halogen_Query_InputF.Query.create($70));
                        })(v.pendingQueries);
                        var v2 = renderSpec.render(function ($71) {
                            return handleAff(handler($71));
                        })(renderChild(lchs)(childHandler)(v.component.mkOrdBox)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();
                        var v3 = Effect_Ref.read(v.childrenOut)();
                        Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(v.childrenIn))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(function (childVar) {
                            return function __do() {
                                var v4 = Effect_Ref.read(childVar)();
                                Halogen_Aff_Driver_State.renderStateX_(Effect.applicativeEffect)(renderSpec.removeChild)(v4)();
                                return finalize(lchs)(v4)();
                            };
                        }))();
                        Effect_Ref.modify_(function (v4) {
                            return {
                                rendering: new Data_Maybe.Just(v2),
                                children: v3,
                                component: v4.component,
                                state: v4.state,
                                refs: v4.refs,
                                childrenIn: v4.childrenIn,
                                childrenOut: v4.childrenOut,
                                selfRef: v4.selfRef,
                                handler: v4.handler,
                                pendingQueries: v4.pendingQueries,
                                pendingOuts: v4.pendingOuts,
                                pendingHandlers: v4.pendingHandlers,
                                prjQuery: v4.prjQuery,
                                fresh: v4.fresh,
                                subscriptions: v4.subscriptions,
                                lifecycleHandlers: v4.lifecycleHandlers
                            };
                        })(v.selfRef)();
                        return Control_Applicative.when(Effect.applicativeEffect)(v1)(Data_Function.flip(Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEffect))(Data_Unit.unit)(function (v4) {
                            return function __do() {
                                var v5 = Effect_Ref.read(v.pendingHandlers)();
                                Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(v.pendingHandlers)();
                                Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function ($72) {
                                    return handleAff(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_List.reverse($72)));
                                })(v5)();
                                var v6 = Effect_Ref.read(v.pendingHandlers)();
                                var $57 = Data_Maybe.maybe(false)(Data_List["null"])(v6);
                                if ($57) {
                                    return Data_Functor.voidLeft(Effect.functorEffect)(Effect_Ref.write(Data_Maybe.Nothing.value)(v.pendingHandlers))(new Control_Monad_Rec_Class.Done(Data_Unit.unit))();
                                };
                                return new Control_Monad_Rec_Class.Loop(Data_Unit.unit);
                            };
                        }))();
                    };
                };
            };
            var finalize = function (lchs) {
                return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                    return function __do() {
                        cleanupSubscriptions(st)();
                        Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function ($73) {
                            return evalF(st.selfRef)(Halogen_Query_InputF.Query.create($73));
                        })(st.component.finalizer))(function (f) {
                            return Effect_Ref.modify_(function (handlers) {
                                return {
                                    initializers: handlers.initializers,
                                    finalizers: new Data_List_Types.Cons(f, handlers.finalizers)
                                };
                            })(lchs);
                        })();
                        return Data_Foldable.for_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(st.children)(Control_Bind.composeKleisliFlipped(Effect.bindEffect)(finalize(lchs))(Effect_Ref.read))();
                    };
                });
            };
            var evalF = function (ref) {
                return Halogen_Aff_Driver_Eval["eval"](render)(ref);
            };
            var evalDriver = function (ref) {
                return function (prjQuery) {
                    return function (q) {
                        var v = prjQuery(q);
                        if (v instanceof Data_Maybe.Just) {
                            return evalF(ref)(new Halogen_Query_InputF.Query(v.value0));
                        };
                        if (v instanceof Data_Maybe.Nothing) {
                            return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Exception.throwException(Effect_Exception.error("Halogen internal error: query projection failed in runUI'")));
                        };
                        throw new Error("Failed pattern match at Halogen.Aff.Driver (line 136, column 5 - line 138, column 113): " + [ v.constructor.name ]);
                    };
                };
            };
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(newLifecycleHandlers))(function (v) {
                return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](0)))(function (v1) {
                    return Halogen_Aff_Driver_Eval.handleLifecycle(v)(function __do() {
                        var v2 = Effect_Ref["new"](Data_Map_Internal.empty)();
                        return Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(runComponent(v)(rootHandler(v2))(i)(Data_Maybe.Just.create)(component))(Effect_Ref.read))(Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                            return Control_Applicative.pure(Effect.applicativeEffect)({
                                query: evalDriver(st.selfRef)(st.prjQuery),
                                subscribe: subscribe(v1)(v2)
                            });
                        }))();
                    });
                });
            });
        };
    };
};
module.exports = {
    runUI: runUI
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Control.Coroutine/index.js":22,"../Control.Monad.Fork.Class/index.js":31,"../Control.Monad.Rec.Class/index.js":43,"../Control.Parallel/index.js":59,"../Control.Semigroupoid/index.js":61,"../Data.Either/index.js":131,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Map.Internal/index.js":206,"../Data.Map/index.js":207,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Semiring/index.js":251,"../Data.Traversable/index.js":281,"../Data.Tuple/index.js":283,"../Data.Unit/index.js":289,"../Effect.Aff.AVar/index.js":294,"../Effect.Aff/index.js":297,"../Effect.Class/index.js":298,"../Effect.Console/index.js":300,"../Effect.Exception/index.js":302,"../Effect.Ref/index.js":306,"../Effect/index.js":312,"../Halogen.Aff.Driver.Eval/index.js":325,"../Halogen.Aff.Driver.State/index.js":326,"../Halogen.Component/index.js":331,"../Halogen.Data.OrdBox/index.js":332,"../Halogen.Query.InputF/index.js":343,"../Halogen/index.js":353,"../Prelude/index.js":385}],328:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Prelude = require("../Prelude/index.js");
var Web_DOM_ParentNode = require("../Web.DOM.ParentNode/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML = require("../Web.HTML/index.js");
var Web_HTML_Event_EventTypes = require("../Web.HTML.Event.EventTypes/index.js");
var Web_HTML_HTMLDocument = require("../Web.HTML.HTMLDocument/index.js");
var Web_HTML_HTMLDocument_ReadyState = require("../Web.HTML.HTMLDocument.ReadyState/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_Window = require("../Web.HTML.Window/index.js");
var selectElement = function (query) {
    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Bind.bindFlipped(Effect.bindEffect)(Control_Bind.composeKleisliFlipped(Effect.bindEffect)(function ($12) {
        return Web_DOM_ParentNode.querySelector(query)(Web_HTML_HTMLDocument.toParentNode($12));
    })(Web_HTML_Window.document))(Web_HTML.window)))(function (v) {
        return Control_Applicative.pure(Effect_Aff.applicativeAff)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromElement)(v));
    });
};
var runHalogenAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));
var awaitLoad = Effect_Aff.makeAff(function (callback) {
    return function __do() {
        var v = Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_HTMLDocument.readyState)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))();
        if (v instanceof Web_HTML_HTMLDocument_ReadyState.Loading) {
            var v1 = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
            var v2 = Web_Event_EventTarget.eventListener(function (v2) {
                return callback(new Data_Either.Right(Data_Unit.unit));
            })();
            Web_Event_EventTarget.addEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(v2)(false)(v1)();
            return Effect_Aff.effectCanceler(Web_Event_EventTarget.removeEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(v2)(false)(v1));
        };
        callback(new Data_Either.Right(Data_Unit.unit))();
        return Effect_Aff.nonCanceler;
    };
});
var awaitBody = Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(awaitLoad)(function () {
    return Control_Bind.bind(Effect_Aff.bindAff)(selectElement("body"))(function (v) {
        return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Could not find body")))(Control_Applicative.pure(Effect_Aff.applicativeAff))(v);
    });
});
module.exports = {
    awaitLoad: awaitLoad,
    awaitBody: awaitBody,
    selectElement: selectElement,
    runHalogenAff: runHalogenAff
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Control.Monad.Error.Class/index.js":28,"../Control.Semigroupoid/index.js":61,"../Data.Either/index.js":131,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Unit/index.js":289,"../Effect.Aff/index.js":297,"../Effect.Class/index.js":298,"../Effect.Exception/index.js":302,"../Effect/index.js":312,"../Prelude/index.js":385,"../Web.DOM.ParentNode/index.js":458,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.Event.EventTypes/index.js":481,"../Web.HTML.HTMLDocument.ReadyState/index.js":502,"../Web.HTML.HTMLDocument/index.js":504,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.Window/index.js":610,"../Web.HTML/index.js":612}],329:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Halogen_Aff_Driver = require("../Halogen.Aff.Driver/index.js");
var Halogen_Aff_Util = require("../Halogen.Aff.Util/index.js");
module.exports = {};

},{"../Halogen.Aff.Driver/index.js":327,"../Halogen.Aff.Util/index.js":328}],330:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Lens = require("../Data.Lens/index.js");
var Data_Lens_Fold = require("../Data.Lens.Fold/index.js");
var Data_Lens_Internal_Forget = require("../Data.Lens.Internal.Forget/index.js");
var Data_Lens_Internal_Tagged = require("../Data.Lens.Internal.Tagged/index.js");
var Data_Lens_Prism = require("../Data.Lens.Prism/index.js");
var Data_Lens_Prism_Coproduct = require("../Data.Lens.Prism.Coproduct/index.js");
var Data_Lens_Prism_Either = require("../Data.Lens.Prism.Either/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Maybe_First = require("../Data.Maybe.First/index.js");
var Halogen_Data_Prism = require("../Halogen.Data.Prism/index.js");
var Prelude = require("../Prelude/index.js");
var ChildPath = (function () {
    function ChildPath(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ChildPath.create = function (value0) {
        return function (value1) {
            return new ChildPath(value0, value1);
        };
    };
    return ChildPath;
})();
var prjSlot = function (v) {
    return Data_Lens_Fold.preview(v.value1(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst)));
};
var prjQuery = function (v) {
    return Data_Lens_Fold.preview(v.value0(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst)));
};
var injSlot = function (v) {
    return Data_Lens_Prism.review(v.value1(Data_Lens_Internal_Tagged.taggedChoice));
};
var injQuery = function (v) {
    return Data_Lens_Prism.review(v.value0(Data_Lens_Internal_Tagged.taggedChoice));
};
var cpR = new ChildPath(function (dictChoice) {
    return Data_Lens_Prism_Coproduct["_Right"](dictChoice);
}, function (dictChoice) {
    return Data_Lens_Prism_Either["_Right"](dictChoice);
});
var cpL = new ChildPath(function (dictChoice) {
    return Data_Lens_Prism_Coproduct["_Left"](dictChoice);
}, function (dictChoice) {
    return Data_Lens_Prism_Either["_Left"](dictChoice);
});
var cpI = new ChildPath(function (dictChoice) {
    return Control_Category.identity(Control_Category.categoryFn);
}, function (dictChoice) {
    return Control_Category.identity(Control_Category.categoryFn);
});
var cp9 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism["_Coproduct9"](dictChoice);
}, function (dictChoice) {
    return Halogen_Data_Prism["_Either9"](dictChoice);
});
var cp8 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism["_Coproduct8"](dictChoice);
}, function (dictChoice) {
    return Halogen_Data_Prism["_Either8"](dictChoice);
});
var cp7 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism["_Coproduct7"](dictChoice);
}, function (dictChoice) {
    return Halogen_Data_Prism["_Either7"](dictChoice);
});
var cp6 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism["_Coproduct6"](dictChoice);
}, function (dictChoice) {
    return Halogen_Data_Prism["_Either6"](dictChoice);
});
var cp5 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism["_Coproduct5"](dictChoice);
}, function (dictChoice) {
    return Halogen_Data_Prism["_Either5"](dictChoice);
});
var cp4 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism["_Coproduct4"](dictChoice);
}, function (dictChoice) {
    return Halogen_Data_Prism["_Either4"](dictChoice);
});
var cp3 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism["_Coproduct3"](dictChoice);
}, function (dictChoice) {
    return Halogen_Data_Prism["_Either3"](dictChoice);
});
var cp2 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism["_Coproduct2"](dictChoice);
}, function (dictChoice) {
    return Halogen_Data_Prism["_Either2"](dictChoice);
});
var cp10 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism["_Coproduct10"](dictChoice);
}, function (dictChoice) {
    return Halogen_Data_Prism["_Either10"](dictChoice);
});
var cp1 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism["_Coproduct1"](dictChoice);
}, function (dictChoice) {
    return Halogen_Data_Prism["_Either1"](dictChoice);
});
var compose = function (v) {
    return function (v1) {
        return new ChildPath(function (dictChoice) {
            return function ($52) {
                return v.value0(dictChoice)(v1.value0(dictChoice)($52));
            };
        }, function (dictChoice) {
            return function ($53) {
                return v.value1(dictChoice)(v1.value1(dictChoice)($53));
            };
        });
    };
};
module.exports = {
    ChildPath: ChildPath,
    compose: compose,
    cp1: cp1,
    cp10: cp10,
    cp2: cp2,
    cp3: cp3,
    cp4: cp4,
    cp5: cp5,
    cp6: cp6,
    cp7: cp7,
    cp8: cp8,
    cp9: cp9,
    cpI: cpI,
    cpL: cpL,
    cpR: cpR,
    injQuery: injQuery,
    injSlot: injSlot,
    prjQuery: prjQuery,
    prjSlot: prjSlot
};

},{"../Control.Category/index.js":14,"../Control.Semigroupoid/index.js":61,"../Data.Lens.Fold/index.js":173,"../Data.Lens.Internal.Forget/index.js":178,"../Data.Lens.Internal.Tagged/index.js":184,"../Data.Lens.Prism.Coproduct/index.js":192,"../Data.Lens.Prism.Either/index.js":193,"../Data.Lens.Prism/index.js":195,"../Data.Lens/index.js":199,"../Data.Maybe.First/index.js":208,"../Data.Maybe/index.js":210,"../Halogen.Data.Prism/index.js":333,"../Prelude/index.js":385}],331:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Const = require("../Data.Const/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Halogen_Data_OrdBox = require("../Halogen.Data.OrdBox/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var ComponentSlot = (function () {
    function ComponentSlot(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ComponentSlot.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ComponentSlot(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ComponentSlot;
})();
var unComponentSlot = function (f) {
    return function (cs) {
        return f(cs.value0)(cs.value1)(cs.value2)(cs.value3)(cs.value4)(cs.value5);
    };
};
var unComponent = Unsafe_Coerce.unsafeCoerce;
var mkComponentSlot = ComponentSlot.create;
var mkComponent = Unsafe_Coerce.unsafeCoerce;
var parentComponent = function (dictOrd) {
    return function (spec) {
        return mkComponent({
            initialState: spec.initialState,
            render: spec.render,
            "eval": spec["eval"],
            receiver: spec.receiver,
            initializer: Data_Maybe.Nothing.value,
            finalizer: Data_Maybe.Nothing.value,
            mkOrdBox: Halogen_Data_OrdBox.mkOrdBox(dictOrd)
        });
    };
};
var lifecycleParentComponent = function (dictOrd) {
    return function (spec) {
        return mkComponent({
            initialState: spec.initialState,
            render: spec.render,
            "eval": spec["eval"],
            receiver: spec.receiver,
            initializer: spec.initializer,
            finalizer: spec.finalizer,
            mkOrdBox: Halogen_Data_OrdBox.mkOrdBox(dictOrd)
        });
    };
};
var lifecycleComponent = function (dictBifunctor) {
    return function (spec) {
        return mkComponent({
            initialState: spec.initialState,
            render: spec.render,
            "eval": spec["eval"],
            receiver: spec.receiver,
            initializer: spec.initializer,
            finalizer: spec.finalizer,
            mkOrdBox: Halogen_Data_OrdBox.mkOrdBox(Data_Ord.ordVoid)
        });
    };
};
var hoistSlot = function (dictBifunctor) {
    return function (dictFunctor) {
        return function (nat) {
            return unComponentSlot(function (p) {
                return function (ctor) {
                    return function (input) {
                        return function (inputQuery) {
                            return function (outputQuery) {
                                return function (projQuery) {
                                    return mkComponentSlot(p)(hoist(dictBifunctor)(dictFunctor)(nat)(ctor))(input)(inputQuery)(outputQuery)(projQuery);
                                };
                            };
                        };
                    };
                };
            });
        };
    };
};
var hoist = function (dictBifunctor) {
    return function (dictFunctor) {
        return function (nat) {
            return unComponent(function (c) {
                return mkComponent({
                    initialState: c.initialState,
                    render: function ($16) {
                        return Data_Bifunctor.lmap(dictBifunctor)(hoistSlot(dictBifunctor)(dictFunctor)(nat))(c.render($16));
                    },
                    "eval": function ($17) {
                        return Halogen_Query_HalogenM.hoist(dictFunctor)(nat)(c["eval"]($17));
                    },
                    receiver: c.receiver,
                    initializer: c.initializer,
                    finalizer: c.finalizer,
                    mkOrdBox: c.mkOrdBox
                });
            });
        };
    };
};
var functorSlotF = new Data_Functor.Functor(function (f) {
    return unComponentSlot(function (p) {
        return function (ctor) {
            return function (j) {
                return function (g) {
                    return function (h) {
                        return function (i) {
                            return mkComponentSlot(p)(ctor)(j)(g)(function ($18) {
                                return Data_Functor.map(Data_Maybe.functorMaybe)(f)(h($18));
                            })(i);
                        };
                    };
                };
            };
        };
    });
});
var component = function (dictBifunctor) {
    return function (spec) {
        return lifecycleComponent(dictBifunctor)({
            initialState: spec.initialState,
            render: spec.render,
            "eval": spec["eval"],
            receiver: spec.receiver,
            initializer: Data_Maybe.Nothing.value,
            finalizer: Data_Maybe.Nothing.value
        });
    };
};
var bifunctorSlotF = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return unComponentSlot(function (p) {
            return function (ctor) {
                return function (input) {
                    return function (inputQuery) {
                        return function (outputQuery) {
                            return function (projQuery) {
                                return mkComponentSlot(f(p))(ctor)(input)(inputQuery)(function ($19) {
                                    return Data_Functor.map(Data_Maybe.functorMaybe)(g)(outputQuery($19));
                                })(projQuery);
                            };
                        };
                    };
                };
            };
        });
    };
});
module.exports = {
    mkComponent: mkComponent,
    unComponent: unComponent,
    component: component,
    lifecycleComponent: lifecycleComponent,
    parentComponent: parentComponent,
    lifecycleParentComponent: lifecycleParentComponent,
    hoist: hoist,
    mkComponentSlot: mkComponentSlot,
    unComponentSlot: unComponentSlot,
    hoistSlot: hoistSlot,
    bifunctorSlotF: bifunctorSlotF,
    functorSlotF: functorSlotF
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Bifunctor/index.js":106,"../Data.Const/index.js":119,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Halogen.Data.OrdBox/index.js":332,"../Halogen.HTML.Core/index.js":334,"../Halogen.Query.HalogenM/index.js":342,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425}],332:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Prelude = require("../Prelude/index.js");
var OrdBox = (function () {
    function OrdBox(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    OrdBox.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new OrdBox(value0, value1, value2);
            };
        };
    };
    return OrdBox;
})();
var unOrdBox = function (v) {
    return v.value2;
};
var mkOrdBox = function (dictOrd) {
    return OrdBox.create(Data_Eq.eq(dictOrd.Eq0()))(Data_Ord.compare(dictOrd));
};
var eqOrdBox = new Data_Eq.Eq(function (v) {
    return function (v1) {
        return v.value0(v.value2)(v1.value2);
    };
});
var ordOrdBox = new Data_Ord.Ord(function () {
    return eqOrdBox;
}, function (v) {
    return function (v1) {
        return v.value1(v.value2)(v1.value2);
    };
});
module.exports = {
    mkOrdBox: mkOrdBox,
    unOrdBox: unOrdBox,
    eqOrdBox: eqOrdBox,
    ordOrdBox: ordOrdBox
};

},{"../Data.Eq/index.js":135,"../Data.Ord/index.js":229,"../Prelude/index.js":385}],333:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Either = require("../Data.Either/index.js");
var Data_Either_Nested = require("../Data.Either.Nested/index.js");
var Data_Functor_Coproduct = require("../Data.Functor.Coproduct/index.js");
var Data_Functor_Coproduct_Nested = require("../Data.Functor.Coproduct.Nested/index.js");
var Data_Lens = require("../Data.Lens/index.js");
var Data_Lens_Prism = require("../Data.Lens.Prism/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var _Either9 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in9)(Data_Either_Nested.at9(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Either8 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in8)(Data_Either_Nested.at8(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Either7 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in7)(Data_Either_Nested.at7(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Either6 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in6)(Data_Either_Nested.at6(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Either5 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in5)(Data_Either_Nested.at5(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Either4 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in4)(Data_Either_Nested.at4(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Either3 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in3)(Data_Either_Nested.at3(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Either2 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in2)(Data_Either_Nested.at2(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Either10 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in10)(Data_Either_Nested.at10(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Either1 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in1)(Data_Either_Nested.at1(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Coproduct9 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in9)(Data_Functor_Coproduct_Nested.at9(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Coproduct8 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in8)(Data_Functor_Coproduct_Nested.at8(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Coproduct7 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in7)(Data_Functor_Coproduct_Nested.at7(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Coproduct6 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in6)(Data_Functor_Coproduct_Nested.at6(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Coproduct5 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in5)(Data_Functor_Coproduct_Nested.at5(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Coproduct4 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in4)(Data_Functor_Coproduct_Nested.at4(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Coproduct3 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in3)(Data_Functor_Coproduct_Nested.at3(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Coproduct2 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in2)(Data_Functor_Coproduct_Nested.at2(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Coproduct10 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in10)(Data_Functor_Coproduct_Nested.at10(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
var _Coproduct1 = function (dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in1)(Data_Functor_Coproduct_Nested.at1(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};
module.exports = {
    "_Either1": _Either1,
    "_Coproduct1": _Coproduct1,
    "_Either2": _Either2,
    "_Coproduct2": _Coproduct2,
    "_Either3": _Either3,
    "_Coproduct3": _Coproduct3,
    "_Either4": _Either4,
    "_Coproduct4": _Coproduct4,
    "_Either5": _Either5,
    "_Coproduct5": _Coproduct5,
    "_Either6": _Either6,
    "_Coproduct6": _Coproduct6,
    "_Either7": _Either7,
    "_Coproduct7": _Coproduct7,
    "_Either8": _Either8,
    "_Coproduct8": _Coproduct8,
    "_Either9": _Either9,
    "_Coproduct9": _Coproduct9,
    "_Either10": _Either10,
    "_Coproduct10": _Coproduct10
};

},{"../Data.Either.Nested/index.js":130,"../Data.Either/index.js":131,"../Data.Functor.Coproduct.Nested/index.js":149,"../Data.Functor.Coproduct/index.js":150,"../Data.Lens.Prism/index.js":195,"../Data.Lens/index.js":199,"../Data.Maybe/index.js":210}],334:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var DOM_HTML_Indexed_ButtonType = require("../DOM.HTML.Indexed.ButtonType/index.js");
var DOM_HTML_Indexed_CrossOriginValue = require("../DOM.HTML.Indexed.CrossOriginValue/index.js");
var DOM_HTML_Indexed_DirValue = require("../DOM.HTML.Indexed.DirValue/index.js");
var DOM_HTML_Indexed_FormMethod = require("../DOM.HTML.Indexed.FormMethod/index.js");
var DOM_HTML_Indexed_InputType = require("../DOM.HTML.Indexed.InputType/index.js");
var DOM_HTML_Indexed_KindValue = require("../DOM.HTML.Indexed.KindValue/index.js");
var DOM_HTML_Indexed_MenuType = require("../DOM.HTML.Indexed.MenuType/index.js");
var DOM_HTML_Indexed_MenuitemType = require("../DOM.HTML.Indexed.MenuitemType/index.js");
var DOM_HTML_Indexed_OnOff = require("../DOM.HTML.Indexed.OnOff/index.js");
var DOM_HTML_Indexed_OrderedListType = require("../DOM.HTML.Indexed.OrderedListType/index.js");
var DOM_HTML_Indexed_PreloadValue = require("../DOM.HTML.Indexed.PreloadValue/index.js");
var DOM_HTML_Indexed_ScopeValue = require("../DOM.HTML.Indexed.ScopeValue/index.js");
var DOM_HTML_Indexed_StepValue = require("../DOM.HTML.Indexed.StepValue/index.js");
var DOM_HTML_Indexed_WrapValue = require("../DOM.HTML.Indexed.WrapValue/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_MediaType = require("../Data.MediaType/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Halogen_Query_InputF = require("../Halogen.Query.InputF/index.js");
var Halogen_VDom = require("../Halogen.VDom/index.js");
var Halogen_VDom_DOM_Prop = require("../Halogen.VDom.DOM.Prop/index.js");
var Halogen_VDom_Types = require("../Halogen.VDom.Types/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM_Element = require("../Web.DOM.Element/index.js");
var Web_Event_Event = require("../Web.Event.Event/index.js");
var PropName = function (x) {
    return x;
};
var HTML = function (x) {
    return x;
};
var ClassName = function (x) {
    return x;
};
var AttrName = function (x) {
    return x;
};
var IsProp = function (toPropValue) {
    this.toPropValue = toPropValue;
};
var wrapValueIsProp = new IsProp(function ($26) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_WrapValue.renderWrapValue($26));
});
var toPropValue = function (dict) {
    return dict.toPropValue;
};
var text = function ($27) {
    return HTML(Halogen_VDom_Types.Text.create($27));
};
var stringIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromString);
var stepValueIsProp = new IsProp(function ($28) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_StepValue.renderStepValue($28));
});
var slot = function ($29) {
    return HTML(Halogen_VDom_Types.Widget.create($29));
};
var semigroupClassName = Data_Semigroup.semigroupString;
var scopeValueIsProp = new IsProp(function ($30) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_ScopeValue.renderScopeValue($30));
});
var ref = function (f) {
    return Halogen_VDom_DOM_Prop.Ref.create(function ($31) {
        return f((function (v) {
            if (v instanceof Halogen_VDom_DOM_Prop.Created) {
                return new Data_Maybe.Just(v.value0);
            };
            if (v instanceof Halogen_VDom_DOM_Prop.Removed) {
                return Data_Maybe.Nothing.value;
            };
            throw new Error("Failed pattern match at Halogen.HTML.Core (line 103, column 21 - line 105, column 23): " + [ v.constructor.name ]);
        })($31));
    });
};
var prop = function (dictIsProp) {
    return function (v) {
        return function ($32) {
            return Halogen_VDom_DOM_Prop.Property.create(v)(toPropValue(dictIsProp)($32));
        };
    };
};
var preloadValueIsProp = new IsProp(function ($33) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_PreloadValue.renderPreloadValue($33));
});
var orderedListTypeIsProp = new IsProp(function ($34) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_OrderedListType.renderOrderedListType($34));
});
var ordPropName = Data_Ord.ordString;
var ordClassName = Data_Ord.ordString;
var ordAttrName = Data_Ord.ordString;
var onOffIsProp = new IsProp(function ($35) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_OnOff.renderOnOff($35));
});
var numberIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromNumber);
var newtypePropName = new Data_Newtype.Newtype(function (n) {
    return n;
}, PropName);
var newtypeHTML = new Data_Newtype.Newtype(function (n) {
    return n;
}, HTML);
var newtypeClassName = new Data_Newtype.Newtype(function (n) {
    return n;
}, ClassName);
var newtypeAttrName = new Data_Newtype.Newtype(function (n) {
    return n;
}, AttrName);
var menuitemTypeIsProp = new IsProp(function ($36) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_MenuitemType.renderMenuitemType($36));
});
var menuTypeIsProp = new IsProp(function ($37) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_MenuType.renderMenuType($37));
});
var mediaTypeIsProp = new IsProp(function ($38) {
    return Halogen_VDom_DOM_Prop.propFromString(Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)($38));
});
var kindValueIsProp = new IsProp(function ($39) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_KindValue.renderKindValue($39));
});
var keyed = function (ns) {
    return function (name) {
        return function (props) {
            return function (children) {
                return new Halogen_VDom_Types.Keyed(new Halogen_VDom_Types.ElemSpec(ns, name, props), children);
            };
        };
    };
};
var intIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromInt);
var inputTypeIsProp = new IsProp(function ($40) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_InputType.renderInputType($40));
});
var handler = Halogen_VDom_DOM_Prop.Handler.create;
var formMethodIsProp = new IsProp(function ($41) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_FormMethod.renderFormMethod($41));
});
var eqPropName = Data_Eq.eqString;
var eqClassName = Data_Eq.eqString;
var eqAttrName = Data_Eq.eqString;
var element = function (ns) {
    return function (name) {
        return function (props) {
            return function (children) {
                return new Halogen_VDom_Types.Elem(new Halogen_VDom_Types.ElemSpec(ns, name, props), children);
            };
        };
    };
};
var dirValueIsProp = new IsProp(function ($42) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_DirValue.renderDirValue($42));
});
var crossOriginValueIsProp = new IsProp(function ($43) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_CrossOriginValue.renderCrossOriginValue($43));
});
var buttonTypeIsProp = new IsProp(function ($44) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_ButtonType.renderButtonType($44));
});
var booleanIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromBoolean);
var bifunctorHTML = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            return Data_Bifunctor.bimap(Halogen_VDom_Types.bifunctorVDom)(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp)(Data_Functor.map(Halogen_Query_InputF.functorInputF)(g))))(f)(v);
        };
    };
});
var functorHTML = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorHTML));
var attr = function (ns) {
    return function (v) {
        return Halogen_VDom_DOM_Prop.Attribute.create(ns)(v);
    };
};
module.exports = {
    HTML: HTML,
    slot: slot,
    text: text,
    element: element,
    keyed: keyed,
    prop: prop,
    attr: attr,
    handler: handler,
    ref: ref,
    IsProp: IsProp,
    toPropValue: toPropValue,
    PropName: PropName,
    AttrName: AttrName,
    ClassName: ClassName,
    newtypeHTML: newtypeHTML,
    bifunctorHTML: bifunctorHTML,
    functorHTML: functorHTML,
    stringIsProp: stringIsProp,
    intIsProp: intIsProp,
    numberIsProp: numberIsProp,
    booleanIsProp: booleanIsProp,
    mediaTypeIsProp: mediaTypeIsProp,
    buttonTypeIsProp: buttonTypeIsProp,
    crossOriginValueIsProp: crossOriginValueIsProp,
    dirValueIsProp: dirValueIsProp,
    formMethodIsProp: formMethodIsProp,
    inputTypeIsProp: inputTypeIsProp,
    kindValueIsProp: kindValueIsProp,
    menuitemTypeIsProp: menuitemTypeIsProp,
    menuTypeIsProp: menuTypeIsProp,
    onOffIsProp: onOffIsProp,
    orderedListTypeIsProp: orderedListTypeIsProp,
    preloadValueIsProp: preloadValueIsProp,
    scopeValueIsProp: scopeValueIsProp,
    stepValueIsProp: stepValueIsProp,
    wrapValueIsProp: wrapValueIsProp,
    newtypePropName: newtypePropName,
    eqPropName: eqPropName,
    ordPropName: ordPropName,
    newtypeAttrName: newtypeAttrName,
    eqAttrName: eqAttrName,
    ordAttrName: ordAttrName,
    newtypeClassName: newtypeClassName,
    eqClassName: eqClassName,
    ordClassName: ordClassName,
    semigroupClassName: semigroupClassName
};

},{"../Control.Semigroupoid/index.js":61,"../DOM.HTML.Indexed.ButtonType/index.js":62,"../DOM.HTML.Indexed.CrossOriginValue/index.js":63,"../DOM.HTML.Indexed.DirValue/index.js":64,"../DOM.HTML.Indexed.FormMethod/index.js":65,"../DOM.HTML.Indexed.InputType/index.js":66,"../DOM.HTML.Indexed.KindValue/index.js":67,"../DOM.HTML.Indexed.MenuType/index.js":68,"../DOM.HTML.Indexed.MenuitemType/index.js":69,"../DOM.HTML.Indexed.OnOff/index.js":70,"../DOM.HTML.Indexed.OrderedListType/index.js":71,"../DOM.HTML.Indexed.PreloadValue/index.js":72,"../DOM.HTML.Indexed.ScopeValue/index.js":73,"../DOM.HTML.Indexed.StepValue/index.js":74,"../DOM.HTML.Indexed.WrapValue/index.js":75,"../Data.Bifunctor/index.js":106,"../Data.Eq/index.js":135,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.MediaType/index.js":211,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Tuple/index.js":283,"../Halogen.Query.InputF/index.js":343,"../Halogen.VDom.DOM.Prop/index.js":345,"../Halogen.VDom.Types/index.js":349,"../Halogen.VDom/index.js":352,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.Element/index.js":444,"../Web.Event.Event/index.js":465}],335:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var DOM_HTML_Indexed = require("../DOM.HTML.Indexed/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");
var Halogen_Query_InputF = require("../Halogen.Query.InputF/index.js");
var Halogen_VDom = require("../Halogen.VDom/index.js");
var Halogen_VDom_Types = require("../Halogen.VDom.Types/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var withKeys_ = function (ctor) {
    return function (children) {
        var v = ctor([  ]);
        if (v instanceof Halogen_VDom_Types.Elem) {
            return new Halogen_VDom_Types.Keyed(v.value0, children);
        };
        return v;
    };
};
var withKeys = function (ctor) {
    return function (props) {
        return function (children) {
            var v = ctor(props)([  ]);
            if (v instanceof Halogen_VDom_Types.Elem) {
                return new Halogen_VDom_Types.Keyed(v.value0, children);
            };
            return v;
        };
    };
};
var keyedNS = function ($8) {
    return Halogen_HTML_Core.keyed(Control_Applicative.pure(Data_Maybe.applicativeMaybe)($8));
};
var keyed = Halogen_HTML_Core.keyed(Data_Maybe.Nothing.value);
var elementNS = function ($9) {
    return Halogen_HTML_Core.element(Control_Applicative.pure(Data_Maybe.applicativeMaybe)($9));
};
var element = Halogen_HTML_Core.element(Data_Maybe.Nothing.value);
var em = element("em");
var em_ = em([  ]);
var embed = element("embed");
var embed_ = embed([  ]);
var fieldset = element("fieldset");
var fieldset_ = fieldset([  ]);
var figcaption = element("figcaption");
var figcaption_ = figcaption([  ]);
var figure = element("figure");
var figure_ = figure([  ]);
var footer = element("footer");
var footer_ = footer([  ]);
var form = element("form");
var form_ = form([  ]);
var h1 = element("h1");
var h1_ = h1([  ]);
var h2 = element("h2");
var h2_ = h2([  ]);
var h3 = element("h3");
var h3_ = h3([  ]);
var h4 = element("h4");
var h4_ = h4([  ]);
var h5 = element("h5");
var h5_ = h5([  ]);
var h6 = element("h6");
var h6_ = h6([  ]);
var head = element("head");
var head_ = head([  ]);
var header = element("header");
var header_ = header([  ]);
var hr = function (props) {
    return element("hr")(props)([  ]);
};
var hr_ = hr([  ]);
var html = element("html");
var html_ = html([  ]);
var i = element("i");
var i_ = i([  ]);
var iframe = function (props) {
    return element("iframe")(props)([  ]);
};
var img = function (props) {
    return element("img")(props)([  ]);
};
var input = function (props) {
    return element("input")(props)([  ]);
};
var ins = element("ins");
var ins_ = ins([  ]);
var kbd = element("kbd");
var kbd_ = kbd([  ]);
var label = element("label");
var label_ = label([  ]);
var legend = element("legend");
var legend_ = legend([  ]);
var li = element("li");
var li_ = li([  ]);
var link = function (props) {
    return element("link")(props)([  ]);
};
var main = element("main");
var main_ = main([  ]);
var map = element("map");
var map_ = map([  ]);
var mark = element("mark");
var mark_ = mark([  ]);
var menu = element("menu");
var menu_ = menu([  ]);
var menuitem = element("menuitem");
var menuitem_ = menuitem([  ]);
var meta = function (props) {
    return element("meta")(props)([  ]);
};
var meter = element("meter");
var meter_ = meter([  ]);
var nav = element("nav");
var nav_ = nav([  ]);
var noscript = element("noscript");
var noscript_ = noscript([  ]);
var object = element("object");
var object_ = object([  ]);
var ol = element("ol");
var ol_ = ol([  ]);
var optgroup = element("optgroup");
var optgroup_ = optgroup([  ]);
var option = element("option");
var option_ = option([  ]);
var output = element("output");
var output_ = output([  ]);
var p = element("p");
var p_ = p([  ]);
var param = function (props) {
    return element("param")(props)([  ]);
};
var pre = element("pre");
var pre_ = pre([  ]);
var progress = element("progress");
var progress_ = progress([  ]);
var q = element("q");
var q_ = q([  ]);
var rp = element("rp");
var rp_ = rp([  ]);
var rt = element("rt");
var rt_ = rt([  ]);
var ruby = element("ruby");
var ruby_ = ruby([  ]);
var samp = element("samp");
var samp_ = samp([  ]);
var script = element("script");
var script_ = script([  ]);
var section = element("section");
var section_ = section([  ]);
var select = element("select");
var select_ = select([  ]);
var small = element("small");
var small_ = small([  ]);
var source = function (props) {
    return element("source")(props)([  ]);
};
var span = element("span");
var span_ = span([  ]);
var strong = element("strong");
var strong_ = strong([  ]);
var style = element("style");
var style_ = style([  ]);
var sub = element("sub");
var sub_ = sub([  ]);
var summary = element("summary");
var summary_ = summary([  ]);
var sup = element("sup");
var sup_ = sup([  ]);
var table = element("table");
var table_ = table([  ]);
var tbody = element("tbody");
var tbody_ = tbody([  ]);
var td = element("td");
var td_ = td([  ]);
var textarea = function (es) {
    return element("textarea")(es)([  ]);
};
var tfoot = element("tfoot");
var tfoot_ = tfoot([  ]);
var th = element("th");
var th_ = th([  ]);
var thead = element("thead");
var thead_ = thead([  ]);
var time = element("time");
var time_ = time([  ]);
var title = element("title");
var title_ = title([  ]);
var tr = element("tr");
var tr_ = tr([  ]);
var track = function (props) {
    return element("track")(props)([  ]);
};
var u = element("u");
var u_ = u([  ]);
var ul = element("ul");
var ul_ = ul([  ]);
var $$var = element("var");
var var_ = $$var([  ]);
var video = element("video");
var video_ = video([  ]);
var wbr = function (props) {
    return element("wbr")(props)([  ]);
};
var dt = element("dt");
var dt_ = dt([  ]);
var dl = element("dl");
var dl_ = dl([  ]);
var div = element("div");
var div_ = div([  ]);
var dialog = element("dialog");
var dialog_ = dialog([  ]);
var dfn = element("dfn");
var dfn_ = dfn([  ]);
var details = element("details");
var details_ = details([  ]);
var del = element("del");
var del_ = del([  ]);
var dd = element("dd");
var dd_ = dd([  ]);
var datalist = element("datalist");
var datalist_ = datalist([  ]);
var command = function (props) {
    return element("command")(props)([  ]);
};
var colgroup = element("colgroup");
var colgroup_ = colgroup([  ]);
var col = function (props) {
    return element("col")(props)([  ]);
};
var code = element("code");
var code_ = code([  ]);
var cite = element("cite");
var cite_ = cite([  ]);
var caption = element("caption");
var caption_ = caption([  ]);
var canvas = function (props) {
    return element("canvas")(props)([  ]);
};
var button = element("button");
var button_ = button([  ]);
var br = function (props) {
    return element("br")(props)([  ]);
};
var br_ = br([  ]);
var body = element("body");
var body_ = body([  ]);
var blockquote = element("blockquote");
var blockquote_ = blockquote([  ]);
var bdo = element("bdo");
var bdo_ = bdo([  ]);
var bdi = element("bdi");
var bdi_ = bdi([  ]);
var base = function (props) {
    return element("base")(props)([  ]);
};
var b = element("b");
var b_ = b([  ]);
var audio = element("audio");
var audio_ = audio([  ]);
var aside = element("aside");
var aside_ = aside([  ]);
var article = element("article");
var article_ = article([  ]);
var area = function (props) {
    return element("area")(props)([  ]);
};
var address = element("address");
var address_ = address([  ]);
var abbr = element("abbr");
var abbr_ = abbr([  ]);
var a = element("a");
var a_ = a([  ]);
module.exports = {
    element: element,
    elementNS: elementNS,
    keyed: keyed,
    keyedNS: keyedNS,
    withKeys: withKeys,
    withKeys_: withKeys_,
    a: a,
    a_: a_,
    abbr: abbr,
    abbr_: abbr_,
    address: address,
    address_: address_,
    area: area,
    article: article,
    article_: article_,
    aside: aside,
    aside_: aside_,
    audio: audio,
    audio_: audio_,
    b: b,
    b_: b_,
    base: base,
    bdi: bdi,
    bdi_: bdi_,
    bdo: bdo,
    bdo_: bdo_,
    blockquote: blockquote,
    blockquote_: blockquote_,
    body: body,
    body_: body_,
    br: br,
    br_: br_,
    button: button,
    button_: button_,
    canvas: canvas,
    caption: caption,
    caption_: caption_,
    cite: cite,
    cite_: cite_,
    code: code,
    code_: code_,
    col: col,
    colgroup: colgroup,
    colgroup_: colgroup_,
    command: command,
    datalist: datalist,
    datalist_: datalist_,
    dd: dd,
    dd_: dd_,
    del: del,
    del_: del_,
    details: details,
    details_: details_,
    dfn: dfn,
    dfn_: dfn_,
    dialog: dialog,
    dialog_: dialog_,
    div: div,
    div_: div_,
    dl: dl,
    dl_: dl_,
    dt: dt,
    dt_: dt_,
    em: em,
    em_: em_,
    embed: embed,
    embed_: embed_,
    fieldset: fieldset,
    fieldset_: fieldset_,
    figcaption: figcaption,
    figcaption_: figcaption_,
    figure: figure,
    figure_: figure_,
    footer: footer,
    footer_: footer_,
    form: form,
    form_: form_,
    h1: h1,
    h1_: h1_,
    h2: h2,
    h2_: h2_,
    h3: h3,
    h3_: h3_,
    h4: h4,
    h4_: h4_,
    h5: h5,
    h5_: h5_,
    h6: h6,
    h6_: h6_,
    head: head,
    head_: head_,
    header: header,
    header_: header_,
    hr: hr,
    hr_: hr_,
    html: html,
    html_: html_,
    i: i,
    i_: i_,
    iframe: iframe,
    img: img,
    input: input,
    ins: ins,
    ins_: ins_,
    kbd: kbd,
    kbd_: kbd_,
    label: label,
    label_: label_,
    legend: legend,
    legend_: legend_,
    li: li,
    li_: li_,
    link: link,
    main: main,
    main_: main_,
    map: map,
    map_: map_,
    mark: mark,
    mark_: mark_,
    menu: menu,
    menu_: menu_,
    menuitem: menuitem,
    menuitem_: menuitem_,
    meta: meta,
    meter: meter,
    meter_: meter_,
    nav: nav,
    nav_: nav_,
    noscript: noscript,
    noscript_: noscript_,
    object: object,
    object_: object_,
    ol: ol,
    ol_: ol_,
    optgroup: optgroup,
    optgroup_: optgroup_,
    option: option,
    option_: option_,
    output: output,
    output_: output_,
    p: p,
    p_: p_,
    param: param,
    pre: pre,
    pre_: pre_,
    progress: progress,
    progress_: progress_,
    q: q,
    q_: q_,
    rp: rp,
    rp_: rp_,
    rt: rt,
    rt_: rt_,
    ruby: ruby,
    ruby_: ruby_,
    samp: samp,
    samp_: samp_,
    script: script,
    script_: script_,
    section: section,
    section_: section_,
    select: select,
    select_: select_,
    small: small,
    small_: small_,
    source: source,
    span: span,
    span_: span_,
    strong: strong,
    strong_: strong_,
    style: style,
    style_: style_,
    sub: sub,
    sub_: sub_,
    summary: summary,
    summary_: summary_,
    sup: sup,
    sup_: sup_,
    table: table,
    table_: table_,
    tbody: tbody,
    tbody_: tbody_,
    td: td,
    td_: td_,
    textarea: textarea,
    tfoot: tfoot,
    tfoot_: tfoot_,
    th: th,
    th_: th_,
    thead: thead,
    thead_: thead_,
    time: time,
    time_: time_,
    title: title,
    title_: title_,
    tr: tr,
    tr_: tr_,
    track: track,
    u: u,
    u_: u_,
    ul: ul,
    ul_: ul_,
    "var": $$var,
    var_: var_,
    video: video,
    video_: video_,
    wbr: wbr
};

},{"../Control.Applicative/index.js":7,"../Control.Semigroupoid/index.js":61,"../DOM.HTML.Indexed/index.js":76,"../Data.Function/index.js":145,"../Data.Maybe/index.js":210,"../Data.Tuple/index.js":283,"../Halogen.HTML.Core/index.js":334,"../Halogen.HTML.Properties/index.js":338,"../Halogen.Query.InputF/index.js":343,"../Halogen.VDom.Types/index.js":349,"../Halogen.VDom/index.js":352,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425}],336:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Except = require("../Control.Monad.Except/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Foreign = require("../Foreign/index.js");
var Foreign_Index = require("../Foreign.Index/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");
var Halogen_Query = require("../Halogen.Query/index.js");
var Halogen_Query_InputF = require("../Halogen.Query.InputF/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Clipboard_ClipboardEvent = require("../Web.Clipboard.ClipboardEvent/index.js");
var Web_Clipboard_ClipboardEvent_EventTypes = require("../Web.Clipboard.ClipboardEvent.EventTypes/index.js");
var Web_Event_Event = require("../Web.Event.Event/index.js");
var Web_HTML_Event_DragEvent = require("../Web.HTML.Event.DragEvent/index.js");
var Web_HTML_Event_DragEvent_EventTypes = require("../Web.HTML.Event.DragEvent.EventTypes/index.js");
var Web_HTML_Event_EventTypes = require("../Web.HTML.Event.EventTypes/index.js");
var Web_TouchEvent_TouchEvent = require("../Web.TouchEvent.TouchEvent/index.js");
var Web_UIEvent_FocusEvent = require("../Web.UIEvent.FocusEvent/index.js");
var Web_UIEvent_FocusEvent_EventTypes = require("../Web.UIEvent.FocusEvent.EventTypes/index.js");
var Web_UIEvent_KeyboardEvent = require("../Web.UIEvent.KeyboardEvent/index.js");
var Web_UIEvent_KeyboardEvent_EventTypes = require("../Web.UIEvent.KeyboardEvent.EventTypes/index.js");
var Web_UIEvent_MouseEvent = require("../Web.UIEvent.MouseEvent/index.js");
var Web_UIEvent_MouseEvent_EventTypes = require("../Web.UIEvent.MouseEvent.EventTypes/index.js");
var Web_UIEvent_WheelEvent = require("../Web.UIEvent.WheelEvent/index.js");
var Web_UIEvent_WheelEvent_EventTypes = require("../Web.UIEvent.WheelEvent.EventTypes/index.js");
var wheelHandler = Unsafe_Coerce.unsafeCoerce;
var touchHandler = Unsafe_Coerce.unsafeCoerce;
var mouseHandler = Unsafe_Coerce.unsafeCoerce;
var keyHandler = Unsafe_Coerce.unsafeCoerce;
var input_ = function (f) {
    return function (v) {
        return Data_Maybe.Just.create(Halogen_Query.action(f));
    };
};
var input = function (f) {
    return function (x) {
        return Data_Maybe.Just.create(Halogen_Query.action(f(x)));
    };
};
var handler = function (et) {
    return function ($1) {
        return Halogen_HTML_Core.handler(et)(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Query_InputF.Query.create))($1));
    };
};
var onAbort = handler("abort");
var onChange = handler(Web_HTML_Event_EventTypes.change);
var onClick = function ($2) {
    return handler(Web_UIEvent_MouseEvent_EventTypes.click)(mouseHandler($2));
};
var onDoubleClick = function ($3) {
    return handler(Web_UIEvent_MouseEvent_EventTypes.dblclick)(mouseHandler($3));
};
var onError = handler(Web_HTML_Event_EventTypes.error);
var onInput = handler(Web_HTML_Event_EventTypes.input);
var onInvalid = handler(Web_HTML_Event_EventTypes.invalid);
var onKeyDown = function ($4) {
    return handler(Web_UIEvent_KeyboardEvent_EventTypes.keydown)(keyHandler($4));
};
var onKeyUp = function ($5) {
    return handler(Web_UIEvent_KeyboardEvent_EventTypes.keyup)(keyHandler($5));
};
var onLoad = handler(Web_HTML_Event_EventTypes.load);
var onMouseDown = function ($6) {
    return handler(Web_UIEvent_MouseEvent_EventTypes.mousedown)(mouseHandler($6));
};
var onMouseEnter = function ($7) {
    return handler(Web_UIEvent_MouseEvent_EventTypes.mouseenter)(mouseHandler($7));
};
var onMouseLeave = function ($8) {
    return handler(Web_UIEvent_MouseEvent_EventTypes.mouseleave)(mouseHandler($8));
};
var onMouseMove = function ($9) {
    return handler(Web_UIEvent_MouseEvent_EventTypes.mousemove)(mouseHandler($9));
};
var onMouseOut = function ($10) {
    return handler(Web_UIEvent_MouseEvent_EventTypes.mouseout)(mouseHandler($10));
};
var onMouseOver = function ($11) {
    return handler(Web_UIEvent_MouseEvent_EventTypes.mouseover)(mouseHandler($11));
};
var onMouseUp = function ($12) {
    return handler(Web_UIEvent_MouseEvent_EventTypes.mouseup)(mouseHandler($12));
};
var onReset = handler("reset");
var onResize = handler("resize");
var onScroll = handler("scroll");
var onSelect = handler(Web_HTML_Event_EventTypes.select);
var onSubmit = handler("submit");
var onTouchCancel = function ($13) {
    return handler("touchcancel")(touchHandler($13));
};
var onTouchEnd = function ($14) {
    return handler("touchend")(touchHandler($14));
};
var onTouchEnter = function ($15) {
    return handler("touchenter")(touchHandler($15));
};
var onTouchLeave = function ($16) {
    return handler("touchleave")(touchHandler($16));
};
var onTouchMove = function ($17) {
    return handler("touchmove")(touchHandler($17));
};
var onTouchStart = function ($18) {
    return handler("touchstart")(touchHandler($18));
};
var onTransitionEnd = handler("transitionend");
var onWheel = function ($19) {
    return handler(Web_UIEvent_WheelEvent_EventTypes.wheel)(wheelHandler($19));
};
var focusHandler = Unsafe_Coerce.unsafeCoerce;
var onBlur = function ($20) {
    return handler(Web_HTML_Event_EventTypes.blur)(focusHandler($20));
};
var onFocus = function ($21) {
    return handler(Web_UIEvent_FocusEvent_EventTypes.focus)(focusHandler($21));
};
var onFocusIn = function ($22) {
    return handler(Web_UIEvent_FocusEvent_EventTypes.focusin)(focusHandler($22));
};
var onFocusOut = function ($23) {
    return handler(Web_UIEvent_FocusEvent_EventTypes.focusout)(focusHandler($23));
};
var dragHandler = Unsafe_Coerce.unsafeCoerce;
var onDrag = function ($24) {
    return handler(Web_HTML_Event_DragEvent_EventTypes.drag)(dragHandler($24));
};
var onDragEnd = function ($25) {
    return handler(Web_HTML_Event_DragEvent_EventTypes.dragend)(dragHandler($25));
};
var onDragEnter = function ($26) {
    return handler(Web_HTML_Event_DragEvent_EventTypes.dragenter)(dragHandler($26));
};
var onDragExit = function ($27) {
    return handler(Web_HTML_Event_DragEvent_EventTypes.dragexit)(dragHandler($27));
};
var onDragLeave = function ($28) {
    return handler(Web_HTML_Event_DragEvent_EventTypes.dragleave)(dragHandler($28));
};
var onDragOver = function ($29) {
    return handler(Web_HTML_Event_DragEvent_EventTypes.dragover)(dragHandler($29));
};
var onDragStart = function ($30) {
    return handler(Web_HTML_Event_DragEvent_EventTypes.dragstart)(dragHandler($30));
};
var onDrop = function ($31) {
    return handler(Web_HTML_Event_DragEvent_EventTypes.drop)(dragHandler($31));
};
var clipboardHandler = Unsafe_Coerce.unsafeCoerce;
var onCopy = function ($32) {
    return handler(Web_Clipboard_ClipboardEvent_EventTypes.copy)(clipboardHandler($32));
};
var onCut = function ($33) {
    return handler(Web_Clipboard_ClipboardEvent_EventTypes.cut)(clipboardHandler($33));
};
var onPaste = function ($34) {
    return handler(Web_Clipboard_ClipboardEvent_EventTypes.paste)(clipboardHandler($34));
};
var addForeignPropHandler = function (key) {
    return function (prop) {
        return function (reader) {
            return function (f) {
                var go = function (a) {
                    return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(reader)(Foreign_Index.readProp(prop))(Foreign.unsafeToForeign(a));
                };
                return handler(key)(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(Web_Event_Event.currentTarget)(function (e) {
                    return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(f)(Control_Monad_Except.runExcept(go(e)));
                }));
            };
        };
    };
};
var onChecked = addForeignPropHandler(Web_HTML_Event_EventTypes.change)("checked")(Foreign.readBoolean);
var onSelectedIndexChange = addForeignPropHandler(Web_HTML_Event_EventTypes.change)("selectedIndex")(Foreign.readInt);
var onValueChange = addForeignPropHandler(Web_HTML_Event_EventTypes.change)("value")(Foreign.readString);
var onValueInput = addForeignPropHandler(Web_HTML_Event_EventTypes.input)("value")(Foreign.readString);
module.exports = {
    input: input,
    input_: input_,
    handler: handler,
    onAbort: onAbort,
    onError: onError,
    onLoad: onLoad,
    onScroll: onScroll,
    onChange: onChange,
    onInput: onInput,
    onInvalid: onInvalid,
    onReset: onReset,
    onSelect: onSelect,
    onSubmit: onSubmit,
    onTransitionEnd: onTransitionEnd,
    onCopy: onCopy,
    onPaste: onPaste,
    onCut: onCut,
    onClick: onClick,
    onDoubleClick: onDoubleClick,
    onMouseDown: onMouseDown,
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    onMouseMove: onMouseMove,
    onMouseOver: onMouseOver,
    onMouseOut: onMouseOut,
    onMouseUp: onMouseUp,
    onWheel: onWheel,
    onKeyDown: onKeyDown,
    onKeyUp: onKeyUp,
    onBlur: onBlur,
    onFocus: onFocus,
    onFocusIn: onFocusIn,
    onFocusOut: onFocusOut,
    onDrag: onDrag,
    onDragEnd: onDragEnd,
    onDragExit: onDragExit,
    onDragEnter: onDragEnter,
    onDragLeave: onDragLeave,
    onDragOver: onDragOver,
    onDragStart: onDragStart,
    onDrop: onDrop,
    onTouchCancel: onTouchCancel,
    onTouchEnd: onTouchEnd,
    onTouchEnter: onTouchEnter,
    onTouchLeave: onTouchLeave,
    onTouchMove: onTouchMove,
    onTouchStart: onTouchStart,
    onResize: onResize,
    onValueChange: onValueChange,
    onValueInput: onValueInput,
    onSelectedIndexChange: onSelectedIndexChange,
    onChecked: onChecked
};

},{"../Control.Bind/index.js":13,"../Control.Monad.Except.Trans/index.js":29,"../Control.Monad.Except/index.js":30,"../Control.Semigroupoid/index.js":61,"../Data.Either/index.js":131,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Identity/index.js":163,"../Data.Maybe/index.js":210,"../Foreign.Index/index.js":314,"../Foreign/index.js":320,"../Halogen.HTML.Core/index.js":334,"../Halogen.HTML.Properties/index.js":338,"../Halogen.Query.InputF/index.js":343,"../Halogen.Query/index.js":344,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.Clipboard.ClipboardEvent.EventTypes/index.js":428,"../Web.Clipboard.ClipboardEvent/index.js":430,"../Web.Event.Event/index.js":465,"../Web.HTML.Event.DragEvent.EventTypes/index.js":478,"../Web.HTML.Event.DragEvent/index.js":480,"../Web.HTML.Event.EventTypes/index.js":481,"../Web.TouchEvent.TouchEvent/index.js":620,"../Web.UIEvent.FocusEvent.EventTypes/index.js":624,"../Web.UIEvent.FocusEvent/index.js":626,"../Web.UIEvent.KeyboardEvent.EventTypes/index.js":627,"../Web.UIEvent.KeyboardEvent/index.js":629,"../Web.UIEvent.MouseEvent.EventTypes/index.js":630,"../Web.UIEvent.MouseEvent/index.js":632,"../Web.UIEvent.WheelEvent.EventTypes/index.js":635,"../Web.UIEvent.WheelEvent/index.js":637}],337:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");
var valueText = Halogen_HTML_Properties.attr("aria-valuetext");
var valueNow = Halogen_HTML_Properties.attr("aria-valuenow");
var valueMin = Halogen_HTML_Properties.attr("aria-valuemin");
var valueMax = Halogen_HTML_Properties.attr("aria-valuemax");
var sort = Halogen_HTML_Properties.attr("aria-sort");
var setSize = Halogen_HTML_Properties.attr("aria-setsize");
var selected = Halogen_HTML_Properties.attr("aria-selected");
var role = Halogen_HTML_Properties.attr("role");
var required = Halogen_HTML_Properties.attr("aria-required");
var relevant = Halogen_HTML_Properties.attr("aria-relevant");
var readOnly = Halogen_HTML_Properties.attr("aria-readonly");
var pressed = Halogen_HTML_Properties.attr("aria-pressed");
var posInSet = Halogen_HTML_Properties.attr("aria-posinset");
var owns = Halogen_HTML_Properties.attr("aria-owns");
var orientation = Halogen_HTML_Properties.attr("aria-orientation");
var multiSelectable = Halogen_HTML_Properties.attr("aria-multiselectable");
var multiLine = Halogen_HTML_Properties.attr("aria-multiline");
var live = Halogen_HTML_Properties.attr("aria-live");
var level = Halogen_HTML_Properties.attr("aria-level");
var labelledBy = Halogen_HTML_Properties.attr("aria-labelledby");
var label = Halogen_HTML_Properties.attr("aria-label");
var invalid = Halogen_HTML_Properties.attr("aria-invalid");
var hidden = Halogen_HTML_Properties.attr("aria-hidden");
var hasPopup = Halogen_HTML_Properties.attr("aria-haspopup");
var grabbed = Halogen_HTML_Properties.attr("aria-grabbed");
var flowTo = Halogen_HTML_Properties.attr("aria-flowto");
var expanded = Halogen_HTML_Properties.attr("aria-expanded");
var dropEffect = Halogen_HTML_Properties.attr("aria-dropeffect");
var disabled = Halogen_HTML_Properties.attr("aria-disabled");
var describedBy = Halogen_HTML_Properties.attr("aria-describedby");
var controls = Halogen_HTML_Properties.attr("aria-controls");
var checked = Halogen_HTML_Properties.attr("aria-checked");
var busy = Halogen_HTML_Properties.attr("aria-busy");
var autoComplete = Halogen_HTML_Properties.attr("aria-autocomplete");
var atomic = Halogen_HTML_Properties.attr("aria-atomic");
var activeDescendant = Halogen_HTML_Properties.attr("aria-activedescendant");
module.exports = {
    activeDescendant: activeDescendant,
    atomic: atomic,
    autoComplete: autoComplete,
    busy: busy,
    checked: checked,
    controls: controls,
    describedBy: describedBy,
    disabled: disabled,
    dropEffect: dropEffect,
    expanded: expanded,
    flowTo: flowTo,
    grabbed: grabbed,
    hasPopup: hasPopup,
    hidden: hidden,
    invalid: invalid,
    label: label,
    labelledBy: labelledBy,
    level: level,
    live: live,
    multiLine: multiLine,
    multiSelectable: multiSelectable,
    orientation: orientation,
    owns: owns,
    posInSet: posInSet,
    pressed: pressed,
    readOnly: readOnly,
    relevant: relevant,
    required: required,
    selected: selected,
    setSize: setSize,
    sort: sort,
    valueMax: valueMax,
    valueMin: valueMin,
    valueNow: valueNow,
    valueText: valueText,
    role: role
};

},{"../Halogen.HTML.Core/index.js":334,"../Halogen.HTML.Properties/index.js":338}],338:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var DOM_HTML_Indexed = require("../DOM.HTML.Indexed/index.js");
var DOM_HTML_Indexed_ButtonType = require("../DOM.HTML.Indexed.ButtonType/index.js");
var DOM_HTML_Indexed_FormMethod = require("../DOM.HTML.Indexed.FormMethod/index.js");
var DOM_HTML_Indexed_InputType = require("../DOM.HTML.Indexed.InputType/index.js");
var DOM_HTML_Indexed_MenuType = require("../DOM.HTML.Indexed.MenuType/index.js");
var DOM_HTML_Indexed_MenuitemType = require("../DOM.HTML.Indexed.MenuitemType/index.js");
var DOM_HTML_Indexed_OnOff = require("../DOM.HTML.Indexed.OnOff/index.js");
var DOM_HTML_Indexed_OrderedListType = require("../DOM.HTML.Indexed.OrderedListType/index.js");
var DOM_HTML_Indexed_PreloadValue = require("../DOM.HTML.Indexed.PreloadValue/index.js");
var DOM_HTML_Indexed_StepValue = require("../DOM.HTML.Indexed.StepValue/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_MediaType = require("../Data.MediaType/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_String = require("../Data.String/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_Query_InputF = require("../Halogen.Query.InputF/index.js");
var Halogen_VDom_DOM_Prop = require("../Halogen.VDom.DOM.Prop/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM_Element = require("../Web.DOM.Element/index.js");
var IProp = function (x) {
    return x;
};
var ref = (function () {
    var go = function (p) {
        return function (mel) {
            return new Data_Maybe.Just(new Halogen_Query_InputF.RefUpdate(p, mel, Data_Unit.unit));
        };
    };
    return function ($10) {
        return Halogen_HTML_Core.ref(go($10));
    };
})();
var prop = function (dictIsProp) {
    return Halogen_HTML_Core.prop(dictIsProp);
};
var readOnly = prop(Halogen_HTML_Core.booleanIsProp)("readOnly");
var rel = prop(Halogen_HTML_Core.stringIsProp)("rel");
var required = prop(Halogen_HTML_Core.booleanIsProp)("required");
var rowSpan = prop(Halogen_HTML_Core.intIsProp)("rowSpan");
var rows = prop(Halogen_HTML_Core.intIsProp)("rows");
var selected = prop(Halogen_HTML_Core.booleanIsProp)("selected");
var spellcheck = prop(Halogen_HTML_Core.booleanIsProp)("spellcheck");
var src = prop(Halogen_HTML_Core.stringIsProp)("src");
var step = prop(Halogen_HTML_Core.stepValueIsProp)("step");
var tabIndex = prop(Halogen_HTML_Core.intIsProp)("tabIndex");
var target = prop(Halogen_HTML_Core.stringIsProp)("target");
var title = prop(Halogen_HTML_Core.stringIsProp)("title");
var type_ = function (dictIsProp) {
    return prop(dictIsProp)("type");
};
var value = prop(Halogen_HTML_Core.stringIsProp)("value");
var width = prop(Halogen_HTML_Core.intIsProp)("width");
var preload = prop(Halogen_HTML_Core.preloadValueIsProp)("preload");
var poster = prop(Halogen_HTML_Core.stringIsProp)("poster");
var placeholder = prop(Halogen_HTML_Core.stringIsProp)("placeholder");
var pattern = prop(Halogen_HTML_Core.stringIsProp)("pattern");
var noValidate = prop(Halogen_HTML_Core.booleanIsProp)("noValidate");
var newtypeIProp = new Data_Newtype.Newtype(function (n) {
    return n;
}, IProp);
var name = prop(Halogen_HTML_Core.stringIsProp)("name");
var muted = prop(Halogen_HTML_Core.booleanIsProp)("muted");
var multiple = prop(Halogen_HTML_Core.booleanIsProp)("multiple");
var min = prop(Halogen_HTML_Core.numberIsProp)("min");
var method = prop(Halogen_HTML_Core.formMethodIsProp)("method");
var max = prop(Halogen_HTML_Core.numberIsProp)("max");
var loop = prop(Halogen_HTML_Core.booleanIsProp)("loop");
var id_ = prop(Halogen_HTML_Core.stringIsProp)("id");
var href = prop(Halogen_HTML_Core.stringIsProp)("href");
var height = prop(Halogen_HTML_Core.intIsProp)("height");
var functorIProp = new Data_Functor.Functor(function (f) {
    return function (m) {
        return Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp)(Data_Functor.map(Halogen_Query_InputF.functorInputF)(f))(m);
    };
});
var $$for = prop(Halogen_HTML_Core.stringIsProp)("htmlFor");
var enctype = prop(Halogen_HTML_Core.mediaTypeIsProp)("enctype");
var draggable = prop(Halogen_HTML_Core.booleanIsProp)("draggable");
var disabled = prop(Halogen_HTML_Core.booleanIsProp)("disabled");
var enabled = function ($11) {
    return disabled(!$11);
};
var controls = prop(Halogen_HTML_Core.booleanIsProp)("controls");
var cols = prop(Halogen_HTML_Core.intIsProp)("cols");
var colSpan = prop(Halogen_HTML_Core.intIsProp)("colSpan");
var classes = function ($12) {
    return prop(Halogen_HTML_Core.stringIsProp)("className")(Data_String_Common.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName))($12)));
};
var class_ = function ($13) {
    return prop(Halogen_HTML_Core.stringIsProp)("className")(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName)($13));
};
var checked = prop(Halogen_HTML_Core.booleanIsProp)("checked");
var charset = prop(Halogen_HTML_Core.stringIsProp)("charset");
var autoplay = prop(Halogen_HTML_Core.booleanIsProp)("autoplay");
var autofocus = prop(Halogen_HTML_Core.booleanIsProp)("autofocus");
var autocomplete = function ($14) {
    return prop(Halogen_HTML_Core.onOffIsProp)("autocomplete")((function (b) {
        if (b) {
            return DOM_HTML_Indexed_OnOff.On.value;
        };
        return DOM_HTML_Indexed_OnOff.Off.value;
    })($14));
};
var attrNS = function ($15) {
    return Halogen_HTML_Core.attr(Control_Applicative.pure(Data_Maybe.applicativeMaybe)($15));
};
var attr = Halogen_HTML_Core.attr(Data_Maybe.Nothing.value);
var list = attr("list");
var alt = prop(Halogen_HTML_Core.stringIsProp)("alt");
var action = prop(Halogen_HTML_Core.stringIsProp)("action");
var accept = prop(Halogen_HTML_Core.mediaTypeIsProp)("accept");
module.exports = {
    IProp: IProp,
    prop: prop,
    attr: attr,
    attrNS: attrNS,
    ref: ref,
    alt: alt,
    charset: charset,
    class_: class_,
    classes: classes,
    cols: cols,
    rows: rows,
    colSpan: colSpan,
    rowSpan: rowSpan,
    "for": $$for,
    height: height,
    width: width,
    href: href,
    id_: id_,
    name: name,
    rel: rel,
    src: src,
    target: target,
    title: title,
    method: method,
    action: action,
    enctype: enctype,
    noValidate: noValidate,
    type_: type_,
    value: value,
    min: min,
    max: max,
    step: step,
    disabled: disabled,
    enabled: enabled,
    required: required,
    readOnly: readOnly,
    spellcheck: spellcheck,
    checked: checked,
    selected: selected,
    placeholder: placeholder,
    autocomplete: autocomplete,
    list: list,
    autofocus: autofocus,
    multiple: multiple,
    pattern: pattern,
    accept: accept,
    autoplay: autoplay,
    controls: controls,
    loop: loop,
    muted: muted,
    poster: poster,
    preload: preload,
    draggable: draggable,
    tabIndex: tabIndex,
    newtypeIProp: newtypeIProp,
    functorIProp: functorIProp
};

},{"../Control.Applicative/index.js":7,"../Control.Semigroupoid/index.js":61,"../DOM.HTML.Indexed.ButtonType/index.js":62,"../DOM.HTML.Indexed.FormMethod/index.js":65,"../DOM.HTML.Indexed.InputType/index.js":66,"../DOM.HTML.Indexed.MenuType/index.js":68,"../DOM.HTML.Indexed.MenuitemType/index.js":69,"../DOM.HTML.Indexed.OnOff/index.js":70,"../DOM.HTML.Indexed.OrderedListType/index.js":71,"../DOM.HTML.Indexed.PreloadValue/index.js":72,"../DOM.HTML.Indexed.StepValue/index.js":74,"../DOM.HTML.Indexed/index.js":76,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Maybe/index.js":210,"../Data.MediaType/index.js":211,"../Data.Newtype/index.js":220,"../Data.String.Common/index.js":260,"../Data.String/index.js":272,"../Data.Unit/index.js":289,"../Halogen.HTML.Core/index.js":334,"../Halogen.Query.InputF/index.js":343,"../Halogen.VDom.DOM.Prop/index.js":345,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.Element/index.js":444}],339:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Halogen_Component = require("../Halogen.Component/index.js");
var Halogen_Component_ChildPath = require("../Halogen.Component.ChildPath/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements/index.js");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var slot$prime = function (i) {
    return function (p) {
        return function (component) {
            return function (input) {
                return function (outputQuery) {
                    var pq = Halogen_Component_ChildPath.prjQuery(i);
                    var f = function ($2) {
                        return Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Component_ChildPath.injQuery(i))(Halogen_Component.unComponent(function (v) {
                            return v.receiver;
                        })(component)($2));
                    };
                    return Halogen_HTML_Core.slot(Halogen_Component.mkComponentSlot(Halogen_Component_ChildPath.injSlot(i)(p))(component)(input)(f)(outputQuery)(pq));
                };
            };
        };
    };
};
var slot = function (p) {
    return function (component) {
        return function (input) {
            return function (outputQuery) {
                var f = Halogen_Component.unComponent(function (v) {
                    return v.receiver;
                })(component);
                return Halogen_HTML_Core.slot(Halogen_Component.mkComponentSlot(p)(component)(input)(f)(outputQuery)(Data_Maybe.Just.create));
            };
        };
    };
};
var fromPlainHTML = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    fromPlainHTML: fromPlainHTML,
    slot: slot,
    "slot'": slot$prime
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Halogen.Component.ChildPath/index.js":330,"../Halogen.Component/index.js":331,"../Halogen.HTML.Core/index.js":334,"../Halogen.HTML.Elements/index.js":335,"../Halogen.HTML.Properties/index.js":338,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425}],340:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Coroutine = require("../Control.Coroutine/index.js");
var Control_Monad_Free_Trans = require("../Control.Monad.Free.Trans/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Aff_AVar = require("../Effect.Aff.AVar/index.js");
var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Prelude = require("../Prelude/index.js");
var Listening = (function () {
    function Listening() {

    };
    Listening.value = new Listening();
    return Listening;
})();
var Done = (function () {
    function Done() {

    };
    Done.value = new Done();
    return Done;
})();
var EventSource = function (x) {
    return x;
};
var unEventSource = function (v) {
    return v;
};
var runAff$prime = Effect_Aff.runAff_(Data_Either.either(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)))(Control_Applicative.pure(Effect.applicativeEffect)));
var produceAff$prime = function (recv) {
    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_AVar.empty)(function (v) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_AVar.empty)(function (v1) {
            var producer = Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(Effect_Aff.monadAff)(Control_Bind.bindFlipped(Effect_Aff.bindAff)(Data_Function.flip(Effect_Aff_AVar.put)(v1))(recv(Data_Function.flip(Effect_Aff_AVar.put)(v)))))(function () {
                return Control_Coroutine.producer(Effect_Aff.monadAff)(Effect_Aff_AVar.take(v));
            });
            var cancel = function (r) {
                return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff.attempt(Effect_Aff_AVar.take(v1)))(function (v2) {
                    if (v2 instanceof Data_Either.Left) {
                        return Control_Applicative.pure(Effect_Aff.applicativeAff)(false);
                    };
                    if (v2 instanceof Data_Either.Right) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff_AVar.kill(Effect_Exception.error("finalized"))(v1))(function () {
                            return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(v2.value0)(function () {
                                return Control_Applicative.pure(Effect_Aff.applicativeAff)(true);
                            });
                        });
                    };
                    throw new Error("Failed pattern match at Halogen.Query.EventSource (line 180, column 41 - line 185, column 20): " + [ v2.constructor.name ]);
                });
            };
            return Control_Applicative.pure(Effect_Aff.applicativeAff)({
                producer: producer,
                cancel: cancel
            });
        });
    });
};
var produceAff = function (dictMonadAff) {
    return function (recv) {
        return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)((dictMonadAff.MonadEffect0()).Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))((dictMonadAff.MonadEffect0()).Monad0())(Effect_Aff_Class.liftAff(dictMonadAff)(Effect_Aff_AVar.empty)))(function (v) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)((dictMonadAff.MonadEffect0()).Monad0()))(Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorEmit)(((((dictMonadAff.MonadEffect0()).Monad0()).Bind1()).Apply0()).Functor0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))((dictMonadAff.MonadEffect0()).Monad0())(Effect_Aff_Class.liftAff(dictMonadAff)(Effect_Aff.forkAff(recv(Data_Function.flip(Effect_Aff_AVar.put)(v)))))))(function () {
                return Control_Coroutine.producer((dictMonadAff.MonadEffect0()).Monad0())(Effect_Aff_Class.liftAff(dictMonadAff)(Effect_Aff_AVar.take(v)));
            });
        });
    };
};
var produce$prime = function (recv) {
    return produceAff$prime(function (send) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(recv(function ($50) {
            return Data_Functor["void"](Effect.functorEffect)(runAff$prime(send($50)));
        })))(function (v) {
            return Control_Applicative.pure(Effect_Aff.applicativeAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(v));
        });
    });
};
var produce = function (recv) {
    return produceAff(Effect_Aff_Class.monadAffAff)(function (send) {
        return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(recv(function ($51) {
            return Data_Functor["void"](Effect.functorEffect)(runAff$prime(send($51)));
        }));
    });
};
var interpret = function (dictFunctor) {
    return function (nat) {
        return function (v) {
            return EventSource(Data_Functor.map(dictFunctor)(function (e) {
                return {
                    producer: Control_Monad_Free_Trans.interpret(Control_Coroutine.functorEmit)(dictFunctor)(Data_Bifunctor.lmap(Control_Coroutine.bifunctorEmit)(nat))(e.producer),
                    done: e.done
                };
            })(v));
        };
    };
};
var hoist = function (dictFunctor) {
    return function (nat) {
        return function (v) {
            return EventSource(Data_Functor.map(dictFunctor)(function (e) {
                return {
                    producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(dictFunctor)(nat)(e.producer),
                    done: nat(e.done)
                };
            })(nat(v)));
        };
    };
};
var eventSource_$prime = function (dictMonadAff) {
    return function (attach) {
        return function (query) {
            return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Effect_Aff_Class.liftAff(dictMonadAff)(produce$prime(function (emit) {
                return attach(emit(new Data_Either.Left(query)));
            })))(function (v) {
                return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())({
                    producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(((((dictMonadAff.MonadEffect0()).Monad0()).Bind1()).Apply0()).Functor0())(Effect_Aff_Class.liftAff(dictMonadAff))(v.producer),
                    done: Effect_Aff_Class.liftAff(dictMonadAff)(Data_Functor["void"](Effect_Aff.functorAff)(v.cancel(Data_Unit.unit)))
                });
            });
        };
    };
};
var eventSource_ = function (dictMonadAff) {
    return function (attach) {
        return function (query) {
            var producer = produce(function (emit) {
                return attach(emit(new Data_Either.Left(query)));
            });
            return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())({
                producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(((((dictMonadAff.MonadEffect0()).Monad0()).Bind1()).Apply0()).Functor0())(Effect_Aff_Class.liftAff(dictMonadAff))(producer),
                done: Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(Data_Unit.unit)
            });
        };
    };
};
var eqSubscribeStatus = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Listening && y instanceof Listening) {
            return true;
        };
        if (x instanceof Done && y instanceof Done) {
            return true;
        };
        return false;
    };
});
var ordSubscribeStatus = new Data_Ord.Ord(function () {
    return eqSubscribeStatus;
}, function (x) {
    return function (y) {
        if (x instanceof Listening && y instanceof Listening) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Listening) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Listening) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Done && y instanceof Done) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Halogen.Query.EventSource (line 61, column 8 - line 61, column 58): " + [ x.constructor.name, y.constructor.name ]);
    };
});
var catMaybes = function (dictMonadRec) {
    return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorEmit)(dictMonadRec.Monad0()))(Control_Bind.composeKleisli(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(dictMonadRec.Monad0()))(function ($52) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(dictMonadRec.Monad0())(Control_Monad_Free_Trans.resume(Control_Coroutine.functorEmit)(dictMonadRec)($52));
    })(function (v) {
        if (v instanceof Data_Either.Left) {
            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Done(v.value0));
        };
        if (v instanceof Data_Either.Right) {
            return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorEmit)((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0()))(Data_Foldable.for_(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorEmit)(dictMonadRec.Monad0()))(Data_Foldable.foldableMaybe)(v.value0.value0)(Control_Coroutine.emit(dictMonadRec.Monad0())))(new Control_Monad_Rec_Class.Loop(v.value0.value1));
        };
        throw new Error("Failed pattern match at Halogen.Query.EventSource (line 135, column 41 - line 137, column 64): " + [ v.constructor.name ]);
    }));
};
var eventSource = function (dictMonadAff) {
    return function (attach) {
        return function (handler) {
            var producer = produce(function (emit) {
                return attach(function ($53) {
                    return emit(Data_Either.Left.create(handler($53)));
                });
            });
            return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())({
                producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(((((dictMonadAff.MonadEffect0()).Monad0()).Bind1()).Apply0()).Functor0())(Effect_Aff_Class.liftAff(dictMonadAff))(catMaybes(Effect_Aff.monadRecAff)(producer)),
                done: Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(Data_Unit.unit)
            });
        };
    };
};
var eventSource$prime = function (dictMonadAff) {
    return function (attach) {
        return function (handler) {
            return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Effect_Aff_Class.liftAff(dictMonadAff)(produce$prime(function (emit) {
                return attach(function ($54) {
                    return emit(Data_Either.Left.create(handler($54)));
                });
            })))(function (v) {
                return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())({
                    producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(((((dictMonadAff.MonadEffect0()).Monad0()).Bind1()).Apply0()).Functor0())(Effect_Aff_Class.liftAff(dictMonadAff))(catMaybes(Effect_Aff.monadRecAff)(v.producer)),
                    done: Effect_Aff_Class.liftAff(dictMonadAff)(Data_Functor["void"](Effect_Aff.functorAff)(v.cancel(Data_Unit.unit)))
                });
            });
        };
    };
};
module.exports = {
    EventSource: EventSource,
    Listening: Listening,
    Done: Done,
    unEventSource: unEventSource,
    interpret: interpret,
    hoist: hoist,
    eventSource: eventSource,
    "eventSource'": eventSource$prime,
    eventSource_: eventSource_,
    "eventSource_'": eventSource_$prime,
    catMaybes: catMaybes,
    produce: produce,
    "produce'": produce$prime,
    produceAff: produceAff,
    "produceAff'": produceAff$prime,
    eqSubscribeStatus: eqSubscribeStatus,
    ordSubscribeStatus: ordSubscribeStatus
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Control.Coroutine/index.js":22,"../Control.Monad.Free.Trans/index.js":32,"../Control.Monad.Rec.Class/index.js":43,"../Control.Monad.Trans.Class/index.js":52,"../Control.Semigroupoid/index.js":61,"../Data.Bifunctor/index.js":106,"../Data.Either/index.js":131,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Unit/index.js":289,"../Effect.Aff.AVar/index.js":294,"../Effect.Aff.Class/index.js":295,"../Effect.Aff/index.js":297,"../Effect.Class/index.js":298,"../Effect.Exception/index.js":302,"../Effect/index.js":312,"../Prelude/index.js":385}],341:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var ForkF = (function () {
    function ForkF(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ForkF.create = function (value0) {
        return function (value1) {
            return new ForkF(value0, value1);
        };
    };
    return ForkF;
})();
var unFork = Unsafe_Coerce.unsafeCoerce;
var mkFork = Unsafe_Coerce.unsafeCoerce;
var hoistFork = function (nat) {
    return unFork(function (v) {
        return mkFork(new ForkF(nat(v.value0), v.value1));
    });
};
var functorFork = new Data_Functor.Functor(function (f) {
    return unFork(function (v) {
        return mkFork(new ForkF(v.value0, Data_Functor.map(Data_Functor.functorFn)(f)(v.value1)));
    });
});
var fork = function (fx) {
    return mkFork(new ForkF(fx, Control_Category.identity(Control_Category.categoryFn)));
};
module.exports = {
    ForkF: ForkF,
    fork: fork,
    mkFork: mkFork,
    unFork: unFork,
    hoistFork: hoistFork,
    functorFork: functorFork
};

},{"../Control.Category/index.js":14,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Effect.Aff/index.js":297,"../Effect.Exception/index.js":302,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425}],342:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Applicative_Free = require("../Control.Applicative.Free/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Free = require("../Control.Monad.Free/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");
var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Coyoneda = require("../Data.Coyoneda/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Halogen_Query_EventSource = require("../Halogen.Query.EventSource/index.js");
var Halogen_Query_ForkF = require("../Halogen.Query.ForkF/index.js");
var Halogen_Query_InputF = require("../Halogen.Query.InputF/index.js");
var Prelude = require("../Prelude/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var HalogenAp = function (x) {
    return x;
};
var HalogenM = function (x) {
    return x;
};
var State = (function () {
    function State(value0) {
        this.value0 = value0;
    };
    State.create = function (value0) {
        return new State(value0);
    };
    return State;
})();
var Subscribe = (function () {
    function Subscribe(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Subscribe.create = function (value0) {
        return function (value1) {
            return new Subscribe(value0, value1);
        };
    };
    return Subscribe;
})();
var Lift = (function () {
    function Lift(value0) {
        this.value0 = value0;
    };
    Lift.create = function (value0) {
        return new Lift(value0);
    };
    return Lift;
})();
var Halt = (function () {
    function Halt(value0) {
        this.value0 = value0;
    };
    Halt.create = function (value0) {
        return new Halt(value0);
    };
    return Halt;
})();
var GetSlots = (function () {
    function GetSlots(value0) {
        this.value0 = value0;
    };
    GetSlots.create = function (value0) {
        return new GetSlots(value0);
    };
    return GetSlots;
})();
var CheckSlot = (function () {
    function CheckSlot(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    CheckSlot.create = function (value0) {
        return function (value1) {
            return new CheckSlot(value0, value1);
        };
    };
    return CheckSlot;
})();
var ChildQuery = (function () {
    function ChildQuery(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ChildQuery.create = function (value0) {
        return function (value1) {
            return new ChildQuery(value0, value1);
        };
    };
    return ChildQuery;
})();
var Raise = (function () {
    function Raise(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Raise.create = function (value0) {
        return function (value1) {
            return new Raise(value0, value1);
        };
    };
    return Raise;
})();
var Par = (function () {
    function Par(value0) {
        this.value0 = value0;
    };
    Par.create = function (value0) {
        return new Par(value0);
    };
    return Par;
})();
var Fork = (function () {
    function Fork(value0) {
        this.value0 = value0;
    };
    Fork.create = function (value0) {
        return new Fork(value0);
    };
    return Fork;
})();
var GetRef = (function () {
    function GetRef(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    GetRef.create = function (value0) {
        return function (value1) {
            return new GetRef(value0, value1);
        };
    };
    return GetRef;
})();
var subscribe = function (es) {
    return HalogenM(Control_Monad_Free.liftF(new Subscribe(es, Data_Unit.unit)));
};
var raise = function (o) {
    return HalogenM(Control_Monad_Free.liftF(new Raise(o, Data_Unit.unit)));
};
var newtypeHalogenAp = new Data_Newtype.Newtype(function (n) {
    return n;
}, HalogenAp);
var monadTransHalogenM = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
        return HalogenM(Control_Monad_Free.liftF(new Lift(m)));
    };
});
var mkQuery = function (dictEq) {
    return function (p) {
        return function ($176) {
            return HalogenM(Control_Monad_Free.liftF(ChildQuery.create(p)(Data_Coyoneda.coyoneda(Control_Category.identity(Control_Category.categoryFn))($176))));
        };
    };
};
var mapQuery = function (dictFunctor) {
    return function (nat) {
        return function (v) {
            var go = function (v1) {
                if (v1 instanceof State) {
                    return new State(v1.value0);
                };
                if (v1 instanceof Subscribe) {
                    return new Subscribe(Halogen_Query_EventSource.interpret(dictFunctor)(nat)(v1.value0), v1.value1);
                };
                if (v1 instanceof Lift) {
                    return new Lift(v1.value0);
                };
                if (v1 instanceof Halt) {
                    return new Halt(v1.value0);
                };
                if (v1 instanceof GetSlots) {
                    return new GetSlots(v1.value0);
                };
                if (v1 instanceof CheckSlot) {
                    return new CheckSlot(v1.value0, v1.value1);
                };
                if (v1 instanceof ChildQuery) {
                    return new ChildQuery(v1.value0, v1.value1);
                };
                if (v1 instanceof Raise) {
                    return new Raise(v1.value0, v1.value1);
                };
                if (v1 instanceof Par) {
                    return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(mapQuery(dictFunctor)(nat)))(v1.value0));
                };
                if (v1 instanceof Fork) {
                    return new Fork(Halogen_Query_ForkF.hoistFork(mapQuery(dictFunctor)(nat))(v1.value0));
                };
                if (v1 instanceof GetRef) {
                    return new GetRef(v1.value0, v1.value1);
                };
                throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 169, column 8 - line 180, column 29): " + [ v1.constructor.name ]);
            };
            return Control_Monad_Free.hoistFree(go)(v);
        };
    };
};
var mapOutput = function (f) {
    return function (v) {
        var go = function (v1) {
            if (v1 instanceof State) {
                return new State(v1.value0);
            };
            if (v1 instanceof Subscribe) {
                return new Subscribe(v1.value0, v1.value1);
            };
            if (v1 instanceof Lift) {
                return new Lift(v1.value0);
            };
            if (v1 instanceof Halt) {
                return new Halt(v1.value0);
            };
            if (v1 instanceof GetSlots) {
                return new GetSlots(v1.value0);
            };
            if (v1 instanceof CheckSlot) {
                return new CheckSlot(v1.value0, v1.value1);
            };
            if (v1 instanceof ChildQuery) {
                return new ChildQuery(v1.value0, v1.value1);
            };
            if (v1 instanceof Raise) {
                return new Raise(f(v1.value0), v1.value1);
            };
            if (v1 instanceof Par) {
                return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(mapOutput(f)))(v1.value0));
            };
            if (v1 instanceof Fork) {
                return new Fork(Halogen_Query_ForkF.hoistFork(mapOutput(f))(v1.value0));
            };
            if (v1 instanceof GetRef) {
                return new GetRef(v1.value0, v1.value1);
            };
            throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 233, column 8 - line 244, column 29): " + [ v1.constructor.name ]);
        };
        return Control_Monad_Free.hoistFree(go)(v);
    };
};
var mapChildQuery = function (nat) {
    return function (v) {
        var go = function (v1) {
            if (v1 instanceof State) {
                return new State(v1.value0);
            };
            if (v1 instanceof Subscribe) {
                return new Subscribe(v1.value0, v1.value1);
            };
            if (v1 instanceof Lift) {
                return new Lift(v1.value0);
            };
            if (v1 instanceof Halt) {
                return new Halt(v1.value0);
            };
            if (v1 instanceof GetSlots) {
                return new GetSlots(v1.value0);
            };
            if (v1 instanceof CheckSlot) {
                return new CheckSlot(v1.value0, v1.value1);
            };
            if (v1 instanceof ChildQuery) {
                return new ChildQuery(v1.value0, Data_Coyoneda.hoistCoyoneda(nat)(v1.value1));
            };
            if (v1 instanceof Raise) {
                return new Raise(v1.value0, v1.value1);
            };
            if (v1 instanceof Par) {
                return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(mapChildQuery(nat)))(v1.value0));
            };
            if (v1 instanceof Fork) {
                return new Fork(Halogen_Query_ForkF.hoistFork(mapChildQuery(nat))(v1.value0));
            };
            if (v1 instanceof GetRef) {
                return new GetRef(v1.value0, v1.value1);
            };
            throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 190, column 8 - line 201, column 29): " + [ v1.constructor.name ]);
        };
        return Control_Monad_Free.hoistFree(go)(v);
    };
};
var imapState = function (f) {
    return function (f$prime) {
        return function (v) {
            var go = function (v1) {
                if (v1 instanceof State) {
                    return new State(function ($177) {
                        return Data_Functor.map(Data_Tuple.functorTuple)(f)(v1.value0(f$prime($177)));
                    });
                };
                if (v1 instanceof Subscribe) {
                    return new Subscribe(v1.value0, v1.value1);
                };
                if (v1 instanceof Lift) {
                    return new Lift(v1.value0);
                };
                if (v1 instanceof Halt) {
                    return new Halt(v1.value0);
                };
                if (v1 instanceof GetSlots) {
                    return new GetSlots(v1.value0);
                };
                if (v1 instanceof CheckSlot) {
                    return new CheckSlot(v1.value0, v1.value1);
                };
                if (v1 instanceof ChildQuery) {
                    return new ChildQuery(v1.value0, v1.value1);
                };
                if (v1 instanceof Raise) {
                    return new Raise(v1.value0, v1.value1);
                };
                if (v1 instanceof Par) {
                    return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(imapState(f)(f$prime)))(v1.value0));
                };
                if (v1 instanceof Fork) {
                    return new Fork(Halogen_Query_ForkF.hoistFork(imapState(f)(f$prime))(v1.value0));
                };
                if (v1 instanceof GetRef) {
                    return new GetRef(v1.value0, v1.value1);
                };
                throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 147, column 8 - line 158, column 29): " + [ v1.constructor.name ]);
            };
            return Control_Monad_Free.hoistFree(go)(v);
        };
    };
};
var imapSlots = function (f) {
    return function (f$prime) {
        return function (v) {
            var go = function (v1) {
                if (v1 instanceof State) {
                    return new State(v1.value0);
                };
                if (v1 instanceof Subscribe) {
                    return new Subscribe(v1.value0, v1.value1);
                };
                if (v1 instanceof Lift) {
                    return new Lift(v1.value0);
                };
                if (v1 instanceof Halt) {
                    return new Halt(v1.value0);
                };
                if (v1 instanceof GetSlots) {
                    return new GetSlots(function ($178) {
                        return v1.value0(Data_Functor.map(Data_List_Types.functorList)(f$prime)($178));
                    });
                };
                if (v1 instanceof CheckSlot) {
                    return new CheckSlot(f(v1.value0), v1.value1);
                };
                if (v1 instanceof ChildQuery) {
                    return new ChildQuery(f(v1.value0), v1.value1);
                };
                if (v1 instanceof Raise) {
                    return new Raise(v1.value0, v1.value1);
                };
                if (v1 instanceof Par) {
                    return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(imapSlots(f)(f$prime)))(v1.value0));
                };
                if (v1 instanceof Fork) {
                    return new Fork(Halogen_Query_ForkF.hoistFork(imapSlots(f)(f$prime))(v1.value0));
                };
                if (v1 instanceof GetRef) {
                    return new GetRef(v1.value0, v1.value1);
                };
                throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 212, column 8 - line 223, column 29): " + [ v1.constructor.name ]);
            };
            return Control_Monad_Free.hoistFree(go)(v);
        };
    };
};
var hoist = function (dictFunctor) {
    return function (nat) {
        return function (v) {
            var go = function (v1) {
                if (v1 instanceof State) {
                    return new State(v1.value0);
                };
                if (v1 instanceof Subscribe) {
                    return new Subscribe(Halogen_Query_EventSource.hoist(dictFunctor)(nat)(v1.value0), v1.value1);
                };
                if (v1 instanceof Lift) {
                    return new Lift(nat(v1.value0));
                };
                if (v1 instanceof Halt) {
                    return new Halt(v1.value0);
                };
                if (v1 instanceof GetSlots) {
                    return new GetSlots(v1.value0);
                };
                if (v1 instanceof CheckSlot) {
                    return new CheckSlot(v1.value0, v1.value1);
                };
                if (v1 instanceof ChildQuery) {
                    return new ChildQuery(v1.value0, v1.value1);
                };
                if (v1 instanceof Raise) {
                    return new Raise(v1.value0, v1.value1);
                };
                if (v1 instanceof Par) {
                    return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(hoist(dictFunctor)(nat)))(v1.value0));
                };
                if (v1 instanceof Fork) {
                    return new Fork(Halogen_Query_ForkF.hoistFork(hoist(dictFunctor)(nat))(v1.value0));
                };
                if (v1 instanceof GetRef) {
                    return new GetRef(v1.value0, v1.value1);
                };
                throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 255, column 8 - line 266, column 28): " + [ v1.constructor.name ]);
            };
            return Control_Monad_Free.hoistFree(go)(v);
        };
    };
};
var halt = function (msg) {
    return HalogenM(Control_Monad_Free.liftF(new Halt(msg)));
};
var getSlots = HalogenM(Control_Monad_Free.liftF(new GetSlots(Control_Category.identity(Control_Category.categoryFn))));
var getRef = function (p) {
    return HalogenM(Control_Monad_Free.liftF(new GetRef(p, Control_Category.identity(Control_Category.categoryFn))));
};
var functorHalogenM = new Data_Functor.Functor(function (f) {
    return function (v) {
        return Data_Functor.map(Control_Monad_Free.freeFunctor)(f)(v);
    };
});
var functorHalogenAp = Control_Applicative_Free.functorFreeAp;
var functorHalogenF = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            if (v instanceof State) {
                return new State(function ($179) {
                    return Data_Bifunctor.lmap(Data_Tuple.bifunctorTuple)(f)(v.value0($179));
                });
            };
            if (v instanceof Subscribe) {
                return new Subscribe(v.value0, f(v.value1));
            };
            if (v instanceof Lift) {
                return new Lift(Data_Functor.map(dictFunctor)(f)(v.value0));
            };
            if (v instanceof Halt) {
                return new Halt(v.value0);
            };
            if (v instanceof CheckSlot) {
                return new CheckSlot(v.value0, Data_Functor.map(Data_Functor.functorFn)(f)(v.value1));
            };
            if (v instanceof GetSlots) {
                return new GetSlots(Data_Functor.map(Data_Functor.functorFn)(f)(v.value0));
            };
            if (v instanceof ChildQuery) {
                return new ChildQuery(v.value0, Data_Functor.map(Data_Coyoneda.functorCoyoneda)(f)(v.value1));
            };
            if (v instanceof Raise) {
                return new Raise(v.value0, f(v.value1));
            };
            if (v instanceof Par) {
                return new Par(Data_Functor.map(functorHalogenAp)(f)(v.value0));
            };
            if (v instanceof Fork) {
                return new Fork(Data_Functor.map(Halogen_Query_ForkF.functorFork)(f)(v.value0));
            };
            if (v instanceof GetRef) {
                return new GetRef(v.value0, Data_Functor.map(Data_Functor.functorFn)(f)(v.value1));
            };
            throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 42, column 11 - line 53, column 37): " + [ v.constructor.name ]);
        };
    });
};
var fork = function (dictMonadAff) {
    return function (a) {
        return Data_Functor.map(functorHalogenM)(Data_Functor.map(Data_Functor.functorFn)(Effect_Aff_Class.liftAff(dictMonadAff)))(Control_Monad_Free.liftF(Fork.create(Halogen_Query_ForkF.fork(a))));
    };
};
var checkSlot = function (p) {
    return HalogenM(Control_Monad_Free.liftF(new CheckSlot(p, Control_Category.identity(Control_Category.categoryFn))));
};
var applyHalogenM = new Control_Apply.Apply(function () {
    return functorHalogenM;
}, function (v) {
    return function (v1) {
        return Control_Apply.apply(Control_Monad_Free.freeApply)(v)(v1);
    };
});
var bindHalogenM = new Control_Bind.Bind(function () {
    return applyHalogenM;
}, function (v) {
    return function (f) {
        return Control_Bind.bind(Control_Monad_Free.freeBind)(v)(function (x) {
            var v1 = f(x);
            return v1;
        });
    };
});
var applyHalogenAp = Control_Applicative_Free.applyFreeAp;
var applicativeHalogenM = new Control_Applicative.Applicative(function () {
    return applyHalogenM;
}, function (a) {
    return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(a);
});
var monadHalogenM = new Control_Monad.Monad(function () {
    return applicativeHalogenM;
}, function () {
    return bindHalogenM;
});
var monadAskHalogenM = function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadHalogenM;
    }, HalogenM(Control_Monad_Free.liftF(Lift.create(Control_Monad_Reader_Class.ask(dictMonadAsk)))));
};
var monadEffectHalogenM = function (dictMonadEffect) {
    return new Effect_Class.MonadEffect(function () {
        return monadHalogenM;
    }, function (eff) {
        return HalogenM(Control_Monad_Free.liftF(Lift.create(Effect_Class.liftEffect(dictMonadEffect)(eff))));
    });
};
var monadAffHalogenM = function (dictMonadAff) {
    return new Effect_Aff_Class.MonadAff(function () {
        return monadEffectHalogenM(dictMonadAff.MonadEffect0());
    }, function (aff) {
        return HalogenM(Control_Monad_Free.liftF(Lift.create(Effect_Aff_Class.liftAff(dictMonadAff)(aff))));
    });
};
var monadStateHalogenM = new Control_Monad_State_Class.MonadState(function () {
    return monadHalogenM;
}, function ($180) {
    return HalogenM(Control_Monad_Free.liftF(State.create($180)));
});
var monadTellHalogenM = function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadHalogenM;
    }, function ($181) {
        return HalogenM(Control_Monad_Free.liftF(Lift.create(Control_Monad_Writer_Class.tell(dictMonadTell)($181))));
    });
};
var monadRecHalogenM = new Control_Monad_Rec_Class.MonadRec(function () {
    return monadHalogenM;
}, function (k) {
    return function (a) {
        var go = function (v) {
            if (v instanceof Control_Monad_Rec_Class.Loop) {
                return Control_Monad_Rec_Class.tailRecM(monadRecHalogenM)(k)(v.value0);
            };
            if (v instanceof Control_Monad_Rec_Class.Done) {
                return Control_Applicative.pure(applicativeHalogenM)(v.value0);
            };
            throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 94, column 5 - line 94, column 31): " + [ v.constructor.name ]);
        };
        return Control_Bind.bind(bindHalogenM)(k(a))(go);
    };
});
var applicativeHalogenAp = Control_Applicative_Free.applicativeFreeAp;
var parallelHalogenM = new Control_Parallel_Class.Parallel(function () {
    return applicativeHalogenAp;
}, function () {
    return monadHalogenM;
}, function ($182) {
    return HalogenAp(Control_Applicative_Free.liftFreeAp($182));
}, function ($183) {
    return HalogenM(Control_Monad_Free.liftF(Par.create($183)));
});
module.exports = {
    State: State,
    Subscribe: Subscribe,
    Lift: Lift,
    Halt: Halt,
    GetSlots: GetSlots,
    CheckSlot: CheckSlot,
    ChildQuery: ChildQuery,
    Raise: Raise,
    Par: Par,
    Fork: Fork,
    GetRef: GetRef,
    HalogenAp: HalogenAp,
    HalogenM: HalogenM,
    halt: halt,
    mkQuery: mkQuery,
    getSlots: getSlots,
    checkSlot: checkSlot,
    getRef: getRef,
    subscribe: subscribe,
    raise: raise,
    fork: fork,
    imapState: imapState,
    mapQuery: mapQuery,
    mapChildQuery: mapChildQuery,
    imapSlots: imapSlots,
    mapOutput: mapOutput,
    hoist: hoist,
    functorHalogenF: functorHalogenF,
    newtypeHalogenAp: newtypeHalogenAp,
    functorHalogenAp: functorHalogenAp,
    applyHalogenAp: applyHalogenAp,
    applicativeHalogenAp: applicativeHalogenAp,
    functorHalogenM: functorHalogenM,
    applyHalogenM: applyHalogenM,
    applicativeHalogenM: applicativeHalogenM,
    bindHalogenM: bindHalogenM,
    monadHalogenM: monadHalogenM,
    monadEffectHalogenM: monadEffectHalogenM,
    monadAffHalogenM: monadAffHalogenM,
    parallelHalogenM: parallelHalogenM,
    monadTransHalogenM: monadTransHalogenM,
    monadRecHalogenM: monadRecHalogenM,
    monadStateHalogenM: monadStateHalogenM,
    monadAskHalogenM: monadAskHalogenM,
    monadTellHalogenM: monadTellHalogenM
};

},{"../Control.Applicative.Free/index.js":6,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Monad.Free/index.js":33,"../Control.Monad.Reader.Class/index.js":40,"../Control.Monad.Rec.Class/index.js":43,"../Control.Monad.State.Class/index.js":48,"../Control.Monad.Trans.Class/index.js":52,"../Control.Monad.Writer.Class/index.js":53,"../Control.Monad/index.js":55,"../Control.Parallel.Class/index.js":58,"../Control.Semigroupoid/index.js":61,"../Data.Bifunctor/index.js":106,"../Data.Coyoneda/index.js":120,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Maybe/index.js":210,"../Data.Newtype/index.js":220,"../Data.Tuple/index.js":283,"../Data.Unit/index.js":289,"../Effect.Aff.Class/index.js":295,"../Effect.Class/index.js":298,"../Effect.Exception/index.js":302,"../Halogen.Query.EventSource/index.js":340,"../Halogen.Query.ForkF/index.js":341,"../Halogen.Query.InputF/index.js":343,"../Prelude/index.js":385,"../Web.DOM/index.js":463}],343:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Prelude = require("../Prelude/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var RefLabel = function (x) {
    return x;
};
var RefUpdate = (function () {
    function RefUpdate(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    RefUpdate.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new RefUpdate(value0, value1, value2);
            };
        };
    };
    return RefUpdate;
})();
var Query = (function () {
    function Query(value0) {
        this.value0 = value0;
    };
    Query.create = function (value0) {
        return new Query(value0);
    };
    return Query;
})();
var ordRefLabel = Data_Ord.ordString;
var newtypeRefLabel = new Data_Newtype.Newtype(function (n) {
    return n;
}, RefLabel);
var eqRefLabel = Data_Eq.eqString;
var bifunctorInputF = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            if (v instanceof RefUpdate) {
                return new RefUpdate(v.value0, v.value1, f(v.value2));
            };
            if (v instanceof Query) {
                return new Query(g(v.value0));
            };
            throw new Error("Failed pattern match at Halogen.Query.InputF (line 21, column 15 - line 23, column 27): " + [ v.constructor.name ]);
        };
    };
});
var functorInputF = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorInputF));
module.exports = {
    RefLabel: RefLabel,
    RefUpdate: RefUpdate,
    Query: Query,
    newtypeRefLabel: newtypeRefLabel,
    eqRefLabel: eqRefLabel,
    ordRefLabel: ordRefLabel,
    bifunctorInputF: bifunctorInputF,
    functorInputF: functorInputF
};

},{"../Data.Bifunctor/index.js":106,"../Data.Eq/index.js":135,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Prelude/index.js":385,"../Web.DOM/index.js":463}],344:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Parallel = require("../Control.Parallel/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Map = require("../Data.Map/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Halogen_Component_ChildPath = require("../Halogen.Component.ChildPath/index.js");
var Halogen_Query_EventSource = require("../Halogen.Query.EventSource/index.js");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");
var Halogen_Query_InputF = require("../Halogen.Query.InputF/index.js");
var Prelude = require("../Prelude/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var request = function (req) {
    return req(Control_Category.identity(Control_Category.categoryFn));
};
var queryAll$prime = function (dictOrd) {
    return function (dictEq) {
        return function (path) {
            return function (q) {
                return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_List.mapMaybe(Halogen_Component_ChildPath.prjSlot(path)))(Halogen_Query_HalogenM.getSlots))(function (v) {
                    return Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Map_Internal.fromFoldable(dictOrd)(Data_List_Types.foldableList))(Control_Parallel.parTraverse(Halogen_Query_HalogenM.parallelHalogenM)(Data_List_Types.traversableList)(function (p) {
                        return Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Tuple.Tuple.create(p))(Halogen_Query_HalogenM.mkQuery(dictEq)(Halogen_Component_ChildPath.injSlot(path)(p))(Halogen_Component_ChildPath.injQuery(path)(q)));
                    })(v));
                });
            };
        };
    };
};
var queryAll = function (dictOrd) {
    return queryAll$prime(dictOrd)(dictOrd.Eq0())(Halogen_Component_ChildPath.cpI);
};
var query = function (dictEq) {
    return function (p) {
        return function (q) {
            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.checkSlot(p))(function (v) {
                if (v) {
                    return Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Maybe.Just.create)(Halogen_Query_HalogenM.mkQuery(dictEq)(p)(q));
                };
                return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value);
            });
        };
    };
};
var query$prime = function (dictEq) {
    return function (path) {
        return function (p) {
            return function (q) {
                return query(dictEq)(Halogen_Component_ChildPath.injSlot(path)(p))(Halogen_Component_ChildPath.injQuery(path)(q));
            };
        };
    };
};
var getHTMLElementRef = function ($10) {
    return Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(function (v) {
        return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromElement)(v);
    })(Halogen_Query_HalogenM.getRef($10));
};
var action = function (act) {
    return act(Data_Unit.unit);
};
module.exports = {
    action: action,
    request: request,
    query: query,
    "query'": query$prime,
    queryAll: queryAll,
    "queryAll'": queryAll$prime,
    getHTMLElementRef: getHTMLElementRef
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Monad.State.Class/index.js":48,"../Control.Monad.Trans.Class/index.js":52,"../Control.Parallel/index.js":59,"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Map.Internal/index.js":206,"../Data.Map/index.js":207,"../Data.Maybe/index.js":210,"../Data.Tuple/index.js":283,"../Data.Unit/index.js":289,"../Effect.Aff.Class/index.js":295,"../Effect.Class/index.js":298,"../Halogen.Component.ChildPath/index.js":330,"../Halogen.Query.EventSource/index.js":340,"../Halogen.Query.HalogenM/index.js":342,"../Halogen.Query.InputF/index.js":343,"../Prelude/index.js":385,"../Web.HTML.HTMLElement/index.js":506}],345:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Effect_Uncurried = require("../Effect.Uncurried/index.js");
var Foreign = require("../Foreign/index.js");
var Foreign_Object = require("../Foreign.Object/index.js");
var Halogen_VDom = require("../Halogen.VDom/index.js");
var Halogen_VDom_Machine = require("../Halogen.VDom.Machine/index.js");
var Halogen_VDom_Types = require("../Halogen.VDom.Types/index.js");
var Halogen_VDom_Util = require("../Halogen.VDom.Util/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM_Element = require("../Web.DOM.Element/index.js");
var Web_Event_Event = require("../Web.Event.Event/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Created = (function () {
    function Created(value0) {
        this.value0 = value0;
    };
    Created.create = function (value0) {
        return new Created(value0);
    };
    return Created;
})();
var Removed = (function () {
    function Removed(value0) {
        this.value0 = value0;
    };
    Removed.create = function (value0) {
        return new Removed(value0);
    };
    return Removed;
})();
var Attribute = (function () {
    function Attribute(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    Attribute.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new Attribute(value0, value1, value2);
            };
        };
    };
    return Attribute;
})();
var Property = (function () {
    function Property(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Property.create = function (value0) {
        return function (value1) {
            return new Property(value0, value1);
        };
    };
    return Property;
})();
var Handler = (function () {
    function Handler(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Handler.create = function (value0) {
        return function (value1) {
            return new Handler(value0, value1);
        };
    };
    return Handler;
})();
var Ref = (function () {
    function Ref(value0) {
        this.value0 = value0;
    };
    Ref.create = function (value0) {
        return new Ref(value0);
    };
    return Ref;
})();
var unsafeGetProperty = Halogen_VDom_Util.unsafeGetAny;
var setProperty = Halogen_VDom_Util.unsafeSetAny;
var removeProperty = function (key, el) {
    var v = Foreign.typeOf(Halogen_VDom_Util.unsafeGetAny(key, el));
    if (v === "string") {
        return Halogen_VDom_Util.unsafeSetAny(key, "", el);
    };
    if (key === "rowSpan") {
        return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
    };
    if (key === "colSpan") {
        return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
    };
    return Halogen_VDom_Util.unsafeSetAny(key, Halogen_VDom_Util.jsUndefined, el);
};
var propToStrKey = function (v) {
    if (v instanceof Attribute && v.value0 instanceof Data_Maybe.Just) {
        return "attr/" + (v.value0.value0 + (":" + v.value1));
    };
    if (v instanceof Attribute) {
        return "attr/:" + v.value1;
    };
    if (v instanceof Property) {
        return "prop/" + v.value0;
    };
    if (v instanceof Handler) {
        return "handler/" + v.value0;
    };
    if (v instanceof Ref) {
        return "ref";
    };
    throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 178, column 16 - line 185, column 1): " + [ v.constructor.name ]);
};
var propFromString = Unsafe_Coerce.unsafeCoerce;
var propFromNumber = Unsafe_Coerce.unsafeCoerce;
var propFromInt = Unsafe_Coerce.unsafeCoerce;
var propFromBoolean = Unsafe_Coerce.unsafeCoerce;
var functorProp = new Data_Functor.Functor(function (f) {
    return function (v) {
        if (v instanceof Handler) {
            return new Handler(v.value0, Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value1));
        };
        if (v instanceof Ref) {
            return new Ref(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value0));
        };
        return v;
    };
});
var functorElemRef = new Data_Functor.Functor(function (f) {
    return function (v) {
        if (v instanceof Created) {
            return new Created(f(v.value0));
        };
        if (v instanceof Removed) {
            return new Removed(f(v.value0));
        };
        throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 48, column 1 - line 48, column 42): " + [ f.constructor.name, v.constructor.name ]);
    };
});
var buildProp = function (emit) {
    return function (el) {
        var removeProp = function (prevEvents) {
            return function (v, v1) {
                if (v1 instanceof Attribute) {
                    return Halogen_VDom_Util.removeAttribute(Data_Nullable.toNullable(v1.value0), v1.value1, el);
                };
                if (v1 instanceof Property) {
                    return removeProperty(v1.value0, el);
                };
                if (v1 instanceof Handler) {
                    var handler = Halogen_VDom_Util.unsafeLookup(v1.value0, prevEvents);
                    return Halogen_VDom_Util.removeEventListener(v1.value0, Data_Tuple.fst(handler), el);
                };
                if (v1 instanceof Ref) {
                    return Data_Unit.unit;
                };
                throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 165, column 5 - line 175, column 18): " + [ v1.constructor.name ]);
            };
        };
        var mbEmit = function (v) {
            if (v instanceof Data_Maybe.Just) {
                return emit(v.value0)();
            };
            return Data_Unit.unit;
        };
        var done = function (ps) {
            var v = Foreign_Object.lookup("ref")(ps);
            if (v instanceof Data_Maybe.Just && v.value0 instanceof Ref) {
                return function () {
                    return mbEmit(v.value0.value0(new Removed(el)));
                };
            };
            return Halogen_VDom_Util.effectUnit;
        };
        var diffProp = function (prevEvents, events) {
            return function (v, v1, v11, v2) {
                if (v11 instanceof Attribute && v2 instanceof Attribute) {
                    var $61 = v11.value2 === v2.value2;
                    if ($61) {
                        return v2;
                    };
                    Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
                    return v2;
                };
                if (v11 instanceof Property && v2 instanceof Property) {
                    var v4 = Halogen_VDom_Util.refEq(v11.value1, v2.value1);
                    if (v4) {
                        return v2;
                    };
                    if (v2.value0 === "value") {
                        var elVal = unsafeGetProperty("value", el);
                        var $70 = Halogen_VDom_Util.refEq(elVal, v2.value1);
                        if ($70) {
                            return v2;
                        };
                        setProperty(v2.value0, v2.value1, el);
                        return v2;
                    };
                    setProperty(v2.value0, v2.value1, el);
                    return v2;
                };
                if (v11 instanceof Handler && v2 instanceof Handler) {
                    var handler = Halogen_VDom_Util.unsafeLookup(v2.value0, prevEvents);
                    Effect_Ref.write(v2.value1)(Data_Tuple.snd(handler))();
                    Halogen_VDom_Util.pokeMutMap(v2.value0, handler, events);
                    return v2;
                };
                return v2;
            };
        };
        var applyProp = function (events) {
            return function (v, v1, v2) {
                if (v2 instanceof Attribute) {
                    Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
                    return v2;
                };
                if (v2 instanceof Property) {
                    setProperty(v2.value0, v2.value1, el);
                    return v2;
                };
                if (v2 instanceof Handler) {
                    var v3 = Halogen_VDom_Util.unsafeGetAny(v2.value0, events);
                    if (Halogen_VDom_Util.unsafeHasAny(v2.value0, events)) {
                        Effect_Ref.write(v2.value1)(Data_Tuple.snd(v3))();
                        return v2;
                    };
                    var v4 = Effect_Ref["new"](v2.value1)();
                    var v5 = Web_Event_EventTarget.eventListener(function (ev) {
                        return function __do() {
                            var v5 = Effect_Ref.read(v4)();
                            return mbEmit(v5(ev));
                        };
                    })();
                    Halogen_VDom_Util.pokeMutMap(v2.value0, new Data_Tuple.Tuple(v5, v4), events);
                    Halogen_VDom_Util.addEventListener(v2.value0, v5, el);
                    return v2;
                };
                if (v2 instanceof Ref) {
                    mbEmit(v2.value0(new Created(el)));
                    return v2;
                };
                throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 109, column 5 - line 131, column 15): " + [ v2.constructor.name ]);
            };
        };
        var patch = function (prevEvents, ps1) {
            return function (ps2) {
                var v = Halogen_VDom_Util.newMutMap();
                var onThis = removeProp(prevEvents);
                var onThese = diffProp(prevEvents, v);
                var onThat = applyProp(v);
                var v1 = Halogen_VDom_Util.diffWithKeyAndIxE(ps1, ps2, propToStrKey, onThese, onThis, onThat);
                return new Halogen_VDom_Machine.Step(Data_Unit.unit, patch(Halogen_VDom_Util.unsafeFreeze(v), v1), done(v1));
            };
        };
        var render = function (ps1) {
            var v = Halogen_VDom_Util.newMutMap();
            var v1 = Halogen_VDom_Util.strMapWithIxE(ps1, propToStrKey, applyProp(v));
            return new Halogen_VDom_Machine.Step(Data_Unit.unit, patch(Halogen_VDom_Util.unsafeFreeze(v), v1), done(v1));
        };
        return render;
    };
};
module.exports = {
    Attribute: Attribute,
    Property: Property,
    Handler: Handler,
    Ref: Ref,
    Created: Created,
    Removed: Removed,
    propFromString: propFromString,
    propFromBoolean: propFromBoolean,
    propFromInt: propFromInt,
    propFromNumber: propFromNumber,
    buildProp: buildProp,
    functorProp: functorProp,
    functorElemRef: functorElemRef
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Data.Eq/index.js":135,"../Data.Function.Uncurried/index.js":144,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Data.Semigroup/index.js":248,"../Data.Tuple/index.js":283,"../Data.Unit/index.js":289,"../Effect.Ref/index.js":306,"../Effect.Uncurried/index.js":308,"../Effect/index.js":312,"../Foreign.Object/index.js":318,"../Foreign/index.js":320,"../Halogen.VDom.Machine/index.js":348,"../Halogen.VDom.Types/index.js":349,"../Halogen.VDom.Util/index.js":351,"../Halogen.VDom/index.js":352,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.Element/index.js":444,"../Web.Event.Event/index.js":465,"../Web.Event.EventTarget/index.js":468}],346:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Effect = require("../Effect/index.js");
var Effect_Uncurried = require("../Effect.Uncurried/index.js");
var Halogen_VDom_Machine = require("../Halogen.VDom.Machine/index.js");
var Halogen_VDom_Types = require("../Halogen.VDom.Types/index.js");
var Halogen_VDom_Util = require("../Halogen.VDom.Util/index.js");
var Prelude = require("../Prelude/index.js");
var Web_DOM_Document = require("../Web.DOM.Document/index.js");
var Web_DOM_Element = require("../Web.DOM.Element/index.js");
var Web_DOM_Node = require("../Web.DOM.Node/index.js");
var VDomSpec = function (x) {
    return x;
};
var eqElemSpec = function (a, b) {
    if (a.value1 === b.value1) {
        if (a.value0 instanceof Data_Maybe.Just && (b.value0 instanceof Data_Maybe.Just && a.value0.value0 === b.value0.value0)) {
            return true;
        };
        if (a.value0 instanceof Data_Maybe.Nothing && b.value0 instanceof Data_Maybe.Nothing) {
            return true;
        };
        return false;
    };
    return false;
};
var buildWidget = (function () {
    var patch = function (build, v) {
        return function (v1) {
            if (v1 instanceof Halogen_VDom_Types.Grafted) {
                return patch(build, v)(Halogen_VDom_Types.runGraft(v1.value0));
            };
            if (v1 instanceof Halogen_VDom_Types.Widget) {
                var v2 = v.value1(v1.value0);
                return new Halogen_VDom_Machine.Step(v2.value0, patch(build, v2), v2.value2);
            };
            v.value2();
            return build(v1);
        };
    };
    var render = function (v, build, w) {
        var v1 = v.buildWidget(v)(w);
        return new Halogen_VDom_Machine.Step(v1.value0, patch(build, v1), v1.value2);
    };
    return render;
})();
var buildText = (function () {
    var patch = function (build, halt, node, s1) {
        return function (v) {
            if (v instanceof Halogen_VDom_Types.Grafted) {
                return patch(build, halt, node, s1)(Halogen_VDom_Types.runGraft(v.value0));
            };
            if (v instanceof Halogen_VDom_Types.Text) {
                var res = new Halogen_VDom_Machine.Step(node, patch(build, halt, node, v.value0), halt);
                var $84 = s1 === v.value0;
                if ($84) {
                    return res;
                };
                Halogen_VDom_Util.setTextContent(v.value0, node);
                return res;
            };
            halt();
            return build(v);
        };
    };
    var done = function (node) {
        return function __do() {
            var v = Halogen_VDom_Util.parentNode(node);
            return Halogen_VDom_Util.removeChild(node, v);
        };
    };
    var render = function (v, build, s) {
        var v1 = Halogen_VDom_Util.createTextNode(s, v.document);
        var halt = done(v1);
        return new Halogen_VDom_Machine.Step(v1, patch(build, halt, v1, s), halt);
    };
    return render;
})();
var buildKeyed = (function () {
    var done = function (node, attrs, steps) {
        return function __do() {
            var v = Halogen_VDom_Util.parentNode(node);
            Halogen_VDom_Util.removeChild(node, v);
            Halogen_VDom_Util.forInE(steps, function (v1, v2) {
                return v2.value2();
            });
            return Halogen_VDom_Machine.halt(attrs)();
        };
    };
    var patch = function (build, halt, node, attrs, v, ch1, len1) {
        return function (v1) {
            if (v1 instanceof Halogen_VDom_Types.Grafted) {
                return patch(build, halt, node, attrs, v, ch1, len1)(Halogen_VDom_Types.runGraft(v1.value0));
            };
            if (v1 instanceof Halogen_VDom_Types.Keyed && eqElemSpec(v, v1.value0)) {
                var v2 = Data_Array.length(v1.value1);
                if (len1 === 0 && v2 === 0) {
                    var v4 = Halogen_VDom_Machine.step(attrs)(v1.value0.value2);
                    var halt$prime = done(node, v4, ch1);
                    return new Halogen_VDom_Machine.Step(node, patch(build, halt$prime, node, v4, v1.value0, ch1, 0), halt$prime);
                };
                var onThis = function (v4, v5) {
                    return v5.value2();
                };
                var onThese = function (v4, ix$prime, v5, v6) {
                    var v7 = v5.value1(v6.value1);
                    Halogen_VDom_Util.insertChildIx(ix$prime, v7.value0, node);
                    return v7;
                };
                var onThat = function (v4, ix, v5) {
                    var v6 = build(v5.value1);
                    Halogen_VDom_Util.insertChildIx(ix, v6.value0, node);
                    return v6;
                };
                var v4 = Halogen_VDom_Util.diffWithKeyAndIxE(ch1, v1.value1, Data_Tuple.fst, onThese, onThis, onThat);
                var v5 = Halogen_VDom_Machine.step(attrs)(v1.value0.value2);
                var halt$prime = done(node, v5, v4);
                return new Halogen_VDom_Machine.Step(node, patch(build, halt$prime, node, v5, v1.value0, v4, v2), halt$prime);
            };
            halt();
            return build(v1);
        };
    };
    var render = function (v, build, v1, ch1) {
        var v2 = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(v1.value0), v1.value1, v.document);
        var node = Web_DOM_Element.toNode(v2);
        var onChild = function (k, ix, v3) {
            var v4 = build(v3.value1);
            Halogen_VDom_Util.insertChildIx(ix, v4.value0, node);
            return v4;
        };
        var v3 = Halogen_VDom_Util.strMapWithIxE(ch1, Data_Tuple.fst, onChild);
        var v4 = v.buildAttributes(v2)(v1.value2);
        var halt = done(node, v4, v3);
        return new Halogen_VDom_Machine.Step(node, patch(build, halt, node, v4, v1, v3, Data_Array.length(ch1)), halt);
    };
    return render;
})();
var buildElem = (function () {
    var done = function (node, attrs, steps) {
        return function __do() {
            var v = Halogen_VDom_Util.parentNode(node);
            Halogen_VDom_Util.removeChild(node, v);
            Effect.foreachE(steps)(Halogen_VDom_Machine.halt)();
            return Halogen_VDom_Machine.halt(attrs)();
        };
    };
    var patch = function (build, halt, node, attrs, v, ch1) {
        return function (v1) {
            if (v1 instanceof Halogen_VDom_Types.Grafted) {
                return patch(build, halt, node, attrs, v, ch1)(Halogen_VDom_Types.runGraft(v1.value0));
            };
            if (v1 instanceof Halogen_VDom_Types.Elem && eqElemSpec(v, v1.value0)) {
                var v2 = Data_Array.length(v1.value1);
                var v3 = Data_Array.length(ch1);
                if (v3 === 0 && v2 === 0) {
                    var v4 = Halogen_VDom_Machine.step(attrs)(v1.value0.value2);
                    var halt$prime = done(node, v4, ch1);
                    return new Halogen_VDom_Machine.Step(node, patch(build, halt$prime, node, v4, v1.value0, ch1), halt$prime);
                };
                var onThis = function (ix, v4) {
                    return v4.value2();
                };
                var onThese = function (ix, v4, vdom) {
                    var v5 = v4.value1(vdom);
                    Halogen_VDom_Util.insertChildIx(ix, v5.value0, node);
                    return v5;
                };
                var onThat = function (ix, vdom) {
                    var v4 = build(vdom);
                    Halogen_VDom_Util.insertChildIx(ix, v4.value0, node);
                    return v4;
                };
                var v4 = Halogen_VDom_Util.diffWithIxE(ch1, v1.value1, onThese, onThis, onThat);
                var v5 = Halogen_VDom_Machine.step(attrs)(v1.value0.value2);
                var halt$prime = done(node, v5, v4);
                return new Halogen_VDom_Machine.Step(node, patch(build, halt$prime, node, v5, v1.value0, v4), halt$prime);
            };
            halt();
            return build(v1);
        };
    };
    var render = function (v, build, v1, ch1) {
        var v2 = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(v1.value0), v1.value1, v.document);
        var node = Web_DOM_Element.toNode(v2);
        var onChild = function (ix, child) {
            var v3 = build(child);
            Halogen_VDom_Util.insertChildIx(ix, v3.value0, node);
            return v3;
        };
        var v3 = Halogen_VDom_Util.forE(ch1, onChild);
        var v4 = v.buildAttributes(v2)(v1.value2);
        var halt = done(node, v4, v3);
        return new Halogen_VDom_Machine.Step(node, patch(build, halt, node, v4, v1, v3), halt);
    };
    return render;
})();
var buildVDom = function (spec) {
    var build = function (v) {
        if (v instanceof Halogen_VDom_Types.Text) {
            return buildText(spec, build, v.value0);
        };
        if (v instanceof Halogen_VDom_Types.Elem) {
            return buildElem(spec, build, v.value0, v.value1);
        };
        if (v instanceof Halogen_VDom_Types.Keyed) {
            return buildKeyed(spec, build, v.value0, v.value1);
        };
        if (v instanceof Halogen_VDom_Types.Widget) {
            return buildWidget(spec, build, v.value0);
        };
        if (v instanceof Halogen_VDom_Types.Grafted) {
            return build(Halogen_VDom_Types.runGraft(v.value0));
        };
        throw new Error("Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): " + [ v.constructor.name ]);
    };
    return build;
};
module.exports = {
    VDomSpec: VDomSpec,
    buildVDom: buildVDom,
    buildText: buildText,
    buildElem: buildElem,
    buildKeyed: buildKeyed,
    buildWidget: buildWidget
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Data.Array/index.js":99,"../Data.Eq/index.js":135,"../Data.Function.Uncurried/index.js":144,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Data.Tuple/index.js":283,"../Effect.Uncurried/index.js":308,"../Effect/index.js":312,"../Halogen.VDom.Machine/index.js":348,"../Halogen.VDom.Types/index.js":349,"../Halogen.VDom.Util/index.js":351,"../Prelude/index.js":385,"../Web.DOM.Document/index.js":439,"../Web.DOM.Element/index.js":444,"../Web.DOM.Node/index.js":449}],347:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Effect_Uncurried = require("../Effect.Uncurried/index.js");
var Halogen_Aff_Driver = require("../Halogen.Aff.Driver/index.js");
var Halogen_Aff_Driver_State = require("../Halogen.Aff.Driver.State/index.js");
var Halogen_Component = require("../Halogen.Component/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_Query_InputF = require("../Halogen.Query.InputF/index.js");
var Halogen_VDom = require("../Halogen.VDom/index.js");
var Halogen_VDom_DOM = require("../Halogen.VDom.DOM/index.js");
var Halogen_VDom_DOM_Prop = require("../Halogen.VDom.DOM.Prop/index.js");
var Halogen_VDom_Machine = require("../Halogen.VDom.Machine/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Reference = require("../Unsafe.Reference/index.js");
var Web_DOM_Document = require("../Web.DOM.Document/index.js");
var Web_DOM_Element = require("../Web.DOM.Element/index.js");
var Web_DOM_Node = require("../Web.DOM.Node/index.js");
var Web_HTML = require("../Web.HTML/index.js");
var Web_HTML_HTMLDocument = require("../Web.HTML.HTMLDocument/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_Window = require("../Web.HTML.Window/index.js");
var RenderState = function (x) {
    return x;
};
var substInParent = function (v) {
    return function (v1) {
        return function (v2) {
            if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) {
                return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.insertBefore(v)(v1.value0)(v2.value0));
            };
            if (v1 instanceof Data_Maybe.Nothing && v2 instanceof Data_Maybe.Just) {
                return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(v)(v2.value0));
            };
            return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
        };
    };
};
var removeChild = function (v) {
    return function __do() {
        var v1 = Web_DOM_Node.parentNode(v.node)();
        return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function (pn) {
            return Web_DOM_Node.removeChild(v.node)(pn);
        })(v1)();
    };
};
var mkSpec = function (handler) {
    return function (renderChildRef) {
        return function (document) {
            var getNode = Halogen_Aff_Driver_State.unRenderStateX(function (v) {
                return v.node;
            });
            var done = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
            var patch = function (slot) {
                var v = Effect_Ref.read(renderChildRef)();
                var v1 = v(slot)();
                var node = getNode(v1);
                return new Halogen_VDom_Machine.Step(node, patch, done);
            };
            var buildWidget = function (spec) {
                return function (slot) {
                    var v = Effect_Ref.read(renderChildRef)();
                    var v1 = v(slot)();
                    var node = getNode(v1);
                    return new Halogen_VDom_Machine.Step(node, patch, done);
                };
            };
            var buildAttributes = Halogen_VDom_DOM_Prop.buildProp(handler);
            return {
                buildWidget: buildWidget,
                buildAttributes: buildAttributes,
                document: document
            };
        };
    };
};
var renderSpec = function (document) {
    return function (container) {
        var render = function (handler) {
            return function (child) {
                return function (v) {
                    return function (v1) {
                        if (v1 instanceof Data_Maybe.Nothing) {
                            return function __do() {
                                var v2 = Effect_Ref["new"](child)();
                                var spec = mkSpec(handler)(v2)(document);
                                var v3 = Halogen_VDom_DOM.buildVDom(spec)(v);
                                var node = Halogen_VDom_Machine.extract(v3);
                                Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(node)(Web_HTML_HTMLElement.toNode(container)))();
                                return {
                                    machine: v3,
                                    node: node,
                                    renderChildRef: v2
                                };
                            };
                        };
                        if (v1 instanceof Data_Maybe.Just) {
                            return function __do() {
                                Effect_Ref.write(child)(v1.value0.renderChildRef)();
                                var v2 = Web_DOM_Node.parentNode(v1.value0.node)();
                                var v3 = Web_DOM_Node.nextSibling(v1.value0.node)();
                                var v4 = Halogen_VDom_Machine.step(v1.value0.machine)(v);
                                var newNode = Halogen_VDom_Machine.extract(v4);
                                Control_Applicative.when(Effect.applicativeEffect)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean)))(Unsafe_Reference.unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(v3)(v2))();
                                return {
                                    machine: v4,
                                    node: newNode,
                                    renderChildRef: v1.value0.renderChildRef
                                };
                            };
                        };
                        throw new Error("Failed pattern match at Halogen.VDom.Driver (line 118, column 5 - line 134, column 80): " + [ v1.constructor.name ]);
                    };
                };
            };
        };
        return {
            render: render,
            renderChild: Control_Category.identity(Control_Category.categoryFn),
            removeChild: removeChild
        };
    };
};
var runUI = function (component) {
    return function (i) {
        return function (element) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Functor.map(Effect.functorEffect)(Web_HTML_HTMLDocument.toDocument)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))))(function (v) {
                return Halogen_Aff_Driver.runUI(renderSpec(v)(element))(component)(i);
            });
        };
    };
};
module.exports = {
    runUI: runUI
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Maybe/index.js":210,"../Data.Unit/index.js":289,"../Effect.Aff/index.js":297,"../Effect.Class/index.js":298,"../Effect.Ref/index.js":306,"../Effect.Uncurried/index.js":308,"../Effect/index.js":312,"../Halogen.Aff.Driver.State/index.js":326,"../Halogen.Aff.Driver/index.js":327,"../Halogen.Component/index.js":331,"../Halogen.HTML.Core/index.js":334,"../Halogen.Query.InputF/index.js":343,"../Halogen.VDom.DOM.Prop/index.js":345,"../Halogen.VDom.DOM/index.js":346,"../Halogen.VDom.Machine/index.js":348,"../Halogen.VDom/index.js":352,"../Prelude/index.js":385,"../Unsafe.Reference/index.js":427,"../Web.DOM.Document/index.js":439,"../Web.DOM.Element/index.js":444,"../Web.DOM.Node/index.js":449,"../Web.HTML.HTMLDocument/index.js":504,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.Window/index.js":610,"../Web.HTML/index.js":612}],348:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Effect = require("../Effect/index.js");
var Effect_Uncurried = require("../Effect.Uncurried/index.js");
var Prelude = require("../Prelude/index.js");
var Step = (function () {
    function Step(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    Step.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new Step(value0, value1, value2);
            };
        };
    };
    return Step;
})();
var step = function (v) {
    return v.value1;
};
var halt = function (v) {
    return v.value2;
};
var extract = function (v) {
    return v.value0;
};
module.exports = {
    Step: Step,
    extract: extract,
    step: step,
    halt: halt
};

},{"../Effect.Uncurried/index.js":308,"../Effect/index.js":312,"../Prelude/index.js":385}],349:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Namespace = function (x) {
    return x;
};
var ElemName = function (x) {
    return x;
};
var ElemSpec = (function () {
    function ElemSpec(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    ElemSpec.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new ElemSpec(value0, value1, value2);
            };
        };
    };
    return ElemSpec;
})();
var Text = (function () {
    function Text(value0) {
        this.value0 = value0;
    };
    Text.create = function (value0) {
        return new Text(value0);
    };
    return Text;
})();
var Elem = (function () {
    function Elem(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Elem.create = function (value0) {
        return function (value1) {
            return new Elem(value0, value1);
        };
    };
    return Elem;
})();
var Keyed = (function () {
    function Keyed(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Keyed.create = function (value0) {
        return function (value1) {
            return new Keyed(value0, value1);
        };
    };
    return Keyed;
})();
var Widget = (function () {
    function Widget(value0) {
        this.value0 = value0;
    };
    Widget.create = function (value0) {
        return new Widget(value0);
    };
    return Widget;
})();
var Grafted = (function () {
    function Grafted(value0) {
        this.value0 = value0;
    };
    Grafted.create = function (value0) {
        return new Grafted(value0);
    };
    return Grafted;
})();
var Graft = (function () {
    function Graft(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    Graft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new Graft(value0, value1, value2);
            };
        };
    };
    return Graft;
})();
var unGraft = function (f) {
    return function ($90) {
        return f($90);
    };
};
var ordNamespace = Data_Ord.ordString;
var ordElemName = Data_Ord.ordString;
var newtypeNamespace = new Data_Newtype.Newtype(function (n) {
    return n;
}, Namespace);
var newtypeElemName = new Data_Newtype.Newtype(function (n) {
    return n;
}, ElemName);
var graft = Unsafe_Coerce.unsafeCoerce;
var functorGraft = new Data_Functor.Functor(function (g) {
    return unGraft(function (v) {
        return graft(new Graft(v.value0, function ($91) {
            return g(v.value1($91));
        }, v.value2));
    });
});
var functorVDom = new Data_Functor.Functor(function (g) {
    return function (v) {
        if (v instanceof Text) {
            return new Text(v.value0);
        };
        if (v instanceof Grafted) {
            return new Grafted(Data_Functor.map(functorGraft)(g)(v.value0));
        };
        return new Grafted(graft(new Graft(Control_Category.identity(Control_Category.categoryFn), g, v)));
    };
});
var functorElemSpec = new Data_Functor.Functor(function (f) {
    return function (m) {
        return new ElemSpec(m.value0, m.value1, f(m.value2));
    };
});
var eqNamespace = Data_Eq.eqString;
var eqElemName = Data_Eq.eqString;
var eqElemSpec = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            return Data_Eq.eq(Data_Maybe.eqMaybe(eqNamespace))(x.value0)(y.value0) && Data_Eq.eq(eqElemName)(x.value1)(y.value1) && Data_Eq.eq(dictEq)(x.value2)(y.value2);
        };
    });
};
var ordElemSpec = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqElemSpec(dictOrd.Eq0());
    }, function (x) {
        return function (y) {
            var v = Data_Ord.compare(Data_Maybe.ordMaybe(ordNamespace))(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            var v1 = Data_Ord.compare(ordElemName)(x.value1)(y.value1);
            if (v1 instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v1 instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(dictOrd)(x.value2)(y.value2);
        };
    });
};
var bifunctorGraft = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return unGraft(function (v) {
            return graft(new Graft(function ($92) {
                return f(v.value0($92));
            }, function ($93) {
                return g(v.value1($93));
            }, v.value2));
        });
    };
});
var bifunctorVDom = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            if (v instanceof Text) {
                return new Text(v.value0);
            };
            if (v instanceof Grafted) {
                return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(f)(g)(v.value0));
            };
            return new Grafted(graft(new Graft(f, g, v)));
        };
    };
});
var runGraft = unGraft(function (v) {
    var go = function (v2) {
        if (v2 instanceof Text) {
            return new Text(v2.value0);
        };
        if (v2 instanceof Elem) {
            return new Elem(Data_Functor.map(functorElemSpec)(v.value0)(v2.value0), Data_Functor.map(Data_Functor.functorArray)(go)(v2.value1));
        };
        if (v2 instanceof Keyed) {
            return new Keyed(Data_Functor.map(functorElemSpec)(v.value0)(v2.value0), Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(go))(v2.value1));
        };
        if (v2 instanceof Widget) {
            return new Widget(v.value1(v2.value0));
        };
        if (v2 instanceof Grafted) {
            return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(v.value0)(v.value1)(v2.value0));
        };
        throw new Error("Failed pattern match at Halogen.VDom.Types (line 74, column 7 - line 74, column 27): " + [ v2.constructor.name ]);
    };
    return go(v.value2);
});
module.exports = {
    Text: Text,
    Elem: Elem,
    Keyed: Keyed,
    Widget: Widget,
    Grafted: Grafted,
    Graft: Graft,
    graft: graft,
    unGraft: unGraft,
    runGraft: runGraft,
    ElemSpec: ElemSpec,
    ElemName: ElemName,
    Namespace: Namespace,
    functorVDom: functorVDom,
    bifunctorVDom: bifunctorVDom,
    functorGraft: functorGraft,
    bifunctorGraft: bifunctorGraft,
    eqElemSpec: eqElemSpec,
    ordElemSpec: ordElemSpec,
    functorElemSpec: functorElemSpec,
    newtypeElemName: newtypeElemName,
    eqElemName: eqElemName,
    ordElemName: ordElemName,
    newtypeNamespace: newtypeNamespace,
    eqNamespace: eqNamespace,
    ordNamespace: ordNamespace
};

},{"../Control.Category/index.js":14,"../Control.Semigroupoid/index.js":61,"../Data.Bifunctor/index.js":106,"../Data.Eq/index.js":135,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Maybe/index.js":210,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Tuple/index.js":283,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425}],350:[function(require,module,exports){
"use strict";

exports.unsafeGetAny = function (key, obj) {
  return obj[key];
};

exports.unsafeHasAny = function (key, obj) {
  return obj.hasOwnProperty(key);
};

exports.unsafeSetAny = function (key, val, obj) {
    obj[key] = val;
};

exports.unsafeDeleteAny = function (key, obj) {
  delete obj[key];
};

exports.forE = function (a, f) {
    var b = [];
    for (var i = 0; i < a.length; i++) {
      b.push(f(i, a[i]));
    }
    return b;
};

exports.forInE = function (o, f) {
  var ks = Object.keys(o);
  for (var i = 0; i < ks.length; i++) {
    var k = ks[i];
    f(k, o[k]);
  }
};

exports.replicateE = function (n, f) {
  for (var i = 0; i < n; i++) {
    f();
  }
};

exports.diffWithIxE = function (a1, a2, f1, f2, f3) {
  var a3 = [];
  var l1 = a1.length;
  var l2 = a2.length;
  var i  = 0;
  while (1) {
    if (i < l1) {
      if (i < l2) {
        a3.push(f1(i, a1[i], a2[i]));
      } else {
        f2(i, a1[i]);
      }
    } else if (i < l2) {
      a3.push(f3(i, a2[i]));
    } else {
      break;
    }
    i++;
  }
  return a3;
};

exports.strMapWithIxE = function (as, fk, f) {
  var o = {};
  for (var i = 0; i < as.length; i++) {
    var a = as[i];
    var k = fk(a);
    o[k] = f(k, i, a);
  }
  return o;
};

exports.diffWithKeyAndIxE = function (o1, as, fk, f1, f2, f3) {
  var o2 = {};
  for (var i = 0; i < as.length; i++) {
    var a = as[i];
    var k = fk(a);
    if (o1.hasOwnProperty(k)) {
      o2[k] = f1(k, i, o1[k], a);
    } else {
      o2[k] = f3(k, i, a);
    }
  }
  for (var k in o1) {
    if (k in o2) {
      continue;
    }
    f2(k, o1[k]);
  }
  return o2;
};

exports.refEq = function (a, b) {
  return a === b;
};

exports.createTextNode = function (s, doc) {
  return doc.createTextNode(s);
};

exports.setTextContent = function (s, n) {
  n.textContent = s;
};

exports.createElement = function (ns, name, doc) {
  if (ns != null) {
    return doc.createElementNS(ns, name);
  } else {
    return doc.createElement(name)
  }
};

exports.insertChildIx = function (i, a, b) {
  var n = b.childNodes.item(i) || null;
  if (n !== a) {
    b.insertBefore(a, n);
  }
};

exports.removeChild = function (a, b) {
  if (b && a.parentNode === b) {
    b.removeChild(a);
  }
};

exports.parentNode = function (a) {
  return a.parentNode;
};

exports.setAttribute = function (ns, attr, val, el) {
  if (ns != null) {
    el.setAttributeNS(ns, attr, val);
  } else {
    el.setAttribute(attr, val);
  }
};

exports.removeAttribute = function (ns, attr, el) {
  if (ns != null) {
    el.removeAttributeNS(ns, attr);
  } else {
    el.removeAttribute(attr);
  }
};

exports.addEventListener = function (ev, listener, el) {
  el.addEventListener(ev, listener, false);
};

exports.removeEventListener = function (ev, listener, el) {
  el.removeEventListener(ev, listener, false);
};

exports.jsUndefined = void 0;

},{}],351:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Uncurried = require("../Effect.Uncurried/index.js");
var Foreign_Object = require("../Foreign.Object/index.js");
var Foreign_Object_ST = require("../Foreign.Object.ST/index.js");
var Halogen_VDom_Types = require("../Halogen.VDom.Types/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM_Document = require("../Web.DOM.Document/index.js");
var Web_DOM_Element = require("../Web.DOM.Element/index.js");
var Web_DOM_Node = require("../Web.DOM.Node/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var unsafeLookup = $foreign.unsafeGetAny;
var unsafeFreeze = Unsafe_Coerce.unsafeCoerce;
var pokeMutMap = $foreign.unsafeSetAny;
var newMutMap = Foreign_Object_ST["new"];
var effectUnit = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
var effectPure = Control_Applicative.pure(Effect.applicativeEffect);
var deleteMutMap = $foreign.unsafeDeleteAny;
module.exports = {
    effectPure: effectPure,
    effectUnit: effectUnit,
    newMutMap: newMutMap,
    pokeMutMap: pokeMutMap,
    deleteMutMap: deleteMutMap,
    unsafeFreeze: unsafeFreeze,
    unsafeLookup: unsafeLookup,
    unsafeGetAny: $foreign.unsafeGetAny,
    unsafeHasAny: $foreign.unsafeHasAny,
    unsafeSetAny: $foreign.unsafeSetAny,
    unsafeDeleteAny: $foreign.unsafeDeleteAny,
    forE: $foreign.forE,
    forInE: $foreign.forInE,
    replicateE: $foreign.replicateE,
    diffWithIxE: $foreign.diffWithIxE,
    diffWithKeyAndIxE: $foreign.diffWithKeyAndIxE,
    strMapWithIxE: $foreign.strMapWithIxE,
    refEq: $foreign.refEq,
    createTextNode: $foreign.createTextNode,
    setTextContent: $foreign.setTextContent,
    createElement: $foreign.createElement,
    insertChildIx: $foreign.insertChildIx,
    removeChild: $foreign.removeChild,
    parentNode: $foreign.parentNode,
    setAttribute: $foreign.setAttribute,
    removeAttribute: $foreign.removeAttribute,
    addEventListener: $foreign.addEventListener,
    removeEventListener: $foreign.removeEventListener,
    jsUndefined: $foreign.jsUndefined
};

},{"../Control.Applicative/index.js":7,"../Data.Function.Uncurried/index.js":144,"../Data.Nullable/index.js":223,"../Data.Unit/index.js":289,"../Effect.Uncurried/index.js":308,"../Effect/index.js":312,"../Foreign.Object.ST/index.js":316,"../Foreign.Object/index.js":318,"../Halogen.VDom.Types/index.js":349,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.Document/index.js":439,"../Web.DOM.Element/index.js":444,"../Web.DOM.Node/index.js":449,"../Web.Event.EventTarget/index.js":468,"./foreign.js":350}],352:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Halogen_VDom_DOM = require("../Halogen.VDom.DOM/index.js");
var Halogen_VDom_Machine = require("../Halogen.VDom.Machine/index.js");
var Halogen_VDom_Types = require("../Halogen.VDom.Types/index.js");
module.exports = {};

},{"../Halogen.VDom.DOM/index.js":346,"../Halogen.VDom.Machine/index.js":348,"../Halogen.VDom.Types/index.js":349}],353:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Coroutine = require("../Control.Coroutine/index.js");
var Data_Lazy = require("../Data.Lazy/index.js");
var Halogen_Component = require("../Halogen.Component/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");
var Halogen_Query = require("../Halogen.Query/index.js");
var Prelude = require("../Prelude/index.js");
module.exports = {};

},{"../Control.Coroutine/index.js":22,"../Data.Lazy/index.js":171,"../Halogen.Component/index.js":331,"../Halogen.HTML.Core/index.js":334,"../Halogen.HTML.Properties/index.js":338,"../Halogen.Query/index.js":344,"../Prelude/index.js":385}],354:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Reader = require("../Control.Monad.Reader/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Prelude = require("../Prelude/index.js");
var Type_Equality = require("../Type.Equality/index.js");
var AppM = function (x) {
    return x;
};
var runAppM = function (env) {
    return function (v) {
        return Control_Monad_Reader_Trans.runReaderT(v)(env);
    };
};
var newtypeAppM = new Data_Newtype.Newtype(function (n) {
    return n;
}, AppM);
var monadEffectAppM = Control_Monad_Reader_Trans.monadEffectReader(Effect_Aff.monadEffectAff);
var monadAppM = Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff);
var monadAskAppM = function (dictTypeEquals) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadAppM;
    }, AppM(Control_Monad_Reader_Class.asks(Control_Monad_Reader_Trans.monadAskReaderT(Effect_Aff.monadAff))(Type_Equality.from(dictTypeEquals))));
};
var monadAffAppM = Effect_Aff_Class.monadAffReader(Effect_Aff_Class.monadAffAff);
var functorAppM = Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff);
var bindAppM = Control_Monad_Reader_Trans.bindReaderT(Effect_Aff.bindAff);
var applyAppM = Control_Monad_Reader_Trans.applyReaderT(Effect_Aff.applyAff);
var applicativeAppM = Control_Monad_Reader_Trans.applicativeReaderT(Effect_Aff.applicativeAff);
module.exports = {
    AppM: AppM,
    runAppM: runAppM,
    newtypeAppM: newtypeAppM,
    functorAppM: functorAppM,
    applyAppM: applyAppM,
    applicativeAppM: applicativeAppM,
    bindAppM: bindAppM,
    monadAppM: monadAppM,
    monadEffectAppM: monadEffectAppM,
    monadAffAppM: monadAffAppM,
    monadAskAppM: monadAskAppM
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Monad.Reader.Class/index.js":40,"../Control.Monad.Reader.Trans/index.js":41,"../Control.Monad.Reader/index.js":42,"../Control.Monad/index.js":55,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Newtype/index.js":220,"../Effect.Aff.Class/index.js":295,"../Effect.Aff/index.js":297,"../Effect.Class/index.js":298,"../Prelude/index.js":385,"../Type.Equality/index.js":420}],355:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Either_Nested = require("../Data.Either.Nested/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor_Coproduct_Nested = require("../Data.Functor.Coproduct.Nested/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Data_Void = require("../Data.Void/index.js");
var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");
var Halogen = require("../Halogen/index.js");
var Halogen_Component = require("../Halogen.Component/index.js");
var Halogen_Component_ChildPath = require("../Halogen.Component.ChildPath/index.js");
var Halogen_HTML = require("../Halogen.HTML/index.js");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");
var Lynx_Page_Form = require("../Lynx.Page.Form/index.js");
var Lynx_Page_Home = require("../Lynx.Page.Home/index.js");
var Lynx_Route = require("../Lynx.Route/index.js");
var Prelude = require("../Prelude/index.js");
var Navigate = (function () {
    function Navigate(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Navigate.create = function (value0) {
        return function (value1) {
            return new Navigate(value0, value1);
        };
    };
    return Navigate;
})();
var component = function (dictMonadAff) {
    var render = function (v) {
        if (v instanceof Lynx_Route.Home) {
            return Halogen_HTML["slot'"](Halogen_Component_ChildPath.cp1)(Data_Unit.unit)(Lynx_Page_Home.component)(Data_Unit.unit)(Data_Void.absurd);
        };
        if (v instanceof Lynx_Route.Form) {
            return Halogen_HTML["slot'"](Halogen_Component_ChildPath.cp2)(Data_Unit.unit)(Lynx_Page_Form.component(dictMonadAff))(v.value0)(Data_Void.absurd);
        };
        throw new Error("Failed pattern match at Lynx.Component.Router (line 49, column 12 - line 51, column 53): " + [ v.constructor.name ]);
    };
    var $$eval = function (v) {
        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Lynx_Route.eqRoute)(v1)(v.value0))(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0)))(function () {
                return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
            });
        });
    };
    return Halogen_Component.parentComponent(Data_Either.ordEither(Data_Ord.ordUnit)(Data_Either.ordEither(Data_Ord.ordUnit)(Data_Ord.ordVoid)))({
        initialState: Data_Function["const"](Lynx_Route.Home.value),
        "eval": $$eval,
        render: render,
        receiver: Data_Function["const"](Data_Maybe.Nothing.value)
    });
};
module.exports = {
    Navigate: Navigate,
    component: component
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Control.Monad.State.Class/index.js":48,"../Data.Either.Nested/index.js":130,"../Data.Either/index.js":131,"../Data.Eq/index.js":135,"../Data.Function/index.js":145,"../Data.Functor.Coproduct.Nested/index.js":149,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Unit/index.js":289,"../Data.Void/index.js":291,"../Effect.Aff.Class/index.js":295,"../Halogen.Component.ChildPath/index.js":330,"../Halogen.Component/index.js":331,"../Halogen.HTML/index.js":339,"../Halogen.Query.HalogenM/index.js":342,"../Halogen/index.js":353,"../Lynx.Page.Form/index.js":358,"../Lynx.Page.Home/index.js":359,"../Lynx.Route/index.js":360,"../Prelude/index.js":385}],356:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Argonaut = require("../Data.Argonaut/index.js");
var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");
var Data_Argonaut_Decode_Class = require("../Data.Argonaut.Decode.Class/index.js");
var Data_Argonaut_Decode_Combinators = require("../Data.Argonaut.Decode.Combinators/index.js");
var Data_Argonaut_Encode_Class = require("../Data.Argonaut.Encode.Class/index.js");
var Data_Argonaut_Encode_Combinators = require("../Data.Argonaut.Encode.Combinators/index.js");
var Data_BigInt = require("../Data.BigInt/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Generic_Rep_Show = require("../Data.Generic.Rep.Show/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_NonEmpty = require("../Data.NonEmpty/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Data_String_Pattern = require("../Data.String.Pattern/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Ocelot_Data_Currency = require("../Ocelot.Data.Currency/index.js");
var Prelude = require("../Prelude/index.js");
var Test_QuickCheck = require("../Test.QuickCheck/index.js");
var Test_QuickCheck_Arbitrary = require("../Test.QuickCheck.Arbitrary/index.js");
var Test_QuickCheck_Gen = require("../Test.QuickCheck.Gen/index.js");
var $$Array = (function () {
    function $$Array(value0) {
        this.value0 = value0;
    };
    $$Array.create = function (value0) {
        return new $$Array(value0);
    };
    return $$Array;
})();
var $$Boolean = (function () {
    function $$Boolean(value0) {
        this.value0 = value0;
    };
    $$Boolean.create = function (value0) {
        return new $$Boolean(value0);
    };
    return $$Boolean;
})();
var Cents = (function () {
    function Cents(value0) {
        this.value0 = value0;
    };
    Cents.create = function (value0) {
        return new Cents(value0);
    };
    return Cents;
})();
var Int = (function () {
    function Int(value0) {
        this.value0 = value0;
    };
    Int.create = function (value0) {
        return new Int(value0);
    };
    return Int;
})();
var Pair = (function () {
    function Pair(value0) {
        this.value0 = value0;
    };
    Pair.create = function (value0) {
        return new Pair(value0);
    };
    return Pair;
})();
var $$String = (function () {
    function $$String(value0) {
        this.value0 = value0;
    };
    $$String.create = function (value0) {
        return new $$String(value0);
    };
    return $$String;
})();
var ValA = (function () {
    function ValA(value0) {
        this.value0 = value0;
    };
    ValA.create = function (value0) {
        return new ValA(value0);
    };
    return ValA;
})();
var IfA = (function () {
    function IfA(value0, value1, value2, value3, value4) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
    };
    IfA.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return new IfA(value0, value1, value2, value3, value4);
                    };
                };
            };
        };
    };
    return IfA;
})();
var EqualA = (function () {
    function EqualA(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    EqualA.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new EqualA(value0, value1, value2, value3);
                };
            };
        };
    };
    return EqualA;
})();
var PrintA = (function () {
    function PrintA(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    PrintA.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new PrintA(value0, value1, value2);
            };
        };
    };
    return PrintA;
})();
var LookupA = (function () {
    function LookupA(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    LookupA.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new LookupA(value0, value1, value2);
            };
        };
    };
    return LookupA;
})();
var Val = (function () {
    function Val(value0) {
        this.value0 = value0;
    };
    Val.create = function (value0) {
        return new Val(value0);
    };
    return Val;
})();
var If = (function () {
    function If(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    If.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new If(value0, value1, value2);
            };
        };
    };
    return If;
})();
var Equal = (function () {
    function Equal(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Equal.create = function (value0) {
        return function (value1) {
            return new Equal(value0, value1);
        };
    };
    return Equal;
})();
var Print = (function () {
    function Print(value0) {
        this.value0 = value0;
    };
    Print.create = function (value0) {
        return new Print(value0);
    };
    return Print;
})();
var Lookup = (function () {
    function Lookup(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Lookup.create = function (value0) {
        return function (value1) {
            return new Lookup(value0, value1);
        };
    };
    return Lookup;
})();
var IfCondition = (function () {
    function IfCondition(value0) {
        this.value0 = value0;
    };
    IfCondition.create = function (value0) {
        return new IfCondition(value0);
    };
    return IfCondition;
})();
var EqualMismatch = (function () {
    function EqualMismatch(value0) {
        this.value0 = value0;
    };
    EqualMismatch.create = function (value0) {
        return new EqualMismatch(value0);
    };
    return EqualMismatch;
})();
var toString = function (v) {
    if (v instanceof $$String) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
};
var toPair = function (v) {
    if (v instanceof Pair) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
};
var toInt = function (v) {
    if (v instanceof Int) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
};
var toCents = function (v) {
    if (v instanceof Cents) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
};
var toBoolean = function (v) {
    if (v instanceof $$Boolean) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
};
var toArray = function (v) {
    if (v instanceof $$Array) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
};
var string_ = function ($319) {
    return Val.create($$String.create($319));
};
var reflectType = function (v) {
    if (v instanceof $$Array) {
        return "Array";
    };
    if (v instanceof $$Boolean) {
        return "Boolean";
    };
    if (v instanceof Cents) {
        return "Cents";
    };
    if (v instanceof Int) {
        return "Int";
    };
    if (v instanceof Pair) {
        return "Pair";
    };
    if (v instanceof $$String) {
        return "String";
    };
    throw new Error("Failed pattern match at Lynx.Data.Expr (line 100, column 1 - line 100, column 34): " + [ v.constructor.name ]);
};
var toExprA = (function () {
    var reflectOut = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Val) {
                $tco_done = true;
                return reflectType(v.value0);
            };
            if (v instanceof If) {
                $copy_v = v.value1;
                return;
            };
            if (v instanceof Equal) {
                $tco_done = true;
                return "Boolean";
            };
            if (v instanceof Print) {
                $tco_done = true;
                return "String";
            };
            if (v instanceof Lookup) {
                $copy_v = v.value1;
                return;
            };
            throw new Error("Failed pattern match at Lynx.Data.Expr (line 238, column 16 - line 243, column 31): " + [ v.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    var reflectIn = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Val) {
                $tco_done = true;
                return "Void";
            };
            if (v instanceof If) {
                $copy_v = v.value0;
                return;
            };
            if (v instanceof Equal) {
                $copy_v = v.value0;
                return;
            };
            if (v instanceof Print) {
                $copy_v = v.value0;
                return;
            };
            if (v instanceof Lookup) {
                $tco_done = true;
                return "Void";
            };
            throw new Error("Failed pattern match at Lynx.Data.Expr (line 231, column 15 - line 237, column 3): " + [ v.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return function (v) {
        if (v instanceof Val) {
            return new ValA(v.value0);
        };
        if (v instanceof If) {
            return new IfA(toExprA(v.value0), toExprA(v.value1), toExprA(v.value2), reflectIn(v.value0), reflectOut(v.value1));
        };
        if (v instanceof Equal) {
            return new EqualA(toExprA(v.value0), toExprA(v.value1), reflectIn(v.value0), reflectOut(v.value0));
        };
        if (v instanceof Print) {
            return new PrintA(toExprA(v.value0), reflectIn(v.value0), "String");
        };
        if (v instanceof Lookup) {
            return new LookupA(v.value0, toExprA(v.value1), reflectOut(v.value1));
        };
        throw new Error("Failed pattern match at Lynx.Data.Expr (line 223, column 11 - line 228, column 53): " + [ v.constructor.name ]);
    };
})();
var print_ = Print.create;
var print = function (v) {
    if (v instanceof $$Array) {
        return "[" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")(Data_Functor.map(Data_Functor.functorArray)(print)(v.value0)) + "]");
    };
    if (v instanceof $$Boolean) {
        return Data_Show.show(Data_Show.showBoolean)(v.value0);
    };
    if (v instanceof Cents) {
        return Data_String_Common.replace(".00")("")(Ocelot_Data_Currency.formatCentsToStrDollars(v.value0));
    };
    if (v instanceof Int) {
        return Data_Show.show(Data_Show.showInt)(v.value0);
    };
    if (v instanceof Pair) {
        return "{name: " + (print(v.value0.name) + (", value: " + (print(v.value0.value) + "}")));
    };
    if (v instanceof $$String) {
        return v.value0;
    };
    throw new Error("Failed pattern match at Lynx.Data.Expr (line 109, column 9 - line 115, column 16): " + [ v.constructor.name ]);
};
var lookup_ = Lookup.create;
var int_ = function ($320) {
    return Val.create(Int.create($320));
};
var if_ = If.create;
var genericExprType = new Data_Generic_Rep.Generic(function (x) {
    if (x instanceof $$Array) {
        return new Data_Generic_Rep.Inl(x.value0);
    };
    if (x instanceof $$Boolean) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
    };
    if (x instanceof Cents) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
    };
    if (x instanceof Int) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))));
    };
    if (x instanceof Pair) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))));
    };
    if (x instanceof $$String) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0)))));
    };
    throw new Error("Failed pattern match at Lynx.Data.Expr (line 32, column 8 - line 32, column 54): " + [ x.constructor.name ]);
}, function (x) {
    if (x instanceof Data_Generic_Rep.Inl) {
        return new $$Array(x.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
        return new $$Boolean(x.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
        return new Cents(x.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
        return new Int(x.value0.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
        return new Pair(x.value0.value0.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))) {
        return new $$String(x.value0.value0.value0.value0.value0);
    };
    throw new Error("Failed pattern match at Lynx.Data.Expr (line 32, column 8 - line 32, column 54): " + [ x.constructor.name ]);
});
var showExprType = new Data_Show.Show(function (x) {
    return Data_Generic_Rep_Show.genericShow(genericExprType)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showArray(showExprType)))(new Data_Symbol.IsSymbol(function () {
        return "Array";
    })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showBoolean))(new Data_Symbol.IsSymbol(function () {
        return "Boolean";
    })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Ocelot_Data_Currency.showCents))(new Data_Symbol.IsSymbol(function () {
        return "Cents";
    })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(new Data_Symbol.IsSymbol(function () {
        return "Int";
    })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "name";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "value";
    }))(Data_Show.showRecordFieldsNil)(showExprType))(showExprType))))(new Data_Symbol.IsSymbol(function () {
        return "Pair";
    })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
        return "String";
    }))))))))(x);
});
var genericExpr = new Data_Generic_Rep.Generic(function (x) {
    if (x instanceof Val) {
        return new Data_Generic_Rep.Inl(x.value0);
    };
    if (x instanceof If) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, x.value2))));
    };
    if (x instanceof Equal) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1))));
    };
    if (x instanceof Print) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))));
    };
    if (x instanceof Lookup) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Product(x.value0, x.value1)))));
    };
    throw new Error("Failed pattern match at Lynx.Data.Expr (line 156, column 8 - line 156, column 46): " + [ x.constructor.name ]);
}, function (x) {
    if (x instanceof Data_Generic_Rep.Inl) {
        return new Val(x.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
        return new If(x.value0.value0.value0, x.value0.value0.value1.value0, x.value0.value0.value1.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
        return new Equal(x.value0.value0.value0.value0, x.value0.value0.value0.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
        return new Print(x.value0.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr))) {
        return new Lookup(x.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value1);
    };
    throw new Error("Failed pattern match at Lynx.Data.Expr (line 156, column 8 - line 156, column 46): " + [ x.constructor.name ]);
});
var showExpr = new Data_Show.Show(function (x) {
    return Data_Generic_Rep_Show.genericShow(genericExpr)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(showExprType))(new Data_Symbol.IsSymbol(function () {
        return "Val";
    })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(showExpr))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(showExpr))(Data_Generic_Rep_Show.genericShowArgsArgument(showExpr))))(new Data_Symbol.IsSymbol(function () {
        return "If";
    })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(showExpr))(Data_Generic_Rep_Show.genericShowArgsArgument(showExpr)))(new Data_Symbol.IsSymbol(function () {
        return "Equal";
    })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(showExpr))(new Data_Symbol.IsSymbol(function () {
        return "Print";
    })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(Data_Generic_Rep_Show.genericShowArgsArgument(showExpr)))(new Data_Symbol.IsSymbol(function () {
        return "Lookup";
    })))))))(x);
});
var evalExpr = function (get) {
    return function (v) {
        if (v instanceof Val) {
            return Control_Applicative.pure(Data_Either.applicativeEither)(v.value0);
        };
        if (v instanceof If) {
            return Control_Bind.bind(Data_Either.bindEither)(evalExpr(get)(v.value0))(function (v1) {
                if (v1 instanceof $$Boolean && !v1.value0) {
                    return evalExpr(get)(v.value2);
                };
                if (v1 instanceof $$Boolean && v1.value0) {
                    return evalExpr(get)(v.value1);
                };
                return new Data_Either.Left(new IfCondition(v1));
            });
        };
        if (v instanceof Equal) {
            return Control_Bind.bind(Data_Either.bindEither)(evalExpr(get)(v.value0))(function (v1) {
                return Control_Bind.bind(Data_Either.bindEither)(evalExpr(get)(v.value1))(function (v2) {
                    if (v1 instanceof $$Boolean && v2 instanceof $$Boolean) {
                        return new Data_Either.Right($$Boolean.create(v1.value0 === v2.value0));
                    };
                    if (v1 instanceof Int && v2 instanceof Int) {
                        return new Data_Either.Right($$Boolean.create(v1.value0 === v2.value0));
                    };
                    if (v1 instanceof $$String && v2 instanceof $$String) {
                        return new Data_Either.Right($$Boolean.create(v1.value0 === v2.value0));
                    };
                    return new Data_Either.Left(new EqualMismatch({
                        left: v1,
                        right: v2
                    }));
                });
            });
        };
        if (v instanceof Print) {
            return Data_Functor.map(Data_Either.functorEither)(function ($321) {
                return $$String.create(print($321));
            })(evalExpr(get)(v.value0));
        };
        if (v instanceof Lookup) {
            return Data_Maybe["maybe'"](function (v1) {
                return evalExpr(get)(v.value1);
            })(Data_Either.Right.create)(get(v.value0));
        };
        throw new Error("Failed pattern match at Lynx.Data.Expr (line 256, column 16 - line 273, column 60): " + [ v.constructor.name ]);
    };
};
var equal_ = Equal.create;
var eqExprType = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof $$Array && y instanceof $$Array) {
            return Data_Eq.eq(Data_Eq.eqArray(eqExprType))(x.value0)(y.value0);
        };
        if (x instanceof $$Boolean && y instanceof $$Boolean) {
            return x.value0 === y.value0;
        };
        if (x instanceof Cents && y instanceof Cents) {
            return Data_Eq.eq(Ocelot_Data_Currency.eqCents)(x.value0)(y.value0);
        };
        if (x instanceof Int && y instanceof Int) {
            return x.value0 === y.value0;
        };
        if (x instanceof Pair && y instanceof Pair) {
            return Data_Eq.eq(eqExprType)(x.value0.name)(y.value0.name) && Data_Eq.eq(eqExprType)(x.value0.value)(y.value0.value);
        };
        if (x instanceof $$String && y instanceof $$String) {
            return x.value0 === y.value0;
        };
        return false;
    };
});
var eqExpr = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Val && y instanceof Val) {
            return Data_Eq.eq(eqExprType)(x.value0)(y.value0);
        };
        if (x instanceof If && y instanceof If) {
            return Data_Eq.eq(eqExpr)(x.value0)(y.value0) && Data_Eq.eq(eqExpr)(x.value1)(y.value1) && Data_Eq.eq(eqExpr)(x.value2)(y.value2);
        };
        if (x instanceof Equal && y instanceof Equal) {
            return Data_Eq.eq(eqExpr)(x.value0)(y.value0) && Data_Eq.eq(eqExpr)(x.value1)(y.value1);
        };
        if (x instanceof Print && y instanceof Print) {
            return Data_Eq.eq(eqExpr)(x.value0)(y.value0);
        };
        if (x instanceof Lookup && y instanceof Lookup) {
            return x.value0 === y.value0 && Data_Eq.eq(eqExpr)(x.value1)(y.value1);
        };
        return false;
    };
});
var eqEvalError = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof IfCondition && y instanceof IfCondition) {
            return Data_Eq.eq(eqExprType)(x.value0)(y.value0);
        };
        if (x instanceof EqualMismatch && y instanceof EqualMismatch) {
            return Data_Eq.eq(eqExprType)(x.value0.left)(y.value0.left) && Data_Eq.eq(eqExprType)(x.value0.right)(y.value0.right);
        };
        return false;
    };
});
var encodeJsonExprType = new Data_Argonaut_Encode_Class.EncodeJson(function (x$prime) {
    var base = function (x) {
        return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("in")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)("Void")))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("out")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(reflectType(x))))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("op")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)("Val")))(Data_Argonaut_Core.jsonEmptyObject)));
    };
    if (x$prime instanceof $$Array) {
        return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("param")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonArray(encodeJsonExprType))(x$prime.value0)))(base(x$prime));
    };
    if (x$prime instanceof $$Boolean) {
        return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("param")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJBoolean)(x$prime.value0)))(base(x$prime));
    };
    if (x$prime instanceof Cents) {
        return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("param")(Data_Argonaut_Encode_Class.encodeJson(Ocelot_Data_Currency.encodeJsonCents)(x$prime.value0)))(base(x$prime));
    };
    if (x$prime instanceof Int) {
        return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("param")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonInt)(x$prime.value0)))(base(x$prime));
    };
    if (x$prime instanceof Pair) {
        return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("param")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(encodeJsonExprType)(Data_Argonaut_Encode_Class.gEncodeJsonCons(encodeJsonExprType)(Data_Argonaut_Encode_Class.gEncodeJsonNil)(new Data_Symbol.IsSymbol(function () {
            return "value";
        }))())(new Data_Symbol.IsSymbol(function () {
            return "name";
        }))())())(x$prime.value0)))(base(x$prime));
    };
    if (x$prime instanceof $$String) {
        return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("param")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(x$prime.value0)))(base(x$prime));
    };
    throw new Error("Failed pattern match at Lynx.Data.Expr (line 38, column 19 - line 44, column 51): " + [ x$prime.constructor.name ]);
});
var encodeHelper = function (op) {
    return function (i) {
        return function (o) {
            return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("op")(op))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("in")(i))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("out")(o))(Data_Argonaut_Core.jsonEmptyObject)));
        };
    };
};
var encodeJsonExprA = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
    if (v instanceof ValA) {
        return Data_Argonaut_Encode_Class.encodeJson(encodeJsonExprType)(v.value0);
    };
    if (v instanceof IfA) {
        return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonArray(encodeJsonExprA))("params")([ v.value0, v.value1, v.value2 ]))(encodeHelper("If")(v.value3)(v.value4));
    };
    if (v instanceof EqualA) {
        return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonArray(encodeJsonExprA))("params")([ v.value0, v.value1 ]))(encodeHelper("Equal")(v.value2)(v.value3));
    };
    if (v instanceof PrintA) {
        return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonArray(encodeJsonExprA))("params")([ v.value0 ]))(encodeHelper("Print")(v.value1)(v.value2));
    };
    if (v instanceof LookupA) {
        return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonArray(Data_Argonaut_Encode_Class.encodeJsonJson))("params")([ Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(v.value0), Data_Argonaut_Encode_Class.encodeJson(encodeJsonExprA)(v.value1) ]))(encodeHelper("Lookup")("Void")(v.value2));
    };
    throw new Error("Failed pattern match at Lynx.Data.Expr (line 211, column 5 - line 220, column 85): " + [ v.constructor.name ]);
});
var encodeJsonExpr = new Data_Argonaut_Encode_Class.EncodeJson(function ($322) {
    return Data_Argonaut_Encode_Class.encodeJson(encodeJsonExprA)(toExprA($322));
});
var decodeJsonExprType = new Data_Argonaut_Decode_Class.DecodeJson(function (json$prime) {
    var cents = function (json) {
        return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonInt)(json))(function (v) {
            return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Newtype.wrap(Ocelot_Data_Currency.newtypeCents)(Data_BigInt.fromInt(v)));
        });
    };
    return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(json$prime))(function (v) {
        return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("out"))(function (v1) {
            return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonJson)(v)("param"))(function (v2) {
                if (v1 === "Array") {
                    return Data_Functor.map(Data_Either.functorEither)($$Array.create)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeArray(decodeJsonExprType))(v2));
                };
                if (v1 === "Boolean") {
                    return Data_Functor.map(Data_Either.functorEither)($$Boolean.create)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonBoolean)(v2));
                };
                if (v1 === "Cents") {
                    return Data_Functor.map(Data_Either.functorEither)(Cents.create)(cents(v2));
                };
                if (v1 === "Int") {
                    return Data_Functor.map(Data_Either.functorEither)(Int.create)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonInt)(v2));
                };
                if (v1 === "Pair") {
                    return Data_Functor.map(Data_Either.functorEither)(Pair.create)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeRecord(Data_Argonaut_Decode_Class.gDecodeJsonCons(decodeJsonExprType)(Data_Argonaut_Decode_Class.gDecodeJsonCons(decodeJsonExprType)(Data_Argonaut_Decode_Class.gDecodeJsonNil)(new Data_Symbol.IsSymbol(function () {
                        return "value";
                    }))()())(new Data_Symbol.IsSymbol(function () {
                        return "name";
                    }))()())())(v2));
                };
                if (v1 === "String") {
                    return Data_Functor.map(Data_Either.functorEither)($$String.create)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)(v2));
                };
                return new Data_Either.Left(Data_Argonaut_Core.stringify(json$prime) + (" unsupported." + " Expected Array, Boolean, Cents, Int, Pair, or String."));
            });
        });
    });
});
var decodeJsonExpr = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
    return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
        return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("op"))(function (v1) {
            if (v1 === "Val") {
                return Data_Functor.map(Data_Either.functorEither)(Val.create)(Data_Argonaut_Decode_Class.decodeJson(decodeJsonExprType)(json));
            };
            if (v1 === "If") {
                return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeJsonExpr))(v)("params"))(function (v2) {
                    if (v2.length === 3) {
                        return Control_Applicative.pure(Data_Either.applicativeEither)(if_(v2[0])(v2[1])(v2[2]));
                    };
                    return new Data_Either.Left("Expected 3 params");
                });
            };
            if (v1 === "Equal") {
                return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeJsonExpr))(v)("params"))(function (v2) {
                    if (v2.length === 2) {
                        return Control_Applicative.pure(Data_Either.applicativeEither)(equal_(v2[0])(v2[1]));
                    };
                    return new Data_Either.Left("Expected 2 params");
                });
            };
            if (v1 === "Print") {
                return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeJsonExpr))(v)("params"))(function (v2) {
                    if (v2.length === 1) {
                        return Control_Applicative.pure(Data_Either.applicativeEither)(print_(v2[0]));
                    };
                    return new Data_Either.Left("Expected 1 param");
                });
            };
            if (v1 === "Lookup") {
                return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonJson))(v)("params"))(function (v2) {
                    if (v2.length === 2) {
                        return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)(v2[0]))(function (v3) {
                            return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(decodeJsonExpr)(v2[1]))(function (v4) {
                                return Control_Applicative.pure(Data_Either.applicativeEither)(lookup_(v3)(v4));
                            });
                        });
                    };
                    return new Data_Either.Left("Expected 2 params");
                });
            };
            return Data_Either.Left.create(v1 + " invalid op");
        });
    });
});
var cents_ = function ($323) {
    return Val.create(Cents.create($323));
};
var boolean_ = function ($324) {
    return Val.create($$Boolean.create($324));
};
var arbitraryExprType = new Test_QuickCheck_Arbitrary.Arbitrary((function () {
    var cents = Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(Test_QuickCheck_Arbitrary.arbitrary(Test_QuickCheck_Arbitrary.arbInt))(function (v) {
        return Control_Applicative.pure(Test_QuickCheck_Gen.applicativeGen)(Data_Newtype.wrap(Ocelot_Data_Currency.newtypeCents)(Data_BigInt.fromInt(v)));
    });
    var go = function (size$prime) {
        var $317 = size$prime < 1;
        if ($317) {
            return Test_QuickCheck_Gen.oneOf(new Data_NonEmpty.NonEmpty(Data_Functor.map(Test_QuickCheck_Gen.functorGen)($$Boolean.create)(Test_QuickCheck_Arbitrary.arbitrary(Test_QuickCheck_Arbitrary.arbBoolean)), [ Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Cents.create)(cents), Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Int.create)(Test_QuickCheck_Arbitrary.arbitrary(Test_QuickCheck_Arbitrary.arbInt)), Data_Functor.map(Test_QuickCheck_Gen.functorGen)($$String.create)(Test_QuickCheck_Arbitrary.arbitrary(Test_QuickCheck_Arbitrary.arbString)) ]));
        };
        var size = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(size$prime)(10);
        return Test_QuickCheck_Gen.oneOf(new Data_NonEmpty.NonEmpty(Data_Functor.map(Test_QuickCheck_Gen.functorGen)($$Array.create)(Test_QuickCheck_Gen.arrayOf(go(size))), [ Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Pair.create)(Control_Apply.apply(Test_QuickCheck_Gen.applyGen)(Data_Functor.map(Test_QuickCheck_Gen.functorGen)(function (v) {
            return function (v1) {
                return {
                    name: v,
                    value: v1
                };
            };
        })(go(size)))(go(size))) ]));
    };
    return Test_QuickCheck_Gen.sized(go);
})());
var arbitraryExpr = new Test_QuickCheck_Arbitrary.Arbitrary((function () {
    var go = function (size$prime) {
        var $318 = size$prime < 1;
        if ($318) {
            return Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Val.create)(Test_QuickCheck_Arbitrary.arbitrary(arbitraryExprType));
        };
        var size = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(size$prime)(10);
        return Test_QuickCheck_Gen.oneOf(new Data_NonEmpty.NonEmpty(Control_Apply.apply(Test_QuickCheck_Gen.applyGen)(Control_Apply.apply(Test_QuickCheck_Gen.applyGen)(Data_Functor.map(Test_QuickCheck_Gen.functorGen)(If.create)(go(size)))(go(size)))(go(size)), [ Control_Apply.apply(Test_QuickCheck_Gen.applyGen)(Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Equal.create)(go(size)))(go(size)), Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Print.create)(go(size)), Control_Apply.apply(Test_QuickCheck_Gen.applyGen)(Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Lookup.create)(Test_QuickCheck_Arbitrary.arbitrary(Test_QuickCheck_Arbitrary.arbString)))(go(size)) ]));
    };
    return Test_QuickCheck_Gen.sized(go);
})());
module.exports = {
    "Array": $$Array,
    "Boolean": $$Boolean,
    Cents: Cents,
    Int: Int,
    Pair: Pair,
    "String": $$String,
    reflectType: reflectType,
    print: print,
    toArray: toArray,
    toBoolean: toBoolean,
    toCents: toCents,
    toInt: toInt,
    toPair: toPair,
    toString: toString,
    Val: Val,
    If: If,
    Equal: Equal,
    Print: Print,
    Lookup: Lookup,
    ValA: ValA,
    IfA: IfA,
    EqualA: EqualA,
    PrintA: PrintA,
    LookupA: LookupA,
    toExprA: toExprA,
    encodeHelper: encodeHelper,
    IfCondition: IfCondition,
    EqualMismatch: EqualMismatch,
    evalExpr: evalExpr,
    boolean_: boolean_,
    cents_: cents_,
    int_: int_,
    string_: string_,
    if_: if_,
    equal_: equal_,
    print_: print_,
    lookup_: lookup_,
    eqExprType: eqExprType,
    genericExprType: genericExprType,
    showExprType: showExprType,
    encodeJsonExprType: encodeJsonExprType,
    decodeJsonExprType: decodeJsonExprType,
    arbitraryExprType: arbitraryExprType,
    eqExpr: eqExpr,
    genericExpr: genericExpr,
    showExpr: showExpr,
    encodeJsonExpr: encodeJsonExpr,
    decodeJsonExpr: decodeJsonExpr,
    arbitraryExpr: arbitraryExpr,
    encodeJsonExprA: encodeJsonExprA,
    eqEvalError: eqEvalError
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Semigroupoid/index.js":61,"../Data.Argonaut.Core/index.js":78,"../Data.Argonaut.Decode.Class/index.js":79,"../Data.Argonaut.Decode.Combinators/index.js":80,"../Data.Argonaut.Encode.Class/index.js":82,"../Data.Argonaut.Encode.Combinators/index.js":83,"../Data.Argonaut/index.js":90,"../Data.BigInt/index.js":108,"../Data.Either/index.js":131,"../Data.Eq/index.js":135,"../Data.EuclideanRing/index.js":137,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Generic.Rep.Show/index.js":159,"../Data.Generic.Rep/index.js":160,"../Data.HeytingAlgebra/index.js":162,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.NonEmpty/index.js":221,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Data.String.Common/index.js":260,"../Data.String.Pattern/index.js":266,"../Data.Symbol/index.js":274,"../Ocelot.Data.Currency/index.js":379,"../Prelude/index.js":385,"../Test.QuickCheck.Arbitrary/index.js":407,"../Test.QuickCheck.Gen/index.js":409,"../Test.QuickCheck/index.js":410}],357:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Argonaut = require("../Data.Argonaut/index.js");
var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");
var Data_Argonaut_Decode_Class = require("../Data.Argonaut.Decode.Class/index.js");
var Data_Argonaut_Decode_Combinators = require("../Data.Argonaut.Decode.Combinators/index.js");
var Data_Argonaut_Encode_Class = require("../Data.Argonaut.Encode.Class/index.js");
var Data_Argonaut_Encode_Combinators = require("../Data.Argonaut.Encode.Combinators/index.js");
var Data_BigInt = require("../Data.BigInt/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Generic_Rep_Show = require("../Data.Generic.Rep.Show/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Map = require("../Data.Map/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Set = require("../Data.Set/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Lynx_Data_Expr = require("../Lynx.Data.Expr/index.js");
var Ocelot_Data_Currency = require("../Ocelot.Data.Currency/index.js");
var Prelude = require("../Prelude/index.js");
var Test_QuickCheck = require("../Test.QuickCheck/index.js");
var Test_QuickCheck_Arbitrary = require("../Test.QuickCheck.Arbitrary/index.js");
var Test_QuickCheck_Gen = require("../Test.QuickCheck.Gen/index.js");
var Type_Row = require("../Type.Row/index.js");
var Required = (function () {
    function Required() {

    };
    Required.value = new Required();
    return Required;
})();
var MinLength = (function () {
    function MinLength(value0) {
        this.value0 = value0;
    };
    MinLength.create = function (value0) {
        return new MinLength(value0);
    };
    return MinLength;
})();
var MaxLength = (function () {
    function MaxLength(value0) {
        this.value0 = value0;
    };
    MaxLength.create = function (value0) {
        return new MaxLength(value0);
    };
    return MaxLength;
})();
var UserInput = (function () {
    function UserInput(value0) {
        this.value0 = value0;
    };
    UserInput.create = function (value0) {
        return new UserInput(value0);
    };
    return UserInput;
})();
var Invalid = (function () {
    function Invalid(value0) {
        this.value0 = value0;
    };
    Invalid.create = function (value0) {
        return new Invalid(value0);
    };
    return Invalid;
})();
var UserCleared = (function () {
    function UserCleared() {

    };
    UserCleared.value = new UserCleared();
    return UserCleared;
})();
var NotSet = (function () {
    function NotSet() {

    };
    NotSet.value = new NotSet();
    return NotSet;
})();
var Errors = function (x) {
    return x;
};
var Currency = (function () {
    function Currency(value0) {
        this.value0 = value0;
    };
    Currency.create = function (value0) {
        return new Currency(value0);
    };
    return Currency;
})();
var Dropdown = (function () {
    function Dropdown(value0) {
        this.value0 = value0;
    };
    Dropdown.create = function (value0) {
        return new Dropdown(value0);
    };
    return Dropdown;
})();
var Text = (function () {
    function Text(value0) {
        this.value0 = value0;
    };
    Text.create = function (value0) {
        return new Text(value0);
    };
    return Text;
})();
var Toggle = (function () {
    function Toggle(value0) {
        this.value0 = value0;
    };
    Toggle.create = function (value0) {
        return new Toggle(value0);
    };
    return Toggle;
})();
var userInput = function (v) {
    if (v instanceof UserInput) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
};
var singletonError = function (dictOrd) {
    return function ($298) {
        return Errors(Data_Set.singleton($298));
    };
};
var setValue = function (key) {
    return function (val) {
        return function (page) {
            var setField = function (field) {
                if (key === field.key) {
                    if (field.input instanceof Currency) {
                        return {
                            name: field.name,
                            visibility: field.visibility,
                            description: field.description,
                            key: field.key,
                            input: new Currency({
                                "default": field["input"]["value0"]["default"],
                                value: val,
                                errors: field.input.value0.errors,
                                required: field.input.value0.required,
                                placeholder: field.input.value0.placeholder
                            })
                        };
                    };
                    if (field.input instanceof Dropdown) {
                        return {
                            name: field.name,
                            visibility: field.visibility,
                            description: field.description,
                            key: field.key,
                            input: new Dropdown({
                                "default": field["input"]["value0"]["default"],
                                value: val,
                                errors: field.input.value0.errors,
                                required: field.input.value0.required,
                                options: field.input.value0.options,
                                placeholder: field.input.value0.placeholder
                            })
                        };
                    };
                    if (field.input instanceof Text) {
                        return {
                            name: field.name,
                            visibility: field.visibility,
                            description: field.description,
                            key: field.key,
                            input: new Text({
                                "default": field["input"]["value0"]["default"],
                                value: val,
                                errors: field.input.value0.errors,
                                required: field.input.value0.required,
                                placeholder: field.input.value0.placeholder,
                                maxLength: field.input.value0.maxLength,
                                minLength: field.input.value0.minLength
                            })
                        };
                    };
                    if (field.input instanceof Toggle) {
                        return {
                            name: field.name,
                            visibility: field.visibility,
                            description: field.description,
                            key: field.key,
                            input: new Toggle({
                                "default": field["input"]["value0"]["default"],
                                value: val,
                                errors: field.input.value0.errors
                            })
                        };
                    };
                    throw new Error("Failed pattern match at Lynx.Data.Form (line 370, column 26 - line 378, column 55): " + [ field.input.constructor.name ]);
                };
                if (Data_Boolean.otherwise) {
                    return field;
                };
                throw new Error("Failed pattern match at Lynx.Data.Form (line 368, column 3 - line 368, column 39): " + [ field.constructor.name ]);
            };
            var setSection = function (section) {
                return {
                    name: section.name,
                    contents: Data_Functor.map(Data_Functor.functorArray)(setField)(section.contents)
                };
            };
            return {
                name: page.name,
                contents: Data_Functor.map(Data_Functor.functorArray)(setSection)(page.contents)
            };
        };
    };
};
var semigroupErrors = function (dictOrd) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_Semigroup.append(Data_Set.semigroupSet(dictOrd))(v)(v1);
        };
    });
};
var noErrors = function (dictOrd) {
    return function (v) {
        return Data_Set.isEmpty(v);
    };
};
var monoidErrors = function (dictOrd) {
    return new Data_Monoid.Monoid(function () {
        return semigroupErrors(dictOrd);
    }, Data_Monoid.mempty(Data_Set.monoidSet(dictOrd)));
};
var isEmpty = function (v) {
    if (v instanceof Data_Maybe.Nothing) {
        return true;
    };
    if (v instanceof Data_Maybe.Just) {
        if (v.value0 instanceof Lynx_Data_Expr["Array"] && v.value0.value0.length === 0) {
            return true;
        };
        if (v.value0 instanceof Lynx_Data_Expr["String"] && v.value0.value0 === "") {
            return true;
        };
        if (v.value0 instanceof Lynx_Data_Expr["Array"]) {
            return false;
        };
        if (v.value0 instanceof Lynx_Data_Expr["Boolean"]) {
            return false;
        };
        if (v.value0 instanceof Lynx_Data_Expr.Cents) {
            return false;
        };
        if (v.value0 instanceof Lynx_Data_Expr.Int) {
            return false;
        };
        if (v.value0 instanceof Lynx_Data_Expr.Pair) {
            return false;
        };
        if (v.value0 instanceof Lynx_Data_Expr["String"]) {
            return false;
        };
        throw new Error("Failed pattern match at Lynx.Data.Form (line 346, column 20 - line 354, column 21): " + [ v.value0.constructor.name ]);
    };
    throw new Error("Failed pattern match at Lynx.Data.Form (line 344, column 1 - line 344, column 37): " + [ v.constructor.name ]);
};
var getValue = function (x) {
    return Control_Alt.alt(Data_Maybe.altMaybe)(userInput(x.value))(x["default"]);
};
var keys = function (page) {
    var keysField = function (field) {
        var value = (function () {
            if (field.input instanceof Currency) {
                return getValue(field.input.value0);
            };
            if (field.input instanceof Dropdown) {
                return getValue(field.input.value0);
            };
            if (field.input instanceof Text) {
                return getValue(field.input.value0);
            };
            if (field.input instanceof Toggle) {
                return getValue(field.input.value0);
            };
            throw new Error("Failed pattern match at Lynx.Data.Form (line 332, column 13 - line 336, column 39): " + [ field.input.constructor.name ]);
        })();
        if (value instanceof Data_Maybe.Just) {
            var v = Lynx_Data_Expr.evalExpr(Data_Function["const"](Data_Maybe.Nothing.value))(value.value0);
            if (v instanceof Data_Either.Left) {
                return Data_Monoid.mempty(Data_Map_Internal.monoidMap(Data_Ord.ordString));
            };
            if (v instanceof Data_Either.Right) {
                return Data_Map_Internal.singleton(field.key)(v.value0);
            };
            throw new Error("Failed pattern match at Lynx.Data.Form (line 327, column 18 - line 329, column 48): " + [ v.constructor.name ]);
        };
        if (value instanceof Data_Maybe.Nothing) {
            return Data_Monoid.mempty(Data_Map_Internal.monoidMap(Data_Ord.ordString));
        };
        throw new Error("Failed pattern match at Lynx.Data.Form (line 326, column 21 - line 330, column 22): " + [ value.constructor.name ]);
    };
    var keysSection = function (section) {
        return Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Map_Internal.monoidMap(Data_Ord.ordString))(keysField)(section.contents);
    };
    return Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Map_Internal.monoidMap(Data_Ord.ordString))(keysSection)(page.contents);
};
var genericValidationError = new Data_Generic_Rep.Generic(function (x) {
    if (x instanceof Required) {
        return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
    };
    if (x instanceof MinLength) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
    };
    if (x instanceof MaxLength) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0));
    };
    throw new Error("Failed pattern match at Lynx.Data.Form (line 204, column 8 - line 204, column 68): " + [ x.constructor.name ]);
}, function (x) {
    if (x instanceof Data_Generic_Rep.Inl) {
        return Required.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
        return new MinLength(x.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
        return new MaxLength(x.value0.value0);
    };
    throw new Error("Failed pattern match at Lynx.Data.Form (line 204, column 8 - line 204, column 68): " + [ x.constructor.name ]);
});
var showValidationError = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericValidationError)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Required";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(new Data_Symbol.IsSymbol(function () {
    return "MinLength";
})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(new Data_Symbol.IsSymbol(function () {
    return "MaxLength";
}))))));
var genericInputSource = new Data_Generic_Rep.Generic(function (x) {
    if (x instanceof UserInput) {
        return new Data_Generic_Rep.Inl(x.value0);
    };
    if (x instanceof Invalid) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
    };
    if (x instanceof UserCleared) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
    };
    if (x instanceof NotSet) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)));
    };
    throw new Error("Failed pattern match at Lynx.Data.Form (line 115, column 8 - line 115, column 64): " + [ x.constructor.name ]);
}, function (x) {
    if (x instanceof Data_Generic_Rep.Inl) {
        return new UserInput(x.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
        return new Invalid(x.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
        return UserCleared.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr)) {
        return NotSet.value;
    };
    throw new Error("Failed pattern match at Lynx.Data.Form (line 115, column 8 - line 115, column 64): " + [ x.constructor.name ]);
});
var showInputSource = function (dictShow) {
    return new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericInputSource)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(dictShow))(new Data_Symbol.IsSymbol(function () {
        return "UserInput";
    })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(dictShow))(new Data_Symbol.IsSymbol(function () {
        return "Invalid";
    })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
        return "UserCleared";
    })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
        return "NotSet";
    })))))));
};
var genericInput = new Data_Generic_Rep.Generic(function (x) {
    if (x instanceof Currency) {
        return new Data_Generic_Rep.Inl(x.value0);
    };
    if (x instanceof Dropdown) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
    };
    if (x instanceof Text) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
    };
    if (x instanceof Toggle) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0)));
    };
    throw new Error("Failed pattern match at Lynx.Data.Form (line 82, column 8 - line 82, column 52): " + [ x.constructor.name ]);
}, function (x) {
    if (x instanceof Data_Generic_Rep.Inl) {
        return new Currency(x.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
        return new Dropdown(x.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
        return new Text(x.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr)) {
        return new Toggle(x.value0.value0.value0);
    };
    throw new Error("Failed pattern match at Lynx.Data.Form (line 82, column 8 - line 82, column 52): " + [ x.constructor.name ]);
});
var genericErrors = new Data_Generic_Rep.Generic(function (x) {
    return x;
}, function (x) {
    return x;
});
var showErrors = function (dictShow) {
    return new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericErrors)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Set.showSet(dictShow)))(new Data_Symbol.IsSymbol(function () {
        return "Errors";
    }))));
};
var showInput = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericInput)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "default";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "errors";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "placeholder";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "required";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "value";
}))(Data_Show.showRecordFieldsNil)(showInputSource(Lynx_Data_Expr.showExpr)))(Lynx_Data_Expr.showExpr))(Lynx_Data_Expr.showExpr))(showErrors(showValidationError)))(Data_Maybe.showMaybe(Lynx_Data_Expr.showExpr)))))(new Data_Symbol.IsSymbol(function () {
    return "Currency";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "default";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "errors";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "options";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "placeholder";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "required";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "value";
}))(Data_Show.showRecordFieldsNil)(showInputSource(Lynx_Data_Expr.showExpr)))(Lynx_Data_Expr.showExpr))(Lynx_Data_Expr.showExpr))(Lynx_Data_Expr.showExpr))(showErrors(showValidationError)))(Data_Maybe.showMaybe(Lynx_Data_Expr.showExpr)))))(new Data_Symbol.IsSymbol(function () {
    return "Dropdown";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "default";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "errors";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "maxLength";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "minLength";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "placeholder";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "required";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "value";
}))(Data_Show.showRecordFieldsNil)(showInputSource(Lynx_Data_Expr.showExpr)))(Lynx_Data_Expr.showExpr))(Lynx_Data_Expr.showExpr))(Data_Maybe.showMaybe(Lynx_Data_Expr.showExpr)))(Data_Maybe.showMaybe(Lynx_Data_Expr.showExpr)))(showErrors(showValidationError)))(Data_Maybe.showMaybe(Lynx_Data_Expr.showExpr)))))(new Data_Symbol.IsSymbol(function () {
    return "Text";
})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "default";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "errors";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "value";
}))(Data_Show.showRecordFieldsNil)(showInputSource(Lynx_Data_Expr.showExpr)))(showErrors(showValidationError)))(Data_Maybe.showMaybe(Lynx_Data_Expr.showExpr)))))(new Data_Symbol.IsSymbol(function () {
    return "Toggle";
})))))));
var functorInputSource = new Data_Functor.Functor(function (f) {
    return function (m) {
        if (m instanceof UserInput) {
            return new UserInput(f(m.value0));
        };
        if (m instanceof Invalid) {
            return new Invalid(f(m.value0));
        };
        if (m instanceof UserCleared) {
            return UserCleared.value;
        };
        if (m instanceof NotSet) {
            return NotSet.value;
        };
        throw new Error("Failed pattern match at Lynx.Data.Form (line 113, column 8 - line 113, column 58): " + [ m.constructor.name ]);
    };
});
var foldableInputSource = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof UserInput) {
                return f(v.value0);
            };
            if (v instanceof Invalid) {
                return f(v.value0);
            };
            if (v instanceof UserCleared) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof NotSet) {
                return Data_Monoid.mempty(dictMonoid);
            };
            throw new Error("Failed pattern match at Lynx.Data.Form (line 118, column 15 - line 122, column 21): " + [ v.constructor.name ]);
        };
    };
}, function (f) {
    return Data_Foldable.foldlDefault(foldableInputSource)(f);
}, function (f) {
    return Data_Foldable.foldrDefault(foldableInputSource)(f);
});
var traversableInputSource = new Data_Traversable.Traversable(function () {
    return foldableInputSource;
}, function () {
    return functorInputSource;
}, function (dictApplicative) {
    return Data_Traversable.sequenceDefault(traversableInputSource)(dictApplicative);
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            if (v instanceof UserInput) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(UserInput.create)(f(v.value0));
            };
            if (v instanceof Invalid) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Invalid.create)(f(v.value0));
            };
            if (v instanceof UserCleared) {
                return Control_Applicative.pure(dictApplicative)(UserCleared.value);
            };
            if (v instanceof NotSet) {
                return Control_Applicative.pure(dictApplicative)(NotSet.value);
            };
            throw new Error("Failed pattern match at Lynx.Data.Form (line 128, column 16 - line 132, column 26): " + [ v.constructor.name ]);
        };
    };
});
var errorsToArray = function (dictOrd) {
    return function (v) {
        return Data_Set.toUnfoldable(Data_Unfoldable.unfoldableArray)(v);
    };
};
var eqValidationError = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Required && y instanceof Required) {
            return true;
        };
        if (x instanceof MinLength && y instanceof MinLength) {
            return x.value0 === y.value0;
        };
        if (x instanceof MaxLength && y instanceof MaxLength) {
            return x.value0 === y.value0;
        };
        return false;
    };
});
var ordValidationError = new Data_Ord.Ord(function () {
    return eqValidationError;
}, function (x) {
    return function (y) {
        if (x instanceof Required && y instanceof Required) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Required) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Required) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MinLength && y instanceof MinLength) {
            return Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
        };
        if (x instanceof MinLength) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MinLength) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MaxLength && y instanceof MaxLength) {
            return Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
        };
        throw new Error("Failed pattern match at Lynx.Data.Form (line 202, column 8 - line 202, column 58): " + [ x.constructor.name, y.constructor.name ]);
    };
});
var firstName = {
    name: Lynx_Data_Expr.string_("First Name"),
    visibility: Lynx_Data_Expr.boolean_(true),
    description: Lynx_Data_Expr.string_("Enter your first name"),
    key: "firstName",
    input: new Text({
        "default": new Data_Maybe.Just(Lynx_Data_Expr.string_("John")),
        maxLength: Data_Maybe.Nothing.value,
        minLength: Data_Maybe.Nothing.value,
        placeholder: Lynx_Data_Expr.string_(""),
        required: Lynx_Data_Expr.boolean_(true),
        value: NotSet.value,
        errors: Data_Monoid.mempty(monoidErrors(ordValidationError))
    })
};
var food = {
    name: Lynx_Data_Expr.string_("Favorite Food"),
    visibility: Lynx_Data_Expr.boolean_(true),
    description: Lynx_Data_Expr.string_("What is your favorite food?"),
    key: "food",
    input: new Dropdown({
        "default": Data_Maybe.Nothing.value,
        options: new Lynx_Data_Expr.If(new Lynx_Data_Expr.Lookup("active", Lynx_Data_Expr.Val.create(new Lynx_Data_Expr["Boolean"](false))), Lynx_Data_Expr.Val.create(new Lynx_Data_Expr["Array"]([ new Lynx_Data_Expr.Pair({
            name: new Lynx_Data_Expr["String"]("Strawberry"),
            value: new Lynx_Data_Expr["String"]("Strawberry")
        }), new Lynx_Data_Expr.Pair({
            name: new Lynx_Data_Expr["String"]("Blueberry"),
            value: new Lynx_Data_Expr["String"]("Blueberry")
        }) ])), Lynx_Data_Expr.Val.create(new Lynx_Data_Expr["Array"]([ new Lynx_Data_Expr.Pair({
            name: new Lynx_Data_Expr["String"]("Apple"),
            value: new Lynx_Data_Expr["String"]("Apple")
        }), new Lynx_Data_Expr.Pair({
            name: new Lynx_Data_Expr["String"]("Banana"),
            value: new Lynx_Data_Expr["String"]("Banana")
        }), new Lynx_Data_Expr.Pair({
            name: new Lynx_Data_Expr["String"]("Cherry"),
            value: new Lynx_Data_Expr["String"]("Cherry")
        }) ]))),
        placeholder: Lynx_Data_Expr.string_(""),
        required: Lynx_Data_Expr.boolean_(true),
        value: NotSet.value,
        errors: Data_Monoid.mempty(monoidErrors(ordValidationError))
    })
};
var lastName = {
    name: Lynx_Data_Expr.string_("Last Name"),
    visibility: Lynx_Data_Expr.boolean_(true),
    description: Lynx_Data_Expr.string_("Enter your last name"),
    key: "lastName",
    input: new Text({
        "default": new Data_Maybe.Just(Lynx_Data_Expr.string_("Smith")),
        maxLength: Data_Maybe.Nothing.value,
        minLength: Data_Maybe.Nothing.value,
        placeholder: Lynx_Data_Expr.string_(""),
        required: Lynx_Data_Expr.boolean_(true),
        value: NotSet.value,
        errors: Data_Monoid.mempty(monoidErrors(ordValidationError))
    })
};
var money = {
    name: Lynx_Data_Expr.string_("Money"),
    visibility: Lynx_Data_Expr.boolean_(true),
    description: Lynx_Data_Expr.string_(""),
    key: "money",
    input: new Currency({
        "default": Data_Maybe.Nothing.value,
        placeholder: Lynx_Data_Expr.cents_(Data_Newtype.wrap(Ocelot_Data_Currency.newtypeCents)(Data_Semiring.zero(Data_BigInt.semiringBigInt))),
        required: Lynx_Data_Expr.boolean_(true),
        value: NotSet.value,
        errors: Data_Monoid.mempty(monoidErrors(ordValidationError))
    })
};
var eqInputSource = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            if (x instanceof UserInput && y instanceof UserInput) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0);
            };
            if (x instanceof Invalid && y instanceof Invalid) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0);
            };
            if (x instanceof UserCleared && y instanceof UserCleared) {
                return true;
            };
            if (x instanceof NotSet && y instanceof NotSet) {
                return true;
            };
            return false;
        };
    });
};
var eqErrors = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            return Data_Eq.eq(Data_Set.eqSet(dictEq))(x)(y);
        };
    });
};
var eqInput = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            if (x instanceof Currency && y instanceof Currency) {
                return Data_Eq.eq(Data_Maybe.eqMaybe(dictEq))(x["value0"]["default"])(y["value0"]["default"]) && Data_Eq.eq(eqErrors(eqValidationError))(x.value0.errors)(y.value0.errors) && Data_Eq.eq(dictEq)(x.value0.placeholder)(y.value0.placeholder) && Data_Eq.eq(dictEq)(x.value0.required)(y.value0.required) && Data_Eq.eq(eqInputSource(dictEq))(x.value0.value)(y.value0.value);
            };
            if (x instanceof Dropdown && y instanceof Dropdown) {
                return Data_Eq.eq(Data_Maybe.eqMaybe(dictEq))(x["value0"]["default"])(y["value0"]["default"]) && Data_Eq.eq(eqErrors(eqValidationError))(x.value0.errors)(y.value0.errors) && Data_Eq.eq(dictEq)(x.value0.options)(y.value0.options) && Data_Eq.eq(dictEq)(x.value0.placeholder)(y.value0.placeholder) && Data_Eq.eq(dictEq)(x.value0.required)(y.value0.required) && Data_Eq.eq(eqInputSource(dictEq))(x.value0.value)(y.value0.value);
            };
            if (x instanceof Text && y instanceof Text) {
                return Data_Eq.eq(Data_Maybe.eqMaybe(dictEq))(x["value0"]["default"])(y["value0"]["default"]) && Data_Eq.eq(eqErrors(eqValidationError))(x.value0.errors)(y.value0.errors) && Data_Eq.eq(Data_Maybe.eqMaybe(dictEq))(x.value0.maxLength)(y.value0.maxLength) && Data_Eq.eq(Data_Maybe.eqMaybe(dictEq))(x.value0.minLength)(y.value0.minLength) && Data_Eq.eq(dictEq)(x.value0.placeholder)(y.value0.placeholder) && Data_Eq.eq(dictEq)(x.value0.required)(y.value0.required) && Data_Eq.eq(eqInputSource(dictEq))(x.value0.value)(y.value0.value);
            };
            if (x instanceof Toggle && y instanceof Toggle) {
                return Data_Eq.eq(Data_Maybe.eqMaybe(dictEq))(x["value0"]["default"])(y["value0"]["default"]) && Data_Eq.eq(eqErrors(eqValidationError))(x.value0.errors)(y.value0.errors) && Data_Eq.eq(eqInputSource(dictEq))(x.value0.value)(y.value0.value);
            };
            return false;
        };
    });
};
var encodeValidationError = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
    if (v instanceof Required) {
        return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("type")("Required"))(Data_Argonaut_Core.jsonEmptyObject);
    };
    if (v instanceof MinLength) {
        return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("type")("MinLength"))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonInt)("param")(v.value0))(Data_Argonaut_Core.jsonEmptyObject));
    };
    if (v instanceof MaxLength) {
        return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("type")("MaxLength"))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonInt)("param")(v.value0))(Data_Argonaut_Core.jsonEmptyObject));
    };
    throw new Error("Failed pattern match at Lynx.Data.Form (line 210, column 16 - line 213, column 76): " + [ v.constructor.name ]);
});
var encodeInputSource = function (dictEncodeJson) {
    return new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
        if (v instanceof UserInput) {
            return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("type")("UserInput"))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(dictEncodeJson)("value")(v.value0))(Data_Argonaut_Core.jsonEmptyObject));
        };
        if (v instanceof Invalid) {
            return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("type")("Invalid"))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(dictEncodeJson)("value")(v.value0))(Data_Argonaut_Core.jsonEmptyObject));
        };
        if (v instanceof UserCleared) {
            return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("type")("UserCleared"))(Data_Argonaut_Core.jsonEmptyObject);
        };
        if (v instanceof NotSet) {
            return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("type")("NotSet"))(Data_Argonaut_Core.jsonEmptyObject);
        };
        throw new Error("Failed pattern match at Lynx.Data.Form (line 138, column 16 - line 142, column 52): " + [ v.constructor.name ]);
    });
};
var encodeErrors = function (dictEncodeJson) {
    return function (dictOrd) {
        return new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
            return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeSet(dictOrd)(dictEncodeJson))(v);
        });
    };
};
var encodeInput = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
    if (v instanceof Currency) {
        return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("type")("Currency"))(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonMaybe(Lynx_Data_Expr.encodeJsonExpr))(Data_Argonaut_Encode_Class.gEncodeJsonCons(encodeErrors(encodeValidationError)(ordValidationError))(Data_Argonaut_Encode_Class.gEncodeJsonCons(Lynx_Data_Expr.encodeJsonExpr)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Lynx_Data_Expr.encodeJsonExpr)(Data_Argonaut_Encode_Class.gEncodeJsonCons(encodeInputSource(Lynx_Data_Expr.encodeJsonExpr))(Data_Argonaut_Encode_Class.gEncodeJsonNil)(new Data_Symbol.IsSymbol(function () {
            return "value";
        }))())(new Data_Symbol.IsSymbol(function () {
            return "required";
        }))())(new Data_Symbol.IsSymbol(function () {
            return "placeholder";
        }))())(new Data_Symbol.IsSymbol(function () {
            return "errors";
        }))())(new Data_Symbol.IsSymbol(function () {
            return "default";
        }))())())(v.value0));
    };
    if (v instanceof Dropdown) {
        return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("type")("Dropdown"))(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonMaybe(Lynx_Data_Expr.encodeJsonExpr))(Data_Argonaut_Encode_Class.gEncodeJsonCons(encodeErrors(encodeValidationError)(ordValidationError))(Data_Argonaut_Encode_Class.gEncodeJsonCons(Lynx_Data_Expr.encodeJsonExpr)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Lynx_Data_Expr.encodeJsonExpr)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Lynx_Data_Expr.encodeJsonExpr)(Data_Argonaut_Encode_Class.gEncodeJsonCons(encodeInputSource(Lynx_Data_Expr.encodeJsonExpr))(Data_Argonaut_Encode_Class.gEncodeJsonNil)(new Data_Symbol.IsSymbol(function () {
            return "value";
        }))())(new Data_Symbol.IsSymbol(function () {
            return "required";
        }))())(new Data_Symbol.IsSymbol(function () {
            return "placeholder";
        }))())(new Data_Symbol.IsSymbol(function () {
            return "options";
        }))())(new Data_Symbol.IsSymbol(function () {
            return "errors";
        }))())(new Data_Symbol.IsSymbol(function () {
            return "default";
        }))())())(v.value0));
    };
    if (v instanceof Text) {
        return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("type")("Text"))(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonMaybe(Lynx_Data_Expr.encodeJsonExpr))(Data_Argonaut_Encode_Class.gEncodeJsonCons(encodeErrors(encodeValidationError)(ordValidationError))(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonMaybe(Lynx_Data_Expr.encodeJsonExpr))(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonMaybe(Lynx_Data_Expr.encodeJsonExpr))(Data_Argonaut_Encode_Class.gEncodeJsonCons(Lynx_Data_Expr.encodeJsonExpr)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Lynx_Data_Expr.encodeJsonExpr)(Data_Argonaut_Encode_Class.gEncodeJsonCons(encodeInputSource(Lynx_Data_Expr.encodeJsonExpr))(Data_Argonaut_Encode_Class.gEncodeJsonNil)(new Data_Symbol.IsSymbol(function () {
            return "value";
        }))())(new Data_Symbol.IsSymbol(function () {
            return "required";
        }))())(new Data_Symbol.IsSymbol(function () {
            return "placeholder";
        }))())(new Data_Symbol.IsSymbol(function () {
            return "minLength";
        }))())(new Data_Symbol.IsSymbol(function () {
            return "maxLength";
        }))())(new Data_Symbol.IsSymbol(function () {
            return "errors";
        }))())(new Data_Symbol.IsSymbol(function () {
            return "default";
        }))())())(v.value0));
    };
    if (v instanceof Toggle) {
        return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("type")("Toggle"))(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonMaybe(Lynx_Data_Expr.encodeJsonExpr))(Data_Argonaut_Encode_Class.gEncodeJsonCons(encodeErrors(encodeValidationError)(ordValidationError))(Data_Argonaut_Encode_Class.gEncodeJsonCons(encodeInputSource(Lynx_Data_Expr.encodeJsonExpr))(Data_Argonaut_Encode_Class.gEncodeJsonNil)(new Data_Symbol.IsSymbol(function () {
            return "value";
        }))())(new Data_Symbol.IsSymbol(function () {
            return "errors";
        }))())(new Data_Symbol.IsSymbol(function () {
            return "default";
        }))())())(v.value0));
    };
    throw new Error("Failed pattern match at Lynx.Data.Form (line 86, column 16 - line 90, column 51): " + [ v.constructor.name ]);
});
var displayError = function (x) {
    return Data_Eq.notEq(eqInputSource(Lynx_Data_Expr.eqExprType))(x.value)(NotSet.value);
};
var $$eval = function (get) {
    return function (page) {
        var validateRequired = function (input) {
            var $255 = Data_Eq.eq(Lynx_Data_Expr.eqExprType)(input.required)(new Lynx_Data_Expr["Boolean"](true)) && isEmpty(getValue(input));
            if ($255) {
                return singletonError(ordValidationError)(Required.value);
            };
            return Data_Monoid.mempty(monoidErrors(ordValidationError));
        };
        var validate = function (v) {
            if (v instanceof Currency) {
                var $257 = displayError(v.value0);
                if ($257) {
                    return Currency.create({
                        "default": v["value0"]["default"],
                        value: v.value0.value,
                        errors: Data_Semigroup.append(semigroupErrors(ordValidationError))(v.value0.errors)(validateRequired(v.value0)),
                        required: v.value0.required,
                        placeholder: v.value0.placeholder
                    });
                };
                return new Currency(v.value0);
            };
            if (v instanceof Dropdown) {
                var $259 = displayError(v.value0);
                if ($259) {
                    return Dropdown.create({
                        "default": v["value0"]["default"],
                        value: v.value0.value,
                        errors: Data_Semigroup.append(semigroupErrors(ordValidationError))(v.value0.errors)(validateRequired(v.value0)),
                        required: v.value0.required,
                        options: v.value0.options,
                        placeholder: v.value0.placeholder
                    });
                };
                return new Dropdown(v.value0);
            };
            if (v instanceof Text) {
                var $261 = displayError(v.value0);
                if ($261) {
                    return Text.create({
                        "default": v["value0"]["default"],
                        value: v.value0.value,
                        errors: Data_Semigroup.append(semigroupErrors(ordValidationError))(v.value0.errors)(validateRequired(v.value0)),
                        required: v.value0.required,
                        placeholder: v.value0.placeholder,
                        maxLength: v.value0.maxLength,
                        minLength: v.value0.minLength
                    });
                };
                return new Text(v.value0);
            };
            if (v instanceof Toggle) {
                return new Toggle(v.value0);
            };
            throw new Error("Failed pattern match at Lynx.Data.Form (line 295, column 14 - line 308, column 33): " + [ v.constructor.name ]);
        };
        var evalInput = function (v) {
            if (v instanceof Currency) {
                return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Data_Either.applicativeEither)(Lynx_Data_Expr.evalExpr(get))(v["value0"]["default"]))(function (v1) {
                    return Control_Bind.bind(Data_Either.bindEither)(Lynx_Data_Expr.evalExpr(get)(v.value0.placeholder))(function (v2) {
                        return Control_Bind.bind(Data_Either.bindEither)(Lynx_Data_Expr.evalExpr(get)(v.value0.required))(function (v3) {
                            return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(traversableInputSource)(Data_Either.applicativeEither)(Lynx_Data_Expr.evalExpr(get))(v.value0.value))(function (v4) {
                                return Control_Applicative.pure(Data_Either.applicativeEither)(validate(new Currency({
                                    "default": v1,
                                    placeholder: v2,
                                    required: v3,
                                    value: v4,
                                    errors: Data_Monoid.mempty(monoidErrors(ordValidationError))
                                })));
                            });
                        });
                    });
                });
            };
            if (v instanceof Dropdown) {
                return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Data_Either.applicativeEither)(Lynx_Data_Expr.evalExpr(get))(v["value0"]["default"]))(function (v1) {
                    return Control_Bind.bind(Data_Either.bindEither)(Lynx_Data_Expr.evalExpr(get)(v.value0.options))(function (v2) {
                        return Control_Bind.bind(Data_Either.bindEither)(Lynx_Data_Expr.evalExpr(get)(v.value0.placeholder))(function (v3) {
                            return Control_Bind.bind(Data_Either.bindEither)(Lynx_Data_Expr.evalExpr(get)(v.value0.required))(function (v4) {
                                return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(traversableInputSource)(Data_Either.applicativeEither)(Lynx_Data_Expr.evalExpr(get))(v.value0.value))(function (v5) {
                                    return Control_Applicative.pure(Data_Either.applicativeEither)(validate(new Dropdown({
                                        "default": v1,
                                        options: v2,
                                        placeholder: v3,
                                        required: v4,
                                        value: v5,
                                        errors: Data_Monoid.mempty(monoidErrors(ordValidationError))
                                    })));
                                });
                            });
                        });
                    });
                });
            };
            if (v instanceof Text) {
                return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Data_Either.applicativeEither)(Lynx_Data_Expr.evalExpr(get))(v["value0"]["default"]))(function (v1) {
                    return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Data_Either.applicativeEither)(Lynx_Data_Expr.evalExpr(get))(v.value0.maxLength))(function (v2) {
                        return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Data_Either.applicativeEither)(Lynx_Data_Expr.evalExpr(get))(v.value0.minLength))(function (v3) {
                            return Control_Bind.bind(Data_Either.bindEither)(Lynx_Data_Expr.evalExpr(get)(v.value0.placeholder))(function (v4) {
                                return Control_Bind.bind(Data_Either.bindEither)(Lynx_Data_Expr.evalExpr(get)(v.value0.required))(function (v5) {
                                    return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(traversableInputSource)(Data_Either.applicativeEither)(Lynx_Data_Expr.evalExpr(get))(v.value0.value))(function (v6) {
                                        return Control_Applicative.pure(Data_Either.applicativeEither)(validate(new Text({
                                            "default": v1,
                                            maxLength: v2,
                                            minLength: v3,
                                            placeholder: v4,
                                            required: v5,
                                            value: v6,
                                            errors: Data_Monoid.mempty(monoidErrors(ordValidationError))
                                        })));
                                    });
                                });
                            });
                        });
                    });
                });
            };
            if (v instanceof Toggle) {
                return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Data_Either.applicativeEither)(Lynx_Data_Expr.evalExpr(get))(v["value0"]["default"]))(function (v1) {
                    return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(traversableInputSource)(Data_Either.applicativeEither)(Lynx_Data_Expr.evalExpr(get))(v.value0.value))(function (v2) {
                        return Control_Applicative.pure(Data_Either.applicativeEither)(validate(new Toggle({
                            "default": v1,
                            value: v2,
                            errors: Data_Monoid.mempty(monoidErrors(ordValidationError))
                        })));
                    });
                });
            };
            throw new Error("Failed pattern match at Lynx.Data.Form (line 246, column 15 - line 292, column 66): " + [ v.constructor.name ]);
        };
        var evalField = function (field) {
            return Control_Bind.bind(Data_Either.bindEither)(Lynx_Data_Expr.evalExpr(get)(field.description))(function (v) {
                return Control_Bind.bind(Data_Either.bindEither)(evalInput(field.input))(function (v1) {
                    return Control_Bind.bind(Data_Either.bindEither)(Lynx_Data_Expr.evalExpr(get)(field.name))(function (v2) {
                        return Control_Bind.bind(Data_Either.bindEither)(Lynx_Data_Expr.evalExpr(get)(field.visibility))(function (v3) {
                            return Control_Applicative.pure(Data_Either.applicativeEither)({
                                description: v,
                                key: field.key,
                                input: v1,
                                name: v2,
                                visibility: v3
                            });
                        });
                    });
                });
            });
        };
        var evalSection = function (section) {
            return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(evalField)(section.contents))(function (v) {
                return Control_Applicative.pure(Data_Either.applicativeEither)({
                    contents: v,
                    name: section.name
                });
            });
        };
        return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(evalSection)(page.contents))(function (v) {
            return Control_Applicative.pure(Data_Either.applicativeEither)({
                contents: v,
                name: page.name
            });
        });
    };
};
var decodeValidationError = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
    return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
        return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("type"))(function (v1) {
            if (v1 === "Required") {
                return Control_Applicative.pure(Data_Either.applicativeEither)(Required.value);
            };
            if (v1 === "MinLength") {
                return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("param"))(function ($299) {
                    return Control_Applicative.pure(Data_Either.applicativeEither)(MinLength.create($299));
                });
            };
            if (v1 === "MaxLength") {
                return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("param"))(function ($300) {
                    return Control_Applicative.pure(Data_Either.applicativeEither)(MaxLength.create($300));
                });
            };
            return Data_Either.Left.create(v1 + " is not a supported ValidationError");
        });
    });
});
var decodeInputSource = function (dictDecodeJson) {
    return new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
        return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
            return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("type"))(function (v1) {
                if (v1 === "UserInput") {
                    return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(dictDecodeJson)(v)("value"))(function ($301) {
                        return Control_Applicative.pure(Data_Either.applicativeEither)(UserInput.create($301));
                    });
                };
                if (v1 === "Invalid") {
                    return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(dictDecodeJson)(v)("value"))(function ($302) {
                        return Control_Applicative.pure(Data_Either.applicativeEither)(Invalid.create($302));
                    });
                };
                if (v1 === "UserCleared") {
                    return Control_Applicative.pure(Data_Either.applicativeEither)(UserCleared.value);
                };
                if (v1 === "NotSet") {
                    return Control_Applicative.pure(Data_Either.applicativeEither)(NotSet.value);
                };
                return Data_Either.Left.create(v1 + " is not a valid InputSource");
            });
        });
    });
};
var decodeErrors = function (dictDecodeJson) {
    return function (dictOrd) {
        return new Data_Argonaut_Decode_Class.DecodeJson(function ($303) {
            return Data_Functor.map(Data_Either.functorEither)(Errors)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeSet(dictOrd)(dictDecodeJson))($303));
        });
    };
};
var decodeInput = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
    return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
        return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("type"))(function (v1) {
            if (v1 === "Currency") {
                return Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(function ($304) {
                    return Control_Applicative.pure(Data_Either.applicativeEither)(Currency.create($304));
                })(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeRecord(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeJsonMaybe(Lynx_Data_Expr.decodeJsonExpr))(Data_Argonaut_Decode_Class.gDecodeJsonCons(decodeErrors(decodeValidationError)(ordValidationError))(Data_Argonaut_Decode_Class.gDecodeJsonCons(Lynx_Data_Expr.decodeJsonExpr)(Data_Argonaut_Decode_Class.gDecodeJsonCons(Lynx_Data_Expr.decodeJsonExpr)(Data_Argonaut_Decode_Class.gDecodeJsonCons(decodeInputSource(Lynx_Data_Expr.decodeJsonExpr))(Data_Argonaut_Decode_Class.gDecodeJsonNil)(new Data_Symbol.IsSymbol(function () {
                    return "value";
                }))()())(new Data_Symbol.IsSymbol(function () {
                    return "required";
                }))()())(new Data_Symbol.IsSymbol(function () {
                    return "placeholder";
                }))()())(new Data_Symbol.IsSymbol(function () {
                    return "errors";
                }))()())(new Data_Symbol.IsSymbol(function () {
                    return "default";
                }))()())()))(json);
            };
            if (v1 === "Dropdown") {
                return Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(function ($305) {
                    return Control_Applicative.pure(Data_Either.applicativeEither)(Dropdown.create($305));
                })(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeRecord(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeJsonMaybe(Lynx_Data_Expr.decodeJsonExpr))(Data_Argonaut_Decode_Class.gDecodeJsonCons(decodeErrors(decodeValidationError)(ordValidationError))(Data_Argonaut_Decode_Class.gDecodeJsonCons(Lynx_Data_Expr.decodeJsonExpr)(Data_Argonaut_Decode_Class.gDecodeJsonCons(Lynx_Data_Expr.decodeJsonExpr)(Data_Argonaut_Decode_Class.gDecodeJsonCons(Lynx_Data_Expr.decodeJsonExpr)(Data_Argonaut_Decode_Class.gDecodeJsonCons(decodeInputSource(Lynx_Data_Expr.decodeJsonExpr))(Data_Argonaut_Decode_Class.gDecodeJsonNil)(new Data_Symbol.IsSymbol(function () {
                    return "value";
                }))()())(new Data_Symbol.IsSymbol(function () {
                    return "required";
                }))()())(new Data_Symbol.IsSymbol(function () {
                    return "placeholder";
                }))()())(new Data_Symbol.IsSymbol(function () {
                    return "options";
                }))()())(new Data_Symbol.IsSymbol(function () {
                    return "errors";
                }))()())(new Data_Symbol.IsSymbol(function () {
                    return "default";
                }))()())()))(json);
            };
            if (v1 === "Text") {
                return Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(function ($306) {
                    return Control_Applicative.pure(Data_Either.applicativeEither)(Text.create($306));
                })(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeRecord(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeJsonMaybe(Lynx_Data_Expr.decodeJsonExpr))(Data_Argonaut_Decode_Class.gDecodeJsonCons(decodeErrors(decodeValidationError)(ordValidationError))(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeJsonMaybe(Lynx_Data_Expr.decodeJsonExpr))(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeJsonMaybe(Lynx_Data_Expr.decodeJsonExpr))(Data_Argonaut_Decode_Class.gDecodeJsonCons(Lynx_Data_Expr.decodeJsonExpr)(Data_Argonaut_Decode_Class.gDecodeJsonCons(Lynx_Data_Expr.decodeJsonExpr)(Data_Argonaut_Decode_Class.gDecodeJsonCons(decodeInputSource(Lynx_Data_Expr.decodeJsonExpr))(Data_Argonaut_Decode_Class.gDecodeJsonNil)(new Data_Symbol.IsSymbol(function () {
                    return "value";
                }))()())(new Data_Symbol.IsSymbol(function () {
                    return "required";
                }))()())(new Data_Symbol.IsSymbol(function () {
                    return "placeholder";
                }))()())(new Data_Symbol.IsSymbol(function () {
                    return "minLength";
                }))()())(new Data_Symbol.IsSymbol(function () {
                    return "maxLength";
                }))()())(new Data_Symbol.IsSymbol(function () {
                    return "errors";
                }))()())(new Data_Symbol.IsSymbol(function () {
                    return "default";
                }))()())()))(json);
            };
            if (v1 === "Toggle") {
                return Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(function ($307) {
                    return Control_Applicative.pure(Data_Either.applicativeEither)(Toggle.create($307));
                })(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeRecord(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeJsonMaybe(Lynx_Data_Expr.decodeJsonExpr))(Data_Argonaut_Decode_Class.gDecodeJsonCons(decodeErrors(decodeValidationError)(ordValidationError))(Data_Argonaut_Decode_Class.gDecodeJsonCons(decodeInputSource(Lynx_Data_Expr.decodeJsonExpr))(Data_Argonaut_Decode_Class.gDecodeJsonNil)(new Data_Symbol.IsSymbol(function () {
                    return "value";
                }))()())(new Data_Symbol.IsSymbol(function () {
                    return "errors";
                }))()())(new Data_Symbol.IsSymbol(function () {
                    return "default";
                }))()())()))(json);
            };
            return Data_Either.Left.create("Unsupported Input type: " + v1);
        });
    });
});
var arbitraryValidationError = new Test_QuickCheck_Arbitrary.Arbitrary(Test_QuickCheck_Arbitrary.genericArbitrary(genericValidationError)(Test_QuickCheck_Arbitrary.arbitrarySum(Test_QuickCheck_Arbitrary.arbitraryConstructor(Test_QuickCheck_Arbitrary.arbitraryNoArguments))(Test_QuickCheck_Arbitrary.arbGenSumSum(Test_QuickCheck_Arbitrary.arbitraryConstructor(Test_QuickCheck_Arbitrary.arbitraryArgument(Test_QuickCheck_Arbitrary.arbInt)))(Test_QuickCheck_Arbitrary.arbGenSumConstructor(Test_QuickCheck_Arbitrary.arbitraryArgument(Test_QuickCheck_Arbitrary.arbInt))))));
var arbitraryInputSource = function (dictArbitrary) {
    return new Test_QuickCheck_Arbitrary.Arbitrary(Test_QuickCheck_Arbitrary.genericArbitrary(genericInputSource)(Test_QuickCheck_Arbitrary.arbitrarySum(Test_QuickCheck_Arbitrary.arbitraryConstructor(Test_QuickCheck_Arbitrary.arbitraryArgument(dictArbitrary)))(Test_QuickCheck_Arbitrary.arbGenSumSum(Test_QuickCheck_Arbitrary.arbitraryConstructor(Test_QuickCheck_Arbitrary.arbitraryArgument(dictArbitrary)))(Test_QuickCheck_Arbitrary.arbGenSumSum(Test_QuickCheck_Arbitrary.arbitraryConstructor(Test_QuickCheck_Arbitrary.arbitraryNoArguments))(Test_QuickCheck_Arbitrary.arbGenSumConstructor(Test_QuickCheck_Arbitrary.arbitraryNoArguments))))));
};
var arbitraryErrors = function (dictArbitrary) {
    return function (dictOrd) {
        return new Test_QuickCheck_Arbitrary.Arbitrary(Control_Applicative.pure(Test_QuickCheck_Gen.applicativeGen)(Data_Monoid.mempty(monoidErrors(dictOrd))));
    };
};
var arbitraryInput = new Test_QuickCheck_Arbitrary.Arbitrary(Test_QuickCheck_Arbitrary.genericArbitrary(genericInput)(Test_QuickCheck_Arbitrary.arbitrarySum(Test_QuickCheck_Arbitrary.arbitraryConstructor(Test_QuickCheck_Arbitrary.arbitraryArgument(Test_QuickCheck_Arbitrary.arbitraryRecordInstance()(Test_QuickCheck_Arbitrary.arbitraryRowListCons(Test_QuickCheck_Arbitrary.arbMaybe(Lynx_Data_Expr.arbitraryExpr))(Test_QuickCheck_Arbitrary.arbitraryRowListCons(arbitraryErrors(arbitraryValidationError)(ordValidationError))(Test_QuickCheck_Arbitrary.arbitraryRowListCons(Lynx_Data_Expr.arbitraryExpr)(Test_QuickCheck_Arbitrary.arbitraryRowListCons(Lynx_Data_Expr.arbitraryExpr)(Test_QuickCheck_Arbitrary.arbitraryRowListCons(arbitraryInputSource(Lynx_Data_Expr.arbitraryExpr))(Test_QuickCheck_Arbitrary.arbitraryRowListNil)()()()(new Data_Symbol.IsSymbol(function () {
    return "value";
})))()()()(new Data_Symbol.IsSymbol(function () {
    return "required";
})))()()()(new Data_Symbol.IsSymbol(function () {
    return "placeholder";
})))()()()(new Data_Symbol.IsSymbol(function () {
    return "errors";
})))()()()(new Data_Symbol.IsSymbol(function () {
    return "default";
}))))))(Test_QuickCheck_Arbitrary.arbGenSumSum(Test_QuickCheck_Arbitrary.arbitraryConstructor(Test_QuickCheck_Arbitrary.arbitraryArgument(Test_QuickCheck_Arbitrary.arbitraryRecordInstance()(Test_QuickCheck_Arbitrary.arbitraryRowListCons(Test_QuickCheck_Arbitrary.arbMaybe(Lynx_Data_Expr.arbitraryExpr))(Test_QuickCheck_Arbitrary.arbitraryRowListCons(arbitraryErrors(arbitraryValidationError)(ordValidationError))(Test_QuickCheck_Arbitrary.arbitraryRowListCons(Lynx_Data_Expr.arbitraryExpr)(Test_QuickCheck_Arbitrary.arbitraryRowListCons(Lynx_Data_Expr.arbitraryExpr)(Test_QuickCheck_Arbitrary.arbitraryRowListCons(Lynx_Data_Expr.arbitraryExpr)(Test_QuickCheck_Arbitrary.arbitraryRowListCons(arbitraryInputSource(Lynx_Data_Expr.arbitraryExpr))(Test_QuickCheck_Arbitrary.arbitraryRowListNil)()()()(new Data_Symbol.IsSymbol(function () {
    return "value";
})))()()()(new Data_Symbol.IsSymbol(function () {
    return "required";
})))()()()(new Data_Symbol.IsSymbol(function () {
    return "placeholder";
})))()()()(new Data_Symbol.IsSymbol(function () {
    return "options";
})))()()()(new Data_Symbol.IsSymbol(function () {
    return "errors";
})))()()()(new Data_Symbol.IsSymbol(function () {
    return "default";
}))))))(Test_QuickCheck_Arbitrary.arbGenSumSum(Test_QuickCheck_Arbitrary.arbitraryConstructor(Test_QuickCheck_Arbitrary.arbitraryArgument(Test_QuickCheck_Arbitrary.arbitraryRecordInstance()(Test_QuickCheck_Arbitrary.arbitraryRowListCons(Test_QuickCheck_Arbitrary.arbMaybe(Lynx_Data_Expr.arbitraryExpr))(Test_QuickCheck_Arbitrary.arbitraryRowListCons(arbitraryErrors(arbitraryValidationError)(ordValidationError))(Test_QuickCheck_Arbitrary.arbitraryRowListCons(Test_QuickCheck_Arbitrary.arbMaybe(Lynx_Data_Expr.arbitraryExpr))(Test_QuickCheck_Arbitrary.arbitraryRowListCons(Test_QuickCheck_Arbitrary.arbMaybe(Lynx_Data_Expr.arbitraryExpr))(Test_QuickCheck_Arbitrary.arbitraryRowListCons(Lynx_Data_Expr.arbitraryExpr)(Test_QuickCheck_Arbitrary.arbitraryRowListCons(Lynx_Data_Expr.arbitraryExpr)(Test_QuickCheck_Arbitrary.arbitraryRowListCons(arbitraryInputSource(Lynx_Data_Expr.arbitraryExpr))(Test_QuickCheck_Arbitrary.arbitraryRowListNil)()()()(new Data_Symbol.IsSymbol(function () {
    return "value";
})))()()()(new Data_Symbol.IsSymbol(function () {
    return "required";
})))()()()(new Data_Symbol.IsSymbol(function () {
    return "placeholder";
})))()()()(new Data_Symbol.IsSymbol(function () {
    return "minLength";
})))()()()(new Data_Symbol.IsSymbol(function () {
    return "maxLength";
})))()()()(new Data_Symbol.IsSymbol(function () {
    return "errors";
})))()()()(new Data_Symbol.IsSymbol(function () {
    return "default";
}))))))(Test_QuickCheck_Arbitrary.arbGenSumConstructor(Test_QuickCheck_Arbitrary.arbitraryArgument(Test_QuickCheck_Arbitrary.arbitraryRecordInstance()(Test_QuickCheck_Arbitrary.arbitraryRowListCons(Test_QuickCheck_Arbitrary.arbMaybe(Lynx_Data_Expr.arbitraryExpr))(Test_QuickCheck_Arbitrary.arbitraryRowListCons(arbitraryErrors(arbitraryValidationError)(ordValidationError))(Test_QuickCheck_Arbitrary.arbitraryRowListCons(arbitraryInputSource(Lynx_Data_Expr.arbitraryExpr))(Test_QuickCheck_Arbitrary.arbitraryRowListNil)()()()(new Data_Symbol.IsSymbol(function () {
    return "value";
})))()()()(new Data_Symbol.IsSymbol(function () {
    return "errors";
})))()()()(new Data_Symbol.IsSymbol(function () {
    return "default";
}))))))))));
var active = (function () {
    var description = Lynx_Data_Expr.if_(Lynx_Data_Expr.lookup_("active")(Lynx_Data_Expr.boolean_(true)))(Lynx_Data_Expr.string_("User's account is active!"))(Lynx_Data_Expr.string_("User's account is not active"));
    return {
        name: Lynx_Data_Expr.string_("Active"),
        visibility: Lynx_Data_Expr.boolean_(true),
        description: description,
        key: "active",
        input: new Toggle({
            "default": new Data_Maybe.Just(Lynx_Data_Expr.boolean_(true)),
            value: NotSet.value,
            errors: Data_Monoid.mempty(monoidErrors(ordValidationError))
        })
    };
})();
var testSection = {
    name: "Name",
    contents: [ firstName, lastName, active, food, money ]
};
var testPage = {
    name: "Profile",
    contents: [ testSection ]
};
module.exports = {
    Currency: Currency,
    Dropdown: Dropdown,
    Text: Text,
    Toggle: Toggle,
    UserInput: UserInput,
    Invalid: Invalid,
    UserCleared: UserCleared,
    NotSet: NotSet,
    userInput: userInput,
    Errors: Errors,
    singletonError: singletonError,
    noErrors: noErrors,
    errorsToArray: errorsToArray,
    Required: Required,
    MinLength: MinLength,
    MaxLength: MaxLength,
    "eval": $$eval,
    keys: keys,
    displayError: displayError,
    isEmpty: isEmpty,
    getValue: getValue,
    setValue: setValue,
    testPage: testPage,
    testSection: testSection,
    firstName: firstName,
    lastName: lastName,
    active: active,
    food: food,
    money: money,
    eqInput: eqInput,
    genericInput: genericInput,
    showInput: showInput,
    encodeInput: encodeInput,
    decodeInput: decodeInput,
    arbitraryInput: arbitraryInput,
    eqInputSource: eqInputSource,
    functorInputSource: functorInputSource,
    genericInputSource: genericInputSource,
    foldableInputSource: foldableInputSource,
    traversableInputSource: traversableInputSource,
    showInputSource: showInputSource,
    encodeInputSource: encodeInputSource,
    decodeInputSource: decodeInputSource,
    arbitraryInputSource: arbitraryInputSource,
    eqErrors: eqErrors,
    genericErrors: genericErrors,
    showErrors: showErrors,
    semigroupErrors: semigroupErrors,
    monoidErrors: monoidErrors,
    arbitraryErrors: arbitraryErrors,
    encodeErrors: encodeErrors,
    decodeErrors: decodeErrors,
    eqValidationError: eqValidationError,
    ordValidationError: ordValidationError,
    genericValidationError: genericValidationError,
    showValidationError: showValidationError,
    encodeValidationError: encodeValidationError,
    decodeValidationError: decodeValidationError,
    arbitraryValidationError: arbitraryValidationError
};

},{"../Control.Alt/index.js":4,"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Control.Semigroupoid/index.js":61,"../Data.Argonaut.Core/index.js":78,"../Data.Argonaut.Decode.Class/index.js":79,"../Data.Argonaut.Decode.Combinators/index.js":80,"../Data.Argonaut.Encode.Class/index.js":82,"../Data.Argonaut.Encode.Combinators/index.js":83,"../Data.Argonaut/index.js":90,"../Data.BigInt/index.js":108,"../Data.Boolean/index.js":110,"../Data.Either/index.js":131,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Generic.Rep.Show/index.js":159,"../Data.Generic.Rep/index.js":160,"../Data.HeytingAlgebra/index.js":162,"../Data.Map.Internal/index.js":206,"../Data.Map/index.js":207,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Set/index.js":252,"../Data.Show/index.js":254,"../Data.Symbol/index.js":274,"../Data.Traversable/index.js":281,"../Data.Unfoldable/index.js":285,"../Lynx.Data.Expr/index.js":356,"../Ocelot.Data.Currency/index.js":379,"../Prelude/index.js":385,"../Test.QuickCheck.Arbitrary/index.js":407,"../Test.QuickCheck.Gen/index.js":409,"../Test.QuickCheck/index.js":410,"../Type.Row/index.js":423}],358:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Bifoldable = require("../Data.Bifoldable/index.js");
var Data_Bitraversable = require("../Data.Bitraversable/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Either_Nested = require("../Data.Either.Nested/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Coproduct_Nested = require("../Data.Functor.Coproduct.Nested/index.js");
var Data_Map = require("../Data.Map/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");
var Halogen = require("../Halogen/index.js");
var Halogen_Component = require("../Halogen.Component/index.js");
var Halogen_Component_ChildPath = require("../Halogen.Component.ChildPath/index.js");
var Halogen_HTML = require("../Halogen.HTML/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements/index.js");
var Halogen_HTML_Events = require("../Halogen.HTML.Events/index.js");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");
var Halogen_Query = require("../Halogen.Query/index.js");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");
var Lynx_Data_Expr = require("../Lynx.Data.Expr/index.js");
var Lynx_Data_Form = require("../Lynx.Data.Form/index.js");
var Network_RemoteData = require("../Network.RemoteData/index.js");
var Ocelot_Block_Button = require("../Ocelot.Block.Button/index.js");
var Ocelot_Block_Card = require("../Ocelot.Block.Card/index.js");
var Ocelot_Block_FormField = require("../Ocelot.Block.FormField/index.js");
var Ocelot_Block_Format = require("../Ocelot.Block.Format/index.js");
var Ocelot_Block_Input = require("../Ocelot.Block.Input/index.js");
var Ocelot_Block_Layout = require("../Ocelot.Block.Layout/index.js");
var Ocelot_Block_Toggle = require("../Ocelot.Block.Toggle/index.js");
var Ocelot_Component_Dropdown = require("../Ocelot.Component.Dropdown/index.js");
var Ocelot_Component_Dropdown_Render = require("../Ocelot.Component.Dropdown.Render/index.js");
var Ocelot_Data_Currency = require("../Ocelot.Data.Currency/index.js");
var Ocelot_HTML_Properties = require("../Ocelot.HTML.Properties/index.js");
var Prelude = require("../Prelude/index.js");
var Initialize = (function () {
    function Initialize(value0) {
        this.value0 = value0;
    };
    Initialize.create = function (value0) {
        return new Initialize(value0);
    };
    return Initialize;
})();
var EvalForm = (function () {
    function EvalForm(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    EvalForm.create = function (value0) {
        return function (value1) {
            return new EvalForm(value0, value1);
        };
    };
    return EvalForm;
})();
var UpdateKey = (function () {
    function UpdateKey(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    UpdateKey.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new UpdateKey(value0, value1, value2);
            };
        };
    };
    return UpdateKey;
})();
var DropdownQuery = (function () {
    function DropdownQuery(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    DropdownQuery.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new DropdownQuery(value0, value1, value2);
            };
        };
    };
    return DropdownQuery;
})();
var $$eval = function (v) {
    if (v instanceof Initialize) {
        return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value0)(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
            var $23 = {};
            for (var $24 in v1) {
                if ({}.hasOwnProperty.call(v1, $24)) {
                    $23[$24] = v1[$24];
                };
            };
            $23.values = Lynx_Data_Form.keys(Lynx_Data_Form.testPage);
            return $23;
        }))(function () {
            return Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Data_Bifoldable.bitraverse_(Data_Either.bifoldableEither)(Halogen_Query_HalogenM.applicativeHalogenM)(function (e) {
                return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                    var $26 = {};
                    for (var $27 in v1) {
                        if ({}.hasOwnProperty.call(v1, $27)) {
                            $26[$27] = v1[$27];
                        };
                    };
                    $26.form = new Network_RemoteData.Failure(e);
                    return $26;
                });
            })(function (f) {
                return $$eval(new EvalForm(f, v.value0));
            })(new Data_Either.Right(Lynx_Data_Form.testPage)));
        }));
    };
    if (v instanceof EvalForm) {
        return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
            var evaled$prime = Lynx_Data_Form["eval"](function (key) {
                return Data_Map_Internal.lookup(Data_Ord.ordString)(key)(v1.values);
            })(v.value0);
            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Traversable["for"](Halogen_Query_HalogenM.applicativeHalogenM)(Data_Either.traversableEither)(evaled$prime)(function (page) {
                return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableArray)(page.contents)(function (section) {
                    return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableArray)(section.contents)(function (field) {
                        if (field.input instanceof Lynx_Data_Form.Currency) {
                            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                        };
                        if (field.input instanceof Lynx_Data_Form.Dropdown) {
                            return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(Lynx_Data_Expr.toArray(field.input.value0.options))(function (options) {
                                return Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqString)(Data_Eq.eqVoid))(Halogen_Component_ChildPath.cp1)(field.key)(new Ocelot_Component_Dropdown.SetItems(options, Data_Unit.unit));
                            });
                        };
                        if (field.input instanceof Lynx_Data_Form.Text) {
                            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                        };
                        if (field.input instanceof Lynx_Data_Form.Toggle) {
                            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                        };
                        throw new Error("Failed pattern match at Lynx.Page.Form (line 203, column 11 - line 209, column 34): " + [ field.input.constructor.name ]);
                    });
                }))(function () {
                    return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(page);
                });
            }))(function (v2) {
                return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                    var $37 = {};
                    for (var $38 in v3) {
                        if ({}.hasOwnProperty.call(v3, $38)) {
                            $37[$38] = v3[$38];
                        };
                    };
                    $37.form = Data_Functor.map(Network_RemoteData.functorRemoteData)(function (v4) {
                        return {
                            expr: v.value0,
                            evaled: v4
                        };
                    })(Network_RemoteData.fromEither(v2));
                    return $37;
                });
            });
        }));
    };
    if (v instanceof UpdateKey) {
        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
            if (v1.form instanceof Network_RemoteData.Success) {
                if (v.value1 instanceof Data_Maybe.Nothing) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                        var $46 = {};
                        for (var $47 in v2) {
                            if ({}.hasOwnProperty.call(v2, $47)) {
                                $46[$47] = v2[$47];
                            };
                        };
                        $46.values = Data_Map_Internal["delete"](Data_Ord.ordString)(v.value0)(v1.values);
                        return $46;
                    }))(function () {
                        return $$eval(new EvalForm(Lynx_Data_Form.setValue(v.value0)(Lynx_Data_Form.UserCleared.value)(v1.form.value0.expr), v.value2));
                    });
                };
                if (v.value1 instanceof Data_Maybe.Just) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                        var $49 = {};
                        for (var $50 in v3) {
                            if ({}.hasOwnProperty.call(v3, $50)) {
                                $49[$50] = v3[$50];
                            };
                        };
                        $49.values = Data_Map_Internal.insert(Data_Ord.ordString)(v.value0)(v.value1.value0)(v1.values);
                        return $49;
                    }))(function () {
                        return $$eval(new EvalForm(Lynx_Data_Form.setValue(v.value0)(Lynx_Data_Form.UserInput.create(new Lynx_Data_Expr.Val(v.value1.value0)))(v1.form.value0.expr), v.value2));
                    });
                };
                throw new Error("Failed pattern match at Lynx.Page.Form (line 217, column 9 - line 223, column 85): " + [ v.value1.constructor.name ]);
            };
            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value2);
        });
    };
    if (v instanceof DropdownQuery) {
        if (v.value1 instanceof Ocelot_Component_Dropdown.Emit) {
            return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value2)($$eval(v.value1.value0));
        };
        if (v.value1 instanceof Ocelot_Component_Dropdown.Selected) {
            return $$eval(new UpdateKey(v.value0, new Data_Maybe.Just(v.value1.value0), v.value2));
        };
        if (v.value1 instanceof Ocelot_Component_Dropdown.VisibilityChanged) {
            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value2);
        };
        throw new Error("Failed pattern match at Lynx.Page.Form (line 226, column 34 - line 229, column 42): " + [ v.value1.constructor.name ]);
    };
    throw new Error("Failed pattern match at Lynx.Page.Form (line 189, column 8 - line 229, column 42): " + [ v.constructor.name ]);
};
var component = function (dictMonadAff) {
    var renderValidation = (function () {
        var renderValidationError = function (v) {
            if (v instanceof Lynx_Data_Form.Required) {
                return "This field is required";
            };
            if (v instanceof Lynx_Data_Form.MinLength) {
                return "Must contain at least " + (Data_Show.show(Data_Show.showInt)(v.value0) + " characters");
            };
            if (v instanceof Lynx_Data_Form.MaxLength) {
                return "Cannot contain more than " + (Data_Show.show(Data_Show.showInt)(v.value0) + " characters");
            };
            throw new Error("Failed pattern match at Lynx.Page.Form (line 183, column 29 - line 188, column 1): " + [ v.constructor.name ]);
        };
        var renderValidation$prime = function ($94) {
            return (function (v) {
                if (v.length === 0) {
                    return [  ];
                };
                if (v.length === 1) {
                    return [ Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text(renderValidationError(v[0])) ]) ];
                };
                return [ Halogen_HTML_Elements.ul_(Data_Functor.map(Data_Functor.functorArray)(function ($95) {
                    return Halogen_HTML_Elements.li_(Control_Applicative.pure(Control_Applicative.applicativeArray)(Halogen_HTML_Core.text(renderValidationError($95))));
                })(v)) ];
            })(Lynx_Data_Form.errorsToArray(Lynx_Data_Form.ordValidationError)($94));
        };
        return function (v) {
            if (v instanceof Lynx_Data_Form.Currency) {
                return renderValidation$prime(v.value0.errors);
            };
            if (v instanceof Lynx_Data_Form.Dropdown) {
                return renderValidation$prime(v.value0.errors);
            };
            if (v instanceof Lynx_Data_Form.Text) {
                return renderValidation$prime(v.value0.errors);
            };
            if (v instanceof Lynx_Data_Form.Toggle) {
                return renderValidation$prime(v.value0.errors);
            };
            throw new Error("Failed pattern match at Lynx.Page.Form (line 172, column 22 - line 176, column 53): " + [ v.constructor.name ]);
        };
    })();
    var renderInput = function (v) {
        if (v.input instanceof Lynx_Data_Form.Currency) {
            return Ocelot_Block_Input.currency_([ Halogen_HTML_Properties.id_(v.key), Halogen_HTML_Properties.placeholder(Lynx_Data_Expr.print(v.input.value0.placeholder)), Halogen_HTML_Properties.value(Data_Foldable.fold(Data_Foldable.foldableMaybe)(Data_Monoid.monoidString)(Control_Bind.bind(Data_Maybe.bindMaybe)(Lynx_Data_Form.getValue(v.input.value0))(function (v1) {
                return Control_Bind.bind(Data_Maybe.bindMaybe)(Lynx_Data_Expr.toCents(v1))(function (v2) {
                    return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Lynx_Data_Expr.print(v1));
                });
            }))), Halogen_HTML_Events.onValueChange(Halogen_HTML_Events.input(function ($96) {
                return UpdateKey.create(v.key)(Data_Functor.map(Data_Maybe.functorMaybe)(Lynx_Data_Expr.Cents.create)(Ocelot_Data_Currency.parseCentsFromDollarStr($96)));
            })) ]);
        };
        if (v.input instanceof Lynx_Data_Form.Dropdown) {
            return Halogen_HTML["slot'"](Halogen_Component_ChildPath.cp1)(v.key)(Ocelot_Component_Dropdown.component(dictMonadAff))({
                selectedItem: Lynx_Data_Form.getValue(v.input.value0),
                items: Data_Foldable.fold(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(Lynx_Data_Expr.toArray(v.input.value0.options)),
                render: Ocelot_Component_Dropdown_Render.render(dictMonadAff)(Ocelot_Component_Dropdown_Render.defDropdown(Lynx_Data_Expr.eqExprType)(Ocelot_Block_Button.button)([  ])(function ($97) {
                    return Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidString)(function ($98) {
                        return Lynx_Data_Expr.print((function (v1) {
                            return v1.name;
                        })($98));
                    })(Lynx_Data_Expr.toPair($97));
                })(Lynx_Data_Expr.print(v.description)))
            })(Halogen_HTML_Events.input(DropdownQuery.create(v.key)));
        };
        if (v.input instanceof Lynx_Data_Form.Text) {
            return Ocelot_Block_Input.input([ Halogen_HTML_Properties.value(Data_Maybe.fromMaybe("")(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Lynx_Data_Expr.toString)(Lynx_Data_Form.getValue(v.input.value0)))), Halogen_HTML_Properties.placeholder(Lynx_Data_Expr.print(v.input.value0.placeholder)), Halogen_HTML_Properties.id_(v.key), Halogen_HTML_Events.onValueChange(Halogen_HTML_Events.input(function ($99) {
                return UpdateKey.create(v.key)(Data_Maybe.Just.create(Lynx_Data_Expr["String"].create($99)));
            })) ]);
        };
        if (v.input instanceof Lynx_Data_Form.Toggle) {
            return Ocelot_Block_Toggle.toggle([ Halogen_HTML_Properties.checked(Data_Maybe.fromMaybe(false)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Lynx_Data_Expr.toBoolean)(Lynx_Data_Form.getValue(v.input.value0)))), Halogen_HTML_Properties.id_(v.key), Halogen_HTML_Events.onChecked(Halogen_HTML_Events.input(function ($100) {
                return UpdateKey.create(v.key)(Data_Maybe.Just.create(Lynx_Data_Expr["Boolean"].create($100)));
            })) ]);
        };
        throw new Error("Failed pattern match at Lynx.Page.Form (line 128, column 25 - line 167, column 10): " + [ v.input.constructor.name ]);
    };
    var renderField = function (v) {
        return Ocelot_Block_FormField.field_({
            label: Halogen_HTML_Core.text(Lynx_Data_Expr.print(v.name)),
            helpText: [ Halogen_HTML_Core.text(Lynx_Data_Expr.print(v.description)) ],
            error: renderValidation(v.input),
            inputId: v.key
        })([ renderInput(v) ]);
    };
    var renderSection = function (v) {
        return Ocelot_Block_Card.card_(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Ocelot_Block_Format.subHeading_([ Halogen_HTML_Core.text(v.name) ]) ])(Data_Functor.map(Data_Functor.functorArray)(renderField)(v.contents)));
    };
    var renderEvalError = function (v) {
        if (v instanceof Lynx_Data_Expr.IfCondition) {
            return Halogen_HTML_Core.text("Expected conditional to be a Boolean, but its type is: " + Lynx_Data_Expr.reflectType(v.value0));
        };
        if (v instanceof Lynx_Data_Expr.EqualMismatch) {
            return Halogen_HTML_Core.text("Expected both sides of equal to have the same type," + (" but they are different." + (" left: " + (Lynx_Data_Expr.reflectType(v.value0.left) + (" right: " + Lynx_Data_Expr.reflectType(v.value0.right))))));
        };
        throw new Error("Failed pattern match at Lynx.Page.Form (line 96, column 21 - line 108, column 33): " + [ v.constructor.name ]);
    };
    var render = function (v) {
        return Ocelot_Block_Layout.section_((function () {
            if (v.form instanceof Network_RemoteData.NotAsked) {
                return [  ];
            };
            if (v.form instanceof Network_RemoteData.Loading) {
                return [ Ocelot_Block_Card.card_([ Ocelot_Block_Format.p([ Ocelot_HTML_Properties.css("text-red") ])([ Halogen_HTML_Core.text("Loading...") ]) ]) ];
            };
            if (v.form instanceof Network_RemoteData.Failure) {
                return [ Ocelot_Block_Card.card_([ Ocelot_Block_Format.p([ Ocelot_HTML_Properties.css("text-red") ])([ renderEvalError(v.form.value0) ]) ]) ];
            };
            if (v.form instanceof Network_RemoteData.Success) {
                return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Ocelot_Block_Format.heading_([ Halogen_HTML_Core.text(v.form.value0.evaled.name) ]) ])(Data_Functor.map(Data_Functor.functorArray)(renderSection)(v.form.value0.evaled.contents));
            };
            throw new Error("Failed pattern match at Lynx.Page.Form (line 81, column 7 - line 93, column 51): " + [ v.form.constructor.name ]);
        })());
    };
    var initialState = {
        form: Network_RemoteData.Loading.value,
        values: Data_Monoid.mempty(Data_Map_Internal.monoidMap(Data_Ord.ordString))
    };
    return Halogen_Component.lifecycleParentComponent(Data_Either.ordEither(Data_Ord.ordString)(Data_Ord.ordVoid))({
        initialState: Data_Function["const"](initialState),
        "eval": $$eval,
        render: render,
        receiver: Data_Function["const"](Data_Maybe.Nothing.value),
        initializer: Data_Maybe.Just.create(Halogen_Query.action(Initialize.create)),
        finalizer: Data_Maybe.Nothing.value
    });
};
module.exports = {
    Initialize: Initialize,
    EvalForm: EvalForm,
    UpdateKey: UpdateKey,
    DropdownQuery: DropdownQuery,
    component: component,
    "eval": $$eval
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Control.Monad.State.Class/index.js":48,"../Control.Semigroupoid/index.js":61,"../Data.Bifoldable/index.js":100,"../Data.Bitraversable/index.js":109,"../Data.Either.Nested/index.js":130,"../Data.Either/index.js":131,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor.Coproduct.Nested/index.js":149,"../Data.Functor/index.js":153,"../Data.Map.Internal/index.js":206,"../Data.Map/index.js":207,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Data.Traversable/index.js":281,"../Data.Unit/index.js":289,"../Effect.Aff.Class/index.js":295,"../Halogen.Component.ChildPath/index.js":330,"../Halogen.Component/index.js":331,"../Halogen.HTML.Core/index.js":334,"../Halogen.HTML.Elements/index.js":335,"../Halogen.HTML.Events/index.js":336,"../Halogen.HTML.Properties/index.js":338,"../Halogen.HTML/index.js":339,"../Halogen.Query.HalogenM/index.js":342,"../Halogen.Query/index.js":344,"../Halogen/index.js":353,"../Lynx.Data.Expr/index.js":356,"../Lynx.Data.Form/index.js":357,"../Network.RemoteData/index.js":365,"../Ocelot.Block.Button/index.js":367,"../Ocelot.Block.Card/index.js":368,"../Ocelot.Block.FormField/index.js":369,"../Ocelot.Block.Format/index.js":370,"../Ocelot.Block.Input/index.js":372,"../Ocelot.Block.Layout/index.js":374,"../Ocelot.Block.Toggle/index.js":376,"../Ocelot.Component.Dropdown.Render/index.js":377,"../Ocelot.Component.Dropdown/index.js":378,"../Ocelot.Data.Currency/index.js":379,"../Ocelot.HTML.Properties/index.js":380,"../Prelude/index.js":385}],359:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Halogen = require("../Halogen/index.js");
var Halogen_Component = require("../Halogen.Component/index.js");
var Halogen_HTML = require("../Halogen.HTML/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements/index.js");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");
var Lynx_Route = require("../Lynx.Route/index.js");
var Lynx_Util_HTML = require("../Lynx.Util.HTML/index.js");
var Ocelot_Block_Card = require("../Ocelot.Block.Card/index.js");
var Ocelot_Block_Format = require("../Ocelot.Block.Format/index.js");
var Ocelot_Block_Table = require("../Ocelot.Block.Table/index.js");
var Prelude = require("../Prelude/index.js");
var Noop = (function () {
    function Noop(value0) {
        this.value0 = value0;
    };
    Noop.create = function (value0) {
        return new Noop(value0);
    };
    return Noop;
})();
var forms = [ {
    name: "Profile",
    id: "profile-1"
} ];
var component = (function () {
    var renderRow = function (v) {
        return Ocelot_Block_Table.row_([ Ocelot_Block_Table.cell_([ Halogen_HTML_Elements.a([ Lynx_Util_HTML.safeHref(new Lynx_Route.Form(v.id)) ])([ Halogen_HTML_Core.text(v.name) ]) ]) ]);
    };
    var render = function (v) {
        return Ocelot_Block_Card.card_([ Ocelot_Block_Format.heading_([ Halogen_HTML_Core.text("Forms") ]), Ocelot_Block_Table.table_(Data_Functor.map(Data_Functor.functorArray)(renderRow)(forms)) ]);
    };
    var $$eval = function (v) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
    };
    return Halogen_Component.component(Halogen_HTML_Core.bifunctorHTML)({
        initialState: Data_Function["const"](Data_Unit.unit),
        "eval": $$eval,
        render: render,
        receiver: Data_Function["const"](Data_Maybe.Nothing.value)
    });
})();
module.exports = {
    Noop: Noop,
    forms: forms,
    component: component
};

},{"../Control.Applicative/index.js":7,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Unit/index.js":289,"../Halogen.Component/index.js":331,"../Halogen.HTML.Core/index.js":334,"../Halogen.HTML.Elements/index.js":335,"../Halogen.HTML/index.js":339,"../Halogen.Query.HalogenM/index.js":342,"../Halogen/index.js":353,"../Lynx.Route/index.js":360,"../Lynx.Util.HTML/index.js":361,"../Ocelot.Block.Card/index.js":368,"../Ocelot.Block.Format/index.js":370,"../Ocelot.Block.Table/index.js":375,"../Prelude/index.js":385}],360:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Generic_Rep_Show = require("../Data.Generic.Rep.Show/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Prelude = require("../Prelude/index.js");
var Routing_Duplex = require("../Routing.Duplex/index.js");
var Routing_Duplex_Generic = require("../Routing.Duplex.Generic/index.js");
var Routing_Duplex_Generic_Syntax = require("../Routing.Duplex.Generic.Syntax/index.js");
var Home = (function () {
    function Home() {

    };
    Home.value = new Home();
    return Home;
})();
var Form = (function () {
    function Form(value0) {
        this.value0 = value0;
    };
    Form.create = function (value0) {
        return new Form(value0);
    };
    return Form;
})();
var genericRoute = new Data_Generic_Rep.Generic(function (x) {
    if (x instanceof Home) {
        return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
    };
    if (x instanceof Form) {
        return new Data_Generic_Rep.Inr(x.value0);
    };
    throw new Error("Failed pattern match at Lynx.Route (line 15, column 8 - line 15, column 48): " + [ x.constructor.name ]);
}, function (x) {
    if (x instanceof Data_Generic_Rep.Inl) {
        return Home.value;
    };
    if (x instanceof Data_Generic_Rep.Inr) {
        return new Form(x.value0);
    };
    throw new Error("Failed pattern match at Lynx.Route (line 15, column 8 - line 15, column 48): " + [ x.constructor.name ]);
});
var routeCodec = Routing_Duplex.root(Routing_Duplex_Generic.sum(genericRoute)(Routing_Duplex_Generic.gRouteSum(Routing_Duplex_Generic.gRouteConstructor(new Data_Symbol.IsSymbol(function () {
    return "Home";
}))()(Routing_Duplex_Generic.gRouteNoArguments))(Routing_Duplex_Generic.gRouteConstructor(new Data_Symbol.IsSymbol(function () {
    return "Form";
}))()(Routing_Duplex_Generic.gRouteArgument)))({
    Home: Routing_Duplex_Generic.noArgs,
    Form: Routing_Duplex_Generic_Syntax.gsep(Routing_Duplex_Generic_Syntax.gsepStringRoute(Routing_Duplex_Generic.gRouteAll))("form")(Routing_Duplex.segment)
}));
var showRoute = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericRoute)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Home";
})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
    return "Form";
})))));
var eqRoute = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Home && y instanceof Home) {
            return true;
        };
        if (x instanceof Form && y instanceof Form) {
            return x.value0 === y.value0;
        };
        return false;
    };
});
var ordRoute = new Data_Ord.Ord(function () {
    return eqRoute;
}, function (x) {
    return function (y) {
        if (x instanceof Home && y instanceof Home) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Home) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Home) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Form && y instanceof Form) {
            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
        };
        throw new Error("Failed pattern match at Lynx.Route (line 17, column 8 - line 17, column 38): " + [ x.constructor.name, y.constructor.name ]);
    };
});
module.exports = {
    Home: Home,
    Form: Form,
    routeCodec: routeCodec,
    genericRoute: genericRoute,
    eqRoute: eqRoute,
    ordRoute: ordRoute,
    showRoute: showRoute
};

},{"../Data.Eq/index.js":135,"../Data.Function/index.js":145,"../Data.Generic.Rep.Show/index.js":159,"../Data.Generic.Rep/index.js":160,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Show/index.js":254,"../Data.Symbol/index.js":274,"../Prelude/index.js":385,"../Routing.Duplex.Generic.Syntax/index.js":393,"../Routing.Duplex.Generic/index.js":394,"../Routing.Duplex/index.js":398}],361:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Halogen = require("../Halogen/index.js");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");
var Lynx_Route = require("../Lynx.Route/index.js");
var Prelude = require("../Prelude/index.js");
var Routing_Duplex = require("../Routing.Duplex/index.js");
var safeHref = function ($0) {
    return Halogen_HTML_Properties.href("#" + Routing_Duplex.print(Lynx_Route.routeCodec)($0));
};
module.exports = {
    safeHref: safeHref
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Semigroup/index.js":248,"../Halogen.HTML.Properties/index.js":338,"../Halogen/index.js":353,"../Lynx.Route/index.js":360,"../Prelude/index.js":385,"../Routing.Duplex/index.js":398}],362:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Halogen = require("../Halogen/index.js");
var Halogen_Aff = require("../Halogen.Aff/index.js");
var Halogen_Aff_Util = require("../Halogen.Aff.Util/index.js");
var Halogen_Component = require("../Halogen.Component/index.js");
var Halogen_HTML = require("../Halogen.HTML/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_VDom_Driver = require("../Halogen.VDom.Driver/index.js");
var Lynx_AppM = require("../Lynx.AppM/index.js");
var Lynx_Component_Router = require("../Lynx.Component.Router/index.js");
var Lynx_Route = require("../Lynx.Route/index.js");
var Prelude = require("../Prelude/index.js");
var Routing_Duplex = require("../Routing.Duplex/index.js");
var Routing_Hash = require("../Routing.Hash/index.js");
var main = Halogen_Aff_Util.runHalogenAff(Control_Bind.bind(Effect_Aff.bindAff)(Halogen_Aff_Util.awaitBody)(function (v) {
    var router = Halogen_Component.hoist(Halogen_HTML_Core.bifunctorHTML)(Effect_Aff.functorAff)(Lynx_AppM.runAppM({}))(Lynx_Component_Router.component(Lynx_AppM.monadAffAppM));
    return Control_Bind.bind(Effect_Aff.bindAff)(Halogen_VDom_Driver.runUI(router)(Data_Unit.unit)(v))(function (v1) {
        return Data_Functor["void"](Effect_Aff.functorAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Routing_Hash.matchesWith(Data_Either.foldableEither)(Routing_Duplex.parse(Lynx_Route.routeCodec))(function (old) {
            return function ($$new) {
                return Control_Applicative.when(Effect.applicativeEffect)(Data_Eq.notEq(Data_Maybe.eqMaybe(Lynx_Route.eqRoute))(old)(new Data_Maybe.Just($$new)))(Effect_Aff.launchAff_(v1.query(new Lynx_Component_Router.Navigate($$new, Data_Unit.unit))));
            };
        })));
    });
}));
module.exports = {
    main: main
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Data.Either/index.js":131,"../Data.Eq/index.js":135,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Unit/index.js":289,"../Effect.Aff/index.js":297,"../Effect.Class/index.js":298,"../Effect/index.js":312,"../Halogen.Aff.Util/index.js":328,"../Halogen.Aff/index.js":329,"../Halogen.Component/index.js":331,"../Halogen.HTML.Core/index.js":334,"../Halogen.HTML/index.js":339,"../Halogen.VDom.Driver/index.js":347,"../Halogen/index.js":353,"../Lynx.AppM/index.js":354,"../Lynx.Component.Router/index.js":355,"../Lynx.Route/index.js":360,"../Prelude/index.js":385,"../Routing.Duplex/index.js":398,"../Routing.Hash/index.js":399}],363:[function(require,module,exports){
"use strict";

// module Math

exports.abs = Math.abs;

exports.acos = Math.acos;

exports.asin = Math.asin;

exports.atan = Math.atan;

exports.atan2 = function (y) {
  return function (x) {
    return Math.atan2(y, x);
  };
};

exports.ceil = Math.ceil;

exports.cos = Math.cos;

exports.exp = Math.exp;

exports.floor = Math.floor;

exports.trunc = Math.trunc || function (n) {
  return n < 0 ? Math.ceil(n) : Math.floor(n);
};

exports.log = Math.log;

exports.max = function (n1) {
  return function (n2) {
    return Math.max(n1, n2);
  };
};

exports.min = function (n1) {
  return function (n2) {
    return Math.min(n1, n2);
  };
};

exports.pow = function (n) {
  return function (p) {
    return Math.pow(n, p);
  };
};

exports.remainder = function (n) {
  return function (m) {
    return n % m;
  };
};

exports.round = Math.round;

exports.sin = Math.sin;

exports.sqrt = Math.sqrt;

exports.tan = Math.tan;

exports.e = Math.E;

exports.ln2 = Math.LN2;

exports.ln10 = Math.LN10;

exports.log2e = Math.LOG2E;

exports.log10e = Math.LOG10E;

exports.pi = Math.PI;

exports.tau = 2 * Math.PI;

exports.sqrt1_2 = Math.SQRT1_2;

exports.sqrt2 = Math.SQRT2;

},{}],364:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
module.exports = {
    abs: $foreign.abs,
    acos: $foreign.acos,
    asin: $foreign.asin,
    atan: $foreign.atan,
    atan2: $foreign.atan2,
    ceil: $foreign.ceil,
    cos: $foreign.cos,
    exp: $foreign.exp,
    floor: $foreign.floor,
    log: $foreign.log,
    max: $foreign.max,
    min: $foreign.min,
    pow: $foreign.pow,
    round: $foreign.round,
    sin: $foreign.sin,
    sqrt: $foreign.sqrt,
    tan: $foreign.tan,
    trunc: $foreign.trunc,
    remainder: $foreign.remainder,
    e: $foreign.e,
    ln2: $foreign.ln2,
    ln10: $foreign.ln10,
    log2e: $foreign.log2e,
    log10e: $foreign.log10e,
    pi: $foreign.pi,
    tau: $foreign.tau,
    sqrt1_2: $foreign.sqrt1_2,
    sqrt2: $foreign.sqrt2
};

},{"./foreign.js":363}],365:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Data_Bifoldable = require("../Data.Bifoldable/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Bitraversable = require("../Data.Bitraversable/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Lens = require("../Data.Lens/index.js");
var Data_Lens_Internal_Market = require("../Data.Lens.Internal.Market/index.js");
var Data_Lens_Prism = require("../Data.Lens.Prism/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var NotAsked = (function () {
    function NotAsked() {

    };
    NotAsked.value = new NotAsked();
    return NotAsked;
})();
var Loading = (function () {
    function Loading() {

    };
    Loading.value = new Loading();
    return Loading;
})();
var Failure = (function () {
    function Failure(value0) {
        this.value0 = value0;
    };
    Failure.create = function (value0) {
        return new Failure(value0);
    };
    return Failure;
})();
var Success = (function () {
    function Success(value0) {
        this.value0 = value0;
    };
    Success.create = function (value0) {
        return new Success(value0);
    };
    return Success;
})();
var toMaybe = function (v) {
    if (v instanceof Success) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
};
var showRemoteData = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            if (v instanceof NotAsked) {
                return "RemoteData.NotAsked";
            };
            if (v instanceof Loading) {
                return "RemoteData.Loading";
            };
            if (v instanceof Failure) {
                return "RemoteData.Failure " + Data_Show.show(dictShow)(v.value0);
            };
            if (v instanceof Success) {
                return "RemoteData.Success " + Data_Show.show(dictShow1)(v.value0);
            };
            throw new Error("Failed pattern match at Network.RemoteData (line 47, column 1 - line 47, column 69): " + [ v.constructor.name ]);
        });
    };
};
var maybe = function (default$prime) {
    return function (f) {
        return function (v) {
            if (v instanceof Success) {
                return f(v.value0);
            };
            return default$prime;
        };
    };
};
var withDefault = function (default$prime) {
    return maybe(default$prime)(Control_Category.identity(Control_Category.categoryFn));
};
var genericRemoteData = new Data_Generic_Rep.Generic(function (x) {
    if (x instanceof NotAsked) {
        return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
    };
    if (x instanceof Loading) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
    };
    if (x instanceof Failure) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
    };
    if (x instanceof Success) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0)));
    };
    throw new Error("Failed pattern match at Network.RemoteData (line 41, column 8 - line 41, column 64): " + [ x.constructor.name ]);
}, function (x) {
    if (x instanceof Data_Generic_Rep.Inl) {
        return NotAsked.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
        return Loading.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
        return new Failure(x.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr)) {
        return new Success(x.value0.value0.value0);
    };
    throw new Error("Failed pattern match at Network.RemoteData (line 41, column 8 - line 41, column 64): " + [ x.constructor.name ]);
});
var functorRemoteData = new Data_Functor.Functor(function (f) {
    return function (m) {
        if (m instanceof NotAsked) {
            return NotAsked.value;
        };
        if (m instanceof Loading) {
            return Loading.value;
        };
        if (m instanceof Failure) {
            return new Failure(m.value0);
        };
        if (m instanceof Success) {
            return new Success(f(m.value0));
        };
        throw new Error("Failed pattern match at Network.RemoteData (line 45, column 8 - line 45, column 60): " + [ m.constructor.name ]);
    };
});
var fromMaybe = function (v) {
    if (v instanceof Data_Maybe.Nothing) {
        return NotAsked.value;
    };
    if (v instanceof Data_Maybe.Just) {
        return new Success(v.value0);
    };
    throw new Error("Failed pattern match at Network.RemoteData (line 129, column 1 - line 129, column 51): " + [ v.constructor.name ]);
};
var fromEither = function (v) {
    if (v instanceof Data_Either.Left) {
        return new Failure(v.value0);
    };
    if (v instanceof Data_Either.Right) {
        return new Success(v.value0);
    };
    throw new Error("Failed pattern match at Network.RemoteData (line 134, column 1 - line 134, column 55): " + [ v.constructor.name ]);
};
var foldableRemoteData = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Success) {
                return v(v1.value0);
            };
            if (v1 instanceof Failure) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v1 instanceof NotAsked) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v1 instanceof Loading) {
                return Data_Monoid.mempty(dictMonoid);
            };
            throw new Error("Failed pattern match at Network.RemoteData (line 91, column 1 - line 91, column 55): " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
}, function (f) {
    return Data_Foldable.foldlDefault(foldableRemoteData)(f);
}, function (f) {
    return Data_Foldable.foldrDefault(foldableRemoteData)(f);
});
var traversableRemoteData = new Data_Traversable.Traversable(function () {
    return foldableRemoteData;
}, function () {
    return functorRemoteData;
}, function (dictApplicative) {
    return Data_Traversable.sequenceDefault(traversableRemoteData)(dictApplicative);
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Success) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Success.create)(v(v1.value0));
            };
            if (v1 instanceof Failure) {
                return Control_Applicative.pure(dictApplicative)(new Failure(v1.value0));
            };
            if (v1 instanceof NotAsked) {
                return Control_Applicative.pure(dictApplicative)(NotAsked.value);
            };
            if (v1 instanceof Loading) {
                return Control_Applicative.pure(dictApplicative)(Loading.value);
            };
            throw new Error("Failed pattern match at Network.RemoteData (line 99, column 1 - line 99, column 61): " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var eqRemoteData = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                if (x instanceof NotAsked && y instanceof NotAsked) {
                    return true;
                };
                if (x instanceof Loading && y instanceof Loading) {
                    return true;
                };
                if (x instanceof Failure && y instanceof Failure) {
                    return Data_Eq.eq(dictEq)(x.value0)(y.value0);
                };
                if (x instanceof Success && y instanceof Success) {
                    return Data_Eq.eq(dictEq1)(x.value0)(y.value0);
                };
                return false;
            };
        });
    };
};
var bifunctorRemoteData = new Data_Bifunctor.Bifunctor(function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof NotAsked) {
                return NotAsked.value;
            };
            if (v2 instanceof Loading) {
                return Loading.value;
            };
            if (v2 instanceof Failure) {
                return new Failure(v(v2.value0));
            };
            if (v2 instanceof Success) {
                return new Success(v1(v2.value0));
            };
            throw new Error("Failed pattern match at Network.RemoteData (line 54, column 1 - line 54, column 53): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
});
var bifoldableRemoteData = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Success) {
                    return v1(v2.value0);
                };
                if (v2 instanceof Failure) {
                    return v(v2.value0);
                };
                if (v2 instanceof Loading) {
                    return Data_Monoid.mempty(dictMonoid);
                };
                if (v2 instanceof NotAsked) {
                    return Data_Monoid.mempty(dictMonoid);
                };
                throw new Error("Failed pattern match at Network.RemoteData (line 106, column 1 - line 106, column 55): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
            };
        };
    };
}, function (f) {
    return Data_Bifoldable.bifoldlDefault(bifoldableRemoteData)(f);
}, function (f) {
    return Data_Bifoldable.bifoldrDefault(bifoldableRemoteData)(f);
});
var bitraversableRemoteData = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableRemoteData;
}, function () {
    return bifunctorRemoteData;
}, function (dictApplicative) {
    return Data_Bitraversable.bisequenceDefault(bitraversableRemoteData)(dictApplicative);
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Success) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Success.create)(v1(v2.value0));
                };
                if (v2 instanceof Failure) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Failure.create)(v(v2.value0));
                };
                if (v2 instanceof NotAsked) {
                    return Control_Applicative.pure(dictApplicative)(NotAsked.value);
                };
                if (v2 instanceof Loading) {
                    return Control_Applicative.pure(dictApplicative)(Loading.value);
                };
                throw new Error("Failed pattern match at Network.RemoteData (line 114, column 1 - line 114, column 61): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
            };
        };
    };
});
var applyRemoteData = new Control_Apply.Apply(function () {
    return functorRemoteData;
}, function (v) {
    return function (v1) {
        if (v instanceof Success && v1 instanceof Success) {
            return new Success(v.value0(v1.value0));
        };
        if (v instanceof Failure) {
            return new Failure(v.value0);
        };
        if (v1 instanceof Failure) {
            return new Failure(v1.value0);
        };
        if (v instanceof NotAsked) {
            return NotAsked.value;
        };
        if (v1 instanceof NotAsked) {
            return NotAsked.value;
        };
        if (v instanceof Loading) {
            return Loading.value;
        };
        if (v1 instanceof Loading) {
            return Loading.value;
        };
        throw new Error("Failed pattern match at Network.RemoteData (line 62, column 1 - line 62, column 49): " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindRemoteData = new Control_Bind.Bind(function () {
    return applyRemoteData;
}, function (v) {
    return function (v1) {
        if (v instanceof NotAsked) {
            return NotAsked.value;
        };
        if (v instanceof Loading) {
            return Loading.value;
        };
        if (v instanceof Failure) {
            return new Failure(v.value0);
        };
        if (v instanceof Success) {
            return v1(v.value0);
        };
        throw new Error("Failed pattern match at Network.RemoteData (line 71, column 1 - line 71, column 47): " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var applicativeRemoteData = new Control_Applicative.Applicative(function () {
    return applyRemoteData;
}, function (value) {
    return new Success(value);
});
var monadRemoteData = new Control_Monad.Monad(function () {
    return applicativeRemoteData;
}, function () {
    return bindRemoteData;
});
var monadThrowRemoteData = new Control_Monad_Error_Class.MonadThrow(function () {
    return monadRemoteData;
}, Failure.create);
var monadErrorRemoteData = new Control_Monad_Error_Class.MonadError(function () {
    return monadThrowRemoteData;
}, function (v) {
    return function (v1) {
        if (v instanceof Failure) {
            return v1(v.value0);
        };
        if (v instanceof Success) {
            return new Success(v.value0);
        };
        if (v instanceof NotAsked) {
            return NotAsked.value;
        };
        if (v instanceof Loading) {
            return Loading.value;
        };
        throw new Error("Failed pattern match at Network.RemoteData (line 85, column 1 - line 85, column 61): " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var _Success = function (dictChoice) {
    var unwrap = function (v) {
        if (v instanceof Success) {
            return new Data_Either.Right(v.value0);
        };
        return new Data_Either.Left(v);
    };
    return Data_Lens_Prism.prism(Success.create)(unwrap)(dictChoice);
};
var isSuccess = Data_Lens_Prism.is(Data_HeytingAlgebra.heytingAlgebraBoolean)(_Success(Data_Lens_Internal_Market.choiceMarket));
var _NotAsked = function (dictChoice) {
    var unwrap = function (v) {
        if (v instanceof NotAsked) {
            return new Data_Either.Right(Data_Unit.unit);
        };
        return new Data_Either.Left(v);
    };
    return Data_Lens_Prism.prism(Data_Function["const"](NotAsked.value))(unwrap)(dictChoice);
};
var isNotAsked = Data_Lens_Prism.is(Data_HeytingAlgebra.heytingAlgebraBoolean)(_NotAsked(Data_Lens_Internal_Market.choiceMarket));
var _Loading = function (dictChoice) {
    var unwrap = function (v) {
        if (v instanceof Loading) {
            return new Data_Either.Right(Data_Unit.unit);
        };
        return new Data_Either.Left(v);
    };
    return Data_Lens_Prism.prism(Data_Function["const"](Loading.value))(unwrap)(dictChoice);
};
var isLoading = Data_Lens_Prism.is(Data_HeytingAlgebra.heytingAlgebraBoolean)(_Loading(Data_Lens_Internal_Market.choiceMarket));
var _Failure = function (dictChoice) {
    var unwrap = function (v) {
        if (v instanceof Failure) {
            return new Data_Either.Right(v.value0);
        };
        return new Data_Either.Left(v);
    };
    return Data_Lens_Prism.prism(Failure.create)(unwrap)(dictChoice);
};
var isFailure = Data_Lens_Prism.is(Data_HeytingAlgebra.heytingAlgebraBoolean)(_Failure(Data_Lens_Internal_Market.choiceMarket));
module.exports = {
    NotAsked: NotAsked,
    Loading: Loading,
    Failure: Failure,
    Success: Success,
    toMaybe: toMaybe,
    fromMaybe: fromMaybe,
    fromEither: fromEither,
    maybe: maybe,
    withDefault: withDefault,
    "_NotAsked": _NotAsked,
    "_Loading": _Loading,
    "_Failure": _Failure,
    "_Success": _Success,
    isNotAsked: isNotAsked,
    isLoading: isLoading,
    isFailure: isFailure,
    isSuccess: isSuccess,
    genericRemoteData: genericRemoteData,
    eqRemoteData: eqRemoteData,
    functorRemoteData: functorRemoteData,
    showRemoteData: showRemoteData,
    bifunctorRemoteData: bifunctorRemoteData,
    applyRemoteData: applyRemoteData,
    bindRemoteData: bindRemoteData,
    applicativeRemoteData: applicativeRemoteData,
    monadRemoteData: monadRemoteData,
    monadThrowRemoteData: monadThrowRemoteData,
    monadErrorRemoteData: monadErrorRemoteData,
    foldableRemoteData: foldableRemoteData,
    traversableRemoteData: traversableRemoteData,
    bifoldableRemoteData: bifoldableRemoteData,
    bitraversableRemoteData: bitraversableRemoteData
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Monad.Error.Class/index.js":28,"../Control.Monad/index.js":55,"../Data.Bifoldable/index.js":100,"../Data.Bifunctor/index.js":106,"../Data.Bitraversable/index.js":109,"../Data.Either/index.js":131,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Generic.Rep/index.js":160,"../Data.HeytingAlgebra/index.js":162,"../Data.Lens.Internal.Market/index.js":181,"../Data.Lens.Prism/index.js":195,"../Data.Lens/index.js":199,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Data.Traversable/index.js":281,"../Data.Unit/index.js":289}],366:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Function = require("../Data.Function/index.js");
var Halogen_HTML = require("../Halogen.HTML/index.js");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");
var Ocelot_HTML_Properties = require("../Ocelot.HTML.Properties/index.js");
var Prelude = require("../Prelude/index.js");
var blockBuilder = function (elem) {
    return function (classes) {
        return function (iprops) {
            return elem(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(classes) ])(iprops));
        };
    };
};
module.exports = {
    blockBuilder: blockBuilder
};

},{"../Data.Function/index.js":145,"../Halogen.HTML.Properties/index.js":338,"../Halogen.HTML/index.js":339,"../Ocelot.HTML.Properties/index.js":380,"../Prelude/index.js":385}],367:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var DOM_HTML_Indexed = require("../DOM.HTML.Indexed/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Halogen_HTML = require("../Halogen.HTML/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements/index.js");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");
var Ocelot_HTML_Properties = require("../Ocelot.HTML.Properties/index.js");
var Prelude = require("../Prelude/index.js");
var rightClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "rounded-r" ]);
var leftClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "mr-px", "rounded-l" ]);
var centerClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "mr-px" ]);
var buttonSharedClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "no-outline", "px-4", "py-2", "!active:border-b", "active:border-t", "disabled:opacity-50", "disabled:cursor-default", "!disabled:cursor-pointer" ]);
var buttonPrimaryClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-blue-88", "border-blue-88", "hover:!disabled:bg-blue-82", "focus:bg-blue-82", "text-white" ]);
var buttonMainClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonSharedClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "rounded" ]));
var buttonGroupClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex", "items-center" ]);
var buttonGroupBuilder = function (classes) {
    return function (iprops) {
        return Halogen_HTML_Elements.button(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonSharedClasses)(classes)) ])(iprops));
    };
};
var buttonPrimaryCenter = buttonGroupBuilder(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonPrimaryClasses)(centerClasses));
var buttonPrimaryCenter_ = buttonPrimaryCenter([  ]);
var buttonPrimaryLeft = buttonGroupBuilder(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonPrimaryClasses)(leftClasses));
var buttonPrimaryLeft_ = buttonPrimaryLeft([  ]);
var buttonPrimaryRight = buttonGroupBuilder(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonPrimaryClasses)(rightClasses));
var buttonPrimaryRight_ = buttonPrimaryRight([  ]);
var buttonGroup = function (iprops) {
    return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(buttonGroupClasses) ])(iprops));
};
var buttonGroup_ = buttonGroup([  ]);
var buttonDarkClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-grey-70-a30", "border-grey-70-a30", "hover:!disabled:bg-grey-70-a40", "focus:bg-grey-70-a40", "text-grey-70" ]);
var buttonDarkLeft = buttonGroupBuilder(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonDarkClasses)(leftClasses));
var buttonDarkLeft_ = buttonDarkLeft([  ]);
var buttonDarkRight = buttonGroupBuilder(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonDarkClasses)(rightClasses));
var buttonDarkRight_ = buttonDarkRight([  ]);
var buttonDarkCenter = buttonGroupBuilder(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonDarkClasses)(centerClasses));
var buttonDarkCenter_ = buttonDarkCenter([  ]);
var buttonClearClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-transparent", "border-transparent", "text-grey-70", "hover:text-grey-70-a30", "focus:text-grey-70-a30" ]);
var buttonClearLeft = buttonGroupBuilder(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonClearClasses)(leftClasses));
var buttonClearLeft_ = buttonClearLeft([  ]);
var buttonClearRight = buttonGroupBuilder(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonClearClasses)(rightClasses));
var buttonClearRight_ = buttonClearRight([  ]);
var buttonClearCenter = buttonGroupBuilder(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonClearClasses)(centerClasses));
var buttonClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-grey-50-a20", "border-grey-50-a20", "hover:!disabled:bg-grey-50-a30", "focus:bg-grey-50-a30", "text-black-20" ]);
var buttonLeft = buttonGroupBuilder(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonClasses)(leftClasses));
var buttonLeft_ = buttonLeft([  ]);
var buttonRight = buttonGroupBuilder(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonClasses)(rightClasses));
var buttonRight_ = buttonRight([  ]);
var buttonCenter = buttonGroupBuilder(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonClasses)(centerClasses));
var buttonCenter_ = buttonCenter([  ]);
var buttonBuilder = function (classes) {
    return function (iprops) {
        return Halogen_HTML_Elements.button(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonMainClasses)(classes)) ])(iprops));
    };
};
var buttonClear = buttonBuilder(buttonClearClasses);
var buttonClear_ = buttonClear([  ]);
var buttonDark = buttonBuilder(buttonDarkClasses);
var buttonDark_ = buttonDark([  ]);
var buttonPrimary = buttonBuilder(buttonPrimaryClasses);
var buttonPrimary_ = buttonPrimary([  ]);
var button = buttonBuilder(buttonClasses);
var button_ = button([  ]);
module.exports = {
    buttonSharedClasses: buttonSharedClasses,
    buttonMainClasses: buttonMainClasses,
    buttonClasses: buttonClasses,
    buttonPrimaryClasses: buttonPrimaryClasses,
    buttonDarkClasses: buttonDarkClasses,
    buttonClearClasses: buttonClearClasses,
    buttonGroupClasses: buttonGroupClasses,
    centerClasses: centerClasses,
    leftClasses: leftClasses,
    rightClasses: rightClasses,
    buttonBuilder: buttonBuilder,
    button: button,
    button_: button_,
    buttonPrimary: buttonPrimary,
    buttonPrimary_: buttonPrimary_,
    buttonDark: buttonDark,
    buttonDark_: buttonDark_,
    buttonClear: buttonClear,
    buttonClear_: buttonClear_,
    buttonGroup: buttonGroup,
    buttonGroup_: buttonGroup_,
    buttonGroupBuilder: buttonGroupBuilder,
    buttonCenter: buttonCenter,
    buttonCenter_: buttonCenter_,
    buttonPrimaryCenter: buttonPrimaryCenter,
    buttonPrimaryCenter_: buttonPrimaryCenter_,
    buttonDarkCenter: buttonDarkCenter,
    buttonDarkCenter_: buttonDarkCenter_,
    buttonClearCenter: buttonClearCenter,
    buttonLeft: buttonLeft,
    buttonLeft_: buttonLeft_,
    buttonPrimaryLeft: buttonPrimaryLeft,
    buttonPrimaryLeft_: buttonPrimaryLeft_,
    buttonDarkLeft: buttonDarkLeft,
    buttonDarkLeft_: buttonDarkLeft_,
    buttonClearLeft: buttonClearLeft,
    buttonClearLeft_: buttonClearLeft_,
    buttonRight: buttonRight,
    buttonRight_: buttonRight_,
    buttonPrimaryRight: buttonPrimaryRight,
    buttonPrimaryRight_: buttonPrimaryRight_,
    buttonDarkRight: buttonDarkRight,
    buttonDarkRight_: buttonDarkRight_,
    buttonClearRight: buttonClearRight,
    buttonClearRight_: buttonClearRight_
};

},{"../DOM.HTML.Indexed/index.js":76,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Semigroup/index.js":248,"../Halogen.HTML.Core/index.js":334,"../Halogen.HTML.Elements/index.js":335,"../Halogen.HTML.Properties/index.js":338,"../Halogen.HTML/index.js":339,"../Ocelot.HTML.Properties/index.js":380,"../Prelude/index.js":385}],368:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var DOM_HTML_Indexed = require("../DOM.HTML.Indexed/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Halogen_HTML = require("../Halogen.HTML/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements/index.js");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");
var Ocelot_HTML_Properties = require("../Ocelot.HTML.Properties/index.js");
var Prelude = require("../Prelude/index.js");
var innerCardClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "m-6" ]);
var innerCard = function (iprops) {
    return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(innerCardClasses) ])(iprops));
};
var innerCard_ = innerCard([  ]);
var baseCardClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-white", "mb-6", "rounded", "clearfix" ]);
var baseCard = function (iprops) {
    return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(baseCardClasses) ])(iprops));
};
var baseCard_ = baseCard([  ]);
var card = function (iprops) {
    return function (html) {
        return baseCard(iprops)([ innerCard_(html) ]);
    };
};
var card_ = card([  ]);
module.exports = {
    baseCardClasses: baseCardClasses,
    innerCardClasses: innerCardClasses,
    baseCard: baseCard,
    baseCard_: baseCard_,
    innerCard: innerCard,
    innerCard_: innerCard_,
    card: card,
    card_: card_
};

},{"../DOM.HTML.Indexed/index.js":76,"../Data.Functor/index.js":153,"../Halogen.HTML.Core/index.js":334,"../Halogen.HTML.Elements/index.js":335,"../Halogen.HTML.Properties/index.js":338,"../Halogen.HTML/index.js":339,"../Ocelot.HTML.Properties/index.js":380,"../Prelude/index.js":385}],369:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var DOM_HTML_Indexed = require("../DOM.HTML.Indexed/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Halogen_HTML = require("../Halogen.HTML/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements/index.js");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");
var Ocelot_Block_Format = require("../Ocelot.Block.Format/index.js");
var Ocelot_HTML_Properties = require("../Ocelot.HTML.Properties/index.js");
var Prelude = require("../Prelude/index.js");
var labelClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "block", "font-medium", "leading-loose", "text-black-20" ]);
var helpTextClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(Ocelot_Block_Format.mutedClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "block", "font-light", "pt-3" ]));
var helpText = function (iprops) {
    return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(helpTextClasses) ])(iprops));
};
var helpText_ = helpText([  ]);
var fieldClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "w-full", "mb-10" ]);
var errorTextClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "block", "text-red", "font-medium", "pt-3" ]);
var error = function (iprops) {
    return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(errorTextClasses) ])(iprops));
};
var error_ = error([  ]);
var field$prime = function (config) {
    return function (iprops) {
        return function (html) {
            return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(fieldClasses) ])(iprops))([ Halogen_HTML_Elements.label([ Halogen_HTML_Properties.classes(labelClasses), Halogen_HTML_Properties["for"](config.inputId) ])([ Halogen_HTML.fromPlainHTML(config.label) ]), html, error_(config.error), helpText_(config.helpText) ]);
        };
    };
};
var field = function (config) {
    return function (iprops) {
        return function (html) {
            return field$prime(config)(iprops)(Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("my-1") ])(html));
        };
    };
};
var field_ = function (config) {
    return field(config)([  ]);
};
var fieldMid = function (config) {
    return function (iprops) {
        return function (html) {
            return field$prime(config)(iprops)(Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("my-1 md:w-1/2") ])(html));
        };
    };
};
var fieldMid_ = function (config) {
    return fieldMid(config)([  ]);
};
var fieldSmall = function (config) {
    return function (iprops) {
        return function (html) {
            return field$prime(config)(iprops)(Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("my-1 md:w-1/4") ])(html));
        };
    };
};
var fieldSmall_ = function (config) {
    return fieldSmall(config)([  ]);
};
var fieldset = function (config) {
    return function (iprops) {
        return function (html) {
            return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(fieldClasses) ])(iprops))([ Halogen_HTML_Elements.fieldset([  ])([ Halogen_HTML_Elements.legend([ Halogen_HTML_Properties.classes(labelClasses) ])([ Halogen_HTML.fromPlainHTML(config.label) ]), Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("my-1") ])(html), error_(config.error), helpText_(config.helpText) ]) ]);
        };
    };
};
var fieldset_ = function (config) {
    return fieldset(config)([  ]);
};
module.exports = {
    fieldClasses: fieldClasses,
    helpTextClasses: helpTextClasses,
    errorTextClasses: errorTextClasses,
    labelClasses: labelClasses,
    "field'": field$prime,
    field: field,
    field_: field_,
    fieldSmall: fieldSmall,
    fieldSmall_: fieldSmall_,
    fieldMid: fieldMid,
    fieldMid_: fieldMid_,
    fieldset: fieldset,
    fieldset_: fieldset_,
    error: error,
    error_: error_,
    helpText: helpText,
    helpText_: helpText_
};

},{"../DOM.HTML.Indexed/index.js":76,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Semigroup/index.js":248,"../Halogen.HTML.Core/index.js":334,"../Halogen.HTML.Elements/index.js":335,"../Halogen.HTML.Properties/index.js":338,"../Halogen.HTML/index.js":339,"../Ocelot.Block.Format/index.js":370,"../Ocelot.HTML.Properties/index.js":380,"../Prelude/index.js":385}],370:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var DOM_HTML_Indexed = require("../DOM.HTML.Indexed/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Halogen_HTML = require("../Halogen.HTML/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements/index.js");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");
var Ocelot_HTML_Properties = require("../Ocelot.HTML.Properties/index.js");
var Prelude = require("../Prelude/index.js");
var subHeadingClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "text-xl", "font-medium", "leading-loose", "flex", "items-center", "mb-6" ]);
var subHeadingDarkClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(subHeadingClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "text-white" ]));
var subHeadingDark = function (iprops) {
    return Halogen_HTML_Elements.h2(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(subHeadingDarkClasses) ])(iprops));
};
var subHeadingDark_ = subHeadingDark([  ]);
var subHeading = function (iprops) {
    return function (html) {
        return Halogen_HTML_Elements.h2(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(subHeadingClasses) ])(iprops))(html);
    };
};
var subHeading_ = subHeading([  ]);
var pClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "mb-6" ]);
var p = function (iprops) {
    return Halogen_HTML_Elements.p(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(pClasses) ])(iprops));
};
var p_ = p([  ]);
var mutedClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "text-grey-50" ]);
var linkDarkClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "text-grey-light", "hover:text-grey-lighter", "no-underline", "font-medium", "cursor-pointer" ]);
var linkClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "text-blue-75", "hover:text-blue-65", "no-underline", "font-medium", "cursor-pointer" ]);
var headingClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "mb-6", "text-3xl", "font-normal", "leading-loose", "flex", "items-center" ]);
var headingDarkClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(headingClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "text-white" ]));
var headingDark = function (iprops) {
    return Halogen_HTML_Elements.h1(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(headingDarkClasses) ])(iprops));
};
var headingDark_ = headingDark([  ]);
var heading = function (iprops) {
    return Halogen_HTML_Elements.h1(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(headingClasses) ])(iprops));
};
var heading_ = heading([  ]);
var contentHeadingClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "mb-6", "text-lg", "font-normal", "leading-loose", "flex", "items-center" ]);
var contentHeading = function (iprops) {
    return Halogen_HTML_Elements.h3(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(contentHeadingClasses) ])(iprops));
};
var contentHeading_ = contentHeading([  ]);
var captionClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "block", "font-light", "mb-6", "text-grey-70", "text-sm", "tracking-wide", "uppercase" ]);
var caption = function (iprops) {
    return Halogen_HTML_Elements.h4(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(captionClasses) ])(iprops));
};
var caption_ = caption([  ]);
module.exports = {
    headingClasses: headingClasses,
    headingDarkClasses: headingDarkClasses,
    subHeadingClasses: subHeadingClasses,
    subHeadingDarkClasses: subHeadingDarkClasses,
    contentHeadingClasses: contentHeadingClasses,
    captionClasses: captionClasses,
    linkClasses: linkClasses,
    linkDarkClasses: linkDarkClasses,
    mutedClasses: mutedClasses,
    pClasses: pClasses,
    heading: heading,
    heading_: heading_,
    headingDark: headingDark,
    headingDark_: headingDark_,
    subHeading: subHeading,
    subHeading_: subHeading_,
    subHeadingDark: subHeadingDark,
    subHeadingDark_: subHeadingDark_,
    contentHeading: contentHeading,
    contentHeading_: contentHeading_,
    caption: caption,
    caption_: caption_,
    p: p,
    p_: p_
};

},{"../DOM.HTML.Indexed/index.js":76,"../Data.Functor/index.js":153,"../Data.Semigroup/index.js":248,"../Halogen.HTML.Core/index.js":334,"../Halogen.HTML.Elements/index.js":335,"../Halogen.HTML.Properties/index.js":338,"../Halogen.HTML/index.js":339,"../Ocelot.HTML.Properties/index.js":380,"../Prelude/index.js":385}],371:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var DOM_HTML_Indexed = require("../DOM.HTML.Indexed/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Halogen_HTML = require("../Halogen.HTML/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements/index.js");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");
var Halogen_HTML_Properties_ARIA = require("../Halogen.HTML.Properties.ARIA/index.js");
var Ocelot_HTML_Properties = require("../Ocelot.HTML.Properties/index.js");
var Prelude = require("../Prelude/index.js");
var icon = function (className) {
    return function (iprops) {
        return Halogen_HTML_Elements.span([ Halogen_HTML_Properties_ARIA.label(className), Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "inline-block" ])) ])([ Halogen_HTML_Elements.span(Ocelot_HTML_Properties.appendIProps(iprops)([ Halogen_HTML_Properties_ARIA.hidden("true"), Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ className, "inline-block" ])) ]))([  ]) ]);
    };
};
var info = icon("icon-info");
var info_ = info([  ]);
var instagram = icon("icon-instagram");
var instagram_ = instagram([  ]);
var menu = icon("icon-menu");
var menu_ = menu([  ]);
var navigate = icon("icon-navigate");
var navigate_ = navigate([  ]);
var options = icon("icon-options");
var options_ = options([  ]);
var plus = icon("icon-plus");
var plus_ = plus([  ]);
var refresh = icon("icon-refresh");
var refresh_ = refresh([  ]);
var search = icon("icon-search");
var search_ = search([  ]);
var selected = icon("icon-selected");
var selected_ = selected([  ]);
var settings = icon("icon-settings");
var settings_ = settings([  ]);
var share = icon("icon-share");
var share_ = share([  ]);
var success = icon("icon-success");
var success_ = success([  ]);
var timeline = icon("icon-timeline");
var timeline_ = timeline([  ]);
var tip = icon("icon-tip");
var tip_ = tip([  ]);
var twitter = icon("icon-twitter");
var twitter_ = twitter([  ]);
var facebook = icon("icon-facebook");
var facebook_ = facebook([  ]);
var expand = icon("icon-expand");
var expand_ = expand([  ]);
var error = icon("icon-error");
var error_ = error([  ]);
var download = icon("icon-download");
var download_ = download([  ]);
var deleteCircle = icon("icon-delete-circle");
var deleteCircle_ = deleteCircle([  ]);
var $$delete = icon("icon-delete");
var delete_ = $$delete([  ]);
var dataSources = icon("icon-data-sources");
var dataSources_ = dataSources([  ]);
var collapse = icon("icon-collapse");
var collapse_ = collapse([  ]);
var close = icon("icon-close");
var close_ = close([  ]);
var chevronRight = icon("icon-chevron-right");
var chevronRight_ = chevronRight([  ]);
var chevronLeft = icon("icon-chevron-left");
var chevronLeft_ = chevronLeft([  ]);
var caratUp = icon("icon-carat-up");
var caratUp_ = caratUp([  ]);
var caratRight = icon("icon-carat-right");
var caratRight_ = caratRight([  ]);
var caratLeft = icon("icon-carat-left");
var caratLeft_ = caratLeft([  ]);
var caratDown = icon("icon-carat-down");
var caratDown_ = caratDown([  ]);
var back = icon("icon-back");
var back_ = back([  ]);
var arrowUp = icon("icon-arrow-up");
var arrowUp_ = arrowUp([  ]);
var arrowRight = icon("icon-arrow-right");
var arrowRight_ = arrowRight([  ]);
var arrowLeft = icon("icon-arrow-left");
var arrowLeft_ = arrowLeft([  ]);
var arrowDown = icon("icon-arrow-down");
var arrowDown_ = arrowDown([  ]);
var added = icon("icon-added");
var added_ = added([  ]);
var add = icon("icon-add");
var add_ = add([  ]);
module.exports = {
    icon: icon,
    add: add,
    add_: add_,
    added: added,
    added_: added_,
    arrowDown: arrowDown,
    arrowDown_: arrowDown_,
    arrowLeft: arrowLeft,
    arrowLeft_: arrowLeft_,
    arrowRight: arrowRight,
    arrowRight_: arrowRight_,
    arrowUp: arrowUp,
    arrowUp_: arrowUp_,
    back: back,
    back_: back_,
    caratDown: caratDown,
    caratDown_: caratDown_,
    caratLeft: caratLeft,
    caratLeft_: caratLeft_,
    caratRight: caratRight,
    caratRight_: caratRight_,
    caratUp: caratUp,
    caratUp_: caratUp_,
    chevronLeft: chevronLeft,
    chevronLeft_: chevronLeft_,
    chevronRight: chevronRight,
    chevronRight_: chevronRight_,
    close: close,
    close_: close_,
    collapse: collapse,
    collapse_: collapse_,
    dataSources: dataSources,
    dataSources_: dataSources_,
    "delete": $$delete,
    delete_: delete_,
    deleteCircle: deleteCircle,
    deleteCircle_: deleteCircle_,
    download: download,
    download_: download_,
    error: error,
    error_: error_,
    expand: expand,
    expand_: expand_,
    facebook: facebook,
    facebook_: facebook_,
    info: info,
    info_: info_,
    instagram: instagram,
    instagram_: instagram_,
    menu: menu,
    menu_: menu_,
    navigate: navigate,
    navigate_: navigate_,
    options: options,
    options_: options_,
    plus: plus,
    plus_: plus_,
    refresh: refresh,
    refresh_: refresh_,
    search: search,
    search_: search_,
    selected: selected,
    selected_: selected_,
    settings: settings,
    settings_: settings_,
    share: share,
    share_: share_,
    success: success,
    success_: success_,
    timeline: timeline,
    timeline_: timeline_,
    tip: tip,
    tip_: tip_,
    twitter: twitter,
    twitter_: twitter_
};

},{"../DOM.HTML.Indexed/index.js":76,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Halogen.HTML.Core/index.js":334,"../Halogen.HTML.Elements/index.js":335,"../Halogen.HTML.Properties.ARIA/index.js":337,"../Halogen.HTML.Properties/index.js":338,"../Halogen.HTML/index.js":339,"../Ocelot.HTML.Properties/index.js":380,"../Prelude/index.js":385}],372:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var DOM_HTML_Indexed = require("../DOM.HTML.Indexed/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Halogen_HTML = require("../Halogen.HTML/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements/index.js");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");
var Ocelot_HTML_Properties = require("../Ocelot.HTML.Properties/index.js");
var Prelude = require("../Prelude/index.js");
var inputSharedClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-white", "border-t-2", "border-b-2", "font-light", "cc-blue-88", "border-grey-80", "disabled:bg-grey-95", "disabled:text-grey-70", "focus:no-outline", "py-2" ]);
var leftClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(inputSharedClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "border-l-2", "pl-3", "pr-1" ]));
var mainItemClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(inputSharedClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "w-full", "focus:border-blue-88", "focus:sibling:border-blue-88", "group-hover:!focus:!disabled:border-grey-70", "group-hover:!focus:!disabled:sibling:border-grey-70", "disabled:sibling:bg-grey-95" ]));
var mainLeftClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(mainItemClasses)(leftClasses);
var rightClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(inputSharedClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "border-r-2", "pr-3", "pl-1" ]));
var mainRightClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(mainItemClasses)(rightClasses);
var inputRight = function (iprops) {
    return Halogen_HTML_Elements.input(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(mainRightClasses) ])(iprops));
};
var inputLeft = function (iprops) {
    return Halogen_HTML_Elements.input(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(mainLeftClasses) ])(iprops));
};
var inputGroupClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex", "group", "w-full", "items-center" ]);
var inputGroup$prime = function (elem) {
    return function (iprops) {
        return function (html) {
            return elem(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(inputGroupClasses) ])(iprops))(html);
        };
    };
};
var inputGroup = inputGroup$prime(Halogen_HTML_Elements.label);
var inputGroup_ = inputGroup([  ]);
var inputClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(inputSharedClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "border-l-2", "border-r-2", "w-full", "px-3", "focus:border-blue-88", "!focus:!disabled:hover:border-grey-70" ]));
var textareaClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(inputClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "min-h-40" ]));
var textarea = function (iprops) {
    return Halogen_HTML_Elements.textarea(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(textareaClasses) ])(iprops));
};
var input = function (iprops) {
    return Halogen_HTML_Elements.input(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(inputClasses) ])(iprops));
};
var centerClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(inputSharedClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "pl-1", "pr-1" ]));
var mainCenterClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(mainItemClasses)(centerClasses);
var inputCenter = function (iprops) {
    return Halogen_HTML_Elements.input(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(mainCenterClasses) ])(iprops));
};
var borderClasses = [  ];
var borderLeftClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(borderClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "border-r", "pr-3", "order-start" ]));
var borderRightClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(borderClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "border-l", "pl-3" ]));
var addonClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(inputSharedClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "cursor-pointer", "text-grey-70" ]));
var addonLeftClassess = Data_Semigroup.append(Data_Semigroup.semigroupArray)(addonClasses)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(leftClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "order-start" ])));
var addonLeft = function (iprops) {
    return function (html) {
        return Halogen_HTML_Elements.span(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(addonLeftClassess) ])(iprops))(html);
    };
};
var addonLeft_ = addonLeft([  ]);
var borderLeft = function (iprops) {
    return function (html) {
        return addonLeft_([ Halogen_HTML_Elements.span(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(borderLeftClasses) ])(iprops))(html) ]);
    };
};
var borderLeft_ = borderLeft([  ]);
var currency = function (lprops) {
    return function (iprops) {
        return inputGroup(lprops)([ inputRight(iprops), addonLeft_([ Halogen_HTML_Core.text("$") ]) ]);
    };
};
var currency_ = currency([  ]);
var addonRightClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(addonClasses)(rightClasses);
var addonRight = function (iprops) {
    return function (html) {
        return Halogen_HTML_Elements.span(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(addonRightClasses) ])(iprops))(html);
    };
};
var addonRight_ = addonRight([  ]);
var borderRight = function (iprops) {
    return function (html) {
        return addonRight_([ Halogen_HTML_Elements.span(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(borderRightClasses) ])(iprops))(html) ]);
    };
};
var borderRight_ = borderRight([  ]);
var percentage = function (lprops) {
    return function (iprops) {
        return inputGroup(lprops)([ inputLeft(iprops), addonRight_([ Halogen_HTML_Core.text("%") ]) ]);
    };
};
var percentage_ = percentage([  ]);
var addonCenterClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(addonClasses)(centerClasses);
var addonCenter = function (iprops) {
    return function (html) {
        return Halogen_HTML_Elements.span(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(addonCenterClasses) ])(iprops))(html);
    };
};
var addonCenter_ = addonCenter([  ]);
module.exports = {
    inputSharedClasses: inputSharedClasses,
    inputClasses: inputClasses,
    inputGroupClasses: inputGroupClasses,
    mainItemClasses: mainItemClasses,
    centerClasses: centerClasses,
    leftClasses: leftClasses,
    rightClasses: rightClasses,
    mainCenterClasses: mainCenterClasses,
    mainLeftClasses: mainLeftClasses,
    mainRightClasses: mainRightClasses,
    addonClasses: addonClasses,
    addonCenterClasses: addonCenterClasses,
    addonLeftClassess: addonLeftClassess,
    addonRightClasses: addonRightClasses,
    borderClasses: borderClasses,
    borderLeftClasses: borderLeftClasses,
    borderRightClasses: borderRightClasses,
    textareaClasses: textareaClasses,
    input: input,
    inputGroup: inputGroup,
    "inputGroup'": inputGroup$prime,
    inputGroup_: inputGroup_,
    inputCenter: inputCenter,
    inputLeft: inputLeft,
    inputRight: inputRight,
    addonCenter: addonCenter,
    addonCenter_: addonCenter_,
    addonLeft: addonLeft,
    addonLeft_: addonLeft_,
    addonRight: addonRight,
    addonRight_: addonRight_,
    borderLeft: borderLeft,
    borderLeft_: borderLeft_,
    borderRight: borderRight,
    borderRight_: borderRight_,
    percentage: percentage,
    percentage_: percentage_,
    currency: currency,
    currency_: currency_,
    textarea: textarea
};

},{"../DOM.HTML.Indexed/index.js":76,"../Data.Functor/index.js":153,"../Data.Semigroup/index.js":248,"../Halogen.HTML.Core/index.js":334,"../Halogen.HTML.Elements/index.js":335,"../Halogen.HTML.Properties/index.js":338,"../Halogen.HTML/index.js":339,"../Ocelot.HTML.Properties/index.js":380,"../Prelude/index.js":385}],373:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var DOM_HTML_Indexed = require("../DOM.HTML.Indexed/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");
var Data_Fuzzy = require("../Data.Fuzzy/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Foreign_Object = require("../Foreign.Object/index.js");
var Halogen = require("../Halogen/index.js");
var Halogen_HTML = require("../Halogen.HTML/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements/index.js");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");
var Ocelot_Block_Icon = require("../Ocelot.Block.Icon/index.js");
var Ocelot_HTML_Properties = require("../Ocelot.HTML.Properties/index.js");
var Prelude = require("../Prelude/index.js");
var Select = require("../Select/index.js");
var Select_Setters = require("../Select.Setters/index.js");
var ulClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "list-reset" ]);
var selectionGroupClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex", "items-start", "justify-between" ]);
var menuClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-white", "text-black-20", "border", "list-reset", "rounded", "shadow", "absolute", "z-60", "min-w-50" ]);
var liClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "px-4", "py-2", "rounded-sm", "text-black-20", "group", "hover:bg-grey-97", "cursor-pointer" ]);
var droprightClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(menuClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "absolute", "pin-t", "pin-l-full" ]));
var dropdownItem = function (elem) {
    return function (props) {
        return function (html) {
            return function (selected) {
                return function (highlighted) {
                    var itemClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(liClasses)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ "flex" ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)((function () {
                        if (highlighted) {
                            return [ "bg-grey-lighter" ];
                        };
                        return [  ];
                    })())((function () {
                        if (selected) {
                            return [ "font-medium" ];
                        };
                        return [  ];
                    })())));
                    var checkmarkClass = Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "mr-2", "text-green" ]))((function () {
                        if (selected) {
                            return [  ];
                        };
                        return [ "invisible" ];
                    })());
                    return elem(Ocelot_HTML_Properties.appendIProps(props)([ Halogen_HTML_Properties.classes(itemClasses) ]))(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Ocelot_Block_Icon.selected([ Halogen_HTML_Properties.classes(checkmarkClass) ]) ])(html));
                };
            };
        };
    };
};
var dropdownClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(menuClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "absolute", "pin-t-full", "pin-l", "max-h-160", "overflow-y-auto" ]));
var dropdownContainer = function (addlHTML) {
    return function (renderItem) {
        return function (selected) {
            return function (items) {
                return function (hix) {
                    var renderItem$prime = function (idx) {
                        return function (item) {
                            return dropdownItem(Halogen_HTML_Elements.li)(Select_Setters.setItemProps(idx)([  ]))([ Halogen_HTML.fromPlainHTML(renderItem(item)) ])(selected(item))(Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(hix)(new Data_Maybe.Just(idx)));
                        };
                    };
                    var renderItems = [ Halogen_HTML_Elements.ul([ Halogen_HTML_Properties.classes(ulClasses) ])(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(renderItem$prime)(items)) ];
                    return Halogen_HTML_Elements.div(Select_Setters.setContainerProps([ Halogen_HTML_Properties.classes(dropdownClasses) ]))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(addlHTML)(renderItems));
                };
            };
        };
    };
};
var dropdownButton = function (button) {
    return function (iprops) {
        return function (html) {
            return button(Ocelot_HTML_Properties.appendIProps([ Ocelot_HTML_Properties.css("font-medium flex items-center") ])(iprops))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(html)([ Ocelot_Block_Icon.caratDown([ Ocelot_HTML_Properties.css("ml-3 text-xs") ]) ]));
        };
    };
};
var buttonClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "invisible", "text-grey-80", "hover:text-grey-70", "group-hover:visible" ]);
var selectionGroup = function (f) {
    return function (divprops) {
        return function (btnprops) {
            return function (item) {
                return Halogen_HTML_Elements.div(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(selectionGroupClasses) ])(divprops))([ Halogen_HTML.fromPlainHTML(f(item)), Halogen_HTML_Elements.button(Ocelot_HTML_Properties.appendIProps([ Halogen_HTML_Properties.classes(buttonClasses) ])(btnprops))([ Halogen_HTML_Core.text("\u2715") ]) ]);
            };
        };
    };
};
var boldMatches = function (key) {
    return function (v) {
        var boldMatch = function (v1) {
            if (v1 instanceof Data_Either.Left) {
                return Halogen_HTML_Core.text(v1.value0);
            };
            if (v1 instanceof Data_Either.Right) {
                return Halogen_HTML_Elements.span([ Halogen_HTML_Properties.class_("font-bold") ])([ Halogen_HTML_Core.text(v1.value0) ]);
            };
            throw new Error("Failed pattern match at Ocelot.Block.ItemContainer (line 250, column 5 - line 250, column 39): " + [ v1.constructor.name ]);
        };
        return Data_Functor.map(Data_Functor.functorArray)(boldMatch)(Data_Maybe.fromMaybe([ new Data_Either.Left(key) ])(Foreign_Object.lookup(key)(v.segments)));
    };
};
var baseClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-white", "border-grey-80", "border-l-2", "border-r-2", "w-full" ]);
var itemContainerClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(baseClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "absolute", "shadow", "max-h-120", "overflow-y-auto", "z-50", "border-b-2", "pin-t-full", "pin-l" ]));
var itemContainer = function (highlightIndex) {
    return function (itemsHTML) {
        return function (addlHTML) {
            var hover = function (i) {
                var $12 = Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(highlightIndex)(new Data_Maybe.Just(i));
                if ($12) {
                    return Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-grey-lighter" ]);
                };
                return Data_Monoid.mempty(Data_Monoid.monoidArray);
            };
            var renderItems = [ Halogen_HTML_Elements.ul([ Halogen_HTML_Properties.classes(ulClasses) ])(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(function (i) {
                return function (h) {
                    return Halogen_HTML_Elements.li(Select_Setters.setItemProps(i)([ Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(liClasses)(hover(i))) ]))([ Halogen_HTML.fromPlainHTML(h) ]);
                };
            })(itemsHTML)) ];
            return Halogen_HTML_Elements.div(Select_Setters.setContainerProps([ Halogen_HTML_Properties.classes(itemContainerClasses) ]))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(renderItems)(addlHTML));
        };
    };
};
var selectionContainerClasses = Data_Semigroup.append(Data_Semigroup.semigroupArray)(baseClasses)(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "border-t-2" ]));
var selectionContainer = function (v) {
    if (v.length === 0) {
        return Halogen_HTML_Elements.div_([  ]);
    };
    return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(selectionContainerClasses) ])([ Halogen_HTML_Elements.ul([ Halogen_HTML_Properties.classes(ulClasses) ])(Data_Functor.mapFlipped(Data_Functor.functorArray)(v)(function (h) {
        return Halogen_HTML_Elements.li([ Halogen_HTML_Properties.classes(Data_Array.cons("py-2")(liClasses)) ])([ h ]);
    })) ]);
};
module.exports = {
    menuClasses: menuClasses,
    dropdownClasses: dropdownClasses,
    droprightClasses: droprightClasses,
    baseClasses: baseClasses,
    selectionContainerClasses: selectionContainerClasses,
    itemContainerClasses: itemContainerClasses,
    ulClasses: ulClasses,
    liClasses: liClasses,
    selectionGroupClasses: selectionGroupClasses,
    buttonClasses: buttonClasses,
    dropdownButton: dropdownButton,
    dropdownContainer: dropdownContainer,
    dropdownItem: dropdownItem,
    itemContainer: itemContainer,
    selectionContainer: selectionContainer,
    selectionGroup: selectionGroup,
    boldMatches: boldMatches
};

},{"../DOM.HTML.Indexed/index.js":76,"../Data.Array/index.js":99,"../Data.Either/index.js":131,"../Data.Eq/index.js":135,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.FunctorWithIndex/index.js":155,"../Data.Fuzzy/index.js":156,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Semigroup/index.js":248,"../Foreign.Object/index.js":318,"../Halogen.HTML.Core/index.js":334,"../Halogen.HTML.Elements/index.js":335,"../Halogen.HTML.Properties/index.js":338,"../Halogen.HTML/index.js":339,"../Halogen/index.js":353,"../Ocelot.Block.Icon/index.js":371,"../Ocelot.HTML.Properties/index.js":380,"../Prelude/index.js":385,"../Select.Setters/index.js":405,"../Select/index.js":406}],374:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var DOM_HTML_Indexed = require("../DOM.HTML.Indexed/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Halogen_HTML = require("../Halogen.HTML/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements/index.js");
var Ocelot_Block_Builder = require("../Ocelot.Block.Builder/index.js");
var Prelude = require("../Prelude/index.js");
var stickyClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "fixed", "pin-t", "pin-x", "w-full", "shadow-md", "z-60" ]);
var sticky = Ocelot_Block_Builder.blockBuilder(Halogen_HTML_Elements.div)(stickyClasses);
var sticky_ = sticky([  ]);
var sideClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex-2", "p-8" ]);
var side = Ocelot_Block_Builder.blockBuilder(Halogen_HTML_Elements.div)(sideClasses);
var side_ = side([  ]);
var sectionClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "my-8" ]);
var section = Ocelot_Block_Builder.blockBuilder(Halogen_HTML_Elements.div)(sectionClasses);
var section_ = section([  ]);
var popoverClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "absolute", "shadow", "z-50", "border", "border-grey-90", "rounded" ]);
var popover = Ocelot_Block_Builder.blockBuilder(Halogen_HTML_Elements.div)(popoverClasses);
var popover_ = popover([  ]);
var mainClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex-3", "p-8" ]);
var main = Ocelot_Block_Builder.blockBuilder(Halogen_HTML_Elements.div)(mainClasses);
var main_ = main([  ]);
var gridClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "container", "m-auto", "p-8", "flex" ]);
var grid = Ocelot_Block_Builder.blockBuilder(Halogen_HTML_Elements.div)(gridClasses);
var grid_ = grid([  ]);
var containerClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "container", "m-auto" ]);
var container = Ocelot_Block_Builder.blockBuilder(Halogen_HTML_Elements.div)(containerClasses);
var container_ = container([  ]);
var columnClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex-1", "p-8" ]);
var column = Ocelot_Block_Builder.blockBuilder(Halogen_HTML_Elements.div)(columnClasses);
var column_ = column([  ]);
module.exports = {
    popoverClasses: popoverClasses,
    popover: popover,
    popover_: popover_,
    stickyClasses: stickyClasses,
    sticky: sticky,
    sticky_: sticky_,
    containerClasses: containerClasses,
    container: container,
    container_: container_,
    sectionClasses: sectionClasses,
    section: section,
    section_: section_,
    gridClasses: gridClasses,
    grid: grid,
    grid_: grid_,
    columnClasses: columnClasses,
    column: column,
    column_: column_,
    mainClasses: mainClasses,
    main: main,
    main_: main_,
    sideClasses: sideClasses,
    side: side,
    side_: side_
};

},{"../DOM.HTML.Indexed/index.js":76,"../Data.Functor/index.js":153,"../Halogen.HTML.Core/index.js":334,"../Halogen.HTML.Elements/index.js":335,"../Halogen.HTML/index.js":339,"../Ocelot.Block.Builder/index.js":366,"../Prelude/index.js":385}],375:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var DOM_HTML_Indexed = require("../DOM.HTML.Indexed/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Halogen_HTML = require("../Halogen.HTML/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements/index.js");
var Ocelot_Block_Builder = require("../Ocelot.Block.Builder/index.js");
var Prelude = require("../Prelude/index.js");
var tableClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "w-full", "text-left", "border-collapse" ]);
var table = Ocelot_Block_Builder.blockBuilder(Halogen_HTML_Elements.table)(tableClasses);
var table_ = table([  ]);
var row_ = Halogen_HTML_Elements.tr_;
var row = Halogen_HTML_Elements.tr;
var headerClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-grey-90", "py-4", "px-5", "font-medium", "text-black-20" ]);
var header = Ocelot_Block_Builder.blockBuilder(Halogen_HTML_Elements.th)(headerClasses);
var header_ = header([  ]);
var cellClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "bg-white", "p-5", "min-h-20", "border-b", "border-grey-95" ]);
var cell = Ocelot_Block_Builder.blockBuilder(Halogen_HTML_Elements.td)(cellClasses);
var cell_ = cell([  ]);
module.exports = {
    tableClasses: tableClasses,
    table: table,
    table_: table_,
    row: row,
    row_: row_,
    headerClasses: headerClasses,
    header: header,
    header_: header_,
    cellClasses: cellClasses,
    cell: cell,
    cell_: cell_
};

},{"../DOM.HTML.Indexed/index.js":76,"../Data.Functor/index.js":153,"../Halogen.HTML.Core/index.js":334,"../Halogen.HTML.Elements/index.js":335,"../Halogen.HTML/index.js":339,"../Ocelot.Block.Builder/index.js":366,"../Prelude/index.js":385}],376:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var DOM_HTML_Indexed = require("../DOM.HTML.Indexed/index.js");
var DOM_HTML_Indexed_InputType = require("../DOM.HTML.Indexed.InputType/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Halogen_HTML = require("../Halogen.HTML/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements/index.js");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");
var Prelude = require("../Prelude/index.js");
var toggleClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "transition-1/8", "inline-flex", "justify-center", "items-center", "content-box", "h-5", "w-5", "p-1", "rounded-full", "mr-3", "before:bg-white", "before:h-full", "before:w-full", "before:rounded-full", "before:no-content", "before:shadow" ]);
var labelClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "flex", "flex-row", "items-center", "inline-block", "py-1", "cursor-pointer", "leading-loose", "text-black-20" ]);
var inputClasses = Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)([ "checked:sibling:bg-blue-88", "checked:sibling:pl-5", "!checked:sibling:bg-grey-80", "!checked:sibling:pr-5", "offscreen" ]);
var toggle = function (iprops) {
    var iprops$prime = Data_Semigroup.append(Data_Semigroup.semigroupArray)(iprops)([ Halogen_HTML_Properties.classes(inputClasses), Halogen_HTML_Properties.type_(Halogen_HTML_Core.inputTypeIsProp)(DOM_HTML_Indexed_InputType.InputCheckbox.value) ]);
    return Halogen_HTML_Elements.label([ Halogen_HTML_Properties.classes(labelClasses) ])([ Halogen_HTML_Elements.input(iprops$prime), Halogen_HTML_Elements.span([ Halogen_HTML_Properties.classes(toggleClasses) ])([  ]) ]);
};
module.exports = {
    toggle: toggle
};

},{"../DOM.HTML.Indexed.InputType/index.js":66,"../DOM.HTML.Indexed/index.js":76,"../Data.Functor/index.js":153,"../Data.Semigroup/index.js":248,"../Halogen.HTML.Core/index.js":334,"../Halogen.HTML.Elements/index.js":335,"../Halogen.HTML.Properties/index.js":338,"../Halogen.HTML/index.js":339,"../Prelude/index.js":385}],377:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var DOM_HTML_Indexed = require("../DOM.HTML.Indexed/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");
var Halogen = require("../Halogen/index.js");
var Halogen_HTML = require("../Halogen.HTML/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements/index.js");
var Halogen_HTML_Events = require("../Halogen.HTML.Events/index.js");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");
var Ocelot_Block_ItemContainer = require("../Ocelot.Block.ItemContainer/index.js");
var Ocelot_Component_Dropdown = require("../Ocelot.Component.Dropdown/index.js");
var Ocelot_HTML_Properties = require("../Ocelot.HTML.Properties/index.js");
var Prelude = require("../Prelude/index.js");
var Select = require("../Select/index.js");
var Select_Setters = require("../Select.Setters/index.js");
var render = function (dictMonadAff) {
    return function (renderDropdown) {
        return function (state) {
            var selectInput = {
                debounceTime: Data_Maybe.Nothing.value,
                initialSearch: Data_Maybe.Nothing.value,
                inputType: Select.Toggle.value,
                items: state.items,
                render: renderDropdown(state)
            };
            return Halogen_HTML.slot(Data_Unit.unit)(Select.component(dictMonadAff))(selectInput)(Halogen_HTML_Events.input(Ocelot_Component_Dropdown.HandleSelect.create));
        };
    };
};
var defDropdown = function (dictEq) {
    return function (button) {
        return function (props) {
            return function (toString) {
                return function (label) {
                    return function (pst) {
                        return function (cst) {
                            var toggle = Ocelot_Block_ItemContainer.dropdownButton(button)(Select_Setters.setToggleProps(props))([ Halogen_HTML_Core.text(Data_Maybe.maybe(label)(toString)(pst.selectedItem)) ]);
                            var containerClasses = (function () {
                                if (cst.visibility instanceof Select.Off) {
                                    return [ "invisible" ];
                                };
                                if (cst.visibility instanceof Select.On) {
                                    return [  ];
                                };
                                throw new Error("Failed pattern match at Ocelot.Component.Dropdown.Render (line 46, column 24 - line 48, column 22): " + [ cst.visibility.constructor.name ]);
                            })();
                            var menu = Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(containerClasses) ])([ Ocelot_Block_ItemContainer.dropdownContainer([  ])(function ($3) {
                                return Halogen_HTML_Core.text(toString($3));
                            })(function ($4) {
                                return Data_Eq.eq(Data_Maybe.eqMaybe(dictEq))(pst.selectedItem)(Data_Maybe.Just.create($4));
                            })(cst.items)(cst.highlightedIndex) ]);
                            return Halogen_HTML_Elements.div([ Ocelot_HTML_Properties.css("relative") ])([ toggle, menu ]);
                        };
                    };
                };
            };
        };
    };
};
module.exports = {
    defDropdown: defDropdown,
    render: render
};

},{"../Control.Semigroupoid/index.js":61,"../DOM.HTML.Indexed/index.js":76,"../Data.Eq/index.js":135,"../Data.Function/index.js":145,"../Data.Maybe/index.js":210,"../Data.Unit/index.js":289,"../Effect.Aff.Class/index.js":295,"../Halogen.HTML.Core/index.js":334,"../Halogen.HTML.Elements/index.js":335,"../Halogen.HTML.Events/index.js":336,"../Halogen.HTML.Properties/index.js":338,"../Halogen.HTML/index.js":339,"../Halogen/index.js":353,"../Ocelot.Block.ItemContainer/index.js":373,"../Ocelot.Component.Dropdown/index.js":378,"../Ocelot.HTML.Properties/index.js":380,"../Prelude/index.js":385,"../Select.Setters/index.js":405,"../Select/index.js":406}],378:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Comonad_Store = require("../Control.Comonad.Store/index.js");
var Control_Comonad_Store_Class = require("../Control.Comonad.Store.Class/index.js");
var Control_Comonad_Store_Trans = require("../Control.Comonad.Store.Trans/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");
var Halogen = require("../Halogen/index.js");
var Halogen_Component = require("../Halogen.Component/index.js");
var Halogen_HTML = require("../Halogen.HTML/index.js");
var Halogen_Query = require("../Halogen.Query/index.js");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");
var Prelude = require("../Prelude/index.js");
var Renderless_State = require("../Renderless.State/index.js");
var Select = require("../Select/index.js");
var Selected = (function () {
    function Selected(value0) {
        this.value0 = value0;
    };
    Selected.create = function (value0) {
        return new Selected(value0);
    };
    return Selected;
})();
var VisibilityChanged = (function () {
    function VisibilityChanged(value0) {
        this.value0 = value0;
    };
    VisibilityChanged.create = function (value0) {
        return new VisibilityChanged(value0);
    };
    return VisibilityChanged;
})();
var Emit = (function () {
    function Emit(value0) {
        this.value0 = value0;
    };
    Emit.create = function (value0) {
        return new Emit(value0);
    };
    return Emit;
})();
var HandleSelect = (function () {
    function HandleSelect(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    HandleSelect.create = function (value0) {
        return function (value1) {
            return new HandleSelect(value0, value1);
        };
    };
    return HandleSelect;
})();
var SetItems = (function () {
    function SetItems(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SetItems.create = function (value0) {
        return function (value1) {
            return new SetItems(value0, value1);
        };
    };
    return SetItems;
})();
var SetSelection = (function () {
    function SetSelection(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SetSelection.create = function (value0) {
        return function (value1) {
            return new SetSelection(value0, value1);
        };
    };
    return SetSelection;
})();
var Receive = (function () {
    function Receive(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Receive.create = function (value0) {
        return function (value1) {
            return new Receive(value0, value1);
        };
    };
    return Receive;
})();
var component = function (dictMonadAff) {
    var initialState = function (i) {
        return Control_Comonad_Store.store(i.render)({
            selectedItem: i.selectedItem,
            items: i.items
        });
    };
    var $$eval = function (v) {
        if (v instanceof HandleSelect) {
            if (v.value0 instanceof Select.Selected) {
                return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Select.setVisibility(Select.Off.value)))(function (v1) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v2) {
                        var $8 = {};
                        for (var $9 in v2) {
                            if ({}.hasOwnProperty.call(v2, $9)) {
                                $8[$9] = v2[$9];
                            };
                        };
                        $8.selectedItem = new Data_Maybe.Just(v.value0.value0);
                        return $8;
                    })))(function () {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new Selected(v.value0.value0)))(function () {
                            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                        });
                    });
                });
            };
            if (v.value0 instanceof Select.Emit) {
                return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.raise(new Emit(v.value0.value0)))(v.value1);
            };
            if (v.value0 instanceof Select.VisibilityChanged) {
                return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.raise(new VisibilityChanged(v.value0.value0)))(v.value1);
            };
            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        };
        if (v instanceof SetItems) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v1) {
                var $16 = {};
                for (var $17 in v1) {
                    if ({}.hasOwnProperty.call(v1, $17)) {
                        $16[$17] = v1[$17];
                    };
                };
                $16.items = v.value0;
                return $16;
            })))(function () {
                return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Select.replaceItems(v.value0))))(function () {
                    return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                });
            });
        };
        if (v instanceof SetSelection) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v1) {
                var $21 = {};
                for (var $22 in v1) {
                    if ({}.hasOwnProperty.call(v1, $22)) {
                        $21[$22] = v1[$22];
                    };
                };
                $21.selectedItem = v.value0;
                return $21;
            })))(function () {
                return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
            });
        };
        if (v instanceof Receive) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(Renderless_State.updateStore(v.value0.render)(Control_Category.identity(Control_Category.categoryFn))))(function () {
                return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
            });
        };
        throw new Error("Failed pattern match at Ocelot.Component.Dropdown (line 71, column 12 - line 90, column 14): " + [ v.constructor.name ]);
    };
    return Halogen_Component.parentComponent(Data_Ord.ordUnit)({
        initialState: initialState,
        render: Control_Comonad.extract(Control_Comonad_Store_Trans.comonadStoreT(Data_Identity.comonadIdentity)),
        "eval": $$eval,
        receiver: Data_Function["const"](Data_Maybe.Nothing.value)
    });
};
module.exports = {
    HandleSelect: HandleSelect,
    SetItems: SetItems,
    SetSelection: SetSelection,
    Receive: Receive,
    Selected: Selected,
    VisibilityChanged: VisibilityChanged,
    Emit: Emit,
    component: component
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Comonad.Store.Class/index.js":16,"../Control.Comonad.Store.Trans/index.js":17,"../Control.Comonad.Store/index.js":18,"../Control.Comonad/index.js":21,"../Control.Monad.State.Class/index.js":48,"../Data.Eq/index.js":135,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Identity/index.js":163,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Unit/index.js":289,"../Effect.Aff.Class/index.js":295,"../Halogen.Component/index.js":331,"../Halogen.HTML/index.js":339,"../Halogen.Query.HalogenM/index.js":342,"../Halogen.Query/index.js":344,"../Halogen/index.js":353,"../Prelude/index.js":385,"../Renderless.State/index.js":392,"../Select/index.js":406}],379:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Argonaut_Encode = require("../Data.Argonaut.Encode/index.js");
var Data_Argonaut_Encode_Class = require("../Data.Argonaut.Encode.Class/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_BigInt = require("../Data.BigInt/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_String = require("../Data.String/index.js");
var Data_String_CodePoints = require("../Data.String.CodePoints/index.js");
var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Data_String_Pattern = require("../Data.String.Pattern/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var Cents = function (x) {
    return x;
};
var showCents = new Data_Show.Show(function (v) {
    return "Cents " + Data_BigInt.toString(v);
});
var parseCentsFromNumber = function ($34) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(Cents)(Data_BigInt.fromNumber($34));
};
var parseCentsFromMicroDollars = function ($35) {
    return parseCentsFromNumber(Data_Function.flip(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingNumber))(10000.0)($35));
};
var newtypeCents = new Data_Newtype.Newtype(function (n) {
    return n;
}, Cents);
var formatCentsToStrDollars = function (v) {
    if (Data_BigInt.toNumber(v) < 10.0) {
        return "0.0" + Data_BigInt.toString(v);
    };
    if (Data_BigInt.toNumber(v) < 100.0) {
        return "0." + Data_BigInt.toString(v);
    };
    if (Data_Boolean.otherwise) {
        var next = function (i) {
            return Data_Tuple.Tuple.create(i + 1 | 0);
        };
        var formatCentsToDollars$prime = function (d) {
            return function (v1) {
                if (v1.value0 === 2) {
                    return next(v1.value0)(Data_Array.cons(d)(Data_Array.cons(".")(v1.value1)));
                };
                if (Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v1.value0 - 2 | 0)(3) === 0) {
                    return next(v1.value0)(Data_Array.cons(d)(Data_Array.cons(",")(v1.value1)));
                };
                if (Data_Boolean.otherwise) {
                    return next(v1.value0)(Data_Array.cons(d)(v1.value1));
                };
                throw new Error("Failed pattern match at Ocelot.Data.Currency (line 92, column 7 - line 92, column 88): " + [ d.constructor.name, v1.constructor.name ]);
            };
        };
        var chars = function ($36) {
            return Data_String_CodeUnits.toCharArray(Data_BigInt.toString($36));
        };
        return Data_String_CodeUnits.fromCharArray(Data_Tuple.snd(Data_Foldable.foldr(Data_Foldable.foldableArray)(formatCentsToDollars$prime)(new Data_Tuple.Tuple(0, [  ]))(chars(v))));
    };
    throw new Error("Failed pattern match at Ocelot.Data.Currency (line 83, column 1 - line 83, column 43): " + [ v.constructor.name ]);
};
var eqCents = Data_BigInt.eqBigInt;
var encodeJsonCents = new Data_Argonaut_Encode_Class.EncodeJson(function ($37) {
    return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJNumber)(Data_BigInt.toNumber(Data_Newtype.unwrap(newtypeCents)($37)));
});
var centsToMaybeInt = function ($38) {
    return Data_Int.fromString(Data_BigInt.toString(Data_Newtype.unwrap(newtypeCents)($38)));
};
var canParseToBigInt = function ($39) {
    return Data_Maybe.isJust(Data_BigInt.fromString($39));
};
var canParseTo64Bit = function (str) {
    return Data_Maybe.isJust(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_BigInt.fromString("9223372036854775807"))(function (v) {
        return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_BigInt.fromString(str))(function (v1) {
            var $22 = Data_Ord.lessThanOrEq(Data_BigInt.ordBigInt)(v1)(v);
            if ($22) {
                return new Data_Maybe.Just(str);
            };
            return Data_Maybe.Nothing.value;
        });
    }));
};
var canParseTo32Bit = function (str) {
    return Data_Maybe.isJust(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_BigInt.fromString("2147483647"))(function (v) {
        return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_BigInt.fromString(str))(function (v1) {
            var $25 = Data_Ord.lessThanOrEq(Data_BigInt.ordBigInt)(v1)(v);
            if ($25) {
                return new Data_Maybe.Just(str);
            };
            return Data_Maybe.Nothing.value;
        });
    }));
};
var bigIntIs64Bit = function (n) {
    return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_BigInt.fromString("9223372036854775807"))(function (v) {
        var $27 = Data_Ord.lessThanOrEq(Data_BigInt.ordBigInt)(n)(v);
        if ($27) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(n);
        };
        return Data_Maybe.Nothing.value;
    });
};
var parseCentsFromDollarStr = function (str) {
    var stripCommas = Data_String_Common.replaceAll(",")("");
    var splitCommas = Data_String_Common.split(",");
    var noCommas = function (s) {
        return s === stripCommas(s);
    };
    var checkTail = function ($40) {
        return Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v) {
            return v === 3;
        })(Data_Functor.map(Data_Functor.functorArray)(Data_String_CodePoints.length)(Data_Array.drop(1)($40)));
    };
    var checkHead = function ($41) {
        return Data_Maybe.fromMaybe(false)(Data_Functor.map(Data_Maybe.functorMaybe)(function ($42) {
            return (function (v) {
                return v <= 3;
            })(Data_String_CodePoints.length($42));
        })(Data_Array.head($41)));
    };
    var cleanDollars = function (s) {
        var split = splitCommas(s);
        var verified = noCommas(s) || checkHead(split) && checkTail(split);
        if (verified) {
            return new Data_Maybe.Just(stripCommas(s));
        };
        return Data_Maybe.Nothing.value;
    };
    var dollarsPlace = function (s) {
        if (Data_String_Common["null"](s)) {
            return Data_Maybe.Nothing.value;
        };
        if (Data_Boolean.otherwise) {
            return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(function ($43) {
                return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Semiring.mul(Data_BigInt.semiringBigInt)(Data_BigInt.fromInt(100))($43));
            })(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_BigInt.fromString)(cleanDollars(s)));
        };
        throw new Error("Failed pattern match at Ocelot.Data.Currency (line 61, column 5 - line 61, column 43): " + [ s.constructor.name ]);
    };
    return Data_Functor.map(Data_Maybe.functorMaybe)(Cents)((function () {
        var v = Data_String_Common.split(".")(str);
        if (v.length === 1) {
            return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(bigIntIs64Bit)(dollarsPlace(v[0]));
        };
        if (v.length === 2) {
            return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(bigIntIs64Bit)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Semiring.add(Data_BigInt.semiringBigInt))(dollarsPlace(v[0])))(Data_BigInt.fromString(Data_String_CodePoints.take(2)(v[1] + "0"))));
        };
        return Data_Maybe.Nothing.value;
    })());
};
module.exports = {
    Cents: Cents,
    parseCentsFromNumber: parseCentsFromNumber,
    parseCentsFromMicroDollars: parseCentsFromMicroDollars,
    centsToMaybeInt: centsToMaybeInt,
    parseCentsFromDollarStr: parseCentsFromDollarStr,
    formatCentsToStrDollars: formatCentsToStrDollars,
    canParseToBigInt: canParseToBigInt,
    bigIntIs64Bit: bigIntIs64Bit,
    canParseTo64Bit: canParseTo64Bit,
    canParseTo32Bit: canParseTo32Bit,
    newtypeCents: newtypeCents,
    eqCents: eqCents,
    encodeJsonCents: encodeJsonCents,
    showCents: showCents
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Semigroupoid/index.js":61,"../Data.Argonaut.Encode.Class/index.js":82,"../Data.Argonaut.Encode/index.js":84,"../Data.Array/index.js":99,"../Data.BigInt/index.js":108,"../Data.Boolean/index.js":110,"../Data.Eq/index.js":135,"../Data.EuclideanRing/index.js":137,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Int/index.js":167,"../Data.Maybe/index.js":210,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.String.CodePoints/index.js":256,"../Data.String.CodeUnits/index.js":258,"../Data.String.Common/index.js":260,"../Data.String.Pattern/index.js":266,"../Data.String/index.js":272,"../Data.Tuple/index.js":283,"../Prelude/index.js":385}],380:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_String = require("../Data.String/index.js");
var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Data_String_Pattern = require("../Data.String.Pattern/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Halogen_HTML = require("../Halogen.HTML/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");
var Halogen_VDom_DOM_Prop = require("../Halogen.VDom.DOM.Prop/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var testId = Halogen_HTML_Properties.attr("data-testid");
var startsWith = function (str0) {
    return function (str1) {
        return str0 === Data_String_CodeUnits.take(Data_String_CodeUnits.length(str0))(str1);
    };
};
var extract = (function () {
    var f = function (acc) {
        return function (v) {
            if (v instanceof Halogen_VDom_DOM_Prop.Property && v.value0 === "className") {
                return Data_Bifunctor.lmap(Data_Tuple.bifunctorTuple)(function (v1) {
                    return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1)(Data_String_Common.split(" ")(v.value1));
                })(acc);
            };
            return Data_Bifunctor.rmap(Data_Tuple.bifunctorTuple)(function (v1) {
                return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1)([ v ]);
            })(acc);
        };
    };
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(new Data_Tuple.Tuple([  ], [  ]));
})();
var css = function ($21) {
    return Halogen_HTML_Properties.class_(Halogen_HTML_Core.ClassName($21));
};
var classifySide = function (str) {
    if (startsWith("t-")(str)) {
        return "top";
    };
    if (startsWith("r-")(str)) {
        return "right";
    };
    if (startsWith("b-")(str)) {
        return "bottom";
    };
    if (startsWith("l-")(str)) {
        return "left";
    };
    if (startsWith("x-")(str)) {
        return "horizontal";
    };
    if (startsWith("y-")(str)) {
        return "vertical";
    };
    if (startsWith("-")(str)) {
        return "all";
    };
    if (Data_Boolean.otherwise) {
        return "";
    };
    throw new Error("Failed pattern match at Ocelot.HTML.Properties (line 88, column 1 - line 90, column 12): " + [ str.constructor.name ]);
};
var append$prime = function (x) {
    return function (v) {
        if (v === "") {
            return x;
        };
        return x + ("-" + v);
    };
};
var classifyOverflow = function (str) {
    if (startsWith("x-")(str)) {
        return append$prime("horizontal")(classifyOverflow(Data_String_CodeUnits.drop(2)(str)));
    };
    if (startsWith("y-")(str)) {
        return append$prime("vertical")(classifyOverflow(Data_String_CodeUnits.drop(2)(str)));
    };
    if (Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqString)(str)([ "auto", "hidden", "visible", "scroll" ])) {
        return "";
    };
    if (Data_Boolean.otherwise) {
        return str;
    };
    throw new Error("Failed pattern match at Ocelot.HTML.Properties (line 101, column 1 - line 103, column 12): " + [ str.constructor.name ]);
};
var classify = function (str) {
    if (startsWith("p")(str) && Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean))(Data_String_Common["null"])(classifySide(Data_String_CodeUnits.drop(1)(str)))) {
        return append$prime("padding")(classifySide(Data_String_CodeUnits.drop(1)(str)));
    };
    if (startsWith("m")(str) && Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean))(Data_String_Common["null"])(classifySide(Data_String_CodeUnits.drop(1)(str)))) {
        return append$prime("margin")(classifySide(Data_String_CodeUnits.drop(1)(str)));
    };
    if (startsWith("-m")(str) && Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean))(Data_String_Common["null"])(classifySide(Data_String_CodeUnits.drop(2)(str)))) {
        return append$prime("margin")(classifySide(Data_String_CodeUnits.drop(2)(str)));
    };
    if (startsWith("min-")(str)) {
        return append$prime("min")(classify(Data_String_CodeUnits.drop(4)(str)));
    };
    if (startsWith("max-")(str)) {
        return append$prime("max")(classify(Data_String_CodeUnits.drop(4)(str)));
    };
    if (startsWith("w-")(str)) {
        return "width";
    };
    if (startsWith("h-")(str)) {
        return "height";
    };
    if (startsWith("overflow-")(str) && classifyOverflow(Data_String_CodeUnits.drop(9)(str)) !== Data_String_CodeUnits.drop(9)(str)) {
        return append$prime("overflow")(classifyOverflow(Data_String_CodeUnits.drop(9)(str)));
    };
    if (Data_Boolean.otherwise) {
        return str;
    };
    throw new Error("Failed pattern match at Ocelot.HTML.Properties (line 70, column 1 - line 72, column 12): " + [ str.constructor.name ]);
};
var appendIProps = function (ip) {
    return function (ip$prime) {
        var v = extract(ip);
        var v1 = extract(ip$prime);
        var classNames = Control_Applicative.pure(Control_Applicative.applicativeArray)(Halogen_HTML_Properties.classes(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.ClassName)(Data_Array.nubByEq(function (c) {
            return function (c$prime) {
                return classify(c) === classify(c$prime);
            };
        })(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0)(v.value0)))));
        return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.value1)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value1)(classNames));
    };
};
module.exports = {
    testId: testId,
    css: css,
    appendIProps: appendIProps,
    extract: extract
};

},{"../Control.Applicative/index.js":7,"../Control.Semigroupoid/index.js":61,"../Data.Array/index.js":99,"../Data.Bifunctor/index.js":106,"../Data.Boolean/index.js":110,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Semigroup/index.js":248,"../Data.String.CodeUnits/index.js":258,"../Data.String.Common/index.js":260,"../Data.String.Pattern/index.js":266,"../Data.String/index.js":272,"../Data.Tuple/index.js":283,"../Halogen.HTML.Core/index.js":334,"../Halogen.HTML.Properties/index.js":338,"../Halogen.HTML/index.js":339,"../Halogen.VDom.DOM.Prop/index.js":345,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425}],381:[function(require,module,exports){
"use strict";

// module Partial.Unsafe

exports.unsafePartial = function (f) {
  return f();
};

},{}],382:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Partial = require("../Partial/index.js");
var unsafePartialBecause = function (v) {
    return function (x) {
        return $foreign.unsafePartial(function (dictPartial) {
            return x(dictPartial);
        });
    };
};
var unsafeCrashWith = function (msg) {
    return $foreign.unsafePartial(function (dictPartial) {
        return Partial.crashWith(dictPartial)(msg);
    });
};
module.exports = {
    unsafePartialBecause: unsafePartialBecause,
    unsafeCrashWith: unsafeCrashWith,
    unsafePartial: $foreign.unsafePartial
};

},{"../Partial/index.js":384,"./foreign.js":381}],383:[function(require,module,exports){
"use strict";

// module Partial

exports.crashWith = function () {
  return function (msg) {
    throw new Error(msg);
  };
};

},{}],384:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var crash = function (dictPartial) {
    return $foreign.crashWith(dictPartial)("Partial.crash: partial function");
};
module.exports = {
    crash: crash,
    crashWith: $foreign.crashWith
};

},{"./foreign.js":383}],385:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");
var Data_DivisionRing = require("../Data.DivisionRing/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Field = require("../Data.Field/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_NaturalTransformation = require("../Data.NaturalTransformation/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Data_Void = require("../Data.Void/index.js");
module.exports = {};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Monad/index.js":55,"../Control.Semigroupoid/index.js":61,"../Data.Boolean/index.js":110,"../Data.BooleanAlgebra/index.js":111,"../Data.Bounded/index.js":113,"../Data.CommutativeRing/index.js":118,"../Data.DivisionRing/index.js":129,"../Data.Eq/index.js":135,"../Data.EuclideanRing/index.js":137,"../Data.Field/index.js":139,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Monoid/index.js":218,"../Data.NaturalTransformation/index.js":219,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.Unit/index.js":289,"../Data.Void/index.js":291}],386:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Effect = require("../Effect/index.js");
var Effect_Random = require("../Effect.Random/index.js");
var $$Math = require("../Math/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var Seed = function (x) {
    return x;
};
var unSeed = function (v) {
    return v;
};
var showSeed = new Data_Show.Show(function (v) {
    return "Seed " + Data_Show.show(Data_Show.showInt)(v);
});
var seedMin = 1;
var lcgM = 2147483647;
var seedMax = lcgM - 1 | 0;
var mkSeed = function (x) {
    var ensureBetween = function (min) {
        return function (max) {
            return function (n) {
                var rangeSize = max - min | 0;
                var n$prime = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(n)(rangeSize);
                var $14 = n$prime < min;
                if ($14) {
                    return n$prime + max | 0;
                };
                return n$prime;
            };
        };
    };
    return ensureBetween(seedMin)(seedMax)(x);
};
var randomSeed = Data_Functor.map(Effect.functorEffect)(mkSeed)(Effect_Random.randomInt(seedMin)(seedMax));
var lcgC = 0;
var lcgA = 48271;
var lcgPerturb = function (d) {
    return function (v) {
        return Seed(Data_Maybe.fromJust()(Data_Int.fromNumber($$Math.remainder(Data_Int.toNumber(lcgA) * Data_Int.toNumber(v) + d)(Data_Int.toNumber(lcgM)))));
    };
};
var lcgNext = lcgPerturb(Data_Int.toNumber(lcgC));
var eqSeed = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordSeed = new Data_Ord.Ord(function () {
    return eqSeed;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
    };
});
module.exports = {
    mkSeed: mkSeed,
    unSeed: unSeed,
    randomSeed: randomSeed,
    lcgA: lcgA,
    lcgC: lcgC,
    lcgM: lcgM,
    lcgNext: lcgNext,
    lcgPerturb: lcgPerturb,
    eqSeed: eqSeed,
    ordSeed: ordSeed,
    showSeed: showSeed
};

},{"../Data.Eq/index.js":135,"../Data.EuclideanRing/index.js":137,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Int/index.js":167,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Effect.Random/index.js":304,"../Effect/index.js":312,"../Math/index.js":364,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385}],387:[function(require,module,exports){
"use strict";

exports.unsafeUnionFn = function(r1, r2) {
  var copy = {};
  for (var k1 in r2) {
    if ({}.hasOwnProperty.call(r2, k1)) {
      copy[k1] = r2[k1];
    }
  }
  for (var k2 in r1) {
    if ({}.hasOwnProperty.call(r1, k2)) {
      copy[k2] = r1[k2];
    }
  }
  return copy;
};

},{}],388:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");
var unsafeUnion = Data_Function_Uncurried.runFn2($foreign.unsafeUnionFn);
module.exports = {
    unsafeUnion: unsafeUnion,
    unsafeUnionFn: $foreign.unsafeUnionFn
};

},{"../Data.Function.Uncurried/index.js":144,"./foreign.js":387}],389:[function(require,module,exports){
"use strict";

exports.unsafeHas = function (label) {
  return function (rec) {
    return {}.hasOwnProperty.call(rec, label);
  };
};

exports.unsafeGet = function (label) {
  return function (rec) {
    return rec[label];
  };
};

exports.unsafeSet = function (label) {
  return function (value) {
    return function (rec) {
      var copy = {};
      for (var key in rec) {
        if ({}.hasOwnProperty.call(rec, key)) {
          copy[key] = rec[key];
        }
      }
      copy[label] = value;
      return copy;
    };
  };
};

exports.unsafeDelete = function (label) {
  return function (rec) {
    var copy = {};
    for (var key in rec) {
      if (key !== label && {}.hasOwnProperty.call(rec, key)) {
        copy[key] = rec[key];
      }
    }
    return copy;
  };
};

},{}],390:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
module.exports = {
    unsafeHas: $foreign.unsafeHas,
    unsafeGet: $foreign.unsafeGet,
    unsafeSet: $foreign.unsafeSet,
    unsafeDelete: $foreign.unsafeDelete
};

},{"./foreign.js":389}],391:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Prelude = require("../Prelude/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Record_Unsafe_Union = require("../Record.Unsafe.Union/index.js");
var Type_Row = require("../Type.Row/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var EqualFields = function (equalFields) {
    this.equalFields = equalFields;
};
var union = function (dictUnion) {
    return function (l) {
        return function (r) {
            return Record_Unsafe_Union.unsafeUnionFn(l, r);
        };
    };
};
var set = function (dictIsSymbol) {
    return function (dictCons) {
        return function (dictCons1) {
            return function (l) {
                return function (b) {
                    return function (r) {
                        return Record_Unsafe.unsafeSet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(b)(r);
                    };
                };
            };
        };
    };
};
var nub = function (dictNub) {
    return Unsafe_Coerce.unsafeCoerce;
};
var merge = function (dictUnion) {
    return function (dictNub) {
        return function (l) {
            return function (r) {
                return Record_Unsafe_Union.unsafeUnionFn(l, r);
            };
        };
    };
};
var insert = function (dictIsSymbol) {
    return function (dictLacks) {
        return function (dictCons) {
            return function (l) {
                return function (a) {
                    return function (r) {
                        return Record_Unsafe.unsafeSet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r);
                    };
                };
            };
        };
    };
};
var get = function (dictIsSymbol) {
    return function (dictCons) {
        return function (l) {
            return function (r) {
                return Record_Unsafe.unsafeGet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
            };
        };
    };
};
var modify = function (dictIsSymbol) {
    return function (dictCons) {
        return function (dictCons1) {
            return function (l) {
                return function (f) {
                    return function (r) {
                        return set(dictIsSymbol)(dictCons)(dictCons1)(l)(f(get(dictIsSymbol)(dictCons)(l)(r)))(r);
                    };
                };
            };
        };
    };
};
var equalFieldsNil = new EqualFields(function (v) {
    return function (v1) {
        return function (v2) {
            return true;
        };
    };
});
var equalFields = function (dict) {
    return dict.equalFields;
};
var equalFieldsCons = function (dictIsSymbol) {
    return function (dictEq) {
        return function (dictCons) {
            return function (dictEqualFields) {
                return new EqualFields(function (v) {
                    return function (a) {
                        return function (b) {
                            var get$prime = get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value);
                            var equalRest = equalFields(dictEqualFields)(Type_Row.RLProxy.value);
                            return Data_Eq.eq(dictEq)(get$prime(a))(get$prime(b)) && equalRest(a)(b);
                        };
                    };
                });
            };
        };
    };
};
var equal = function (dictRowToList) {
    return function (dictEqualFields) {
        return function (a) {
            return function (b) {
                return equalFields(dictEqualFields)(Type_Row.RLProxy.value)(a)(b);
            };
        };
    };
};
var disjointUnion = function (dictUnion) {
    return function (dictNub) {
        return function (l) {
            return function (r) {
                return Record_Unsafe_Union.unsafeUnionFn(l, r);
            };
        };
    };
};
var $$delete = function (dictIsSymbol) {
    return function (dictLacks) {
        return function (dictCons) {
            return function (l) {
                return function (r) {
                    return Record_Unsafe.unsafeDelete(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
                };
            };
        };
    };
};
var rename = function (dictIsSymbol) {
    return function (dictIsSymbol1) {
        return function (dictCons) {
            return function (dictLacks) {
                return function (dictCons1) {
                    return function (dictLacks1) {
                        return function (prev) {
                            return function (next) {
                                return function (record) {
                                    return insert(dictIsSymbol1)(dictLacks1)(dictCons1)(next)(get(dictIsSymbol)(dictCons)(prev)(record))($$delete(dictIsSymbol)(dictLacks)(dictCons)(prev)(record));
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
module.exports = {
    get: get,
    set: set,
    modify: modify,
    insert: insert,
    "delete": $$delete,
    rename: rename,
    equal: equal,
    merge: merge,
    union: union,
    disjointUnion: disjointUnion,
    nub: nub,
    EqualFields: EqualFields,
    equalFields: equalFields,
    equalFieldsCons: equalFieldsCons,
    equalFieldsNil: equalFieldsNil
};

},{"../Data.Eq/index.js":135,"../Data.Function.Uncurried/index.js":144,"../Data.HeytingAlgebra/index.js":162,"../Data.Symbol/index.js":274,"../Prelude/index.js":385,"../Record.Unsafe.Union/index.js":388,"../Record.Unsafe/index.js":390,"../Type.Row/index.js":423,"../Unsafe.Coerce/index.js":425}],392:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Comonad_Store = require("../Control.Comonad.Store/index.js");
var Control_Comonad_Store_Class = require("../Control.Comonad.Store.Class/index.js");
var Control_Monad_State = require("../Control.Monad.State/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var updateStore = function (r) {
    return function (f) {
        return function ($8) {
            return Control_Comonad_Store.store(r)(Data_Tuple.snd(Control_Comonad_Store.runStore(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(f)($8))));
        };
    };
};
var putStore = function (dictMonadState) {
    return function (r) {
        return function (s) {
            return Control_Monad_State_Class.put(dictMonadState)(Control_Comonad_Store.store(r)(s));
        };
    };
};
var modifyStore_ = function (dictMonadState) {
    return function (r) {
        return function (f) {
            return Control_Monad_State_Class.modify_(dictMonadState)(updateStore(r)(f));
        };
    };
};
var modifyStore = function (dictMonadState) {
    return function (r) {
        return function (f) {
            return Control_Monad_State_Class.modify(dictMonadState)(updateStore(r)(f));
        };
    };
};
var modifyState_ = function (dictMonadState) {
    return function ($9) {
        return Control_Monad_State_Class.modify_(dictMonadState)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))($9));
    };
};
var modifyState = function (dictMonadState) {
    return function (f) {
        return Control_Bind.bindFlipped((dictMonadState.Monad0()).Bind1())(function ($10) {
            return Data_Functor.map((((dictMonadState.Monad0()).Bind1()).Apply0()).Functor0())(Data_Tuple.snd)(Control_Applicative.pure((dictMonadState.Monad0()).Applicative0())(Control_Comonad_Store.runStore($10)));
        })(Control_Monad_State_Class.modify(dictMonadState)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(f)));
    };
};
var getState = function (dictMonadState) {
    return Control_Bind.bindFlipped((dictMonadState.Monad0()).Bind1())(function ($11) {
        return Data_Functor.map((((dictMonadState.Monad0()).Bind1()).Apply0()).Functor0())(Data_Tuple.snd)(Control_Applicative.pure((dictMonadState.Monad0()).Applicative0())(Control_Comonad_Store.runStore($11)));
    })(Control_Monad_State_Class.get(dictMonadState));
};
var getRender = function (dictMonadState) {
    return Control_Bind.bindFlipped((dictMonadState.Monad0()).Bind1())(function ($12) {
        return Data_Functor.map((((dictMonadState.Monad0()).Bind1()).Apply0()).Functor0())(Data_Tuple.fst)(Control_Applicative.pure((dictMonadState.Monad0()).Applicative0())(Control_Comonad_Store.runStore($12)));
    })(Control_Monad_State_Class.get(dictMonadState));
};
var putState = function (dictMonadState) {
    return function (s) {
        return Control_Bind.bindFlipped((dictMonadState.Monad0()).Bind1())(function ($13) {
            return Control_Monad_State_Class.put(dictMonadState)(Data_Function.flip(Control_Comonad_Store.store)(s)($13));
        })(getRender(dictMonadState));
    };
};
module.exports = {
    getState: getState,
    getRender: getRender,
    modifyState: modifyState,
    modifyState_: modifyState_,
    putState: putState,
    updateStore: updateStore,
    modifyStore: modifyStore,
    modifyStore_: modifyStore_,
    putStore: putStore
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Control.Comonad.Store.Class/index.js":16,"../Control.Comonad.Store/index.js":18,"../Control.Monad.State.Class/index.js":48,"../Control.Monad.State/index.js":50,"../Control.Semigroupoid/index.js":61,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Identity/index.js":163,"../Data.Tuple/index.js":283,"../Prelude/index.js":385}],393:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Prelude = require("../Prelude/index.js");
var Routing_Duplex = require("../Routing.Duplex/index.js");
var Routing_Duplex_Generic = require("../Routing.Duplex.Generic/index.js");
var GSep = function (gsep) {
    this.gsep = gsep;
};
var GParams = function (gparams) {
    this.gparams = gparams;
};
var gsepStringString = new GSep(function (a) {
    return function (b) {
        return Routing_Duplex.prefix(a)(Routing_Duplex.prefix(b)(Control_Applicative.pure(Routing_Duplex.applicativeRouteDuplex)(Data_Unit.unit)));
    };
});
var gsepStringRoute = function (dictGRouteDuplexCtr) {
    return new GSep(function (a) {
        return function ($5) {
            return Routing_Duplex.prefix(a)(Routing_Duplex_Generic.gRouteDuplexCtr(dictGRouteDuplexCtr)($5));
        };
    });
};
var gsepRouteString = function (dictGRouteDuplexCtr) {
    return new GSep(function ($6) {
        return Routing_Duplex.suffix(Routing_Duplex_Generic.gRouteDuplexCtr(dictGRouteDuplexCtr)($6));
    });
};
var gsepProduct = function (dictGRouteDuplexCtr) {
    return new GSep(Routing_Duplex_Generic.product(dictGRouteDuplexCtr));
};
var gsep = function (dict) {
    return dict.gsep;
};
var gparamsString = function (dictRouteDuplexParams) {
    return new GParams(function (a) {
        return function ($7) {
            return Routing_Duplex.prefix(a)(Routing_Duplex.params(dictRouteDuplexParams)($7));
        };
    });
};
var gparamsRoute = function (dictRouteDuplexParams) {
    return new GParams(function (a) {
        return function ($8) {
            return Routing_Duplex_Generic.product(Routing_Duplex_Generic.gRouteAll)(a)(Routing_Duplex.params(dictRouteDuplexParams)($8));
        };
    });
};
var gparams = function (dict) {
    return dict.gparams;
};
module.exports = {
    gparams: gparams,
    gsep: gsep,
    GSep: GSep,
    GParams: GParams,
    gsepStringString: gsepStringString,
    gsepStringRoute: gsepStringRoute,
    gsepRouteString: gsepRouteString,
    gsepProduct: gsepProduct,
    gparamsString: gparamsString,
    gparamsRoute: gparamsRoute
};

},{"../Control.Applicative/index.js":7,"../Control.Semigroupoid/index.js":61,"../Data.Function/index.js":145,"../Data.Generic.Rep/index.js":160,"../Data.Unit/index.js":289,"../Prelude/index.js":385,"../Routing.Duplex.Generic/index.js":394,"../Routing.Duplex/index.js":398}],394:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Prelude = require("../Prelude/index.js");
var Record = require("../Record/index.js");
var Routing_Duplex = require("../Routing.Duplex/index.js");
var Routing_Duplex_Parser = require("../Routing.Duplex.Parser/index.js");
var Routing_Duplex_Printer = require("../Routing.Duplex.Printer/index.js");
var GRouteDuplex = function (gRouteDuplex) {
    this.gRouteDuplex = gRouteDuplex;
};
var GRouteDuplexCtr = function (gRouteDuplexCtr) {
    this.gRouteDuplexCtr = gRouteDuplexCtr;
};
var noArgs = Control_Applicative.pure(Routing_Duplex.applicativeRouteDuplex)(Data_Generic_Rep.NoArguments.value);
var gRouteProduct = new GRouteDuplexCtr(Control_Category.identity(Control_Category.categoryFn));
var gRouteNoArguments = new GRouteDuplexCtr(Control_Category.identity(Control_Category.categoryFn));
var gRouteDuplexCtr = function (dict) {
    return dict.gRouteDuplexCtr;
};
var product = function (dictGRouteDuplexCtr) {
    return function (v) {
        return function (l) {
            var v1 = gRouteDuplexCtr(dictGRouteDuplexCtr)(l);
            var enc = function (v2) {
                return Data_Semigroup.append(Routing_Duplex_Printer.semigroupRoutePrinter)(v.value0(v2.value0))(v1.value0(v2.value1));
            };
            var dec = Control_Apply.apply(Routing_Duplex_Parser.applyRouteParser)(Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(Data_Generic_Rep.Product.create)(Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(Data_Generic_Rep.Argument)(v.value1)))(v1.value1);
            return new Routing_Duplex.RouteDuplex(enc, dec);
        };
    };
};
var gRouteDuplex = function (dict) {
    return dict.gRouteDuplex;
};
var gRouteSum = function (dictGRouteDuplex) {
    return function (dictGRouteDuplex1) {
        return new GRouteDuplex(function (r) {
            var v = gRouteDuplex(dictGRouteDuplex)(r);
            var v1 = gRouteDuplex(dictGRouteDuplex1)(r);
            var enc = function (v2) {
                if (v2 instanceof Data_Generic_Rep.Inl) {
                    return v.value0(v2.value0);
                };
                if (v2 instanceof Data_Generic_Rep.Inr) {
                    return v1.value0(v2.value0);
                };
                throw new Error("Failed pattern match at Routing.Duplex.Generic (line 32, column 11 - line 34, column 22): " + [ v2.constructor.name ]);
            };
            var dec = Control_Alt.alt(Routing_Duplex_Parser.altRouteParser)(Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(Data_Generic_Rep.Inl.create)(v.value1))(Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(Data_Generic_Rep.Inr.create)(v1.value1));
            return new Routing_Duplex.RouteDuplex(enc, dec);
        });
    };
};
var sum = function (dictGeneric) {
    return function (dictGRouteDuplex) {
        return function ($48) {
            return Data_Profunctor.dimap(Routing_Duplex.profunctorRouteDuplex)(Data_Generic_Rep.from(dictGeneric))(Data_Generic_Rep.to(dictGeneric))(gRouteDuplex(dictGRouteDuplex)($48));
        };
    };
};
var gRouteConstructor = function (dictIsSymbol) {
    return function (dictCons) {
        return function (dictGRouteDuplexCtr) {
            return new GRouteDuplex(function (r) {
                var v = Routing_Duplex.end(gRouteDuplexCtr(dictGRouteDuplexCtr)(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(r)));
                var enc = function (v1) {
                    return v.value0(v1);
                };
                var dec = Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(Data_Generic_Rep.Constructor)(v.value1);
                return new Routing_Duplex.RouteDuplex(enc, dec);
            });
        };
    };
};
var gRouteArgument = new GRouteDuplexCtr(Control_Category.identity(Control_Category.categoryFn));
var gRouteAll = new GRouteDuplexCtr(function (v) {
    return new Routing_Duplex.RouteDuplex(function (v1) {
        return v.value0(v1);
    }, Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(Data_Generic_Rep.Argument)(v.value1));
});
module.exports = {
    gRouteDuplex: gRouteDuplex,
    gRouteDuplexCtr: gRouteDuplexCtr,
    sum: sum,
    GRouteDuplex: GRouteDuplex,
    GRouteDuplexCtr: GRouteDuplexCtr,
    product: product,
    noArgs: noArgs,
    gRouteSum: gRouteSum,
    gRouteConstructor: gRouteConstructor,
    gRouteProduct: gRouteProduct,
    gRouteNoArguments: gRouteNoArguments,
    gRouteArgument: gRouteArgument,
    gRouteAll: gRouteAll
};

},{"../Control.Alt/index.js":4,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Category/index.js":14,"../Control.Semigroupoid/index.js":61,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Generic.Rep/index.js":160,"../Data.Profunctor/index.js":238,"../Data.Semigroup/index.js":248,"../Data.Symbol/index.js":274,"../Prelude/index.js":385,"../Record/index.js":391,"../Routing.Duplex.Parser/index.js":395,"../Routing.Duplex.Printer/index.js":396,"../Routing.Duplex/index.js":398}],395:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Array_NonEmpty = require("../Data.Array.NonEmpty/index.js");
var Data_Array_NonEmpty_Internal = require("../Data.Array.NonEmpty.Internal/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Generic_Rep_Show = require("../Data.Generic.Rep.Show/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_Lazy = require("../Data.Lazy/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_String = require("../Data.String/index.js");
var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Data_String_Pattern = require("../Data.String.Pattern/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Global_Unsafe = require("../Global.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var Routing_Duplex_Types = require("../Routing.Duplex.Types/index.js");
var Expected = (function () {
    function Expected(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Expected.create = function (value0) {
        return function (value1) {
            return new Expected(value0, value1);
        };
    };
    return Expected;
})();
var ExpectedEndOfPath = (function () {
    function ExpectedEndOfPath(value0) {
        this.value0 = value0;
    };
    ExpectedEndOfPath.create = function (value0) {
        return new ExpectedEndOfPath(value0);
    };
    return ExpectedEndOfPath;
})();
var MissingParam = (function () {
    function MissingParam(value0) {
        this.value0 = value0;
    };
    MissingParam.create = function (value0) {
        return new MissingParam(value0);
    };
    return MissingParam;
})();
var EndOfPath = (function () {
    function EndOfPath() {

    };
    EndOfPath.value = new EndOfPath();
    return EndOfPath;
})();
var Fail = (function () {
    function Fail(value0) {
        this.value0 = value0;
    };
    Fail.create = function (value0) {
        return new Fail(value0);
    };
    return Fail;
})();
var Success = (function () {
    function Success(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Success.create = function (value0) {
        return function (value1) {
            return new Success(value0, value1);
        };
    };
    return Success;
})();
var Alt = (function () {
    function Alt(value0) {
        this.value0 = value0;
    };
    Alt.create = function (value0) {
        return new Alt(value0);
    };
    return Alt;
})();
var Chomp = (function () {
    function Chomp(value0) {
        this.value0 = value0;
    };
    Chomp.create = function (value0) {
        return new Chomp(value0);
    };
    return Chomp;
})();
var Prefix = (function () {
    function Prefix(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Prefix.create = function (value0) {
        return function (value1) {
            return new Prefix(value0, value1);
        };
    };
    return Prefix;
})();
var take = new Chomp(function (state) {
    var v = Data_Array.uncons(state.segments);
    if (v instanceof Data_Maybe.Just) {
        return new Success({
            segments: v.value0.tail,
            params: state.params,
            hash: state.hash
        }, v.value0.head);
    };
    return new Fail(EndOfPath.value);
});
var rest = new Chomp(function (state) {
    return new Success({
        segments: [  ],
        params: state.params,
        hash: state.hash
    }, state.segments);
});
var prefix = Prefix.create;
var parsePath = (function () {
    var toRouteState = function (v) {
        return {
            segments: v.value0.value0,
            params: v.value0.value1,
            hash: v.value1
        };
    };
    var splitNonEmpty = function (v) {
        return function (v1) {
            if (v1 === "") {
                return [  ];
            };
            return Data_String_Common.split(v)(v1);
        };
    };
    var splitSegments = function ($235) {
        return (function (v) {
            if (v.length === 2 && (v[0] === "" && v[1] === "")) {
                return [ "" ];
            };
            return Data_Functor.map(Data_Functor.functorArray)(Global_Unsafe.unsafeDecodeURIComponent)(v);
        })(splitNonEmpty("/")($235));
    };
    var splitAt = function (k) {
        return function (p) {
            return function (str) {
                var v = Data_String_CodeUnits.indexOf(p)(str);
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Tuple.Tuple(Data_String_CodeUnits.take(v.value0)(str), Data_String_CodeUnits.drop(v.value0 + Data_String_CodeUnits.length(p) | 0)(str));
                };
                if (v instanceof Data_Maybe.Nothing) {
                    return k(str);
                };
                throw new Error("Failed pattern match at Routing.Duplex.Parser (line 183, column 5 - line 185, column 23): " + [ v.constructor.name ]);
            };
        };
    };
    var splitKeyValue = function ($236) {
        return Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(Global_Unsafe.unsafeDecodeURIComponent)(Global_Unsafe.unsafeDecodeURIComponent)(splitAt(Data_Function.flip(Data_Tuple.Tuple.create)(""))("=")($236));
    };
    var splitParams = function ($237) {
        return Data_Functor.map(Data_Functor.functorArray)(splitKeyValue)(splitNonEmpty("&")($237));
    };
    var splitPath = function ($238) {
        return Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(splitSegments)(splitParams)(splitAt(Data_Function.flip(Data_Tuple.Tuple.create)(""))("?")($238));
    };
    return function ($239) {
        return toRouteState(Data_Bifunctor.lmap(Data_Tuple.bifunctorTuple)(splitPath)(splitAt(Data_Function.flip(Data_Tuple.Tuple.create)(""))("#")($239)));
    };
})();
var param = function (key) {
    return new Chomp(function (state) {
        var v = Data_Tuple.lookup(Data_Foldable.foldableArray)(Data_Eq.eqString)(key)(state.params);
        if (v instanceof Data_Maybe.Just) {
            return new Success(state, v.value0);
        };
        return Fail.create(new MissingParam(key));
    });
};
var $$int = function ($240) {
    return Data_Maybe.maybe(new Data_Either.Left("Int"))(Data_Either.Right.create)(Data_Int.fromString($240));
};
var hash = new Chomp(function (state) {
    return new Success(state, state.hash);
});
var genericRouteResult = new Data_Generic_Rep.Generic(function (x) {
    if (x instanceof Fail) {
        return new Data_Generic_Rep.Inl(x.value0);
    };
    if (x instanceof Success) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Product(x.value0, x.value1));
    };
    throw new Error("Failed pattern match at Routing.Duplex.Parser (line 54, column 8 - line 54, column 64): " + [ x.constructor.name ]);
}, function (x) {
    if (x instanceof Data_Generic_Rep.Inl) {
        return new Fail(x.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr) {
        return new Success(x.value0.value0, x.value0.value1);
    };
    throw new Error("Failed pattern match at Routing.Duplex.Parser (line 54, column 8 - line 54, column 64): " + [ x.constructor.name ]);
});
var genericRouteError = new Data_Generic_Rep.Generic(function (x) {
    if (x instanceof Expected) {
        return new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1));
    };
    if (x instanceof ExpectedEndOfPath) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
    };
    if (x instanceof MissingParam) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
    };
    if (x instanceof EndOfPath) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)));
    };
    throw new Error("Failed pattern match at Routing.Duplex.Parser (line 64, column 8 - line 64, column 58): " + [ x.constructor.name ]);
}, function (x) {
    if (x instanceof Data_Generic_Rep.Inl) {
        return new Expected(x.value0.value0, x.value0.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
        return new ExpectedEndOfPath(x.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
        return new MissingParam(x.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr)) {
        return EndOfPath.value;
    };
    throw new Error("Failed pattern match at Routing.Duplex.Parser (line 64, column 8 - line 64, column 58): " + [ x.constructor.name ]);
});
var showRouteError = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericRouteError)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString)))(new Data_Symbol.IsSymbol(function () {
    return "Expected";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
    return "ExpectedEndOfPath";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
    return "MissingParam";
})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "EndOfPath";
})))))));
var showRouteResult = function (dictShow) {
    return new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericRouteResult)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(showRouteError))(new Data_Symbol.IsSymbol(function () {
        return "Fail";
    })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "hash";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "params";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "segments";
    }))(Data_Show.showRecordFieldsNil)(Data_Show.showArray(Data_Show.showString)))(Data_Show.showArray(Data_Tuple.showTuple(Data_Show.showString)(Data_Show.showString))))(Data_Show.showString))))(Data_Generic_Rep_Show.genericShowArgsArgument(dictShow)))(new Data_Symbol.IsSymbol(function () {
        return "Success";
    })))));
};
var functorRouteResult = new Data_Functor.Functor(function (f) {
    return function (m) {
        if (m instanceof Fail) {
            return new Fail(m.value0);
        };
        if (m instanceof Success) {
            return new Success(m.value0, f(m.value1));
        };
        throw new Error("Failed pattern match at Routing.Duplex.Parser (line 53, column 8 - line 53, column 58): " + [ m.constructor.name ]);
    };
});
var functorRouteParser = new Data_Functor.Functor(function (f) {
    return function (m) {
        if (m instanceof Alt) {
            return new Alt(Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(Data_Functor.map(functorRouteParser)(f))(m.value0));
        };
        if (m instanceof Chomp) {
            return new Chomp(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(functorRouteResult)(f))(m.value0));
        };
        if (m instanceof Prefix) {
            return new Prefix(m.value0, Data_Functor.map(functorRouteParser)(f)(m.value1));
        };
        throw new Error("Failed pattern match at Routing.Duplex.Parser (line 72, column 8 - line 72, column 58): " + [ m.constructor.name ]);
    };
});
var eqRouteError = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Expected && y instanceof Expected) {
            return x.value0 === y.value0 && x.value1 === y.value1;
        };
        if (x instanceof ExpectedEndOfPath && y instanceof ExpectedEndOfPath) {
            return x.value0 === y.value0;
        };
        if (x instanceof MissingParam && y instanceof MissingParam) {
            return x.value0 === y.value0;
        };
        if (x instanceof EndOfPath && y instanceof EndOfPath) {
            return true;
        };
        return false;
    };
});
var eqRouteResult = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            if (x instanceof Fail && y instanceof Fail) {
                return Data_Eq.eq(eqRouteError)(x.value0)(y.value0);
            };
            if (x instanceof Success && y instanceof Success) {
                return x.value0.hash === y.value0.hash && Data_Eq.eq(Data_Eq.eqArray(Data_Tuple.eqTuple(Data_Eq.eqString)(Data_Eq.eqString)))(x.value0.params)(y.value0.params) && Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqString))(x.value0.segments)(y.value0.segments) && Data_Eq.eq(dictEq)(x.value1)(y.value1);
            };
            return false;
        };
    });
};
var end = new Chomp(function (state) {
    var v = Data_Array.head(state.segments);
    if (v instanceof Data_Maybe.Nothing) {
        return new Success(state, Data_Unit.unit);
    };
    if (v instanceof Data_Maybe.Just) {
        return new Fail(new ExpectedEndOfPath(v.value0));
    };
    throw new Error("Failed pattern match at Routing.Duplex.Parser (line 254, column 3 - line 256, column 45): " + [ v.constructor.name ]);
});
var chompPrefix = function (pre) {
    return function (state) {
        var v = Data_Array.head(state.segments);
        if (v instanceof Data_Maybe.Just && pre === v.value0) {
            return new Success({
                segments: Data_Array.drop(1)(state.segments),
                params: state.params,
                hash: state.hash
            }, Data_Unit.unit);
        };
        if (v instanceof Data_Maybe.Just) {
            return Fail.create(new Expected(pre, v.value0));
        };
        return Fail.create(EndOfPath.value);
    };
};
var runRouteParser = (function () {
    var goAlt = function (v) {
        return function (v1) {
            return function (v2) {
                if (v1 instanceof Fail) {
                    return runRouteParser(v)(v2);
                };
                return v1;
            };
        };
    };
    var go = function ($copy_state) {
        return function ($copy_v) {
            var $tco_var_state = $copy_state;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(state, v) {
                if (v instanceof Alt) {
                    $tco_done = true;
                    return Data_Foldable.foldl(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(goAlt(state))(new Fail(EndOfPath.value))(v.value0);
                };
                if (v instanceof Chomp) {
                    $tco_done = true;
                    return v.value0(state);
                };
                if (v instanceof Prefix) {
                    var v1 = chompPrefix(v.value0)(state);
                    if (v1 instanceof Fail) {
                        $tco_done = true;
                        return new Fail(v1.value0);
                    };
                    if (v1 instanceof Success) {
                        $tco_var_state = v1.value0;
                        $copy_v = v.value1;
                        return;
                    };
                    throw new Error("Failed pattern match at Routing.Duplex.Parser (line 149, column 7 - line 151, column 40): " + [ v1.constructor.name ]);
                };
                throw new Error("Failed pattern match at Routing.Duplex.Parser (line 145, column 14 - line 151, column 40): " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_state, $copy_v);
            };
            return $tco_result;
        };
    };
    return go;
})();
var lazyRouteParser = new Control_Lazy.Lazy(function (k) {
    var parser = Data_Lazy.defer(k);
    return new Chomp(function (state) {
        return runRouteParser(state)(Data_Lazy.force(parser));
    });
});
var many1 = function (dictAlt) {
    return function (dictApplicative) {
        return function (p) {
            var go$prime = function ($copy_state) {
                return function ($copy_xs) {
                    var $tco_var_state = $copy_state;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(state, xs) {
                        var v = runRouteParser(state)(p);
                        if (v instanceof Fail) {
                            $tco_done = true;
                            return new Success(state, xs);
                        };
                        if (v instanceof Success) {
                            $tco_var_state = v.value0;
                            $copy_xs = Control_Alt.alt(dictAlt)(xs)(Control_Applicative.pure(dictApplicative)(v.value1));
                            return;
                        };
                        throw new Error("Failed pattern match at Routing.Duplex.Parser (line 221, column 5 - line 223, column 53): " + [ v.constructor.name ]);
                    };
                    while (!$tco_done) {
                        $tco_result = $tco_loop($tco_var_state, $copy_xs);
                    };
                    return $tco_result;
                };
            };
            var go = function (state) {
                var v = runRouteParser(state)(p);
                if (v instanceof Fail) {
                    return new Fail(v.value0);
                };
                if (v instanceof Success) {
                    return go$prime(v.value0)(Control_Applicative.pure(dictApplicative)(v.value1));
                };
                throw new Error("Failed pattern match at Routing.Duplex.Parser (line 215, column 5 - line 217, column 46): " + [ v.constructor.name ]);
            };
            return new Chomp(go);
        };
    };
};
var run = function (p) {
    return function ($241) {
        return (function (v) {
            if (v instanceof Fail) {
                return new Data_Either.Left(v.value0);
            };
            if (v instanceof Success) {
                return new Data_Either.Right(v.value1);
            };
            throw new Error("Failed pattern match at Routing.Duplex.Parser (line 188, column 49 - line 190, column 29): " + [ v.constructor.name ]);
        })(Data_Function.flip(runRouteParser)(p)(parsePath($241)));
    };
};
var $$boolean = function (v) {
    if (v === "true") {
        return new Data_Either.Right(true);
    };
    if (v === "false") {
        return new Data_Either.Right(false);
    };
    return new Data_Either.Left("Boolean");
};
var as = function (print) {
    return function (decode) {
        return function (p) {
            return new Chomp(function (state) {
                var v = runRouteParser(state)(p);
                if (v instanceof Fail) {
                    return new Fail(v.value0);
                };
                if (v instanceof Success) {
                    var v1 = decode(v.value1);
                    if (v1 instanceof Data_Either.Left) {
                        return Fail.create(new Expected(v1.value0, print(v.value1)));
                    };
                    if (v1 instanceof Data_Either.Right) {
                        return new Success(v.value0, v1.value0);
                    };
                    throw new Error("Failed pattern match at Routing.Duplex.Parser (line 242, column 7 - line 244, column 36): " + [ v1.constructor.name ]);
                };
                throw new Error("Failed pattern match at Routing.Duplex.Parser (line 239, column 3 - line 244, column 36): " + [ v.constructor.name ]);
            });
        };
    };
};
var applyRouteParser = new Control_Apply.Apply(function () {
    return functorRouteParser;
}, function (fx) {
    return function (x) {
        return new Chomp(function (state) {
            var v = runRouteParser(state)(fx);
            if (v instanceof Fail) {
                return new Fail(v.value0);
            };
            if (v instanceof Success) {
                return Data_Functor.map(functorRouteResult)(v.value1)(runRouteParser(v.value0)(x));
            };
            throw new Error("Failed pattern match at Routing.Duplex.Parser (line 76, column 5 - line 78, column 56): " + [ v.constructor.name ]);
        });
    };
});
var applicativeRouteParser = new Control_Applicative.Applicative(function () {
    return applyRouteParser;
}, function ($242) {
    return Chomp.create(Data_Function.flip(Success.create)($242));
});
var altSnoc = function (ls) {
    return function (v) {
        var v1 = function (v2) {
            return Data_Array_NonEmpty.snoc(ls)(v);
        };
        if (v instanceof Prefix) {
            var $196 = Data_Array_NonEmpty.last(ls);
            if ($196 instanceof Prefix) {
                var $197 = v.value0 === $196.value0;
                if ($197) {
                    return Data_Array_NonEmpty["snoc'"](Data_Array_NonEmpty.init(ls))(new Prefix(v.value0, Control_Alt.alt(altRouteParser)($196.value1)(v.value1)));
                };
                return v1(true);
            };
            return v1(true);
        };
        return v1(true);
    };
};
var altRouteParser = new Control_Alt.Alt(function () {
    return functorRouteParser;
}, function (v) {
    return function (v1) {
        if (v instanceof Alt && v1 instanceof Alt) {
            return new Alt(altAppend(v.value0)(v1.value0));
        };
        if (v instanceof Alt) {
            return new Alt(altSnoc(v.value0)(v1));
        };
        if (v1 instanceof Alt) {
            return new Alt(altCons(v)(v1.value0));
        };
        if (v instanceof Prefix && (v1 instanceof Prefix && v.value0 === v1.value0)) {
            return new Prefix(v.value0, Control_Alt.alt(altRouteParser)(v.value1)(v1.value1));
        };
        return new Alt(Data_Array_NonEmpty.cons(v)(Data_Array_NonEmpty.singleton(v1)));
    };
});
var altCons = function (v) {
    return function (rs) {
        var v1 = function (v2) {
            return Data_Array_NonEmpty.cons(v)(rs);
        };
        if (v instanceof Prefix) {
            var $216 = Data_Array_NonEmpty.head(rs);
            if ($216 instanceof Prefix) {
                var $217 = v.value0 === $216.value0;
                if ($217) {
                    return Data_Array_NonEmpty["cons'"](new Prefix(v.value0, Control_Alt.alt(altRouteParser)(v.value1)($216.value1)))(Data_Array_NonEmpty.tail(rs));
                };
                return v1(true);
            };
            return v1(true);
        };
        return v1(true);
    };
};
var altAppend = function ($copy_ls) {
    return function ($copy_rs) {
        var $tco_var_ls = $copy_ls;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(ls, rs) {
            var v = function (v1) {
                if (Data_Boolean.otherwise) {
                    return Data_Semigroup.append(Data_Array_NonEmpty_Internal.semigroupNonEmptyArray)(ls)(rs);
                };
                throw new Error("Failed pattern match at Routing.Duplex.Parser (line 98, column 1 - line 101, column 32): " + [ ls.constructor.name, rs.constructor.name ]);
            };
            var $226 = Data_Array_NonEmpty.last(ls);
            if ($226 instanceof Prefix) {
                var $227 = Data_Array_NonEmpty.head(rs);
                if ($227 instanceof Prefix) {
                    var $228 = $226.value0 === $227.value0;
                    if ($228) {
                        var rs$prime = Data_Array_NonEmpty["cons'"](new Prefix($226.value0, Control_Alt.alt(altRouteParser)($226.value1)($227.value1)))(Data_Array_NonEmpty.tail(rs));
                        var v1 = Data_Array_NonEmpty.fromArray(Data_Array_NonEmpty.init(ls));
                        if (v1 instanceof Data_Maybe.Just) {
                            $tco_var_ls = v1.value0;
                            $copy_rs = rs$prime;
                            return;
                        };
                        if (v1 instanceof Data_Maybe.Nothing) {
                            $tco_done = true;
                            return rs$prime;
                        };
                        throw new Error("Failed pattern match at Routing.Duplex.Parser (line 110, column 9 - line 112, column 26): " + [ v1.constructor.name ]);
                    };
                    $tco_done = true;
                    return v(true);
                };
                $tco_done = true;
                return v(true);
            };
            $tco_done = true;
            return v(true);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_ls, $copy_rs);
        };
        return $tco_result;
    };
};
var $$default = function ($243) {
    return Data_Function.flip(Control_Alt.alt(altRouteParser))(Control_Applicative.pure(applicativeRouteParser)($243));
};
var flag = function ($244) {
    return $$default(false)(Data_Functor.map(functorRouteParser)(Data_Function["const"](true))(param($244)));
};
var optional = function ($245) {
    return $$default(Data_Maybe.Nothing.value)(Data_Functor.map(functorRouteParser)(Data_Maybe.Just.create)($245));
};
var many = function (dictAlternative) {
    return function (p) {
        return Control_Alt.alt(altRouteParser)(many1((dictAlternative.Plus1()).Alt0())(dictAlternative.Applicative0())(p))(Control_Applicative.pure(applicativeRouteParser)(Control_Plus.empty(dictAlternative.Plus1())));
    };
};
module.exports = {
    Expected: Expected,
    ExpectedEndOfPath: ExpectedEndOfPath,
    MissingParam: MissingParam,
    EndOfPath: EndOfPath,
    Fail: Fail,
    Success: Success,
    Alt: Alt,
    Chomp: Chomp,
    Prefix: Prefix,
    runRouteParser: runRouteParser,
    parsePath: parsePath,
    run: run,
    prefix: prefix,
    take: take,
    param: param,
    flag: flag,
    many1: many1,
    many: many,
    rest: rest,
    "default": $$default,
    optional: optional,
    as: as,
    "int": $$int,
    "boolean": $$boolean,
    hash: hash,
    end: end,
    eqRouteResult: eqRouteResult,
    functorRouteResult: functorRouteResult,
    genericRouteResult: genericRouteResult,
    showRouteResult: showRouteResult,
    eqRouteError: eqRouteError,
    genericRouteError: genericRouteError,
    showRouteError: showRouteError,
    functorRouteParser: functorRouteParser,
    applyRouteParser: applyRouteParser,
    applicativeRouteParser: applicativeRouteParser,
    altRouteParser: altRouteParser,
    lazyRouteParser: lazyRouteParser
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Lazy/index.js":25,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Array.NonEmpty.Internal/index.js":92,"../Data.Array.NonEmpty/index.js":93,"../Data.Array/index.js":99,"../Data.Bifunctor/index.js":106,"../Data.Boolean/index.js":110,"../Data.Either/index.js":131,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Generic.Rep.Show/index.js":159,"../Data.Generic.Rep/index.js":160,"../Data.HeytingAlgebra/index.js":162,"../Data.Int/index.js":167,"../Data.Lazy/index.js":171,"../Data.Maybe/index.js":210,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.String.CodeUnits/index.js":258,"../Data.String.Common/index.js":260,"../Data.String.Pattern/index.js":266,"../Data.String/index.js":272,"../Data.Symbol/index.js":274,"../Data.Tuple/index.js":283,"../Data.Unit/index.js":289,"../Global.Unsafe/index.js":322,"../Prelude/index.js":385,"../Routing.Duplex.Types/index.js":397}],396:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_String = require("../Data.String/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Global_Unsafe = require("../Global.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var Routing_Duplex_Types = require("../Routing.Duplex.Types/index.js");
var RoutePrinter = function (x) {
    return x;
};
var semigroupRoutePrinter = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return function ($27) {
            return v1(v($27));
        };
    };
});
var put = function (str) {
    return function (state) {
        return {
            segments: Data_Array.snoc(state.segments)(str),
            params: state.params,
            hash: state.hash
        };
    };
};
var printPath = function (v) {
    var printSegments = function (v1) {
        if (v1.length === 1 && v1[0] === "") {
            return "/";
        };
        return Data_String_Common.joinWith("/")(Data_Functor.map(Data_Functor.functorArray)(Global_Unsafe.unsafeEncodeURIComponent)(v1));
    };
    var printParam = function (key) {
        return function (v1) {
            if (v1 === "") {
                return Global_Unsafe.unsafeEncodeURIComponent(key);
            };
            return Global_Unsafe.unsafeEncodeURIComponent(key) + ("=" + Global_Unsafe.unsafeEncodeURIComponent(v1));
        };
    };
    var printParams = function (v1) {
        if (v1.length === 0) {
            return "";
        };
        return "?" + Data_String_Common.joinWith("&")(Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.uncurry(printParam))(v1));
    };
    var printHash = function (v1) {
        if (v1 === "") {
            return "";
        };
        return "#" + v1;
    };
    return printSegments(v.segments) + (printParams(v.params) + printHash(v.hash));
};
var param = function (key) {
    return function (val) {
        return function (state) {
            return {
                segments: state.segments,
                params: Data_Array.cons(new Data_Tuple.Tuple(key, val))(state.params),
                hash: state.hash
            };
        };
    };
};
var newtypeRoutePrinter = new Data_Newtype.Newtype(function (n) {
    return n;
}, RoutePrinter);
var run = function ($28) {
    return printPath(Data_Newtype.unwrap(newtypeRoutePrinter)($28)(Routing_Duplex_Types.emptyRouteState));
};
var monoidRoutePRinter = new Data_Monoid.Monoid(function () {
    return semigroupRoutePrinter;
}, Control_Category.identity(Control_Category.categoryFn));
var hash = function (h) {
    return function (v) {
        return {
            segments: v.segments,
            params: v.params,
            hash: h
        };
    };
};
var flag = function (key) {
    return function (val) {
        if (val) {
            return param(key)("");
        };
        if (Data_Boolean.otherwise) {
            return Data_Monoid.mempty(monoidRoutePRinter);
        };
        throw new Error("Failed pattern match at Routing.Duplex.Printer (line 37, column 1 - line 37, column 42): " + [ key.constructor.name, val.constructor.name ]);
    };
};
module.exports = {
    RoutePrinter: RoutePrinter,
    put: put,
    param: param,
    flag: flag,
    hash: hash,
    run: run,
    printPath: printPath,
    newtypeRoutePrinter: newtypeRoutePrinter,
    semigroupRoutePrinter: semigroupRoutePrinter,
    monoidRoutePRinter: monoidRoutePRinter
};

},{"../Control.Category/index.js":14,"../Control.Semigroupoid/index.js":61,"../Data.Array/index.js":99,"../Data.Boolean/index.js":110,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Semigroup/index.js":248,"../Data.String.Common/index.js":260,"../Data.String/index.js":272,"../Data.Tuple/index.js":283,"../Global.Unsafe/index.js":322,"../Prelude/index.js":385,"../Routing.Duplex.Types/index.js":397}],397:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Tuple = require("../Data.Tuple/index.js");
var emptyRouteState = {
    segments: [  ],
    params: [  ],
    hash: ""
};
module.exports = {
    emptyRouteState: emptyRouteState
};

},{"../Data.Tuple/index.js":283}],398:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_String = require("../Data.String/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Data_String_Pattern = require("../Data.String.Pattern/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Prelude = require("../Prelude/index.js");
var Record = require("../Record/index.js");
var Routing_Duplex_Parser = require("../Routing.Duplex.Parser/index.js");
var Routing_Duplex_Printer = require("../Routing.Duplex.Printer/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var RouteDuplex = (function () {
    function RouteDuplex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    RouteDuplex.create = function (value0) {
        return function (value1) {
            return new RouteDuplex(value0, value1);
        };
    };
    return RouteDuplex;
})();
var RouteDuplexParams = function (params) {
    this.params = params;
};
var RouteDuplexBuildParams = function (buildParams) {
    this.buildParams = buildParams;
};
var suffix = function (v) {
    return function (s) {
        return new RouteDuplex(function (a) {
            return Data_Semigroup.append(Routing_Duplex_Printer.semigroupRoutePrinter)(v.value0(a))(Routing_Duplex_Printer.put(s));
        }, Control_Apply.applyFirst(Routing_Duplex_Parser.applyRouteParser)(v.value1)(Routing_Duplex_Parser.prefix(s)(Control_Applicative.pure(Routing_Duplex_Parser.applicativeRouteParser)(Data_Unit.unit))));
    };
};
var string = Control_Category.identity(Control_Category.categoryFn);
var segment = new RouteDuplex(Routing_Duplex_Printer.put, Routing_Duplex_Parser.take);
var rest = new RouteDuplex(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Routing_Duplex_Printer.monoidRoutePRinter)(Routing_Duplex_Printer.put), Routing_Duplex_Parser.rest);
var record = new RouteDuplex(Data_Monoid.mempty(Data_Monoid.monoidFn(Routing_Duplex_Printer.monoidRoutePRinter)), Control_Applicative.pure(Routing_Duplex_Parser.applicativeRouteParser)({}));
var prop = function (dictIsSymbol) {
    return function (dictCons) {
        return function (dictCons1) {
            return function (dictLacks) {
                return function (sym) {
                    return function (v) {
                        return function (v1) {
                            return new RouteDuplex(function (r) {
                                return Data_Semigroup.append(Routing_Duplex_Printer.semigroupRoutePrinter)(v1.value0(r))(v.value0(Record.get(dictIsSymbol)(dictCons)(sym)(r)));
                            }, Control_Apply.apply(Routing_Duplex_Parser.applyRouteParser)(Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(Data_Function.flip(Record.insert(dictIsSymbol)(dictLacks)(dictCons1)(sym)))(v1.value1))(v.value1));
                        };
                    };
                };
            };
        };
    };
};
var profunctorRouteDuplex = new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
        return function (v) {
            return new RouteDuplex(function ($100) {
                return v.value0(f($100));
            }, Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(g)(v.value1));
        };
    };
});
var print = function (v) {
    return function ($101) {
        return Routing_Duplex_Printer.run(v.value0($101));
    };
};
var prefix = function (s) {
    return function (v) {
        return new RouteDuplex(function (a) {
            return Data_Semigroup.append(Routing_Duplex_Printer.semigroupRoutePrinter)(Routing_Duplex_Printer.put(s))(v.value0(a));
        }, Routing_Duplex_Parser.prefix(s)(v.value1));
    };
};
var path = function ($102) {
    return Data_Function.flip(Data_Foldable.foldr(Data_Foldable.foldableArray)(prefix))(Data_String_Common.split("/")($102));
};
var root = path("");
var parse = function (v) {
    return Routing_Duplex_Parser.run(v.value1);
};
var params = function (dict) {
    return dict.params;
};
var param = function (p) {
    return new RouteDuplex(Routing_Duplex_Printer.param(p), Routing_Duplex_Parser.param(p));
};
var optional = function (v) {
    return new RouteDuplex(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Routing_Duplex_Printer.monoidRoutePRinter)(v.value0), Routing_Duplex_Parser.optional(v.value1));
};
var many1 = function (dictFoldable) {
    return function (dictAlt) {
        return function (dictApplicative) {
            return function (v) {
                return new RouteDuplex(Data_Foldable.foldMap(dictFoldable)(Routing_Duplex_Printer.monoidRoutePRinter)(v.value0), Routing_Duplex_Parser.many1(dictAlt)(dictApplicative)(v.value1));
            };
        };
    };
};
var many = function (dictFoldable) {
    return function (dictAlternative) {
        return function (v) {
            return new RouteDuplex(Data_Foldable.foldMap(dictFoldable)(Routing_Duplex_Printer.monoidRoutePRinter)(v.value0), Routing_Duplex_Parser.many(dictAlternative)(v.value1));
        };
    };
};
var functorRouteDuplex = new Data_Functor.Functor(function (f) {
    return function (m) {
        return new RouteDuplex(m.value0, Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(f)(m.value1));
    };
});
var flag = function (v) {
    var enc$prime = function (v1) {
        if (v1) {
            return v.value0("");
        };
        return Data_Monoid.mempty(Routing_Duplex_Printer.monoidRoutePRinter);
    };
    var dec$prime = Routing_Duplex_Parser["default"](false)(Data_Functor.voidLeft(Routing_Duplex_Parser.functorRouteParser)(v.value1)(true));
    return new RouteDuplex(enc$prime, dec$prime);
};
var end = function (v) {
    return new RouteDuplex(v.value0, Control_Apply.applyFirst(Routing_Duplex_Parser.applyRouteParser)(v.value1)(Routing_Duplex_Parser.end));
};
var $$default = function (d) {
    return function (v) {
        return new RouteDuplex(v.value0, Routing_Duplex_Parser["default"](d)(v.value1));
    };
};
var buildParamsNil = new RouteDuplexBuildParams(function (v) {
    return function (r) {
        return Control_Category.identity(Control_Category.categoryFn);
    };
});
var buildParams = function (dict) {
    return dict.buildParams;
};
var buildParamsCons = function (dictIsSymbol) {
    return function (dictCons) {
        return function (dictCons1) {
            return function (dictCons2) {
                return function (dictLacks) {
                    return function (dictRouteDuplexBuildParams) {
                        return new RouteDuplexBuildParams(function (v) {
                            return function (r) {
                                return function (prev) {
                                    return buildParams(dictRouteDuplexBuildParams)(Type_Data_RowList.RLProxy.value)(r)(prop(dictIsSymbol)(dictCons1)(dictCons2)(dictLacks)(Data_Symbol.SProxy.value)(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(r)(param(Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value))))(prev));
                                };
                            };
                        });
                    };
                };
            };
        };
    };
};
var routeDuplexParams = function (dictRowToList) {
    return function (dictRouteDuplexBuildParams) {
        return new RouteDuplexParams(function (r) {
            return buildParams(dictRouteDuplexBuildParams)(Type_Data_RowList.RLProxy.value)(r)(record);
        });
    };
};
var as = function (f) {
    return function (g) {
        return function (v) {
            return new RouteDuplex(function ($103) {
                return v.value0(f($103));
            }, Routing_Duplex_Parser.as(Control_Category.identity(Control_Category.categoryFn))(g)(v.value1));
        };
    };
};
var $$boolean = as(Data_Show.show(Data_Show.showBoolean))(Routing_Duplex_Parser["boolean"]);
var $$int = as(Data_Show.show(Data_Show.showInt))(Routing_Duplex_Parser["int"]);
var applyRouteDuplex = new Control_Apply.Apply(function () {
    return functorRouteDuplex;
}, function (v) {
    return function (v1) {
        return new RouteDuplex(Control_Apply.apply(Control_Apply.applyFn)(Data_Functor.map(Data_Functor.functorFn)(Data_Semigroup.append(Routing_Duplex_Printer.semigroupRoutePrinter))(v.value0))(v1.value0), Control_Apply.apply(Routing_Duplex_Parser.applyRouteParser)(v.value1)(v1.value1));
    };
});
var applicativeRouteDuplex = new Control_Applicative.Applicative(function () {
    return applyRouteDuplex;
}, function ($104) {
    return RouteDuplex.create(Data_Function["const"](Data_Monoid.mempty(Routing_Duplex_Printer.monoidRoutePRinter)))(Control_Applicative.pure(Routing_Duplex_Parser.applicativeRouteParser)($104));
});
module.exports = {
    RouteDuplex: RouteDuplex,
    parse: parse,
    print: print,
    prefix: prefix,
    suffix: suffix,
    path: path,
    root: root,
    end: end,
    segment: segment,
    param: param,
    flag: flag,
    many1: many1,
    many: many,
    rest: rest,
    "default": $$default,
    optional: optional,
    as: as,
    "int": $$int,
    "boolean": $$boolean,
    string: string,
    record: record,
    prop: prop,
    params: params,
    buildParams: buildParams,
    RouteDuplexParams: RouteDuplexParams,
    RouteDuplexBuildParams: RouteDuplexBuildParams,
    functorRouteDuplex: functorRouteDuplex,
    applyRouteDuplex: applyRouteDuplex,
    applicativeRouteDuplex: applicativeRouteDuplex,
    profunctorRouteDuplex: profunctorRouteDuplex,
    routeDuplexParams: routeDuplexParams,
    buildParamsCons: buildParamsCons,
    buildParamsNil: buildParamsNil
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Category/index.js":14,"../Control.Semigroupoid/index.js":61,"../Data.Either/index.js":131,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Profunctor/index.js":238,"../Data.Semigroup/index.js":248,"../Data.Show/index.js":254,"../Data.String.Common/index.js":260,"../Data.String.Pattern/index.js":266,"../Data.String/index.js":272,"../Data.Symbol/index.js":274,"../Data.Unit/index.js":289,"../Prelude/index.js":385,"../Record/index.js":391,"../Routing.Duplex.Parser/index.js":395,"../Routing.Duplex.Printer/index.js":396,"../Type.Data.RowList/index.js":418}],399:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_String = require("../Data.String/index.js");
var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");
var Data_String_Pattern = require("../Data.String.Pattern/index.js");
var Effect = require("../Effect/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Prelude = require("../Prelude/index.js");
var Routing = require("../Routing/index.js");
var Routing_Match = require("../Routing.Match/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML = require("../Web.HTML/index.js");
var Web_HTML_Event_HashChangeEvent_EventTypes = require("../Web.HTML.Event.HashChangeEvent.EventTypes/index.js");
var Web_HTML_Location = require("../Web.HTML.Location/index.js");
var Web_HTML_Window = require("../Web.HTML.Window/index.js");
var setHash = function (h) {
    return Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.location))(Web_HTML_Location.setHash(h));
};
var getHash = function __do() {
    var $8 = Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.location)();
    return Data_Functor.map(Effect.functorEffect)(function ($9) {
        return Data_Maybe.fromMaybe("")(Data_String_CodeUnits.stripPrefix("#")($9));
    })(Web_HTML_Location.hash($8))();
};
var modifyHash = function (fn) {
    return Control_Bind.bind(Effect.bindEffect)(Data_Functor.map(Effect.functorEffect)(fn)(getHash))(setHash);
};
var foldHashes = function (cb) {
    return function (init) {
        return function __do() {
            var v = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(Control_Bind.bindFlipped(Effect.bindEffect)(init)(getHash))();
            var v1 = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
            var v2 = Web_Event_EventTarget.eventListener(function (v2) {
                return Control_Bind.bindFlipped(Effect.bindEffect)(Data_Function.flip(Effect_Ref.write)(v))(Control_Bind.join(Effect.bindEffect)(Control_Apply.apply(Effect.applyEffect)(Data_Functor.map(Effect.functorEffect)(cb)(Effect_Ref.read(v)))(getHash)));
            })();
            Web_Event_EventTarget.addEventListener(Web_HTML_Event_HashChangeEvent_EventTypes.hashchange)(v2)(false)(v1)();
            return Web_Event_EventTarget.removeEventListener(Web_HTML_Event_HashChangeEvent_EventTypes.hashchange)(v2)(false)(v1);
        };
    };
};
var matchesWith = function (dictFoldable) {
    return function (parser) {
        return function (cb) {
            var go = function (a) {
                return function ($10) {
                    return Data_Maybe.maybe(Control_Applicative.pure(Effect.applicativeEffect)(a))(function (b) {
                        return Data_Functor.voidRight(Effect.functorEffect)(new Data_Maybe.Just(b))(cb(a)(b));
                    })(Data_Foldable.indexl(dictFoldable)(0)(parser($10)));
                };
            };
            return foldHashes(go)(go(Data_Maybe.Nothing.value));
        };
    };
};
var hashes = matchesWith(Data_Foldable.foldableMaybe)(Data_Maybe.Just.create);
var matches = function ($11) {
    return matchesWith(Data_Either.foldableEither)(Routing.match($11));
};
module.exports = {
    getHash: getHash,
    setHash: setHash,
    modifyHash: modifyHash,
    foldHashes: foldHashes,
    hashes: hashes,
    matches: matches,
    matchesWith: matchesWith
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Semigroupoid/index.js":61,"../Data.Either/index.js":131,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.String.CodeUnits/index.js":258,"../Data.String.Pattern/index.js":266,"../Data.String/index.js":272,"../Effect.Ref/index.js":306,"../Effect/index.js":312,"../Prelude/index.js":385,"../Routing.Match/index.js":401,"../Routing/index.js":404,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.Event.HashChangeEvent.EventTypes/index.js":482,"../Web.HTML.Location/index.js":603,"../Web.HTML.Window/index.js":610,"../Web.HTML/index.js":612}],400:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Prelude = require("../Prelude/index.js");
var UnexpectedPath = (function () {
    function UnexpectedPath(value0) {
        this.value0 = value0;
    };
    UnexpectedPath.create = function (value0) {
        return new UnexpectedPath(value0);
    };
    return UnexpectedPath;
})();
var ExpectedBoolean = (function () {
    function ExpectedBoolean() {

    };
    ExpectedBoolean.value = new ExpectedBoolean();
    return ExpectedBoolean;
})();
var ExpectedEnd = (function () {
    function ExpectedEnd() {

    };
    ExpectedEnd.value = new ExpectedEnd();
    return ExpectedEnd;
})();
var ExpectedNumber = (function () {
    function ExpectedNumber() {

    };
    ExpectedNumber.value = new ExpectedNumber();
    return ExpectedNumber;
})();
var ExpectedInt = (function () {
    function ExpectedInt() {

    };
    ExpectedInt.value = new ExpectedInt();
    return ExpectedInt;
})();
var ExpectedString = (function () {
    function ExpectedString() {

    };
    ExpectedString.value = new ExpectedString();
    return ExpectedString;
})();
var ExpectedQuery = (function () {
    function ExpectedQuery() {

    };
    ExpectedQuery.value = new ExpectedQuery();
    return ExpectedQuery;
})();
var ExpectedPathPart = (function () {
    function ExpectedPathPart() {

    };
    ExpectedPathPart.value = new ExpectedPathPart();
    return ExpectedPathPart;
})();
var KeyNotFound = (function () {
    function KeyNotFound(value0) {
        this.value0 = value0;
    };
    KeyNotFound.create = function (value0) {
        return new KeyNotFound(value0);
    };
    return KeyNotFound;
})();
var Fail = (function () {
    function Fail(value0) {
        this.value0 = value0;
    };
    Fail.create = function (value0) {
        return new Fail(value0);
    };
    return Fail;
})();
var showMatchError = function (err) {
    if (err instanceof UnexpectedPath) {
        return "expected path part: " + err.value0;
    };
    if (err instanceof KeyNotFound) {
        return "key: " + (err.value0 + " has not found in query part");
    };
    if (err instanceof ExpectedQuery) {
        return "expected query - found path";
    };
    if (err instanceof ExpectedNumber) {
        return "expected number";
    };
    if (err instanceof ExpectedInt) {
        return "expected int";
    };
    if (err instanceof ExpectedBoolean) {
        return "expected boolean";
    };
    if (err instanceof ExpectedEnd) {
        return "expected end";
    };
    if (err instanceof ExpectedString) {
        return "expected string var";
    };
    if (err instanceof ExpectedPathPart) {
        return "expected path part, found query";
    };
    if (err instanceof Fail) {
        return "match error: " + err.value0;
    };
    throw new Error("Failed pattern match at Routing.Match.Error (line 29, column 3 - line 39, column 36): " + [ err.constructor.name ]);
};
module.exports = {
    UnexpectedPath: UnexpectedPath,
    ExpectedBoolean: ExpectedBoolean,
    ExpectedEnd: ExpectedEnd,
    ExpectedNumber: ExpectedNumber,
    ExpectedInt: ExpectedInt,
    ExpectedString: ExpectedString,
    ExpectedQuery: ExpectedQuery,
    ExpectedPathPart: ExpectedPathPart,
    KeyNotFound: KeyNotFound,
    Fail: Fail,
    showMatchError: showMatchError
};

},{"../Data.Semigroup/index.js":248,"../Prelude/index.js":385}],401:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Map = require("../Data.Map/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Semiring_Free = require("../Data.Semiring.Free/index.js");
var Data_String_NonEmpty = require("../Data.String.NonEmpty/index.js");
var Data_String_NonEmpty_Internal = require("../Data.String.NonEmpty.Internal/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Data_Validation_Semiring = require("../Data.Validation.Semiring/index.js");
var Global = require("../Global/index.js");
var Prelude = require("../Prelude/index.js");
var Routing_Match_Error = require("../Routing.Match.Error/index.js");
var Routing_Types = require("../Routing.Types/index.js");
var Match = function (x) {
    return x;
};
var str = function (route) {
    if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Path) {
        return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, route.value0.value0));
    };
    return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedString.value));
};
var runMatch = function (v) {
    return function (route) {
        var foldErrors = function (errs) {
            return Data_Either.Left.create(Data_Foldable.foldl(Data_List_Types.foldableList)(function (b) {
                return function (a) {
                    return a + ("\x0a" + b);
                };
            })("")(Control_Bind.bind(Data_List_Types.bindList)(Data_Functor.map(Data_List_Types.functorList)(Data_List.reverse)(Data_Newtype.unwrap(Data_Semiring_Free.newtypeFree)(errs)))(function (v1) {
                return Control_Applicative.pure(Data_List_Types.applicativeList)(Data_Foldable.foldl(Data_List_Types.foldableList)(function (b) {
                    return function (a) {
                        return a + (";" + b);
                    };
                })("")(Data_Functor.map(Data_List_Types.functorList)(Routing_Match_Error.showMatchError)(v1)));
            })));
        };
        return Data_Validation_Semiring.unV(foldErrors)(function ($90) {
            return Data_Either.Right.create(Data_Tuple.snd($90));
        })(v(route));
    };
};
var params = function (route) {
    if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Query) {
        return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, route.value0.value0));
    };
    return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedQuery.value));
};
var param = function (key) {
    return function (route) {
        if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Query) {
            var v = Data_Map_Internal.lookup(Data_Ord.ordString)(key)(route.value0.value0);
            if (v instanceof Data_Maybe.Nothing) {
                return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(new Routing_Match_Error.KeyNotFound(key)));
            };
            if (v instanceof Data_Maybe.Just) {
                return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(new Data_List_Types.Cons(Routing_Types.Query.create(Data_Map_Internal["delete"](Data_Ord.ordString)(key)(route.value0.value0)), route.value1), v.value0));
            };
            throw new Error("Failed pattern match at Routing.Match (line 121, column 7 - line 125, column 67): " + [ v.constructor.name ]);
        };
        return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedQuery.value));
    };
};
var optionalMatch = function (v) {
    return function (route) {
        return Data_Validation_Semiring.unV(Data_Function["const"](Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route, Data_Maybe.Nothing.value))))(function ($91) {
            return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(Data_Functor.map(Data_Tuple.functorTuple)(Data_Maybe.Just.create)($91));
        })(v(route));
    };
};
var num = function (route) {
    if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Path) {
        var res = Global.readFloat(route.value0.value0);
        var $38 = Global["isNaN"](res);
        if ($38) {
            return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedNumber.value));
        };
        return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, res));
    };
    return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedNumber.value));
};
var newtypeMatch = new Data_Newtype.Newtype(function (v) {
    return v;
}, Match);
var matchFunctor = new Data_Functor.Functor(function (fn) {
    return function (v) {
        return Match(function (r) {
            return Data_Validation_Semiring.unV(Data_Validation_Semiring.invalid)(function (v1) {
                return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(v1.value0, fn(v1.value1)));
            })(v(r));
        });
    };
});
var matchApply = new Control_Apply.Apply(function () {
    return matchFunctor;
}, function (v) {
    return function (v1) {
        var processFnRes = function (v2) {
            return Data_Validation_Semiring.unV(Data_Validation_Semiring.invalid)(function (v3) {
                return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(v3.value0, v2.value1(v3.value1)));
            })(v1(v2.value0));
        };
        var processFnErr = function (r) {
            return function (err) {
                return Data_Validation_Semiring.invalid(Data_Semiring.mul(Data_Semiring_Free.semiringFree)(err)(Data_Validation_Semiring.unV(Control_Category.identity(Control_Category.categoryFn))(Data_Function["const"](Data_Semiring.one(Data_Semiring_Free.semiringFree)))(v1(r))));
            };
        };
        return Match(function (r) {
            return Data_Validation_Semiring.unV(processFnErr(r))(processFnRes)(v(r));
        });
    };
});
var matchApplicative = new Control_Applicative.Applicative(function () {
    return matchApply;
}, function (a) {
    return function (r) {
        return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(r, a));
    };
});
var matchAlt = new Control_Alt.Alt(function () {
    return matchFunctor;
}, function (v) {
    return function (v1) {
        return Match(function (r) {
            return Control_Alt.alt(Data_Validation_Semiring.altV(Data_Semiring_Free.semiringFree))(v(r))(v1(r));
        });
    };
});
var matchPlus = new Control_Plus.Plus(function () {
    return matchAlt;
}, Match(Data_Function["const"](Data_Validation_Semiring.invalid(Data_Semiring.one(Data_Semiring_Free.semiringFree)))));
var matchAlternative = new Control_Alternative.Alternative(function () {
    return matchApplicative;
}, function () {
    return matchPlus;
});
var lit = function (input) {
    return function (route) {
        if (route instanceof Data_List_Types.Cons && (route.value0 instanceof Routing_Types.Path && route.value0.value0 === input)) {
            return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, Data_Unit.unit));
        };
        if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Path) {
            return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(new Routing_Match_Error.UnexpectedPath(input)));
        };
        return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedPathPart.value));
    };
};
var root = lit("");
var list = function (v) {
    var go = function (accum) {
        return function (r) {
            return Data_Validation_Semiring.unV(Data_Function["const"](Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(r, Data_List.reverse(accum)))))(function (v1) {
                return go(new Data_List_Types.Cons(v1.value1, accum))(v1.value0);
            })(v(r));
        };
    };
    return Match(go(Data_List_Types.Nil.value));
};
var $$int = function (route) {
    if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Path) {
        var v = Data_Int.fromString(route.value0.value0);
        if (v instanceof Data_Maybe.Nothing) {
            return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedInt.value));
        };
        if (v instanceof Data_Maybe.Just) {
            return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, v.value0));
        };
        throw new Error("Failed pattern match at Routing.Match (line 88, column 29 - line 90, column 38): " + [ v.constructor.name ]);
    };
    return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedInt.value));
};
var fail = function (msg) {
    return function (v) {
        return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(new Routing_Match_Error.Fail(msg)));
    };
};
var end = function (route) {
    if (route instanceof Data_List_Types.Nil) {
        return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_Unit.unit));
    };
    return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedEnd.value));
};
var eitherMatch = function (v) {
    var runEither = function (v1) {
        if (v1.value1 instanceof Data_Either.Left) {
            return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(new Routing_Match_Error.Fail("Nested check failed")));
        };
        if (v1.value1 instanceof Data_Either.Right) {
            return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(v1.value0, v1.value1.value0));
        };
        throw new Error("Failed pattern match at Routing.Match (line 202, column 5 - line 204, column 39): " + [ v1.value1.constructor.name ]);
    };
    return Match(function (r) {
        return Data_Validation_Semiring.unV(Data_Validation_Semiring.invalid)(runEither)(v(r));
    });
};
var nonempty = eitherMatch(Data_Functor.map(matchFunctor)(function ($92) {
    return Data_Maybe.maybe(new Data_Either.Left("Empty string"))(Data_Either.Right.create)(Data_String_NonEmpty_Internal.fromString($92));
})(str));
var bool = function (route) {
    if (route instanceof Data_List_Types.Cons && (route.value0 instanceof Routing_Types.Path && route.value0.value0 === "true")) {
        return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, true));
    };
    if (route instanceof Data_List_Types.Cons && (route.value0 instanceof Routing_Types.Path && route.value0.value0 === "false")) {
        return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, false));
    };
    return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedBoolean.value));
};
module.exports = {
    Match: Match,
    root: root,
    lit: lit,
    num: num,
    "int": $$int,
    bool: bool,
    str: str,
    param: param,
    params: params,
    end: end,
    fail: fail,
    nonempty: nonempty,
    list: list,
    runMatch: runMatch,
    eitherMatch: eitherMatch,
    optionalMatch: optionalMatch,
    newtypeMatch: newtypeMatch,
    matchFunctor: matchFunctor,
    matchAlt: matchAlt,
    matchPlus: matchPlus,
    matchAlternative: matchAlternative,
    matchApply: matchApply,
    matchApplicative: matchApplicative
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Either/index.js":131,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Int/index.js":167,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Map.Internal/index.js":206,"../Data.Map/index.js":207,"../Data.Maybe/index.js":210,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Semiring.Free/index.js":249,"../Data.Semiring/index.js":251,"../Data.String.NonEmpty.Internal/index.js":264,"../Data.String.NonEmpty/index.js":265,"../Data.Tuple/index.js":283,"../Data.Unit/index.js":289,"../Data.Validation.Semiring/index.js":290,"../Global/index.js":324,"../Prelude/index.js":385,"../Routing.Match.Error/index.js":400,"../Routing.Types/index.js":403}],402:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Map = require("../Data.Map/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_String = require("../Data.String/index.js");
var Data_String_CodePoints = require("../Data.String.CodePoints/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Data_String_Pattern = require("../Data.String.Pattern/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Prelude = require("../Prelude/index.js");
var Routing_Types = require("../Routing.Types/index.js");
var parseQueryPart = function (decoder) {
    var part2tuple = function (input) {
        var keyVal = Data_Functor.map(Data_Functor.functorArray)(decoder)(Data_String_Common.split("=")(input));
        return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(Data_Array.length(keyVal) <= 2))(function () {
            return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(Data_Array.head(keyVal)))(Data_Array.index(keyVal)(1));
        });
    };
    return function ($11) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(part2tuple)(Data_String_Common.split("&")($11)));
    };
};
var parse = function (decoder) {
    return function (hash) {
        var pathParts = function (str) {
            var parts = Data_List.fromFoldable(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(function ($12) {
                return Routing_Types.Path.create(decoder($12));
            })(Data_String_Common.split("/")(str)));
            var v = Data_List.unsnoc(parts);
            if (v instanceof Data_Maybe.Just && (v.value0.last instanceof Routing_Types.Path && v.value0.last.value0 === "")) {
                return v.value0.init;
            };
            return parts;
        };
        var v = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_String_CodePoints.splitAt)(hash))(Data_String_CodePoints.indexOf("?")(hash));
        if (v instanceof Data_Maybe.Just) {
            return Data_Semigroup.append(Data_List_Types.semigroupList)(pathParts(v.value0.before))(Data_Functor.map(Data_List_Types.functorList)(Routing_Types.Query.create)(Data_List.fromFoldable(Data_Foldable.foldableMaybe)(parseQueryPart(decoder)(Data_String_CodePoints.drop(1)(v.value0.after)))));
        };
        if (v instanceof Data_Maybe.Nothing) {
            return pathParts(hash);
        };
        throw new Error("Failed pattern match at Routing.Parser (line 32, column 3 - line 37, column 21): " + [ v.constructor.name ]);
    };
};
module.exports = {
    parse: parse
};

},{"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.MonadPlus/index.js":56,"../Control.MonadZero/index.js":57,"../Control.Semigroupoid/index.js":61,"../Data.Array/index.js":99,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Map.Internal/index.js":206,"../Data.Map/index.js":207,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.String.CodePoints/index.js":256,"../Data.String.Common/index.js":260,"../Data.String.Pattern/index.js":266,"../Data.String/index.js":272,"../Data.Traversable/index.js":281,"../Data.Tuple/index.js":283,"../Prelude/index.js":385,"../Routing.Types/index.js":403}],403:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_List = require("../Data.List/index.js");
var Data_Map = require("../Data.Map/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Prelude = require("../Prelude/index.js");
var Path = (function () {
    function Path(value0) {
        this.value0 = value0;
    };
    Path.create = function (value0) {
        return new Path(value0);
    };
    return Path;
})();
var Query = (function () {
    function Query(value0) {
        this.value0 = value0;
    };
    Query.create = function (value0) {
        return new Query(value0);
    };
    return Query;
})();
var eqRoutePart = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Path && y instanceof Path) {
            return x.value0 === y.value0;
        };
        if (x instanceof Query && y instanceof Query) {
            return Data_Eq.eq(Data_Map_Internal.eqMap(Data_Eq.eqString)(Data_Eq.eqString))(x.value0)(y.value0);
        };
        return false;
    };
});
var ordRoutePart = new Data_Ord.Ord(function () {
    return eqRoutePart;
}, function (x) {
    return function (y) {
        if (x instanceof Path && y instanceof Path) {
            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
        };
        if (x instanceof Path) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Path) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Query && y instanceof Query) {
            return Data_Ord.compare(Data_Map_Internal.ordMap(Data_Ord.ordString)(Data_Ord.ordString))(x.value0)(y.value0);
        };
        throw new Error("Failed pattern match at Routing.Types (line 11, column 8 - line 11, column 46): " + [ x.constructor.name, y.constructor.name ]);
    };
});
module.exports = {
    Path: Path,
    Query: Query,
    eqRoutePart: eqRoutePart,
    ordRoutePart: ordRoutePart
};

},{"../Data.Eq/index.js":135,"../Data.List/index.js":204,"../Data.Map.Internal/index.js":206,"../Data.Map/index.js":207,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Prelude/index.js":385}],404:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Either = require("../Data.Either/index.js");
var Global_Unsafe = require("../Global.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var Routing_Match = require("../Routing.Match/index.js");
var Routing_Parser = require("../Routing.Parser/index.js");
var matchWith = function (decoder) {
    return function (matcher) {
        return function ($0) {
            return Routing_Match.runMatch(matcher)(Routing_Parser.parse(decoder)($0));
        };
    };
};
var match = matchWith(Global_Unsafe.unsafeDecodeURIComponent);
module.exports = {
    match: match,
    matchWith: matchWith
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Either/index.js":131,"../Global.Unsafe/index.js":322,"../Prelude/index.js":385,"../Routing.Match/index.js":401,"../Routing.Parser/index.js":402}],405:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Free = require("../Control.Monad.Free/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Halogen = require("../Halogen/index.js");
var Halogen_HTML_Events = require("../Halogen.HTML.Events/index.js");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");
var Halogen_Query_InputF = require("../Halogen.Query.InputF/index.js");
var Prelude = require("../Prelude/index.js");
var Select = require("../Select/index.js");
var Web_Event_Event = require("../Web.Event.Event/index.js");
var Web_UIEvent_FocusEvent = require("../Web.UIEvent.FocusEvent/index.js");
var Web_UIEvent_KeyboardEvent = require("../Web.UIEvent.KeyboardEvent/index.js");
var Web_UIEvent_MouseEvent = require("../Web.UIEvent.MouseEvent/index.js");
var setToggleProps = Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Events.onFocus(Select.always(Select.setVisibility(Select.On.value))), Halogen_HTML_Events.onMouseDown(function (ev) {
    return new Data_Maybe.Just(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Select.preventClick(ev))(function () {
        return Control_Bind.bind(Control_Monad_Free.freeBind)(Select.getVisibility)(function (v) {
            if (v instanceof Select.On) {
                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Select.triggerBlur)(function () {
                    return Select.setVisibility(Select.Off.value);
                });
            };
            if (v instanceof Select.Off) {
                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Select.triggerFocus)(function () {
                    return Select.setVisibility(Select.On.value);
                });
            };
            throw new Error("Failed pattern match at Select.Setters (line 48, column 32 - line 54, column 41): " + [ v.constructor.name ]);
        });
    }));
}), Halogen_HTML_Events.onKeyDown(function ($2) {
    return Data_Maybe.Just.create(Select.key($2));
}), Halogen_HTML_Events.onBlur(Select.always(Select.setVisibility(Select.Off.value))), Halogen_HTML_Properties.tabIndex(0), Halogen_HTML_Properties.ref("select-input") ]);
var setItemProps = function (index) {
    return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Events.onMouseDown(function (ev) {
        return new Data_Maybe.Just(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Select.preventClick(ev))(function () {
            return Select.select(index);
        }));
    }), Halogen_HTML_Events.onMouseOver(Select.always(Select.highlight(new Select.Index(index)))) ]);
};
var setInputProps = Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Events.onFocus(Select.always(Select.setVisibility(Select.On.value))), Halogen_HTML_Events.onKeyDown(function ($3) {
    return Data_Maybe.Just.create(Select.key($3));
}), Halogen_HTML_Events.onValueInput(function ($4) {
    return Data_Maybe.Just.create(Select.search($4));
}), Halogen_HTML_Events.onMouseDown(Select.always(Select.setVisibility(Select.On.value))), Halogen_HTML_Events.onBlur(Select.always(Select.setVisibility(Select.Off.value))), Halogen_HTML_Properties.tabIndex(0), Halogen_HTML_Properties.ref("select-input") ]);
var setContainerProps = Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Events.onMouseDown(function ($5) {
    return Data_Maybe.Just.create(Select.preventClick($5));
}) ]);
module.exports = {
    setToggleProps: setToggleProps,
    setInputProps: setInputProps,
    setItemProps: setItemProps,
    setContainerProps: setContainerProps
};

},{"../Control.Bind/index.js":13,"../Control.Monad.Free/index.js":33,"../Control.Semigroupoid/index.js":61,"../Data.Function/index.js":145,"../Data.Maybe/index.js":210,"../Data.Semigroup/index.js":248,"../Halogen.HTML.Events/index.js":336,"../Halogen.HTML.Properties/index.js":338,"../Halogen.Query.InputF/index.js":343,"../Halogen/index.js":353,"../Prelude/index.js":385,"../Select/index.js":406,"../Web.Event.Event/index.js":465,"../Web.UIEvent.FocusEvent/index.js":626,"../Web.UIEvent.KeyboardEvent/index.js":629,"../Web.UIEvent.MouseEvent/index.js":632}],406:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Comonad_Store = require("../Control.Comonad.Store/index.js");
var Control_Comonad_Store_Trans = require("../Control.Comonad.Store.Trans/index.js");
var Control_Monad_Free = require("../Control.Monad.Free/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Time_Duration = require("../Data.Time.Duration/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Aff_AVar = require("../Effect.Aff.AVar/index.js");
var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Halogen = require("../Halogen/index.js");
var Halogen_Component = require("../Halogen.Component/index.js");
var Halogen_HTML = require("../Halogen.HTML/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_Query = require("../Halogen.Query/index.js");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");
var Halogen_Query_InputF = require("../Halogen.Query.InputF/index.js");
var Prelude = require("../Prelude/index.js");
var Renderless_State = require("../Renderless.State/index.js");
var Web_Event_Event = require("../Web.Event.Event/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_UIEvent_KeyboardEvent = require("../Web.UIEvent.KeyboardEvent/index.js");
var Web_UIEvent_MouseEvent = require("../Web.UIEvent.MouseEvent/index.js");
var Off = (function () {
    function Off() {

    };
    Off.value = new Off();
    return Off;
})();
var On = (function () {
    function On() {

    };
    On.value = new On();
    return On;
})();
var Prev = (function () {
    function Prev() {

    };
    Prev.value = new Prev();
    return Prev;
})();
var Next = (function () {
    function Next() {

    };
    Next.value = new Next();
    return Next;
})();
var Index = (function () {
    function Index(value0) {
        this.value0 = value0;
    };
    Index.create = function (value0) {
        return new Index(value0);
    };
    return Index;
})();
var Searched = (function () {
    function Searched(value0) {
        this.value0 = value0;
    };
    Searched.create = function (value0) {
        return new Searched(value0);
    };
    return Searched;
})();
var Selected = (function () {
    function Selected(value0) {
        this.value0 = value0;
    };
    Selected.create = function (value0) {
        return new Selected(value0);
    };
    return Selected;
})();
var VisibilityChanged = (function () {
    function VisibilityChanged(value0) {
        this.value0 = value0;
    };
    VisibilityChanged.create = function (value0) {
        return new VisibilityChanged(value0);
    };
    return VisibilityChanged;
})();
var Emit = (function () {
    function Emit(value0) {
        this.value0 = value0;
    };
    Emit.create = function (value0) {
        return new Emit(value0);
    };
    return Emit;
})();
var TextInput = (function () {
    function TextInput() {

    };
    TextInput.value = new TextInput();
    return TextInput;
})();
var Toggle = (function () {
    function Toggle() {

    };
    Toggle.value = new Toggle();
    return Toggle;
})();
var Search = (function () {
    function Search(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Search.create = function (value0) {
        return function (value1) {
            return new Search(value0, value1);
        };
    };
    return Search;
})();
var Highlight = (function () {
    function Highlight(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Highlight.create = function (value0) {
        return function (value1) {
            return new Highlight(value0, value1);
        };
    };
    return Highlight;
})();
var Select = (function () {
    function Select(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Select.create = function (value0) {
        return function (value1) {
            return new Select(value0, value1);
        };
    };
    return Select;
})();
var Focus = (function () {
    function Focus(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Focus.create = function (value0) {
        return function (value1) {
            return new Focus(value0, value1);
        };
    };
    return Focus;
})();
var Key = (function () {
    function Key(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Key.create = function (value0) {
        return function (value1) {
            return new Key(value0, value1);
        };
    };
    return Key;
})();
var PreventClick = (function () {
    function PreventClick(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    PreventClick.create = function (value0) {
        return function (value1) {
            return new PreventClick(value0, value1);
        };
    };
    return PreventClick;
})();
var SetVisibility = (function () {
    function SetVisibility(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SetVisibility.create = function (value0) {
        return function (value1) {
            return new SetVisibility(value0, value1);
        };
    };
    return SetVisibility;
})();
var GetVisibility = (function () {
    function GetVisibility(value0) {
        this.value0 = value0;
    };
    GetVisibility.create = function (value0) {
        return new GetVisibility(value0);
    };
    return GetVisibility;
})();
var ReplaceItems = (function () {
    function ReplaceItems(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ReplaceItems.create = function (value0) {
        return function (value1) {
            return new ReplaceItems(value0, value1);
        };
    };
    return ReplaceItems;
})();
var Raise = (function () {
    function Raise(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Raise.create = function (value0) {
        return function (value1) {
            return new Raise(value0, value1);
        };
    };
    return Raise;
})();
var Initialize = (function () {
    function Initialize(value0) {
        this.value0 = value0;
    };
    Initialize.create = function (value0) {
        return new Initialize(value0);
    };
    return Initialize;
})();
var Receive = (function () {
    function Receive(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Receive.create = function (value0) {
        return function (value1) {
            return new Receive(value0, value1);
        };
    };
    return Receive;
})();
var triggerFocus = Control_Monad_Free.liftF(new Focus(true, Data_Unit.unit));
var triggerBlur = Control_Monad_Free.liftF(new Focus(false, Data_Unit.unit));
var setVisibility = function (v) {
    return Control_Monad_Free.liftF(new SetVisibility(v, Data_Unit.unit));
};
var select = function (i) {
    return Control_Monad_Free.liftF(new Select(i, Data_Unit.unit));
};
var search = function (s) {
    return Control_Monad_Free.liftF(new Search(s, Data_Unit.unit));
};
var replaceItems = function (items) {
    return Control_Monad_Free.liftF(new ReplaceItems(items, Data_Unit.unit));
};
var receive = function (i) {
    return Control_Monad_Free.liftF(new Receive(i, Data_Unit.unit));
};
var raise = function (o) {
    return Control_Monad_Free.liftF(new Raise(o, Data_Unit.unit));
};
var preventClick = function (i) {
    return Control_Monad_Free.liftF(new PreventClick(i, Data_Unit.unit));
};
var key = function (e) {
    return Control_Monad_Free.liftF(new Key(e, Data_Unit.unit));
};
var initialize = Control_Monad_Free.liftF(new Initialize(Data_Unit.unit));
var highlight = function (t) {
    return Control_Monad_Free.liftF(new Highlight(t, Data_Unit.unit));
};
var heytingAlgebraVisibility = new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
    return function (v1) {
        if (v instanceof On && v1 instanceof On) {
            return On.value;
        };
        return Off.value;
    };
}, function (v) {
    return function (v1) {
        if (v instanceof Off && v1 instanceof Off) {
            return Off.value;
        };
        return On.value;
    };
}, Off.value, function (v) {
    return function (v1) {
        if (v instanceof On && v1 instanceof Off) {
            return Off.value;
        };
        return On.value;
    };
}, function (v) {
    if (v instanceof On) {
        return Off.value;
    };
    if (v instanceof Off) {
        return On.value;
    };
    throw new Error("Failed pattern match at Select (line 162, column 1 - line 162, column 63): " + [ v.constructor.name ]);
}, On.value);
var getVisibility = Control_Monad_Free.liftF(new GetVisibility(Control_Category.identity(Control_Category.categoryFn)));
var toggleVisibility = Control_Bind.bind(Control_Monad_Free.freeBind)(getVisibility)(function ($122) {
    return setVisibility(Data_HeytingAlgebra.not(heytingAlgebraVisibility)($122));
});
var eqVisibility = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Off && y instanceof Off) {
            return true;
        };
        if (x instanceof On && y instanceof On) {
            return true;
        };
        return false;
    };
});
var ordVisibility = new Data_Ord.Ord(function () {
    return eqVisibility;
}, function (x) {
    return function (y) {
        if (x instanceof Off && y instanceof Off) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Off) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Off) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof On && y instanceof On) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Select (line 160, column 8 - line 160, column 48): " + [ x.constructor.name, y.constructor.name ]);
    };
});
var eqTarget = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Prev && y instanceof Prev) {
            return true;
        };
        if (x instanceof Next && y instanceof Next) {
            return true;
        };
        if (x instanceof Index && y instanceof Index) {
            return x.value0 === y.value0;
        };
        return false;
    };
});
var component = function (dictMonadAff) {
    var initialState = function (i) {
        return Control_Comonad_Store.store(i.render)({
            inputType: i.inputType,
            search: Data_Maybe.fromMaybe("")(i.initialSearch),
            debounceTime: Data_Maybe.fromMaybe(0.0)(i.debounceTime),
            debounceRef: Data_Maybe.Nothing.value,
            items: i.items,
            highlightedIndex: Data_Maybe.Nothing.value,
            visibility: Off.value,
            lastIndex: Data_Array.length(i.items) - 1 | 0
        });
    };
    var setVis = function (v) {
        return eval$prime(setVisibility(v));
    };
    var eval$prime = function (a) {
        return Control_Monad_Free.foldFree(Halogen_Query_HalogenM.monadRecHalogenM)($$eval)(a);
    };
    var $$eval = function (v) {
        if (v instanceof Initialize) {
            return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value0)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (v1) {
                return Renderless_State.modifyState_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                    var $58 = {};
                    for (var $59 in v2) {
                        if ({}.hasOwnProperty.call(v2, $59)) {
                            $58[$59] = v2[$59];
                        };
                    };
                    $58.debounceRef = new Data_Maybe.Just(v1);
                    return $58;
                });
            }));
        };
        if (v instanceof Search) {
            return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Renderless_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Functor.map(Effect.functorEffect)(Control_Bind.join(Data_Maybe.bindMaybe))(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Effect.applicativeEffect)(Effect_Ref.read)(v1.debounceRef))))(function (v2) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Renderless_State.modifyState_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                        var $64 = {};
                        for (var $65 in v3) {
                            if ({}.hasOwnProperty.call(v3, $65)) {
                                $64[$65] = v3[$65];
                            };
                        };
                        $64.search = v.value0;
                        return $64;
                    }))(function () {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(setVis(On.value))(function () {
                            if (v1.inputType instanceof TextInput && v2 instanceof Data_Maybe.Nothing) {
                                return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(Data_Unit.unit)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff_AVar.empty))(function (v3) {
                                    return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff.forkAff(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(v1.debounceTime))(function () {
                                        return Effect_Aff_AVar.put(Data_Unit.unit)(v3);
                                    }))))(function (v4) {
                                        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.fork(dictMonadAff)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff_AVar.take(v3)))(function (v5) {
                                            return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Effect_Ref.write(Data_Maybe.Nothing.value))(v1.debounceRef))))(function () {
                                                return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Renderless_State.modifyState_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v6) {
                                                    var $71 = {};
                                                    for (var $72 in v6) {
                                                        if ({}.hasOwnProperty.call(v6, $72)) {
                                                            $71[$72] = v6[$72];
                                                        };
                                                    };
                                                    $71.highlightedIndex = new Data_Maybe.Just(0);
                                                    return $71;
                                                }))(function () {
                                                    return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Renderless_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v6) {
                                                        return Halogen_Query_HalogenM.raise(new Searched(v6.search));
                                                    });
                                                });
                                            });
                                        })))(function (v5) {
                                            return Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Effect_Ref.write(new Data_Maybe.Just({
                                                "var": v3,
                                                fiber: v4
                                            })))(v1.debounceRef)));
                                        });
                                    });
                                }));
                            };
                            if (v1.inputType instanceof TextInput && v2 instanceof Data_Maybe.Just) {
                                return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff.killFiber(Effect_Exception.error("Time's up!"))(v2.value0.fiber)))(function (v3) {
                                    return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff.forkAff(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(v1.debounceTime))(function () {
                                        return Effect_Aff_AVar.put(Data_Unit.unit)(v2["value0"]["var"]);
                                    }))))(function (v4) {
                                        return Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Effect_Ref.write(new Data_Maybe.Just({
                                            "var": v2["value0"]["var"],
                                            fiber: v4
                                        })))(v1.debounceRef)));
                                    });
                                });
                            };
                            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                        });
                    });
                });
            }));
        };
        if (v instanceof Highlight) {
            return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Renderless_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(eqVisibility)(v1.visibility)(Off.value))((function () {
                    var highlightedIndex = (function () {
                        if (v.value0 instanceof Prev) {
                            if (v1.highlightedIndex instanceof Data_Maybe.Just && v1.highlightedIndex.value0 !== 0) {
                                return new Data_Maybe.Just(v1.highlightedIndex.value0 - 1 | 0);
                            };
                            return new Data_Maybe.Just(v1.lastIndex);
                        };
                        if (v.value0 instanceof Next) {
                            if (v1.highlightedIndex instanceof Data_Maybe.Just && v1.highlightedIndex.value0 !== v1.lastIndex) {
                                return new Data_Maybe.Just(v1.highlightedIndex.value0 + 1 | 0);
                            };
                            return new Data_Maybe.Just(0);
                        };
                        if (v.value0 instanceof Index) {
                            return new Data_Maybe.Just(v.value0.value0);
                        };
                        throw new Error("Failed pattern match at Select (line 318, column 34 - line 330, column 25): " + [ v.value0.constructor.name ]);
                    })();
                    return Renderless_State.modifyState_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                        var $86 = {};
                        for (var $87 in v2) {
                            if ({}.hasOwnProperty.call(v2, $87)) {
                                $86[$87] = v2[$87];
                            };
                        };
                        $86.highlightedIndex = highlightedIndex;
                        return $86;
                    });
                })()))(function () {
                    return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                });
            }));
        };
        if (v instanceof Select) {
            return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Renderless_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.eq(eqVisibility)(v1.visibility)(On.value))(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(Data_Array.index(v1.items)(v.value0))(function (item) {
                    return Halogen_Query_HalogenM.raise(new Selected(item));
                }));
            }));
        };
        if (v instanceof Focus) {
            return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef("select-input"))(function (v1) {
                return Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(function ($123) {
                    return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))((function () {
                        if (v.value0) {
                            return Web_HTML_HTMLElement.focus;
                        };
                        return Web_HTML_HTMLElement.blur;
                    })()($123));
                })(v1);
            }));
        };
        if (v instanceof Key) {
            return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(setVis(On.value))(function () {
                var preventIt = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Web_Event_Event.preventDefault(Web_UIEvent_KeyboardEvent.toEvent(v.value0)));
                var v1 = Web_UIEvent_KeyboardEvent.code(v.value0);
                if (v1 === "ArrowUp") {
                    return Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(preventIt)(eval$prime(highlight(Prev.value)));
                };
                if (v1 === "ArrowDown") {
                    return Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(preventIt)(eval$prime(highlight(Next.value)));
                };
                if (v1 === "Escape") {
                    return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef("select-input"))(function (v2) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(preventIt)(function () {
                            return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v2)(function ($124) {
                                return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Web_HTML_HTMLElement.blur($124));
                            });
                        });
                    });
                };
                if (v1 === "Enter") {
                    return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Renderless_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v2) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(preventIt)(function () {
                            return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v2.highlightedIndex)(function ($125) {
                                return eval$prime(select($125));
                            });
                        });
                    });
                };
                return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
            }));
        };
        if (v instanceof PreventClick) {
            return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Web_Event_Event.preventDefault(Web_UIEvent_MouseEvent.toEvent(v.value0))));
        };
        if (v instanceof SetVisibility) {
            return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Renderless_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v2) {
                return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(eqVisibility)(v2.visibility)(v.value0))(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Renderless_State.modifyState_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                    var $106 = {};
                    for (var $107 in v3) {
                        if ({}.hasOwnProperty.call(v3, $107)) {
                            $106[$107] = v3[$107];
                        };
                    };
                    $106.visibility = v.value0;
                    $106.highlightedIndex = new Data_Maybe.Just(0);
                    return $106;
                }))(function () {
                    return Halogen_Query_HalogenM.raise(new VisibilityChanged(v.value0));
                }));
            }));
        };
        if (v instanceof GetVisibility) {
            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Renderless_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0(v1.visibility));
            });
        };
        if (v instanceof ReplaceItems) {
            return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Renderless_State.modifyState_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                var $113 = {};
                for (var $114 in v1) {
                    if ({}.hasOwnProperty.call(v1, $114)) {
                        $113[$114] = v1[$114];
                    };
                };
                $113.items = v.value0;
                $113.lastIndex = Data_Array.length(v.value0) - 1 | 0;
                $113.highlightedIndex = Data_Maybe.Nothing.value;
                return $113;
            }));
        };
        if (v instanceof Raise) {
            return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Halogen_Query_HalogenM.raise(new Emit(v.value0)));
        };
        if (v instanceof Receive) {
            return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Renderless_State.modifyStore(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0.render)(Control_Category.identity(Control_Category.categoryFn)));
        };
        throw new Error("Failed pattern match at Select (line 273, column 12 - line 383, column 34): " + [ v.constructor.name ]);
    };
    return Halogen_Component.lifecycleComponent(Halogen_HTML_Core.bifunctorHTML)({
        initialState: initialState,
        render: Control_Comonad.extract(Control_Comonad_Store_Trans.comonadStoreT(Data_Identity.comonadIdentity)),
        "eval": eval$prime,
        receiver: function ($126) {
            return Data_Maybe.Just.create(receive($126));
        },
        initializer: new Data_Maybe.Just(initialize),
        finalizer: Data_Maybe.Nothing.value
    });
};
var booleanAlgebraVisibility = new Data_BooleanAlgebra.BooleanAlgebra(function () {
    return heytingAlgebraVisibility;
});
var always = function ($127) {
    return Data_Function["const"](Data_Maybe.Just.create($127));
};
module.exports = {
    Search: Search,
    Highlight: Highlight,
    Select: Select,
    Focus: Focus,
    Key: Key,
    PreventClick: PreventClick,
    SetVisibility: SetVisibility,
    GetVisibility: GetVisibility,
    ReplaceItems: ReplaceItems,
    Raise: Raise,
    Initialize: Initialize,
    Receive: Receive,
    always: always,
    search: search,
    highlight: highlight,
    select: select,
    triggerFocus: triggerFocus,
    triggerBlur: triggerBlur,
    key: key,
    preventClick: preventClick,
    setVisibility: setVisibility,
    getVisibility: getVisibility,
    toggleVisibility: toggleVisibility,
    replaceItems: replaceItems,
    raise: raise,
    receive: receive,
    initialize: initialize,
    Prev: Prev,
    Next: Next,
    Index: Index,
    Off: Off,
    On: On,
    TextInput: TextInput,
    Toggle: Toggle,
    Searched: Searched,
    Selected: Selected,
    VisibilityChanged: VisibilityChanged,
    Emit: Emit,
    component: component,
    eqTarget: eqTarget,
    eqVisibility: eqVisibility,
    ordVisibility: ordVisibility,
    heytingAlgebraVisibility: heytingAlgebraVisibility,
    booleanAlgebraVisibility: booleanAlgebraVisibility
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Comonad.Store.Trans/index.js":17,"../Control.Comonad.Store/index.js":18,"../Control.Comonad/index.js":21,"../Control.Monad.Free/index.js":33,"../Control.Semigroupoid/index.js":61,"../Data.Array/index.js":99,"../Data.BooleanAlgebra/index.js":111,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Identity/index.js":163,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Ring/index.js":242,"../Data.Semiring/index.js":251,"../Data.Time.Duration/index.js":276,"../Data.Traversable/index.js":281,"../Data.Unit/index.js":289,"../Effect.Aff.AVar/index.js":294,"../Effect.Aff.Class/index.js":295,"../Effect.Aff/index.js":297,"../Effect.Class/index.js":298,"../Effect.Exception/index.js":302,"../Effect.Ref/index.js":306,"../Effect/index.js":312,"../Halogen.Component/index.js":331,"../Halogen.HTML.Core/index.js":334,"../Halogen.HTML/index.js":339,"../Halogen.Query.HalogenM/index.js":342,"../Halogen.Query.InputF/index.js":343,"../Halogen.Query/index.js":344,"../Halogen/index.js":353,"../Prelude/index.js":385,"../Renderless.State/index.js":392,"../Web.Event.Event/index.js":465,"../Web.HTML.HTMLElement/index.js":506,"../Web.UIEvent.KeyboardEvent/index.js":629,"../Web.UIEvent.MouseEvent/index.js":632}],407:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad_Gen_Class = require("../Control.Monad.Gen.Class/index.js");
var Control_Monad_Gen_Common = require("../Control.Monad.Gen.Common/index.js");
var Control_Monad_ST = require("../Control.Monad.ST/index.js");
var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Array_NonEmpty = require("../Data.Array.NonEmpty/index.js");
var Data_Array_ST = require("../Data.Array.ST/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_Lazy = require("../Data.Lazy/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_NonEmpty = require("../Data.List.NonEmpty/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_NonEmpty = require("../Data.NonEmpty/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_String = require("../Data.String/index.js");
var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Data_String_NonEmpty = require("../Data.String.NonEmpty/index.js");
var Data_String_NonEmpty_CodeUnits = require("../Data.String.NonEmpty.CodeUnits/index.js");
var Data_String_NonEmpty_Internal = require("../Data.String.NonEmpty.Internal/index.js");
var Data_String_Pattern = require("../Data.String.Pattern/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var Record = require("../Record/index.js");
var Test_QuickCheck_Gen = require("../Test.QuickCheck.Gen/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var Arbitrary = function (arbitrary) {
    this.arbitrary = arbitrary;
};
var Coarbitrary = function (coarbitrary) {
    this.coarbitrary = coarbitrary;
};
var ArbitraryGenericSum = function (arbitraryGenericSum) {
    this.arbitraryGenericSum = arbitraryGenericSum;
};
var ArbitraryRowList = function (arbitraryRecord) {
    this.arbitraryRecord = arbitraryRecord;
};
var coarbitraryNoArguments = new Coarbitrary(function (v) {
    return Control_Category.identity(Control_Category.categoryFn);
});
var coarbitrary = function (dict) {
    return dict.coarbitrary;
};
var coarbitraryArgument = function (dictCoarbitrary) {
    return new Coarbitrary(function (v) {
        return coarbitrary(dictCoarbitrary)(v);
    });
};
var coarbitraryConstructor = function (dictCoarbitrary) {
    return new Coarbitrary(function (v) {
        return coarbitrary(dictCoarbitrary)(v);
    });
};
var coarbitraryProduct = function (dictCoarbitrary) {
    return function (dictCoarbitrary1) {
        return new Coarbitrary(function (v) {
            return function ($111) {
                return coarbitrary(dictCoarbitrary1)(v.value1)(coarbitrary(dictCoarbitrary)(v.value0)($111));
            };
        });
    };
};
var coarbitrarySum = function (dictCoarbitrary) {
    return function (dictCoarbitrary1) {
        return new Coarbitrary(function (v) {
            if (v instanceof Data_Generic_Rep.Inl) {
                return coarbitrary(dictCoarbitrary)(v.value0);
            };
            if (v instanceof Data_Generic_Rep.Inr) {
                return coarbitrary(dictCoarbitrary1)(v.value0);
            };
            throw new Error("Failed pattern match at Test.QuickCheck.Arbitrary (line 216, column 1 - line 216, column 83): " + [ v.constructor.name ]);
        });
    };
};
var genericCoarbitrary = function (dictGeneric) {
    return function (dictCoarbitrary) {
        return function (x) {
            return function (g) {
                return Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Data_Generic_Rep.to(dictGeneric))(coarbitrary(dictCoarbitrary)(Data_Generic_Rep.from(dictGeneric)(x))(Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Data_Generic_Rep.from(dictGeneric))(g)));
            };
        };
    };
};
var coarbUnit = new Coarbitrary(function (v) {
    return Test_QuickCheck_Gen.perturbGen(1.0);
});
var coarbTuple = function (dictCoarbitrary) {
    return function (dictCoarbitrary1) {
        return new Coarbitrary(function (v) {
            return function ($112) {
                return coarbitrary(dictCoarbitrary1)(v.value1)(coarbitrary(dictCoarbitrary)(v.value0)($112));
            };
        });
    };
};
var coarbOrdering = new Coarbitrary(function (v) {
    if (v instanceof Data_Ordering.LT) {
        return Test_QuickCheck_Gen.perturbGen(1.0);
    };
    if (v instanceof Data_Ordering.EQ) {
        return Test_QuickCheck_Gen.perturbGen(2.0);
    };
    if (v instanceof Data_Ordering.GT) {
        return Test_QuickCheck_Gen.perturbGen(3.0);
    };
    throw new Error("Failed pattern match at Test.QuickCheck.Arbitrary (line 114, column 1 - line 114, column 47): " + [ v.constructor.name ]);
});
var coarbNumber = new Coarbitrary(Test_QuickCheck_Gen.perturbGen);
var coarbNonEmpty = function (dictCoarbitrary) {
    return function (dictCoarbitrary1) {
        return new Coarbitrary(function (v) {
            return function ($113) {
                return coarbitrary(dictCoarbitrary)(v.value1)(coarbitrary(dictCoarbitrary1)(v.value0)($113));
            };
        });
    };
};
var coarbMaybe = function (dictCoarbitrary) {
    return new Coarbitrary(function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Test_QuickCheck_Gen.perturbGen(1.0);
        };
        if (v instanceof Data_Maybe.Just) {
            return coarbitrary(dictCoarbitrary)(v.value0);
        };
        throw new Error("Failed pattern match at Test.QuickCheck.Arbitrary (line 154, column 1 - line 154, column 62): " + [ v.constructor.name ]);
    });
};
var coarbList = function (dictCoarbitrary) {
    return new Coarbitrary(Data_Foldable.foldl(Data_List_Types.foldableList)(function (f) {
        return function (x) {
            return function ($114) {
                return f(coarbitrary(dictCoarbitrary)(x)($114));
            };
        };
    })(Control_Category.identity(Control_Category.categoryFn)));
};
var coarbNonEmptyList = function (dictCoarbitrary) {
    return new Coarbitrary(function (v) {
        return coarbitrary(coarbNonEmpty(coarbList(dictCoarbitrary))(dictCoarbitrary))(v);
    });
};
var coarbLazy = function (dictCoarbitrary) {
    return new Coarbitrary(function (a) {
        return coarbitrary(dictCoarbitrary)(Data_Lazy.force(a));
    });
};
var coarbInt = new Coarbitrary(function ($115) {
    return Test_QuickCheck_Gen.perturbGen(Data_Int.toNumber($115));
});
var coarbIdentity = function (dictCoarbitrary) {
    return new Coarbitrary(function (v) {
        return coarbitrary(dictCoarbitrary)(v);
    });
};
var coarbEither = function (dictCoarbitrary) {
    return function (dictCoarbitrary1) {
        return new Coarbitrary(function (v) {
            if (v instanceof Data_Either.Left) {
                return coarbitrary(dictCoarbitrary)(v.value0);
            };
            if (v instanceof Data_Either.Right) {
                return coarbitrary(dictCoarbitrary1)(v.value0);
            };
            throw new Error("Failed pattern match at Test.QuickCheck.Arbitrary (line 161, column 1 - line 161, column 83): " + [ v.constructor.name ]);
        });
    };
};
var coarbChar = new Coarbitrary(function (c) {
    return coarbitrary(coarbInt)(Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(c));
});
var coarbBoolean = new Coarbitrary(function (v) {
    if (v) {
        return Test_QuickCheck_Gen.perturbGen(1.0);
    };
    if (!v) {
        return Test_QuickCheck_Gen.perturbGen(2.0);
    };
    throw new Error("Failed pattern match at Test.QuickCheck.Arbitrary (line 71, column 1 - line 71, column 45): " + [ v.constructor.name ]);
});
var coarbArray = function (dictCoarbitrary) {
    return new Coarbitrary(Data_Foldable.foldl(Data_Foldable.foldableArray)(function (f) {
        return function (x) {
            return function ($116) {
                return f(coarbitrary(dictCoarbitrary)(x)($116));
            };
        };
    })(Control_Category.identity(Control_Category.categoryFn)));
};
var coarbNonEmptyArray = function (dictCoarbitrary) {
    return new Coarbitrary(function ($117) {
        return coarbitrary(coarbArray(dictCoarbitrary))(Data_Array_NonEmpty.toArray($117));
    });
};
var coarbString = new Coarbitrary(function (s) {
    return coarbitrary(coarbArray(coarbMaybe(coarbChar)))(Data_Functor.map(Data_Functor.functorArray)(Data_String_CodeUnits.charAt(0))(Data_String_Common.split(Data_Newtype.wrap(Data_String_Pattern.newtypePattern)(""))(s)));
});
var coarbNonEmptyString = new Coarbitrary(function ($118) {
    return coarbitrary(coarbString)(Data_String_NonEmpty_Internal.toString($118));
});
var arbitraryRowListNil = new ArbitraryRowList(function (v) {
    return Control_Applicative.pure(Test_QuickCheck_Gen.applicativeGen)({});
});
var arbitraryRecord = function (dict) {
    return dict.arbitraryRecord;
};
var arbitraryRecordInstance = function (dictRowToList) {
    return function (dictArbitraryRowList) {
        return new Arbitrary(arbitraryRecord(dictArbitraryRowList)(Type_Data_RowList.RLProxy.value));
    };
};
var arbitraryNoArguments = new Arbitrary(Control_Applicative.pure(Test_QuickCheck_Gen.applicativeGen)(Data_Generic_Rep.NoArguments.value));
var arbitraryGenericSum = function (dict) {
    return dict.arbitraryGenericSum;
};
var arbitrary = function (dict) {
    return dict.arbitrary;
};
var arbitraryArgument = function (dictArbitrary) {
    return new Arbitrary(Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Data_Generic_Rep.Argument)(arbitrary(dictArbitrary)));
};
var arbitraryConstructor = function (dictArbitrary) {
    return new Arbitrary(Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Data_Generic_Rep.Constructor)(arbitrary(dictArbitrary)));
};
var arbitraryIdentity = function (dictArbitrary) {
    return new Arbitrary(Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Data_Identity.Identity)(arbitrary(dictArbitrary)));
};
var arbitraryLazy = function (dictArbitrary) {
    return new Arbitrary(Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(arbitrary(dictArbitrary))(function ($119) {
        return Control_Applicative.pure(Test_QuickCheck_Gen.applicativeGen)(Data_Lazy.defer(Data_Function["const"]($119)));
    }));
};
var arbitraryList = function (dictArbitrary) {
    return new Arbitrary(Test_QuickCheck_Gen.sized(function (n) {
        return Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(Test_QuickCheck_Gen.chooseInt(0)(n))(Data_Function.flip(Test_QuickCheck_Gen.listOf)(arbitrary(dictArbitrary)));
    }));
};
var arbitraryProduct = function (dictArbitrary) {
    return function (dictArbitrary1) {
        return new Arbitrary(Control_Apply.apply(Test_QuickCheck_Gen.applyGen)(Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Data_Generic_Rep.Product.create)(arbitrary(dictArbitrary)))(arbitrary(dictArbitrary1)));
    };
};
var arbitraryRowListCons = function (dictArbitrary) {
    return function (dictArbitraryRowList) {
        return function (dictLacks) {
            return function (dictCons) {
                return function (dictRowToList) {
                    return function (dictIsSymbol) {
                        return new ArbitraryRowList(function (v) {
                            return Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(arbitrary(dictArbitrary))(function (v1) {
                                return Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(arbitraryRecord(dictArbitraryRowList)(Type_Data_RowList.RLProxy.value))(function (v2) {
                                    return Control_Applicative.pure(Test_QuickCheck_Gen.applicativeGen)(Record.insert(dictIsSymbol)(dictLacks)(dictCons)(Data_Symbol.SProxy.value)(v1)(v2));
                                });
                            });
                        });
                    };
                };
            };
        };
    };
};
var arbitrarySum = function (dictArbitrary) {
    return function (dictArbitraryGenericSum) {
        return new Arbitrary(Test_QuickCheck_Gen.oneOf(new Data_NonEmpty.NonEmpty(Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Data_Generic_Rep.Inl.create)(arbitrary(dictArbitrary)), Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Data_Generic_Rep.Inr.create))(arbitraryGenericSum(dictArbitraryGenericSum)))));
    };
};
var genericArbitrary = function (dictGeneric) {
    return function (dictArbitrary) {
        return Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Data_Generic_Rep.to(dictGeneric))(arbitrary(dictArbitrary));
    };
};
var arbUnit = new Arbitrary(Control_Applicative.pure(Test_QuickCheck_Gen.applicativeGen)(Data_Unit.unit));
var arbTuple = function (dictArbitrary) {
    return function (dictArbitrary1) {
        return new Arbitrary(Control_Apply.apply(Test_QuickCheck_Gen.applyGen)(Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Data_Tuple.Tuple.create)(arbitrary(dictArbitrary)))(arbitrary(dictArbitrary1)));
    };
};
var arbOrdering = new Arbitrary(Test_QuickCheck_Gen.elements(new Data_NonEmpty.NonEmpty(Data_Ordering.LT.value, [ Data_Ordering.EQ.value, Data_Ordering.GT.value ])));
var arbNumber = new Arbitrary(Test_QuickCheck_Gen.uniform);
var arbNonEmpty = function (dictArbitrary) {
    return function (dictArbitrary1) {
        return new Arbitrary(Control_Apply.apply(Test_QuickCheck_Gen.applyGen)(Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Data_NonEmpty.NonEmpty.create)(arbitrary(dictArbitrary1)))(arbitrary(dictArbitrary)));
    };
};
var arbNonEmptyList = function (dictArbitrary) {
    return new Arbitrary(Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Data_List_Types.NonEmptyList)(arbitrary(arbNonEmpty(arbitraryList(dictArbitrary))(dictArbitrary))));
};
var arbMaybe = function (dictArbitrary) {
    return new Arbitrary(Control_Monad_Gen_Common.genMaybe(Test_QuickCheck_Gen.monadGenGen)(arbitrary(dictArbitrary)));
};
var arbInt = new Arbitrary(Test_QuickCheck_Gen.chooseInt(-1000000 | 0)(1000000));
var arbGenSumSum = function (dictArbitrary) {
    return function (dictArbitraryGenericSum) {
        return new ArbitraryGenericSum(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Data_Generic_Rep.Inl.create)(arbitrary(dictArbitrary)) ])(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Data_Generic_Rep.Inr.create))(arbitraryGenericSum(dictArbitraryGenericSum))));
    };
};
var arbGenSumConstructor = function (dictArbitrary) {
    return new ArbitraryGenericSum([ arbitrary(arbitraryConstructor(dictArbitrary)) ]);
};
var arbFunction = function (dictCoarbitrary) {
    return function (dictArbitrary) {
        return new Arbitrary(Test_QuickCheck_Gen.repeatable(function (a) {
            return coarbitrary(dictCoarbitrary)(a)(arbitrary(dictArbitrary));
        }));
    };
};
var arbEither = function (dictArbitrary) {
    return function (dictArbitrary1) {
        return new Arbitrary(Control_Monad_Gen_Common.genEither(Test_QuickCheck_Gen.monadGenGen)(arbitrary(dictArbitrary))(arbitrary(dictArbitrary1)));
    };
};
var arbChar = new Arbitrary(Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar)))(Test_QuickCheck_Gen.chooseInt(0)(65536)));
var arbBoolean = new Arbitrary(Control_Monad_Gen_Class.chooseBool(Test_QuickCheck_Gen.monadGenGen));
var arbArray = function (dictArbitrary) {
    return new Arbitrary(Test_QuickCheck_Gen.arrayOf(arbitrary(dictArbitrary)));
};
var arbNonEmptyArray = function (dictArbitrary) {
    return new Arbitrary(Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(arbitrary(dictArbitrary))(function (v) {
        return Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(arbitrary(arbArray(dictArbitrary)))(function (v1) {
            return Control_Applicative.pure(Test_QuickCheck_Gen.applicativeGen)(Data_Maybe.fromJust()(Data_Array_NonEmpty.fromArray((function __do() {
                var v2 = Data_Array_ST.unsafeThaw(v1)();
                var v3 = Data_Array_ST.push(v)(v2)();
                return Data_Array_ST.unsafeFreeze(v2)();
            })())));
        });
    }));
};
var arbString = new Arbitrary(Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Data_String_CodeUnits.fromCharArray)(arbitrary(arbArray(arbChar))));
var arbNonEmptyString = new Arbitrary(Control_Apply.apply(Test_QuickCheck_Gen.applyGen)(Data_Functor.map(Test_QuickCheck_Gen.functorGen)(Data_String_NonEmpty_CodeUnits.cons)(arbitrary(arbChar)))(arbitrary(arbString)));
var coarbFunction = function (dictArbitrary) {
    return function (dictCoarbitrary) {
        return new Coarbitrary(function (f) {
            return function (gen) {
                return Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(arbitrary(arbArray(dictArbitrary)))(function (v) {
                    return coarbitrary(coarbArray(dictCoarbitrary))(Data_Functor.map(Data_Functor.functorArray)(f)(v))(gen);
                });
            };
        });
    };
};
module.exports = {
    Arbitrary: Arbitrary,
    arbitrary: arbitrary,
    Coarbitrary: Coarbitrary,
    coarbitrary: coarbitrary,
    genericArbitrary: genericArbitrary,
    genericCoarbitrary: genericCoarbitrary,
    ArbitraryGenericSum: ArbitraryGenericSum,
    arbitraryGenericSum: arbitraryGenericSum,
    ArbitraryRowList: ArbitraryRowList,
    arbitraryRecord: arbitraryRecord,
    arbBoolean: arbBoolean,
    coarbBoolean: coarbBoolean,
    arbNumber: arbNumber,
    coarbNumber: coarbNumber,
    arbInt: arbInt,
    coarbInt: coarbInt,
    arbString: arbString,
    coarbString: coarbString,
    arbNonEmptyString: arbNonEmptyString,
    coarbNonEmptyString: coarbNonEmptyString,
    arbChar: arbChar,
    coarbChar: coarbChar,
    arbUnit: arbUnit,
    coarbUnit: coarbUnit,
    arbOrdering: arbOrdering,
    coarbOrdering: coarbOrdering,
    arbArray: arbArray,
    coarbArray: coarbArray,
    arbNonEmptyArray: arbNonEmptyArray,
    coarbNonEmptyArray: coarbNonEmptyArray,
    arbFunction: arbFunction,
    coarbFunction: coarbFunction,
    arbTuple: arbTuple,
    coarbTuple: coarbTuple,
    arbMaybe: arbMaybe,
    coarbMaybe: coarbMaybe,
    arbEither: arbEither,
    coarbEither: coarbEither,
    arbitraryList: arbitraryList,
    coarbList: coarbList,
    arbitraryIdentity: arbitraryIdentity,
    coarbIdentity: coarbIdentity,
    arbitraryLazy: arbitraryLazy,
    coarbLazy: coarbLazy,
    arbNonEmpty: arbNonEmpty,
    coarbNonEmpty: coarbNonEmpty,
    arbNonEmptyList: arbNonEmptyList,
    coarbNonEmptyList: coarbNonEmptyList,
    arbitraryNoArguments: arbitraryNoArguments,
    coarbitraryNoArguments: coarbitraryNoArguments,
    arbGenSumSum: arbGenSumSum,
    arbGenSumConstructor: arbGenSumConstructor,
    arbitrarySum: arbitrarySum,
    coarbitrarySum: coarbitrarySum,
    arbitraryProduct: arbitraryProduct,
    coarbitraryProduct: coarbitraryProduct,
    arbitraryConstructor: arbitraryConstructor,
    coarbitraryConstructor: coarbitraryConstructor,
    arbitraryArgument: arbitraryArgument,
    coarbitraryArgument: coarbitraryArgument,
    arbitraryRowListNil: arbitraryRowListNil,
    arbitraryRowListCons: arbitraryRowListCons,
    arbitraryRecordInstance: arbitraryRecordInstance
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Monad.Gen.Class/index.js":34,"../Control.Monad.Gen.Common/index.js":35,"../Control.Monad.ST.Internal/index.js":45,"../Control.Monad.ST/index.js":47,"../Control.Semigroupoid/index.js":61,"../Data.Array.NonEmpty/index.js":93,"../Data.Array.ST/index.js":97,"../Data.Bounded/index.js":113,"../Data.Either/index.js":131,"../Data.Enum/index.js":133,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Generic.Rep/index.js":160,"../Data.Identity/index.js":163,"../Data.Int/index.js":167,"../Data.Lazy/index.js":171,"../Data.List.NonEmpty/index.js":202,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Maybe/index.js":210,"../Data.Newtype/index.js":220,"../Data.NonEmpty/index.js":221,"../Data.Ordering/index.js":230,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.String.CodeUnits/index.js":258,"../Data.String.Common/index.js":260,"../Data.String.NonEmpty.CodeUnits/index.js":263,"../Data.String.NonEmpty.Internal/index.js":264,"../Data.String.NonEmpty/index.js":265,"../Data.String.Pattern/index.js":266,"../Data.String/index.js":272,"../Data.Symbol/index.js":274,"../Data.Tuple/index.js":283,"../Data.Unit/index.js":289,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385,"../Record/index.js":391,"../Test.QuickCheck.Gen/index.js":409,"../Type.Data.RowList/index.js":418}],408:[function(require,module,exports){
/* global exports, ArrayBuffer, Float32Array, Int32Array */
"use strict";

// module Test.QuickCheck.Gen

exports.float32ToInt32 = function (n) {
  var arr = new ArrayBuffer(4);
  var fv = new Float32Array(arr);
  var iv = new Int32Array(arr);
  fv[0] = n;
  return iv[0];
};

},{}],409:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Gen_Class = require("../Control.Monad.Gen.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_State = require("../Control.Monad.State/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_State_Trans = require("../Control.Monad.State.Trans/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_NonEmpty = require("../Data.NonEmpty/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var $$Math = require("../Math/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var Random_LCG = require("../Random.LCG/index.js");
var Gen = function (x) {
    return x;
};
var unGen = function (v) {
    return v;
};
var runGen = function ($78) {
    return Control_Monad_State.runState(unGen($78));
};
var stateful = function (f) {
    return Gen(Control_Monad_State_Class.state(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function (s) {
        return runGen(f(s))(s);
    }));
};
var sized = function (f) {
    return stateful(function (s) {
        return f(s.size);
    });
};
var variant = function (n) {
    return function (g) {
        return Gen(Control_Monad_State_Class.state(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function (s) {
            return runGen(g)({
                newSeed: n,
                size: s.size
            });
        }));
    };
};
var resize = function (sz) {
    return function (g) {
        return Gen(Control_Monad_State_Class.state(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function (v) {
            return Data_Functor.map(Data_Tuple.functorTuple)(function (v1) {
                return {
                    size: v.size,
                    newSeed: v1.newSeed
                };
            })(runGen(g)({
                newSeed: v.newSeed,
                size: sz
            }));
        }));
    };
};
var replicateMRec = function (dictMonadRec) {
    return function (k) {
        return function (v) {
            if (k <= 0) {
                return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(Data_List_Types.Nil.value);
            };
            var go = function (v1) {
                if (v1.value1 === 0) {
                    return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(v1.value0));
                };
                return Data_Functor.mapFlipped((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(v)(function (x) {
                    return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(new Data_List_Types.Cons(x, v1.value0), v1.value1 - 1 | 0));
                });
            };
            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go)(new Data_Tuple.Tuple(Data_List_Types.Nil.value, k));
        };
    };
};
var repeatable = function (f) {
    return Gen(Control_Monad_State_Class.state(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function (s) {
        return new Data_Tuple.Tuple(function (a) {
            return Data_Tuple.fst(runGen(f(a))(s));
        }, {
            newSeed: Random_LCG.lcgNext(s.newSeed),
            size: s.size
        });
    }));
};
var perturbGen = function (n) {
    return function (gen) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Functor["void"](Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function (s) {
            var $40 = {};
            for (var $41 in s) {
                if ({}.hasOwnProperty.call(s, $41)) {
                    $40[$41] = s[$41];
                };
            };
            $40.newSeed = Random_LCG.lcgPerturb(Data_Int.toNumber($foreign.float32ToInt32(n)))(s.newSeed);
            return $40;
        })))(function () {
            return unGen(gen);
        });
    };
};
var monadRecGen = Control_Monad_State_Trans.monadRecStateT(Control_Monad_Rec_Class.monadRecIdentity);
var monadGen = Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity);
var listOf = replicateMRec(monadRecGen);
var lcgStep = (function () {
    var f = function (s) {
        return new Data_Tuple.Tuple(Random_LCG.unSeed(s.newSeed), (function () {
            var $43 = {};
            for (var $44 in s) {
                if ({}.hasOwnProperty.call(s, $44)) {
                    $43[$44] = s[$44];
                };
            };
            $43.newSeed = Random_LCG.lcgNext(s.newSeed);
            return $43;
        })());
    };
    return Gen(Control_Monad_State_Class.state(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(f));
})();
var lazyGen = Control_Monad_State_Trans.lazyStateT;
var functorGen = Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity);
var uniform = Data_Functor.map(functorGen)(function (n) {
    return Data_Int.toNumber(n) / Data_Int.toNumber(Random_LCG.lcgM);
})(lcgStep);
var vectorOf = function (k) {
    return function (g) {
        return Data_Functor.map(functorGen)(Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray))(listOf(k)(g));
    };
};
var evalGen = function ($79) {
    return Control_Monad_State.evalState(unGen($79));
};
var sample = function (seed) {
    return function (sz) {
        return function (g) {
            return evalGen(vectorOf(sz)(g))({
                newSeed: seed,
                size: sz
            });
        };
    };
};
var randomSample$prime = function (n) {
    return function (g) {
        return function __do() {
            var v = Random_LCG.randomSeed();
            return sample(v)(n)(g);
        };
    };
};
var randomSample = randomSample$prime(10);
var choose = function (a) {
    return function (b) {
        var min$prime = Data_Ord.min(Data_Ord.ordNumber)(a)(b);
        var max$prime = Data_Ord.max(Data_Ord.ordNumber)(a)(b);
        return Data_Functor.map(functorGen)(function ($80) {
            return min$prime + (max$prime - min$prime) * $80;
        })(uniform);
    };
};
var bindGen = Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity);
var frequency = function (v) {
    var xxs = new Data_List_Types.Cons(v.value0, v.value1);
    var total = Data_Newtype.unwrap(Data_Newtype.newtypeAdditive)(Data_Foldable.fold(Data_List_Types.foldableList)(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringNumber))(Data_Functor.map(Data_List_Types.functorList)(function ($81) {
        return Data_Monoid_Additive.Additive(Data_Tuple.fst($81));
    })(xxs)));
    var pick = function ($copy_n) {
        return function ($copy_d) {
            return function ($copy_v1) {
                var $tco_var_n = $copy_n;
                var $tco_var_d = $copy_d;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(n, d, v1) {
                    if (v1 instanceof Data_List_Types.Nil) {
                        $tco_done = true;
                        return d;
                    };
                    if (v1 instanceof Data_List_Types.Cons) {
                        var $51 = n <= v1.value0.value0;
                        if ($51) {
                            $tco_done = true;
                            return v1.value0.value1;
                        };
                        $tco_var_n = n - v1.value0.value0;
                        $tco_var_d = d;
                        $copy_v1 = v1.value1;
                        return;
                    };
                    throw new Error("Failed pattern match at Test.QuickCheck.Gen (line 162, column 5 - line 162, column 21): " + [ n.constructor.name, d.constructor.name, v1.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_n, $tco_var_d, $copy_v1);
                };
                return $tco_result;
            };
        };
    };
    return Control_Bind.bind(bindGen)(choose(0)(total))(function (v1) {
        return pick(v1)(Data_Tuple.snd(v.value0))(xxs);
    });
};
var applyGen = Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity);
var chooseInt$prime = function (a) {
    return function (b) {
        var numB = Data_Int.toNumber(b);
        var numA = Data_Int.toNumber(a);
        var clamp = function (x) {
            return numA + $$Math.remainder(x)((numB - numA) + 1);
        };
        var choose31BitPosNumber = Data_Functor.map(functorGen)(Data_Int.toNumber)(lcgStep);
        var choose32BitPosNumber = Control_Apply.apply(applyGen)(Data_Functor.map(functorGen)(Data_Semiring.add(Data_Semiring.semiringNumber))(choose31BitPosNumber))(Data_Functor.map(functorGen)(Data_Semiring.mul(Data_Semiring.semiringNumber)(2.0))(choose31BitPosNumber));
        return Data_Functor.map(functorGen)(function ($82) {
            return Data_Int.floor(clamp($82));
        })(choose32BitPosNumber);
    };
};
var chooseInt = function (a) {
    return function (b) {
        var $59 = a <= b;
        if ($59) {
            return chooseInt$prime(a)(b);
        };
        return chooseInt$prime(b)(a);
    };
};
var arrayOf = function (g) {
    return sized(function (n) {
        return Control_Bind.bind(bindGen)(chooseInt(0)(n))(function (v) {
            return vectorOf(v)(g);
        });
    });
};
var monadGenGen = new Control_Monad_Gen_Class.MonadGen(function () {
    return monadGen;
}, Data_Functor.map(functorGen)(function (v) {
    return v < 0.5;
})(uniform), choose, chooseInt, function (f) {
    return function (g) {
        return sized(function (s) {
            return resize(f(s))(g);
        });
    };
}, sized);
var oneOf = function (v) {
    return Control_Bind.bind(bindGen)(chooseInt(0)(Data_Array.length(v.value1)))(function (v1) {
        var $63 = v1 < 1;
        if ($63) {
            return v.value0;
        };
        return Data_Maybe.fromMaybe(v.value0)(Data_Array.index(v.value1)(v1 - 1 | 0));
    });
};
var applicativeGen = Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity);
var arrayOf1 = function (g) {
    return sized(function (n) {
        return Control_Bind.bind(bindGen)(chooseInt(0)(n))(function (v) {
            return Control_Bind.bind(bindGen)(g)(function (v1) {
                return Control_Bind.bind(bindGen)(vectorOf(v - 1 | 0)(g))(function (v2) {
                    return Control_Applicative.pure(applicativeGen)(new Data_NonEmpty.NonEmpty(v1, v2));
                });
            });
        });
    });
};
var elements = function (v) {
    return Control_Bind.bind(bindGen)(chooseInt(0)(Data_Array.length(v.value1)))(function (v1) {
        return Control_Applicative.pure(applicativeGen)((function () {
            var $71 = v1 === 0;
            if ($71) {
                return v.value0;
            };
            return Data_Maybe.fromMaybe(v.value0)(Data_Array.index(v.value1)(v1 - 1 | 0));
        })());
    });
};
var $$enum = function (dictBoundedEnum) {
    return Control_Bind.bind(bindGen)(chooseInt(Data_Enum.fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0())))(Data_Enum.fromEnum(dictBoundedEnum)(Data_Bounded.top(dictBoundedEnum.Bounded0()))))(function (v) {
        return Control_Applicative.pure(applicativeGen)(Data_Maybe.fromJust()(Data_Enum.toEnum(dictBoundedEnum)(v)));
    });
};
var shuffle = function (xs) {
    return Control_Bind.bind(bindGen)(vectorOf(Data_Array.length(xs))(chooseInt(0)(Data_Bounded.top(Data_Bounded.boundedInt))))(function (v) {
        return Control_Applicative.pure(applicativeGen)(Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.snd)(Data_Array.sortBy(Data_Ord.comparing(Data_Ord.ordInt)(Data_Tuple.fst))(Data_Array.zip(v)(xs))));
    });
};
var suchThat = function (gen) {
    return function (pred) {
        var go = function (v) {
            return Control_Bind.bind(bindGen)(gen)(function (v1) {
                return Control_Applicative.pure(applicativeGen)((function () {
                    var $77 = pred(v1);
                    if ($77) {
                        return new Control_Monad_Rec_Class.Done(v1);
                    };
                    return new Control_Monad_Rec_Class.Loop(Data_Unit.unit);
                })());
            });
        };
        return Control_Monad_Rec_Class.tailRecM(monadRecGen)(go)(Data_Unit.unit);
    };
};
var altGen = Control_Monad_State_Trans.altStateT(Data_Identity.monadIdentity)(Data_Identity.altIdentity);
module.exports = {
    unGen: unGen,
    repeatable: repeatable,
    stateful: stateful,
    variant: variant,
    suchThat: suchThat,
    sized: sized,
    resize: resize,
    choose: choose,
    chooseInt: chooseInt,
    oneOf: oneOf,
    frequency: frequency,
    arrayOf: arrayOf,
    arrayOf1: arrayOf1,
    listOf: listOf,
    vectorOf: vectorOf,
    elements: elements,
    shuffle: shuffle,
    runGen: runGen,
    evalGen: evalGen,
    perturbGen: perturbGen,
    uniform: uniform,
    sample: sample,
    randomSample: randomSample,
    "randomSample'": randomSample$prime,
    functorGen: functorGen,
    applyGen: applyGen,
    applicativeGen: applicativeGen,
    bindGen: bindGen,
    monadGen: monadGen,
    altGen: altGen,
    monadRecGen: monadRecGen,
    lazyGen: lazyGen,
    monadGenGen: monadGenGen
};

},{"../Control.Alt/index.js":4,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Lazy/index.js":25,"../Control.Monad.Gen.Class/index.js":34,"../Control.Monad.Rec.Class/index.js":43,"../Control.Monad.State.Class/index.js":48,"../Control.Monad.State.Trans/index.js":49,"../Control.Monad.State/index.js":50,"../Control.Monad/index.js":55,"../Control.Semigroupoid/index.js":61,"../Data.Array/index.js":99,"../Data.Bounded/index.js":113,"../Data.Enum/index.js":133,"../Data.Eq/index.js":135,"../Data.EuclideanRing/index.js":137,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Identity/index.js":163,"../Data.Int/index.js":167,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Maybe/index.js":210,"../Data.Monoid.Additive/index.js":212,"../Data.Newtype/index.js":220,"../Data.NonEmpty/index.js":221,"../Data.Ord/index.js":229,"../Data.Ring/index.js":242,"../Data.Semiring/index.js":251,"../Data.Tuple/index.js":283,"../Data.Unfoldable/index.js":285,"../Data.Unit/index.js":289,"../Effect/index.js":312,"../Math/index.js":364,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385,"../Random.LCG/index.js":386,"./foreign.js":408}],410:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Maybe_First = require("../Data.Maybe.First/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Effect = require("../Effect/index.js");
var Effect_Console = require("../Effect.Console/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Prelude = require("../Prelude/index.js");
var Random_LCG = require("../Random.LCG/index.js");
var Test_QuickCheck_Arbitrary = require("../Test.QuickCheck.Arbitrary/index.js");
var Test_QuickCheck_Gen = require("../Test.QuickCheck.Gen/index.js");
var Success = (function () {
    function Success() {

    };
    Success.value = new Success();
    return Success;
})();
var Failed = (function () {
    function Failed(value0) {
        this.value0 = value0;
    };
    Failed.create = function (value0) {
        return new Failed(value0);
    };
    return Failed;
})();
var Testable = function (test) {
    this.test = test;
};
var withHelp = function (v) {
    return function (v1) {
        if (v) {
            return Success.value;
        };
        if (!v) {
            return new Failed(v1);
        };
        throw new Error("Failed pattern match at Test.QuickCheck (line 187, column 1 - line 187, column 40): " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var testableResult = new Testable(Control_Applicative.pure(Test_QuickCheck_Gen.applicativeGen));
var testableBoolean = new Testable(function (v) {
    if (v) {
        return Control_Applicative.pure(Test_QuickCheck_Gen.applicativeGen)(Success.value);
    };
    if (!v) {
        return Control_Applicative.pure(Test_QuickCheck_Gen.applicativeGen)(new Failed("Test returned false"));
    };
    throw new Error("Failed pattern match at Test.QuickCheck (line 163, column 1 - line 163, column 45): " + [ v.constructor.name ]);
});
var test = function (dict) {
    return dict.test;
};
var testableFunction = function (dictArbitrary) {
    return function (dictTestable) {
        return new Testable(function (f) {
            return Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(Test_QuickCheck_Arbitrary.arbitrary(dictArbitrary))(function ($54) {
                return test(dictTestable)(f($54));
            });
        });
    };
};
var testableGen = function (dictTestable) {
    return new Testable(Data_Function.flip(Control_Bind.bind(Test_QuickCheck_Gen.bindGen))(test(dictTestable)));
};
var showResult = new Data_Show.Show(function (v) {
    if (v instanceof Success) {
        return "Success";
    };
    if (v instanceof Failed) {
        return "Failed: " + v.value0;
    };
    throw new Error("Failed pattern match at Test.QuickCheck (line 176, column 1 - line 176, column 35): " + [ v.constructor.name ]);
});
var quickCheckWithSeed = function (dictTestable) {
    return function (initialSeed) {
        return function (n) {
            return function (prop) {
                var loop = function (v) {
                    if (v.index === n) {
                        return new Control_Monad_Rec_Class.Done(v);
                    };
                    if (Data_Boolean.otherwise) {
                        var v1 = Test_QuickCheck_Gen.runGen(test(dictTestable)(prop))({
                            newSeed: v.seed,
                            size: 10
                        });
                        if (v1.value0 instanceof Success) {
                            return new Control_Monad_Rec_Class.Loop({
                                seed: v1.value1.newSeed,
                                index: v.index + 1 | 0,
                                successes: v.successes + 1 | 0,
                                firstFailure: v.firstFailure
                            });
                        };
                        if (v1.value0 instanceof Failed) {
                            return new Control_Monad_Rec_Class.Loop({
                                seed: v1.value1.newSeed,
                                index: v.index + 1 | 0,
                                successes: v.successes,
                                firstFailure: Data_Semigroup.append(Data_Maybe_First.semigroupFirst)(v.firstFailure)(new Data_Maybe.Just({
                                    index: v.index,
                                    message: v1.value0.value0,
                                    seed: v.seed
                                }))
                            });
                        };
                        throw new Error("Failed pattern match at Test.QuickCheck (line 112, column 9 - line 127, column 16): " + [ v1.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at Test.QuickCheck (line 108, column 3 - line 108, column 48): " + [ v.constructor.name ]);
                };
                var result = Control_Monad_Rec_Class.tailRec(loop)({
                    seed: initialSeed,
                    index: 0,
                    successes: 0,
                    firstFailure: Data_Monoid.mempty(Data_Maybe_First.monoidFirst)
                });
                return function __do() {
                    Effect_Console.log(Data_Show.show(Data_Show.showInt)(result.successes) + ("/" + (Data_Show.show(Data_Show.showInt)(n) + " test(s) passed.")))();
                    return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableFirst)(result.firstFailure)(function (v) {
                        return Effect_Exception.throwException(Effect_Exception.error("Test " + (Data_Show.show(Data_Show.showInt)(v.index + 1 | 0) + (" (seed " + (Data_Show.show(Data_Show.showInt)(Random_LCG.unSeed(v.seed)) + (") failed: \x0a" + v.message))))));
                    })();
                };
            };
        };
    };
};
var quickCheckPure = function (dictTestable) {
    return function (s) {
        return function (n) {
            return function (prop) {
                return Test_QuickCheck_Gen.evalGen(Data_Unfoldable.replicateA(Test_QuickCheck_Gen.applicativeGen)(Data_List_Types.unfoldableList)(Data_List_Types.traversableList)(n)(test(dictTestable)(prop)))({
                    newSeed: s,
                    size: 10
                });
            };
        };
    };
};
var quickCheckGenWithSeed = function (dictTestable) {
    return quickCheckWithSeed(testableGen(dictTestable));
};
var quickCheckGenPure = function (dictTestable) {
    return quickCheckPure(testableGen(dictTestable));
};
var quickCheck$prime = function (dictTestable) {
    return function (n) {
        return function (prop) {
            return function __do() {
                var v = Random_LCG.randomSeed();
                return quickCheckWithSeed(dictTestable)(v)(n)(prop)();
            };
        };
    };
};
var quickCheckGen$prime = function (dictTestable) {
    return quickCheck$prime(testableGen(dictTestable));
};
var quickCheck = function (dictTestable) {
    return function (prop) {
        return quickCheck$prime(dictTestable)(100)(prop);
    };
};
var quickCheckGen = function (dictTestable) {
    return quickCheck(testableGen(dictTestable));
};
var assertOp = function (dictEq) {
    return function (dictShow) {
        return function (op) {
            return function (failString) {
                return function (a) {
                    return function (b) {
                        return withHelp(op(a)(b))(Data_Show.show(dictShow)(a) + (failString + Data_Show.show(dictShow)(b)));
                    };
                };
            };
        };
    };
};
var assertNotEquals = function (dictEq) {
    return function (dictShow) {
        return assertOp(dictEq)(dictShow)(Data_Eq.notEq(dictEq))(" == ");
    };
};
var assertLessThanEq = function (dictOrd) {
    return function (dictShow) {
        return assertOp(dictOrd.Eq0())(dictShow)(Data_Ord.lessThanOrEq(dictOrd))(" > ");
    };
};
var assertLessThan = function (dictOrd) {
    return function (dictShow) {
        return assertOp(dictOrd.Eq0())(dictShow)(Data_Ord.lessThan(dictOrd))(" >= ");
    };
};
var assertGreaterThanEq = function (dictOrd) {
    return function (dictShow) {
        return assertOp(dictOrd.Eq0())(dictShow)(Data_Ord.greaterThanOrEq(dictOrd))(" < ");
    };
};
var assertGreaterThan = function (dictOrd) {
    return function (dictShow) {
        return assertOp(dictOrd.Eq0())(dictShow)(Data_Ord.greaterThan(dictOrd))(" <= ");
    };
};
var assertEquals = function (dictEq) {
    return function (dictShow) {
        return assertOp(dictEq)(dictShow)(Data_Eq.eq(dictEq))(" /= ");
    };
};
module.exports = {
    quickCheck: quickCheck,
    quickCheckGen: quickCheckGen,
    "quickCheck'": quickCheck$prime,
    "quickCheckGen'": quickCheckGen$prime,
    quickCheckWithSeed: quickCheckWithSeed,
    quickCheckGenWithSeed: quickCheckGenWithSeed,
    quickCheckPure: quickCheckPure,
    quickCheckGenPure: quickCheckGenPure,
    Testable: Testable,
    test: test,
    Success: Success,
    Failed: Failed,
    withHelp: withHelp,
    assertEquals: assertEquals,
    assertNotEquals: assertNotEquals,
    assertLessThan: assertLessThan,
    assertLessThanEq: assertLessThanEq,
    assertGreaterThan: assertGreaterThan,
    assertGreaterThanEq: assertGreaterThanEq,
    testableResult: testableResult,
    testableBoolean: testableBoolean,
    testableFunction: testableFunction,
    testableGen: testableGen,
    showResult: showResult
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Control.Monad.Rec.Class/index.js":43,"../Control.Semigroupoid/index.js":61,"../Data.Boolean/index.js":110,"../Data.Eq/index.js":135,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Maybe.First/index.js":208,"../Data.Maybe/index.js":210,"../Data.Monoid/index.js":218,"../Data.Ord/index.js":229,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.Tuple/index.js":283,"../Data.Unfoldable/index.js":285,"../Effect.Console/index.js":300,"../Effect.Exception/index.js":302,"../Effect/index.js":312,"../Prelude/index.js":385,"../Random.LCG/index.js":386,"../Test.QuickCheck.Arbitrary/index.js":407,"../Test.QuickCheck.Gen/index.js":409}],411:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad_Free = require("../Control.Monad.Free/index.js");
var Control_Monad_Gen = require("../Control.Monad.Gen/index.js");
var Control_Monad_Gen_Class = require("../Control.Monad.Gen.Class/index.js");
var Control_Monad_Gen_Common = require("../Control.Monad.Gen.Common/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Array_Partial = require("../Data.Array.Partial/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Char = require("../Data.Char/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_Lazy = require("../Data.Lazy/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_String = require("../Data.String/index.js");
var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Data_String_Gen = require("../Data.String.Gen/index.js");
var Data_String_Pattern = require("../Data.String.Pattern/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var $$Math = require("../Math/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var Test_StrongCheck_Gen = require("../Test.StrongCheck.Gen/index.js");
var Arbitrary = function (arbitrary) {
    this.arbitrary = arbitrary;
};
var Coarbitrary = function (coarbitrary) {
    this.coarbitrary = coarbitrary;
};
var coarbitrary = function (dict) {
    return dict.coarbitrary;
};
var coarbUnit = new Coarbitrary(function (v) {
    return Test_StrongCheck_Gen.perturbGen(Control_Monad_Free.freeMonad)(1.0);
});
var coarbTuple = function (dictCoarbitrary) {
    return function (dictCoarbitrary1) {
        return new Coarbitrary(function (v) {
            return function ($54) {
                return coarbitrary(dictCoarbitrary1)(v.value1)(coarbitrary(dictCoarbitrary)(v.value0)($54));
            };
        });
    };
};
var coarbOrdering = new Coarbitrary(function (v) {
    if (v instanceof Data_Ordering.LT) {
        return Test_StrongCheck_Gen.perturbGen(Control_Monad_Free.freeMonad)(1.0);
    };
    if (v instanceof Data_Ordering.EQ) {
        return Test_StrongCheck_Gen.perturbGen(Control_Monad_Free.freeMonad)(2.0);
    };
    if (v instanceof Data_Ordering.GT) {
        return Test_StrongCheck_Gen.perturbGen(Control_Monad_Free.freeMonad)(3.0);
    };
    throw new Error("Failed pattern match at Test.StrongCheck.Arbitrary (line 86, column 1 - line 86, column 47): " + [ v.constructor.name ]);
});
var coarbNumber = new Coarbitrary(Test_StrongCheck_Gen.perturbGen(Control_Monad_Free.freeMonad));
var coarbMaybe = function (dictCoarbitrary) {
    return new Coarbitrary(function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Test_StrongCheck_Gen.perturbGen(Control_Monad_Free.freeMonad)(1.0);
        };
        if (v instanceof Data_Maybe.Just) {
            return coarbitrary(dictCoarbitrary)(v.value0);
        };
        throw new Error("Failed pattern match at Test.StrongCheck.Arbitrary (line 124, column 1 - line 124, column 62): " + [ v.constructor.name ]);
    });
};
var coarbLazy = function (dictCoarbitrary) {
    return new Coarbitrary(function (a) {
        return coarbitrary(dictCoarbitrary)(Data_Lazy.force(a));
    });
};
var coarbInt = new Coarbitrary(function ($55) {
    return Test_StrongCheck_Gen.perturbGen(Control_Monad_Free.freeMonad)(Data_Int.toNumber($55));
});
var coarbIdentity = function (dictCoarbitrary) {
    return new Coarbitrary(function (v) {
        return coarbitrary(dictCoarbitrary)(v);
    });
};
var coarbEither = function (dictCoarbitrary) {
    return function (dictCoarbitrary1) {
        return new Coarbitrary(function (v) {
            if (v instanceof Data_Either.Left) {
                return coarbitrary(dictCoarbitrary)(v.value0);
            };
            if (v instanceof Data_Either.Right) {
                return coarbitrary(dictCoarbitrary1)(v.value0);
            };
            throw new Error("Failed pattern match at Test.StrongCheck.Arbitrary (line 131, column 1 - line 131, column 83): " + [ v.constructor.name ]);
        });
    };
};
var coarbChar = new Coarbitrary(function (c) {
    return coarbitrary(coarbInt)(Data_Char.toCharCode(c));
});
var coarbBoolean = new Coarbitrary(function (v) {
    if (v) {
        return Test_StrongCheck_Gen.perturbGen(Control_Monad_Free.freeMonad)(1.0);
    };
    if (!v) {
        return Test_StrongCheck_Gen.perturbGen(Control_Monad_Free.freeMonad)(2.0);
    };
    throw new Error("Failed pattern match at Test.StrongCheck.Arbitrary (line 47, column 1 - line 47, column 45): " + [ v.constructor.name ]);
});
var coarbArray = function (dictCoarbitrary) {
    return new Coarbitrary(function (arr) {
        var $47 = Data_Array.length(arr) === 0;
        if ($47) {
            return Control_Category.identity(Control_Category.categoryFn);
        };
        var xs = Data_Array_Partial.tail()(arr);
        var x = Data_Array_Partial.head()(arr);
        return function ($56) {
            return coarbitrary(coarbArray(dictCoarbitrary))(xs)(coarbitrary(dictCoarbitrary)(x)($56));
        };
    });
};
var coarbList = function (dictCoarbitrary) {
    return new Coarbitrary(function ($57) {
        return coarbitrary(coarbArray(dictCoarbitrary))(Data_Array.fromFoldable(Data_List_Types.foldableList)($57));
    });
};
var coarbString = new Coarbitrary(function (s) {
    return coarbitrary(coarbArray(coarbMaybe(coarbChar)))(Data_Functor.map(Data_Functor.functorArray)(Data_String_CodeUnits.charAt(0))(Data_String_Common.split("")(s)));
});
var arbitrary = function (dict) {
    return dict.arbitrary;
};
var arbitraryIdentity = function (dictArbitrary) {
    return new Arbitrary(Control_Monad_Gen_Common.genIdentity(Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(arbitrary(dictArbitrary)));
};
var arbitraryLazy = function (dictArbitrary) {
    return new Arbitrary(Control_Bind.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(arbitrary(dictArbitrary))(function ($58) {
        return Control_Applicative.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(Data_Lazy.defer(Data_Function["const"]($58)));
    }));
};
var coarbFunction = function (dictArbitrary) {
    return function (dictCoarbitrary) {
        return new Coarbitrary(function (f) {
            return function (gen) {
                return Control_Bind.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(arbitrary(dictArbitrary))(function (v) {
                    return coarbitrary(dictCoarbitrary)(f(v))(gen);
                });
            };
        });
    };
};
var arbUnit = new Arbitrary(Control_Applicative.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(Data_Unit.unit));
var arbTuple = function (dictArbitrary) {
    return function (dictArbitrary1) {
        return new Arbitrary(Control_Monad_Gen_Common.genTuple(Test_StrongCheck_Gen.applyGenT(Control_Monad_Free.freeMonad))(arbitrary(dictArbitrary))(arbitrary(dictArbitrary1)));
    };
};
var arbString = new Arbitrary(Data_String_Gen.genUnicodeString(Test_StrongCheck_Gen.monadRecGenT(Control_Monad_Free.freeMonadRec))(Test_StrongCheck_Gen.monadGenGenT(Control_Monad_Free.freeMonad)));
var arbOrdering = new Arbitrary(Test_StrongCheck_Gen.oneOf(Control_Monad_Free.freeMonad)(Control_Applicative.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(Data_Ordering.LT.value))([ Control_Applicative.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(Data_Ordering.EQ.value), Control_Applicative.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(Data_Ordering.GT.value) ]));
var arbNumber = new Arbitrary(Test_StrongCheck_Gen.uniform(Control_Monad_Free.freeMonad));
var arbMaybe = function (dictArbitrary) {
    return new Arbitrary(Control_Monad_Gen_Common.genMaybe(Test_StrongCheck_Gen.monadGenGenT(Control_Monad_Free.freeMonad))(arbitrary(dictArbitrary)));
};
var arbInt = new Arbitrary(Control_Bind.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(Test_StrongCheck_Gen.uniform(Control_Monad_Free.freeMonad))(function (v) {
    return Control_Applicative.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(Data_Maybe.fromJust()(Data_Int.fromNumber($$Math.floor(Data_Int.toNumber((Data_Bounded.top(Data_Bounded.boundedInt) - Data_Bounded.bottom(Data_Bounded.boundedInt) | 0) + Data_Bounded.bottom(Data_Bounded.boundedInt) | 0) * v))));
}));
var arbFunction = function (dictCoarbitrary) {
    return function (dictArbitrary) {
        return new Arbitrary(Test_StrongCheck_Gen.repeatable(function (a) {
            return coarbitrary(dictCoarbitrary)(a)(arbitrary(dictArbitrary));
        }));
    };
};
var arbEither = function (dictArbitrary) {
    return function (dictArbitrary1) {
        return new Arbitrary(Control_Monad_Gen_Common.genEither(Test_StrongCheck_Gen.monadGenGenT(Control_Monad_Free.freeMonad))(arbitrary(dictArbitrary))(arbitrary(dictArbitrary1)));
    };
};
var arbChar = new Arbitrary(Test_StrongCheck_Gen.charGen(Control_Monad_Free.freeMonad));
var arbBoolean = new Arbitrary(Control_Monad_Gen_Class.chooseBool(Test_StrongCheck_Gen.monadGenGenT(Control_Monad_Free.freeMonad)));
var arbArray = function (dictArbitrary) {
    return new Arbitrary(Control_Bind.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(arbitrary(arbBoolean))(function (v) {
        if (v) {
            return Control_Applicative.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))([  ]);
        };
        return Control_Bind.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(arbitrary(dictArbitrary))(function (v1) {
            return Control_Bind.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(arbitrary(arbArray(dictArbitrary)))(function (v2) {
                return Control_Applicative.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1 ])(v2));
            });
        });
    }));
};
var arbList = function (dictArbitrary) {
    return new Arbitrary(Data_Functor.map(Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Data_Array.toUnfoldable(Data_List_Types.unfoldableList))(arbitrary(arbArray(dictArbitrary))));
};
module.exports = {
    arbitrary: arbitrary,
    coarbitrary: coarbitrary,
    Arbitrary: Arbitrary,
    Coarbitrary: Coarbitrary,
    arbBoolean: arbBoolean,
    coarbBoolean: coarbBoolean,
    arbNumber: arbNumber,
    coarbNumber: coarbNumber,
    arbInt: arbInt,
    coarbInt: coarbInt,
    arbString: arbString,
    coarbString: coarbString,
    arbChar: arbChar,
    coarbChar: coarbChar,
    arbUnit: arbUnit,
    coarbUnit: coarbUnit,
    arbOrdering: arbOrdering,
    coarbOrdering: coarbOrdering,
    arbArray: arbArray,
    coarbArray: coarbArray,
    arbFunction: arbFunction,
    coarbFunction: coarbFunction,
    arbTuple: arbTuple,
    coarbTuple: coarbTuple,
    arbMaybe: arbMaybe,
    coarbMaybe: coarbMaybe,
    arbEither: arbEither,
    coarbEither: coarbEither,
    arbList: arbList,
    coarbList: coarbList,
    arbitraryIdentity: arbitraryIdentity,
    coarbIdentity: coarbIdentity,
    arbitraryLazy: arbitraryLazy,
    coarbLazy: coarbLazy
};

},{"../Control.Applicative/index.js":7,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Monad.Free/index.js":33,"../Control.Monad.Gen.Class/index.js":34,"../Control.Monad.Gen.Common/index.js":35,"../Control.Monad.Gen/index.js":36,"../Control.Semigroupoid/index.js":61,"../Data.Array.Partial/index.js":94,"../Data.Array/index.js":99,"../Data.Bounded/index.js":113,"../Data.Char/index.js":117,"../Data.Either/index.js":131,"../Data.Eq/index.js":135,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Identity/index.js":163,"../Data.Int/index.js":167,"../Data.Lazy/index.js":171,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Maybe/index.js":210,"../Data.Ordering/index.js":230,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.String.CodeUnits/index.js":258,"../Data.String.Common/index.js":260,"../Data.String.Gen/index.js":261,"../Data.String.Pattern/index.js":266,"../Data.String/index.js":272,"../Data.Tuple/index.js":283,"../Data.Unit/index.js":289,"../Math/index.js":364,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385,"../Test.StrongCheck.Gen/index.js":413}],412:[function(require,module,exports){
exports.float32ToInt32 = function(n) {
    var arr = new ArrayBuffer(4),
        fv = new Float32Array(arr),
        iv = new Int32Array(arr);
    fv[0] = n;
    return iv[0];
};

},{}],413:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Alt = require("../Control.Alt/index.js");
var Control_Alternative = require("../Control.Alternative/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Free = require("../Control.Monad.Free/index.js");
var Control_Monad_Gen = require("../Control.Monad.Gen/index.js");
var Control_Monad_Gen_Class = require("../Control.Monad.Gen.Class/index.js");
var Control_Monad_List_Trans = require("../Control.Monad.List.Trans/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_Trampoline = require("../Control.Monad.Trampoline/index.js");
var Control_MonadPlus = require("../Control.MonadPlus/index.js");
var Control_MonadZero = require("../Control.MonadZero/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Array_Partial = require("../Data.Array.Partial/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Char_Gen = require("../Data.Char.Gen/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_Lazy = require("../Data.Lazy/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Machine_Mealy = require("../Data.Machine.Mealy/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Effect = require("../Effect/index.js");
var Effect_Console = require("../Effect.Console/index.js");
var $$Math = require("../Math/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var Test_StrongCheck_LCG = require("../Test.StrongCheck.LCG/index.js");
var GenState = function (x) {
    return x;
};
var GenOut = function (x) {
    return x;
};
var GenT = function (x) {
    return x;
};
var wrapEffect = function (dictMonad) {
    return function (fa) {
        var g = function (v) {
            return {
                state: v.value0,
                value: v.value1
            };
        };
        return GenT(Data_Functor.map(Data_Machine_Mealy.functorMealy(dictMonad))(g)(Data_Profunctor_Strong.fanout(Data_Machine_Mealy.categoryMealy(dictMonad))(Data_Machine_Mealy.strongMealy(dictMonad))(Control_Category.identity(Data_Machine_Mealy.categoryMealy(dictMonad)))(Data_Machine_Mealy.wrapEffect(dictMonad)(fa))));
    };
};
var updateSeedState = function (v) {
    return {
        seed: Test_StrongCheck_LCG.lcgNext(v.seed),
        size: v.size
    };
};
var updateSeedGen = function (dictMonad) {
    return function (v) {
        return GenT(Data_Profunctor.lcmap(Data_Machine_Mealy.profunctorMealy(dictMonad))(updateSeedState)(v));
    };
};
var unGenState = function (v) {
    return v;
};
var unGenOut = function (v) {
    return v;
};
var unGen = function (v) {
    return v;
};
var transGen = function (dictMonad) {
    return function (f) {
        return function (b) {
            return function (v) {
                var loop = function (m$prime) {
                    return function (b$prime) {
                        var g = function (v1) {
                            if (v1 instanceof Data_Machine_Mealy.Halt) {
                                return Control_Applicative.pure(dictMonad.Applicative0())(Data_Machine_Mealy.Halt.value);
                            };
                            if (v1 instanceof Data_Machine_Mealy.Emit) {
                                var v2 = f(b$prime)(v1.value0.value);
                                if (v2.value1 instanceof Data_Maybe.Nothing) {
                                    return Data_Machine_Mealy.stepMealy(dictMonad)(v1.value0.state)(loop(v1.value1)(v2.value0));
                                };
                                if (v2.value1 instanceof Data_Maybe.Just) {
                                    var c$prime = {
                                        value: v2.value1.value0,
                                        state: v1.value0.state
                                    };
                                    return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Machine_Mealy.Emit(c$prime, loop(v1.value1)(v2.value0)));
                                };
                                throw new Error("Failed pattern match at Test.StrongCheck.Gen (line 350, column 7 - line 354, column 50): " + [ v2.constructor.name ]);
                            };
                            throw new Error("Failed pattern match at Test.StrongCheck.Gen (line 348, column 5 - line 348, column 35): " + [ v1.constructor.name ]);
                        };
                        return Data_Machine_Mealy.mealy(dictMonad.Applicative0())(function (st) {
                            return Control_Bind.bind(dictMonad.Bind1())(Data_Machine_Mealy.stepMealy(dictMonad)(st)(m$prime))(g);
                        });
                    };
                };
                return GenT(loop(v)(b));
            };
        };
    };
};
var toLazyList = function (v) {
    return function (s) {
        var loop = function (m$prime) {
            return function (s$prime) {
                var v1 = Control_Monad_Trampoline.runTrampoline(Data_Machine_Mealy.stepMealy(Control_Monad_Free.freeMonad)(s$prime)(m$prime));
                if (v1 instanceof Data_Machine_Mealy.Halt) {
                    return Control_Monad_List_Trans.nil(Data_Lazy.applicativeLazy);
                };
                if (v1 instanceof Data_Machine_Mealy.Emit) {
                    return Control_Monad_List_Trans["prepend'"](Data_Lazy.applicativeLazy)(v1.value0.value)(Data_Lazy.defer(function (v2) {
                        return loop(v1.value1)(v1.value0.state);
                    }));
                };
                throw new Error("Failed pattern match at Test.StrongCheck.Gen (line 535, column 5 - line 538, column 58): " + [ v1.constructor.name ]);
            };
        };
        return Control_Monad_List_Trans.wrapLazy(Data_Lazy.applicativeLazy)(Data_Lazy.defer(function (v1) {
            return loop(v)(s);
        }));
    };
};
var stateful = function (dictMonad) {
    return function (f) {
        return GenT(Control_Bind.bindFlipped(Data_Machine_Mealy.bindMealy(dictMonad))(function ($262) {
            return unGen(f($262));
        })(Data_Machine_Mealy.take(dictMonad)(1)(Control_Category.identity(Data_Machine_Mealy.categoryMealy(dictMonad)))));
    };
};
var stateM = function (f) {
    return function ($263) {
        return GenState(f(unGenState($263)));
    };
};
var variant = function (dictMonad) {
    return function (n) {
        return function (g) {
            return GenT(Data_Profunctor.lcmap(Data_Machine_Mealy.profunctorMealy(dictMonad))(stateM(function (s) {
                return {
                    seed: n,
                    size: s.size
                };
            }))(unGen(g)));
        };
    };
};
var sized = function (dictMonad) {
    return function (f) {
        return stateful(dictMonad)(function (s) {
            return f((unGenState(s)).size);
        });
    };
};
var semigroupGenT = function (dictMonad) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_Semigroup.append(Data_Machine_Mealy.semigroupMealy(dictMonad))(v)(v1);
        };
    });
};
var semigroupGenState = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return {
            seed: Test_StrongCheck_LCG.lcgPerturb(Data_Int.toNumber(Test_StrongCheck_LCG.runSeed(v.seed)))(v1.seed),
            size: v1.size
        };
    };
});
var semigroupGenOut = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return {
                state: Data_Semigroup.append(semigroupGenState)(v.state)(v1.state),
                value: Data_Semigroup.append(dictSemigroup)(v.value)(v1.value)
            };
        };
    });
};
var resize = function (dictMonad) {
    return function (sz) {
        return function (g) {
            return GenT(Data_Profunctor.lcmap(Data_Machine_Mealy.profunctorMealy(dictMonad))(stateM(function (s) {
                return {
                    seed: s.seed,
                    size: sz
                };
            }))(unGen(g)));
        };
    };
};
var pureGen = function (dictMonad) {
    return function (f) {
        return GenT(Data_Profunctor.arr(Data_Machine_Mealy.categoryMealy(dictMonad))(Data_Machine_Mealy.profunctorMealy(dictMonad))(f));
    };
};
var perturbGen = function (dictMonad) {
    return function (n) {
        return function (v) {
            return GenT(Data_Profunctor.lcmap(Data_Machine_Mealy.profunctorMealy(dictMonad))(stateM(function (s) {
                return {
                    seed: Test_StrongCheck_LCG.lcgPerturb(Data_Int.toNumber($foreign.float32ToInt32(n)))(s.seed),
                    size: s.size
                };
            }))(v));
        };
    };
};
var monoidGenT = function (dictMonad) {
    return new Data_Monoid.Monoid(function () {
        return semigroupGenT(dictMonad);
    }, Data_Monoid.mempty(Data_Machine_Mealy.monoidMealy(dictMonad)));
};
var monoidGenState = new Data_Monoid.Monoid(function () {
    return semigroupGenState;
}, {
    seed: Test_StrongCheck_LCG.mkSeed(85734629),
    size: 10
});
var monoidGenOut = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupGenOut(dictMonoid.Semigroup0());
    }, {
        state: Data_Monoid.mempty(monoidGenState),
        value: Data_Monoid.mempty(dictMonoid)
    });
};
var liftMealy = function (dictMonad) {
    return function (f) {
        return function (g) {
            return GenT(f(unGen(g)));
        };
    };
};
var takeGen = function (dictMonad) {
    return function (n) {
        return liftMealy(dictMonad)(Data_Machine_Mealy.take(dictMonad)(n));
    };
};
var lcgStep = function (dictMonad) {
    return GenT(Data_Profunctor.arr(Data_Machine_Mealy.categoryMealy(dictMonad))(Data_Machine_Mealy.profunctorMealy(dictMonad))(function (s) {
        return {
            state: updateSeedState(s),
            value: Test_StrongCheck_LCG.runSeed((unGenState(s)).seed)
        };
    }));
};
var lazyGenT = function (dictMonad) {
    return new Control_Lazy.Lazy(function (f) {
        return GenT(Control_Lazy.defer(Data_Machine_Mealy.lazyMealy(dictMonad))(function ($264) {
            return unGen(f($264));
        }));
    });
};
var interleave = function (dictMonad) {
    return function (v) {
        return function (v1) {
            return GenT(Data_Machine_Mealy.interleave(dictMonad)(v)(v1));
        };
    };
};
var infinite = function (dictMonad) {
    return liftMealy(dictMonad)(Data_Machine_Mealy.loop(dictMonad));
};
var functorGenOut = new Data_Functor.Functor(function (f) {
    return function (v) {
        return {
            state: v.state,
            value: f(v.value)
        };
    };
});
var functorGenT = function (dictMonad) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return GenT(Data_Functor.map(Data_Machine_Mealy.functorMealy(dictMonad))(Data_Functor.map(functorGenOut)(f))(v));
        };
    });
};
var uniform = function (dictMonad) {
    return Data_Functor.map(functorGenT(dictMonad))(function (n) {
        return Data_Int.toNumber(n) / Data_Int.toNumber(Test_StrongCheck_LCG.lcgN);
    })(lcgStep(dictMonad));
};
var stepGen = function (dictMonad) {
    return function (st) {
        return function (v) {
            var h = function (v1) {
                if (v1 instanceof Data_Machine_Mealy.Halt) {
                    return Data_Maybe.Nothing.value;
                };
                if (v1 instanceof Data_Machine_Mealy.Emit) {
                    return Data_Maybe.Just.create(Data_Functor.map(functorGenOut)(Data_Function.flip(Data_Tuple.Tuple.create)(v1.value1))(v1.value0));
                };
                throw new Error("Failed pattern match at Test.StrongCheck.Gen (line 132, column 3 - line 132, column 25): " + [ v1.constructor.name ]);
            };
            return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(h)(Data_Machine_Mealy.stepMealy(dictMonad)(st)(v));
        };
    };
};
var foldGen$prime = function (dictMonad) {
    return function (f) {
        return function (b) {
            return function (s) {
                return function (v) {
                    var loop = function (st) {
                        return function (m$prime) {
                            return function (b$prime) {
                                var g = function (v1) {
                                    if (v1 instanceof Data_Machine_Mealy.Halt) {
                                        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(b$prime, Data_Machine_Mealy.halt(dictMonad.Applicative0())));
                                    };
                                    if (v1 instanceof Data_Machine_Mealy.Emit) {
                                        var b$prime$prime = f(b$prime)(v1.value0.value);
                                        return Data_Maybe.maybe(Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(b$prime, v1.value1)))(loop(v1.value0.state)(v1.value1))(b$prime$prime);
                                    };
                                    throw new Error("Failed pattern match at Test.StrongCheck.Gen (line 318, column 5 - line 318, column 53): " + [ v1.constructor.name ]);
                                };
                                return Control_Bind.bind(dictMonad.Bind1())(Data_Machine_Mealy.stepMealy(dictMonad)(st)(m$prime))(g);
                            };
                        };
                    };
                    return loop(s)(v)(b);
                };
            };
        };
    };
};
var foldGen = function (dictMonad) {
    return function (f) {
        return function (b) {
            return function (s) {
                return function (g) {
                    return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Tuple.fst)(foldGen$prime(dictMonad)(f)(b)(s)(g));
                };
            };
        };
    };
};
var extend = function (dictMonad) {
    return function (n) {
        return function (v) {
            var loop = function (i) {
                return function (m$prime) {
                    return Data_Machine_Mealy.mealy(dictMonad.Applicative0())(function (st) {
                        var f = function (v1) {
                            if (v1 instanceof Data_Machine_Mealy.Emit) {
                                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Machine_Mealy.Emit(v1.value0, loop(i + 1 | 0)(v1.value1)));
                            };
                            if (v1 instanceof Data_Machine_Mealy.Halt) {
                                var $199 = i >= n;
                                if ($199) {
                                    return Control_Applicative.pure(dictMonad.Applicative0())(Data_Machine_Mealy.Halt.value);
                                };
                                return Data_Machine_Mealy.stepMealy(dictMonad)(st)(loop(i)(v));
                            };
                            throw new Error("Failed pattern match at Test.StrongCheck.Gen (line 290, column 7 - line 290, column 68): " + [ v1.constructor.name ]);
                        };
                        return Control_Bind.bind(dictMonad.Bind1())(Data_Machine_Mealy.stepMealy(dictMonad)(st)(m$prime))(f);
                    });
                };
            };
            return Data_Semigroup.append(semigroupGenT(dictMonad))(GenT(loop(0)(v)))(v);
        };
    };
};
var runGen = function (dictMonad) {
    return function (n) {
        return function (st) {
            return function (g) {
                var f = function (v) {
                    return function (a) {
                        var $200 = Data_Array.length(v) < n;
                        if ($200) {
                            return Data_Maybe.Just.create(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)([ a ]));
                        };
                        return Data_Maybe.Nothing.value;
                    };
                };
                return foldGen$prime(dictMonad)(f)([  ])(st)(extend(dictMonad)(n)(g));
            };
        };
    };
};
var sample$prime = function (dictMonad) {
    return function (n) {
        return function (st) {
            return function (g) {
                return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Tuple.fst)(runGen(dictMonad)(n)(st)(g));
            };
        };
    };
};
var sample = function (dictMonad) {
    return function (n) {
        return sample$prime(dictMonad)(n)({
            size: 10,
            seed: Test_StrongCheck_LCG.mkSeed(445645874)
        });
    };
};
var showSample$prime = function (dictShow) {
    return function (n) {
        return function (g) {
            return Effect_Console.logShow(Data_Show.showArray(dictShow))(Control_Monad_Trampoline.runTrampoline(sample(Control_Monad_Free.freeMonad)(n)(g)));
        };
    };
};
var showSample = function (dictShow) {
    return showSample$prime(dictShow)(10);
};
var vectorOf = function (dictMonad) {
    return function (n) {
        return function (g) {
            var f = function (b) {
                return function (a) {
                    var b$prime = Data_Semigroup.append(Data_Semigroup.semigroupArray)(b)([ a ]);
                    var $201 = Data_Array.length(b$prime) >= n;
                    if ($201) {
                        return new Data_Tuple.Tuple([  ], new Data_Maybe.Just(b$prime));
                    };
                    return new Data_Tuple.Tuple(b$prime, Data_Maybe.Nothing.value);
                };
            };
            return transGen(dictMonad)(f)([  ])(extend(dictMonad)(n)(g));
        };
    };
};
var evalGen = function (dictMonad) {
    return function (g) {
        return function (st) {
            var h = function (v) {
                if (v instanceof Data_Maybe.Nothing) {
                    return Data_Maybe.Nothing.value;
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just(v.value0.value.value0);
                };
                throw new Error("Failed pattern match at Test.StrongCheck.Gen (line 138, column 3 - line 138, column 22): " + [ v.constructor.name ]);
            };
            return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(h)(stepGen(dictMonad)(st)(g));
        };
    };
};
var repeatable$prime = function (dictMonad) {
    return function (f) {
        return GenT(Data_Machine_Mealy.pureMealy(dictMonad.Applicative0())(function (s) {
            return new Data_Machine_Mealy.Emit({
                state: s,
                value: function (a) {
                    return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Maybe.fromJust())(evalGen(dictMonad)(f(a))(s));
                }
            }, Data_Machine_Mealy.halt(dictMonad.Applicative0()));
        }));
    };
};
var repeatable = function (f) {
    var g = function (f$prime) {
        return function (a) {
            return Control_Monad_Trampoline.runTrampoline(f$prime(a));
        };
    };
    return Data_Functor.map(functorGenT(Control_Monad_Free.freeMonad))(g)(repeatable$prime(Control_Monad_Free.freeMonad)(f));
};
var dropGen = function (dictMonad) {
    return function (n) {
        return liftMealy(dictMonad)(Data_Machine_Mealy.drop(dictMonad)(n));
    };
};
var decorateSeed = function (dictMonad) {
    return function (gen) {
        return stateful(dictMonad)(function (sIn) {
            return Data_Functor.map(functorGenT(dictMonad))(Data_Tuple.Tuple.create((unGenState(sIn)).seed))(gen);
        });
    };
};
var collectAll = function (dictMonad) {
    var f = function (v) {
        return function (a) {
            return Data_Maybe.Just.create(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)([ a ]));
        };
    };
    return foldGen(dictMonad)(f)([  ]);
};
var chunked = function (dictMonad) {
    return function (n) {
        return function (g) {
            var f = function (xs) {
                return function (a) {
                    var xs$prime = Data_Array.cons(a)(xs);
                    var $207 = Data_Array.length(xs$prime) >= n;
                    if ($207) {
                        return new Data_Tuple.Tuple([  ], new Data_Maybe.Just(xs$prime));
                    };
                    return new Data_Tuple.Tuple(xs$prime, Data_Maybe.Nothing.value);
                };
            };
            return transGen(dictMonad)(f)([  ])(extend(dictMonad)(n)(g));
        };
    };
};
var chooseInt = function (dictMonad) {
    return function (a) {
        return function (b) {
            var clamp = function (x) {
                var v = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(x)((b - a | 0) + 1 | 0);
                if (v >= 0) {
                    return a + v | 0;
                };
                if (Data_Boolean.otherwise) {
                    return (b + v | 0) + 1 | 0;
                };
                throw new Error("Failed pattern match at Test.StrongCheck.Gen (line 193, column 13 - line 195, column 43): " + [ v.constructor.name ]);
            };
            return Data_Functor.map(functorGenT(dictMonad))(clamp)(lcgStep(dictMonad));
        };
    };
};
var choose = function (dictMonad) {
    return function (a) {
        return function (b) {
            var min = $$Math.min(a)(b);
            var max = $$Math.max(a)(b);
            return Data_Functor.map(functorGenT(dictMonad))(function ($265) {
                return min + (max - min) * $265;
            })(uniform(dictMonad));
        };
    };
};
var applyGenOut = new Control_Apply.Apply(function () {
    return functorGenOut;
}, function (v) {
    return function (v1) {
        return {
            state: v1.state,
            value: v.value(v1.value)
        };
    };
});
var applyGenT = function (dictMonad) {
    return new Control_Apply.Apply(function () {
        return functorGenT(dictMonad);
    }, function (f) {
        return function (x) {
            return GenT(Control_Apply.apply(Data_Machine_Mealy.applyMealy(dictMonad))(Data_Functor.map(Data_Machine_Mealy.functorMealy(dictMonad))(Control_Apply.apply(applyGenOut))(unGen(f)))(unGen(updateSeedGen(dictMonad)(x))));
        };
    });
};
var bindGenT = function (dictMonad) {
    return new Control_Bind.Bind(function () {
        return applyGenT(dictMonad);
    }, function (v) {
        return function (f) {
            return Control_Bind.bind(Data_Machine_Mealy.bindMealy(dictMonad))(v)(function (v1) {
                return unGen(updateSeedGen(dictMonad)(f((unGenOut(v1)).value)));
            });
        };
    });
};
var arrayOf = function (dictMonad) {
    return function (g) {
        return sized(dictMonad)(function (n) {
            return Control_Bind.bind(bindGenT(dictMonad))(chooseInt(dictMonad)(0)(n))(function (v) {
                return vectorOf(dictMonad)(v)(g);
            });
        });
    };
};
var frequency = function (dictMonad) {
    return function (x) {
        return function (xs) {
            var xxs = new Data_List_Types.Cons(x, xs);
            var total = Data_Newtype.unwrap(Data_Newtype.newtypeAdditive)(Data_Foldable.fold(Data_List_Types.foldableList)(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringNumber))(Data_Functor.map(Data_List_Types.functorList)(function ($266) {
                return Data_Monoid_Additive.Additive(Data_Tuple.fst($266));
            })(xxs)));
            var pick = function ($copy_v) {
                return function ($copy_d) {
                    return function ($copy_v1) {
                        var $tco_var_v = $copy_v;
                        var $tco_var_d = $copy_d;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(v, d, v1) {
                            if (v1 instanceof Data_List_Types.Nil) {
                                $tco_done = true;
                                return d;
                            };
                            if (v1 instanceof Data_List_Types.Cons) {
                                var $218 = v <= v1.value0.value0;
                                if ($218) {
                                    $tco_done = true;
                                    return v1.value0.value1;
                                };
                                $tco_var_v = v - v1.value0.value0;
                                $tco_var_d = d;
                                $copy_v1 = v1.value1;
                                return;
                            };
                            throw new Error("Failed pattern match at Test.StrongCheck.Gen (line 218, column 7 - line 218, column 81): " + [ v.constructor.name, d.constructor.name, v1.constructor.name ]);
                        };
                        while (!$tco_done) {
                            $tco_result = $tco_loop($tco_var_v, $tco_var_d, $copy_v1);
                        };
                        return $tco_result;
                    };
                };
            };
            return Control_Bind.bind(bindGenT(dictMonad))(choose(dictMonad)(1.0)(total))(function (v) {
                return pick(v)(Data_Tuple.snd(x))(xxs);
            });
        };
    };
};
var oneOf = function (dictMonad) {
    return function (x) {
        return function (xs) {
            return Control_Bind.bind(bindGenT(dictMonad))(chooseInt(dictMonad)(0)(Data_Array.length(xs)))(function (v) {
                var $225 = v === 0;
                if ($225) {
                    return x;
                };
                return Data_Maybe.fromMaybe(x)(Data_Array.index(xs)(v - 1 | 0));
            });
        };
    };
};
var applyGen = function (dictMonad) {
    return function (s) {
        return function (v) {
            var f = function (v1) {
                if (v1 instanceof Data_Machine_Mealy.Halt) {
                    return Data_Maybe.Nothing.value;
                };
                if (v1 instanceof Data_Machine_Mealy.Emit) {
                    return Data_Maybe.Just.create({
                        state: v1.value0.state,
                        value: new Data_Tuple.Tuple(v1.value0.value, v1.value1)
                    });
                };
                throw new Error("Failed pattern match at Test.StrongCheck.Gen (line 450, column 3 - line 450, column 25): " + [ v1.constructor.name ]);
            };
            return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(f)(Data_Machine_Mealy.stepMealy(dictMonad)(s)(v));
        };
    };
};
var applicativeGenT = function (dictMonad) {
    return new Control_Applicative.Applicative(function () {
        return applyGenT(dictMonad);
    }, function (t) {
        return GenT(Data_Profunctor.arr(Data_Machine_Mealy.categoryMealy(dictMonad))(Data_Machine_Mealy.profunctorMealy(dictMonad))(function (s) {
            return {
                state: updateSeedState(s),
                value: t
            };
        }));
    });
};
var arrayOf1 = function (dictMonad) {
    return function (g) {
        return sized(dictMonad)(function (n) {
            return Control_Bind.bind(bindGenT(dictMonad))(chooseInt(dictMonad)(0)(n))(function (v) {
                return Control_Bind.bind(bindGenT(dictMonad))(g)(function (v1) {
                    return Control_Bind.bind(bindGenT(dictMonad))(vectorOf(dictMonad)(v - 1 | 0)(g))(function (v2) {
                        return Control_Applicative.pure(applicativeGenT(dictMonad))(new Data_Tuple.Tuple(v1, v2));
                    });
                });
            });
        });
    };
};
var elements = function (dictMonad) {
    return function (x) {
        return function (xs) {
            return Control_Bind.bind(bindGenT(dictMonad))(chooseInt(dictMonad)(0)(Data_List.length(xs)))(function (v) {
                return Control_Applicative.pure(applicativeGenT(dictMonad))((function () {
                    var $237 = v === 0;
                    if ($237) {
                        return x;
                    };
                    return Data_Maybe.fromMaybe(x)(Data_List.index(xs)(v - 1 | 0));
                })());
            });
        };
    };
};
var monadGenT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeGenT(dictMonad);
    }, function () {
        return bindGenT(dictMonad);
    });
};
var monadGenGenT = function (dictMonad) {
    return new Control_Monad_Gen_Class.MonadGen(function () {
        return monadGenT(dictMonad);
    }, Data_Functor.map(functorGenT(dictMonad))(function (v) {
        return v < 0.5;
    })(uniform(dictMonad)), choose(dictMonad), chooseInt(dictMonad), function (f) {
        return function (g) {
            return stateful(dictMonad)(function (v) {
                return resize(dictMonad)(f(v.size))(g);
            });
        };
    }, sized(dictMonad));
};
var charGen = function (dictMonad) {
    return Data_Char_Gen.genUnicodeChar(monadGenGenT(dictMonad));
};
var monadRecGenT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadGenT(dictMonadRec.Monad0());
    }, function (k) {
        return function (a) {
            return Control_Bind.bind(bindGenT(dictMonadRec.Monad0()))(k(a))(function (v) {
                if (v instanceof Control_Monad_Rec_Class.Loop) {
                    return Control_Monad_Rec_Class.tailRecM(monadRecGenT(dictMonadRec))(k)(v.value0);
                };
                if (v instanceof Control_Monad_Rec_Class.Done) {
                    return Control_Applicative.pure(applicativeGenT(dictMonadRec.Monad0()))(v.value0);
                };
                throw new Error("Failed pattern match at Test.StrongCheck.Gen (line 597, column 26 - line 599, column 21): " + [ v.constructor.name ]);
            });
        };
    });
};
var nChooseK = function (dictMonad) {
    return function (k) {
        return function (arr) {
            var $242 = k === 0;
            if ($242) {
                return Control_Applicative.pure(applicativeGenT(dictMonad))([  ]);
            };
            var $243 = Data_Array.length(arr) === 0;
            if ($243) {
                return Data_Monoid.mempty(monoidGenT(dictMonad));
            };
            var tl = Data_Array.drop(1)(arr);
            var hd = Data_Array.singleton(arr[0]);
            return Data_Semigroup.append(semigroupGenT(dictMonad))(Data_Functor.map(functorGenT(dictMonad))(function (v) {
                return Data_Semigroup.append(Data_Semigroup.semigroupArray)(hd)(v);
            })(nChooseK(dictMonad)(k - 1 | 0)(tl)))(nChooseK(dictMonad)(k)(tl));
        };
    };
};
var nChooseKL = function (dictMonad) {
    return function (v) {
        return function (v1) {
            if (v === 0) {
                return Control_Applicative.pure(applicativeGenT(dictMonad))(Data_List_Types.Nil.value);
            };
            if (v1 instanceof Data_List_Types.Nil) {
                return Data_Monoid.mempty(monoidGenT(dictMonad));
            };
            if (v1 instanceof Data_List_Types.Cons) {
                return Data_Semigroup.append(semigroupGenT(dictMonad))(Data_Functor.map(functorGenT(dictMonad))(function (v2) {
                    return Data_Semigroup.append(Data_List_Types.semigroupList)(Data_List.singleton(v1.value0))(v2);
                })(nChooseKL(dictMonad)(v - 1 | 0)(v1.value1)))(nChooseKL(dictMonad)(v)(v1.value1));
            };
            throw new Error("Failed pattern match at Test.StrongCheck.Gen (line 384, column 1 - line 384, column 73): " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var shuffleArray = function (dictMonad) {
    var shuffle0 = function (acc) {
        return function (v) {
            if (v.length === 0) {
                return Control_Applicative.pure(applicativeGenT(dictMonad))(acc);
            };
            return Control_Bind.bind(bindGenT(dictMonad))(chooseInt(dictMonad)(0)(Data_Array.length(v) - 1 | 0))(function (v1) {
                var xs$prime = Data_Maybe.fromMaybe(v)(Data_Array.deleteAt(v1)(v));
                var acc$prime = Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc)(Data_Maybe.maybe([  ])(Data_Array.singleton)(Data_Array.index(v)(v1)));
                return shuffle0(acc$prime)(xs$prime);
            });
        };
    };
    return shuffle0([  ]);
};
var suchThatMaybe = function (dictMonad) {
    return function (g) {
        return function (p) {
            var $$try = function (v) {
                return function (v1) {
                    if (v1 === 0) {
                        return Control_Applicative.pure(applicativeGenT(dictMonad))(Data_Maybe.Nothing.value);
                    };
                    return Control_Bind.bind(bindGenT(dictMonad))(resize(dictMonad)((2 * v | 0) + v1 | 0)(g))(function (v2) {
                        var $254 = p(v2);
                        if ($254) {
                            return Control_Applicative.pure(applicativeGenT(dictMonad))(new Data_Maybe.Just(v2));
                        };
                        return $$try(v + 1 | 0)(v1 - 1 | 0);
                    });
                };
            };
            return sized(dictMonad)($$try(0));
        };
    };
};
var suchThat = function (dictMonad) {
    return function (g) {
        return function (p) {
            var next = function (n) {
                return resize(dictMonad)(n + 1 | 0)(suchThat(dictMonad)(g)(p));
            };
            return Control_Bind.bind(bindGenT(dictMonad))(suchThatMaybe(dictMonad)(g)(p))(Data_Maybe.maybe(sized(dictMonad)(next))(Control_Applicative.pure(applicativeGenT(dictMonad))));
        };
    };
};
var altGenT = function (dictMonad) {
    return new Control_Alt.Alt(function () {
        return functorGenT(dictMonad);
    }, function (v) {
        return function (v1) {
            return GenT(Control_Alt.alt(Data_Machine_Mealy.altMealy(dictMonad))(v)(v1));
        };
    });
};
var plusGenT = function (dictMonad) {
    return new Control_Plus.Plus(function () {
        return altGenT(dictMonad);
    }, Data_Monoid.mempty(monoidGenT(dictMonad)));
};
var alternativeGenT = function (dictMonad) {
    return new Control_Alternative.Alternative(function () {
        return applicativeGenT(dictMonad);
    }, function () {
        return plusGenT(dictMonad);
    });
};
var monadZeroGenT = function (dictMonad) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeGenT(dictMonad);
    }, function () {
        return monadGenT(dictMonad);
    });
};
var monadPlusGenT = function (dictMonad) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZeroGenT(dictMonad);
    });
};
var allInRange = function (dictMonad) {
    return function (min) {
        return function (max) {
            var go = function (cur) {
                return Data_Machine_Mealy.pureMealy(dictMonad.Applicative0())(function (s) {
                    var $257 = cur > max;
                    if ($257) {
                        return Data_Machine_Mealy.Halt.value;
                    };
                    return new Data_Machine_Mealy.Emit({
                        state: s,
                        value: cur
                    }, go(cur + 1 | 0));
                });
            };
            return GenT(go(min));
        };
    };
};
var allInArray = function (dictMonad) {
    return function (a) {
        var go = function (i) {
            return Data_Machine_Mealy.pureMealy(dictMonad.Applicative0())(function (s) {
                return Data_Maybe.maybe(Data_Machine_Mealy.Halt.value)(function (a$prime) {
                    return new Data_Machine_Mealy.Emit({
                        state: s,
                        value: a$prime
                    }, go(i + 1 | 0));
                })(Data_Array.index(a)(i));
            });
        };
        return GenT(go(0));
    };
};
var perms = function (dictMonad) {
    return function (arr) {
        var $258 = Data_Array.length(arr) === 0;
        if ($258) {
            return Control_Applicative.pure(applicativeGenT(dictMonad))([  ]);
        };
        var tl = Data_Array_Partial.tail()(arr);
        var hd = Data_Array_Partial.head()(arr);
        return Control_Bind.bind(bindGenT(dictMonad))(perms(dictMonad)(tl))(function (v) {
            var f = function (n) {
                var suffix = Data_Array.drop(n)(v);
                var prefix = Data_Array.take(n)(v);
                return Data_Semigroup.append(Data_Semigroup.semigroupArray)(prefix)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ hd ])(suffix));
            };
            return allInArray(dictMonad)(Data_Functor.map(Data_Functor.functorArray)(f)(Data_Array.range(0)(Data_Array.length(v))));
        });
    };
};
var shuffle$prime = function (dictMonad) {
    return function (n) {
        return function (g) {
            return Control_Bind.bind(bindGenT(dictMonad))(chunked(dictMonad)(n)(g))(function (v) {
                return Control_Bind.bind(bindGenT(dictMonad))(shuffleArray(dictMonad)(v))(function (v1) {
                    return allInArray(dictMonad)(v1);
                });
            });
        };
    };
};
var shuffle = function (dictMonad) {
    return shuffle$prime(dictMonad)(100);
};
module.exports = {
    GenT: GenT,
    GenState: GenState,
    GenOut: GenOut,
    allInArray: allInArray,
    allInRange: allInRange,
    applyGen: applyGen,
    arrayOf: arrayOf,
    arrayOf1: arrayOf1,
    charGen: charGen,
    choose: choose,
    chooseInt: chooseInt,
    chunked: chunked,
    collectAll: collectAll,
    decorateSeed: decorateSeed,
    dropGen: dropGen,
    elements: elements,
    extend: extend,
    foldGen: foldGen,
    "foldGen'": foldGen$prime,
    frequency: frequency,
    infinite: infinite,
    interleave: interleave,
    nChooseK: nChooseK,
    oneOf: oneOf,
    perms: perms,
    perturbGen: perturbGen,
    repeatable: repeatable,
    resize: resize,
    runGen: runGen,
    sample: sample,
    "sample'": sample$prime,
    showSample: showSample,
    "showSample'": showSample$prime,
    shuffle: shuffle,
    "shuffle'": shuffle$prime,
    shuffleArray: shuffleArray,
    sized: sized,
    stateful: stateful,
    suchThat: suchThat,
    suchThatMaybe: suchThatMaybe,
    takeGen: takeGen,
    toLazyList: toLazyList,
    transGen: transGen,
    uniform: uniform,
    unGen: unGen,
    unGenOut: unGenOut,
    unGenState: unGenState,
    updateSeedState: updateSeedState,
    variant: variant,
    vectorOf: vectorOf,
    wrapEffect: wrapEffect,
    semigroupGenState: semigroupGenState,
    monoidGenState: monoidGenState,
    semigroupGenOut: semigroupGenOut,
    monoidGenOut: monoidGenOut,
    functorGenOut: functorGenOut,
    applyGenOut: applyGenOut,
    functorGenT: functorGenT,
    applyGenT: applyGenT,
    applicativeGenT: applicativeGenT,
    semigroupGenT: semigroupGenT,
    monoidGenT: monoidGenT,
    bindGenT: bindGenT,
    monadGenT: monadGenT,
    altGenT: altGenT,
    plusGenT: plusGenT,
    alternativeGenT: alternativeGenT,
    monadZeroGenT: monadZeroGenT,
    monadPlusGenT: monadPlusGenT,
    monadRecGenT: monadRecGenT,
    lazyGenT: lazyGenT,
    monadGenGenT: monadGenGenT
};

},{"../Control.Alt/index.js":4,"../Control.Alternative/index.js":5,"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Category/index.js":14,"../Control.Lazy/index.js":25,"../Control.Monad.Free/index.js":33,"../Control.Monad.Gen.Class/index.js":34,"../Control.Monad.Gen/index.js":36,"../Control.Monad.List.Trans/index.js":37,"../Control.Monad.Rec.Class/index.js":43,"../Control.Monad.Trampoline/index.js":51,"../Control.Monad/index.js":55,"../Control.MonadPlus/index.js":56,"../Control.MonadZero/index.js":57,"../Control.Plus/index.js":60,"../Control.Semigroupoid/index.js":61,"../Data.Array.Partial/index.js":94,"../Data.Array/index.js":99,"../Data.Boolean/index.js":110,"../Data.Char.Gen/index.js":116,"../Data.Eq/index.js":135,"../Data.EuclideanRing/index.js":137,"../Data.Foldable/index.js":141,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Int/index.js":167,"../Data.Lazy/index.js":171,"../Data.List.Types/index.js":203,"../Data.List/index.js":204,"../Data.Machine.Mealy/index.js":205,"../Data.Maybe/index.js":210,"../Data.Monoid.Additive/index.js":212,"../Data.Monoid/index.js":218,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Data.Profunctor.Strong/index.js":237,"../Data.Profunctor/index.js":238,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Data.Tuple/index.js":283,"../Effect.Console/index.js":300,"../Effect/index.js":312,"../Math/index.js":364,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385,"../Test.StrongCheck.LCG/index.js":414,"./foreign.js":412}],414:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Effect = require("../Effect/index.js");
var Effect_Random = require("../Effect.Random/index.js");
var $$Math = require("../Math/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Prelude = require("../Prelude/index.js");
var Seed = function (x) {
    return x;
};
var showSeed = new Data_Show.Show(function (v) {
    return "Seed " + Data_Show.show(Data_Show.showInt)(v);
});
var seedMin = 1;
var runSeed = function (v) {
    return v;
};
var lcgN = 2147483647;
var seedMax = lcgN - 1 | 0;
var lcgM = 48271;
var lcgPerturb = function (d) {
    var go = function (n) {
        return Data_Maybe.fromJust()(Data_Int.fromNumber($$Math.remainder(Data_Int.toNumber(lcgM) * Data_Int.toNumber(n) + d)(Data_Int.toNumber(lcgN))));
    };
    return function ($10) {
        return Seed(go(runSeed($10)));
    };
};
var lcgC = 0;
var lcgNext = lcgPerturb(Data_Int.toNumber(lcgC));
var eqSeed = new Data_Eq.Eq(function (v) {
    return function (v1) {
        return v === v1;
    };
});
var ensureBetween = function (min) {
    return function (max) {
        return function (n) {
            var rangeSize = max - min | 0;
            var n$prime = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(n)(rangeSize);
            var $9 = n$prime < min;
            if ($9) {
                return n$prime + max | 0;
            };
            return n$prime;
        };
    };
};
var mkSeed = function (x) {
    return ensureBetween(seedMin)(seedMax)(x);
};
var randomSeed = Data_Functor.map(Effect.functorEffect)(mkSeed)(Effect_Random.randomInt(seedMin)(seedMax));
module.exports = {
    mkSeed: mkSeed,
    runSeed: runSeed,
    lcgM: lcgM,
    lcgC: lcgC,
    lcgN: lcgN,
    lcgNext: lcgNext,
    lcgPerturb: lcgPerturb,
    randomSeed: randomSeed,
    showSeed: showSeed,
    eqSeed: eqSeed
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Eq/index.js":135,"../Data.EuclideanRing/index.js":137,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Int/index.js":167,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Effect.Random/index.js":304,"../Effect/index.js":312,"../Math/index.js":364,"../Partial.Unsafe/index.js":382,"../Prelude/index.js":385}],415:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Type_Proxy = require("../Type.Proxy/index.js");
var BProxy = (function () {
    function BProxy() {

    };
    BProxy.value = new BProxy();
    return BProxy;
})();
var IsBoolean = function (reflectBoolean) {
    this.reflectBoolean = reflectBoolean;
};
var And = {};
var Or = {};
var Not = {};
var If = {};
var reflectBoolean = function (dict) {
    return dict.reflectBoolean;
};
var orTrue = Or;
var orFalse = Or;
var or = function (dictOr) {
    return function (v) {
        return function (v1) {
            return BProxy.value;
        };
    };
};
var notTrue = Not;
var notFalse = Not;
var not = function (dictNot) {
    return function (v) {
        return BProxy.value;
    };
};
var isBooleanTrue = new IsBoolean(function (v) {
    return true;
});
var isBooleanFalse = new IsBoolean(function (v) {
    return false;
});
var reifyBoolean = function (v) {
    return function (f) {
        if (v) {
            return f(isBooleanTrue)(BProxy.value);
        };
        if (!v) {
            return f(isBooleanFalse)(BProxy.value);
        };
        throw new Error("Failed pattern match at Type.Data.Boolean (line 36, column 1 - line 36, column 83): " + [ v.constructor.name, f.constructor.name ]);
    };
};
var if_ = function (dictIf) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                return Type_Proxy["Proxy"].value;
            };
        };
    };
};
var ifTrue = If;
var ifFalse = If;
var andTrue = And;
var andFalse = And;
var and = function (dictAnd) {
    return function (v) {
        return function (v1) {
            return BProxy.value;
        };
    };
};
module.exports = {
    BProxy: BProxy,
    IsBoolean: IsBoolean,
    reflectBoolean: reflectBoolean,
    reifyBoolean: reifyBoolean,
    And: And,
    and: and,
    Or: Or,
    or: or,
    Not: Not,
    not: not,
    If: If,
    if_: if_,
    isBooleanTrue: isBooleanTrue,
    isBooleanFalse: isBooleanFalse,
    andTrue: andTrue,
    andFalse: andFalse,
    orTrue: orTrue,
    orFalse: orFalse,
    notTrue: notTrue,
    notFalse: notFalse,
    ifTrue: ifTrue,
    ifFalse: ifFalse
};

},{"../Type.Proxy/index.js":421}],416:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Ordering = require("../Data.Ordering/index.js");
var Type_Data_Boolean = require("../Type.Data.Boolean/index.js");
var OProxy = (function () {
    function OProxy() {

    };
    OProxy.value = new OProxy();
    return OProxy;
})();
var IsOrdering = function (reflectOrdering) {
    this.reflectOrdering = reflectOrdering;
};
var Append = {};
var Invert = {};
var Equals = {};
var reflectOrdering = function (dict) {
    return dict.reflectOrdering;
};
var isOrderingLT = new IsOrdering(function (v) {
    return Data_Ordering.LT.value;
});
var isOrderingGT = new IsOrdering(function (v) {
    return Data_Ordering.GT.value;
});
var isOrderingEQ = new IsOrdering(function (v) {
    return Data_Ordering.EQ.value;
});
var reifyOrdering = function (v) {
    return function (f) {
        if (v instanceof Data_Ordering.LT) {
            return f(isOrderingLT)(OProxy.value);
        };
        if (v instanceof Data_Ordering.EQ) {
            return f(isOrderingEQ)(OProxy.value);
        };
        if (v instanceof Data_Ordering.GT) {
            return f(isOrderingGT)(OProxy.value);
        };
        throw new Error("Failed pattern match at Type.Data.Ordering (line 31, column 1 - line 31, column 86): " + [ v.constructor.name, f.constructor.name ]);
    };
};
var invertOrderingLT = Invert;
var invertOrderingGT = Invert;
var invertOrderingEQ = Invert;
var invert = function (dictInvert) {
    return function (v) {
        return OProxy.value;
    };
};
var equalsLTLT = Equals;
var equalsLTGT = Equals;
var equalsLTEQ = Equals;
var equalsGTLT = Equals;
var equalsGTGT = Equals;
var equalsGTEQ = Equals;
var equalsEQLT = Equals;
var equalsEQGT = Equals;
var equalsEQEQ = Equals;
var equals = function (dictEquals) {
    return function (v) {
        return function (v1) {
            return Type_Data_Boolean.BProxy.value;
        };
    };
};
var appendOrderingLT = Append;
var appendOrderingGT = Append;
var appendOrderingEQ = Append;
var append = function (dictAppend) {
    return function (v) {
        return function (v1) {
            return OProxy.value;
        };
    };
};
module.exports = {
    OProxy: OProxy,
    IsOrdering: IsOrdering,
    reflectOrdering: reflectOrdering,
    reifyOrdering: reifyOrdering,
    Append: Append,
    append: append,
    Invert: Invert,
    invert: invert,
    Equals: Equals,
    equals: equals,
    isOrderingLT: isOrderingLT,
    isOrderingEQ: isOrderingEQ,
    isOrderingGT: isOrderingGT,
    appendOrderingLT: appendOrderingLT,
    appendOrderingEQ: appendOrderingEQ,
    appendOrderingGT: appendOrderingGT,
    invertOrderingLT: invertOrderingLT,
    invertOrderingEQ: invertOrderingEQ,
    invertOrderingGT: invertOrderingGT,
    equalsEQEQ: equalsEQEQ,
    equalsLTLT: equalsLTLT,
    equalsGTGT: equalsGTGT,
    equalsEQLT: equalsEQLT,
    equalsEQGT: equalsEQGT,
    equalsLTEQ: equalsLTEQ,
    equalsLTGT: equalsLTGT,
    equalsGTLT: equalsGTLT,
    equalsGTEQ: equalsGTEQ
};

},{"../Data.Ordering/index.js":230,"../Type.Data.Boolean/index.js":415}],417:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var RProxy = (function () {
    function RProxy() {

    };
    RProxy.value = new RProxy();
    return RProxy;
})();
module.exports = {
    RProxy: RProxy
};

},{}],418:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var RLProxy = (function () {
    function RLProxy() {

    };
    RLProxy.value = new RLProxy();
    return RLProxy;
})();
module.exports = {
    RLProxy: RLProxy
};

},{}],419:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Symbol = require("../Data.Symbol/index.js");
var Type_Data_Boolean = require("../Type.Data.Boolean/index.js");
var Type_Data_Ordering = require("../Type.Data.Ordering/index.js");
var Equals = {};
var uncons = function (dictCons) {
    return function (v) {
        return {
            head: Data_Symbol.SProxy.value,
            tail: Data_Symbol.SProxy.value
        };
    };
};
var equalsSymbol = function (dictCompare) {
    return function (dictEquals) {
        return Equals;
    };
};
var equals = function (dictEquals) {
    return function (v) {
        return function (v1) {
            return Type_Data_Boolean.BProxy.value;
        };
    };
};
var compare = function (dictCompare) {
    return function (v) {
        return function (v1) {
            return Type_Data_Ordering.OProxy.value;
        };
    };
};
var append = function (dictAppend) {
    return function (v) {
        return function (v1) {
            return Data_Symbol.SProxy.value;
        };
    };
};
module.exports = {
    append: append,
    compare: compare,
    uncons: uncons,
    Equals: Equals,
    equals: equals,
    equalsSymbol: equalsSymbol
};

},{"../Data.Symbol/index.js":274,"../Type.Data.Boolean/index.js":415,"../Type.Data.Ordering/index.js":416}],420:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var TypeEquals = function (from, to) {
    this.from = from;
    this.to = to;
};
var to = function (dict) {
    return dict.to;
};
var refl = new TypeEquals(function (a) {
    return a;
}, function (a) {
    return a;
});
var from = function (dict) {
    return dict.from;
};
module.exports = {
    TypeEquals: TypeEquals,
    to: to,
    from: from,
    refl: refl
};

},{}],421:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Proxy3 = (function () {
    function Proxy3() {

    };
    Proxy3.value = new Proxy3();
    return Proxy3;
})();
var Proxy2 = (function () {
    function Proxy2() {

    };
    Proxy2.value = new Proxy2();
    return Proxy2;
})();
var $$Proxy = (function () {
    function $$Proxy() {

    };
    $$Proxy.value = new $$Proxy();
    return $$Proxy;
})();
var showProxy3 = new Data_Show.Show(function (v) {
    return "Proxy3";
});
var showProxy2 = new Data_Show.Show(function (v) {
    return "Proxy2";
});
var showProxy = new Data_Show.Show(function (v) {
    return "Proxy";
});
var semiringProxy3 = new Data_Semiring.Semiring(function (v) {
    return function (v1) {
        return Proxy3.value;
    };
}, function (v) {
    return function (v1) {
        return Proxy3.value;
    };
}, Proxy3.value, Proxy3.value);
var semiringProxy2 = new Data_Semiring.Semiring(function (v) {
    return function (v1) {
        return Proxy2.value;
    };
}, function (v) {
    return function (v1) {
        return Proxy2.value;
    };
}, Proxy2.value, Proxy2.value);
var semiringProxy = new Data_Semiring.Semiring(function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
}, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
}, $$Proxy.value, $$Proxy.value);
var semigroupProxy3 = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return Proxy3.value;
    };
});
var semigroupProxy2 = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return Proxy2.value;
    };
});
var semigroupProxy = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
});
var ringProxy3 = new Data_Ring.Ring(function () {
    return semiringProxy3;
}, function (v) {
    return function (v1) {
        return Proxy3.value;
    };
});
var ringProxy2 = new Data_Ring.Ring(function () {
    return semiringProxy2;
}, function (v) {
    return function (v1) {
        return Proxy2.value;
    };
});
var ringProxy = new Data_Ring.Ring(function () {
    return semiringProxy;
}, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
});
var heytingAlgebraProxy3 = new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
    return function (v1) {
        return Proxy3.value;
    };
}, function (v) {
    return function (v1) {
        return Proxy3.value;
    };
}, Proxy3.value, function (v) {
    return function (v1) {
        return Proxy3.value;
    };
}, function (v) {
    return Proxy3.value;
}, Proxy3.value);
var heytingAlgebraProxy2 = new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
    return function (v1) {
        return Proxy2.value;
    };
}, function (v) {
    return function (v1) {
        return Proxy2.value;
    };
}, Proxy2.value, function (v) {
    return function (v1) {
        return Proxy2.value;
    };
}, function (v) {
    return Proxy2.value;
}, Proxy2.value);
var heytingAlgebraProxy = new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
}, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
}, $$Proxy.value, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
}, function (v) {
    return $$Proxy.value;
}, $$Proxy.value);
var functorProxy = new Data_Functor.Functor(function (f) {
    return function (m) {
        return $$Proxy.value;
    };
});
var eqProxy3 = new Data_Eq.Eq(function (x) {
    return function (y) {
        return true;
    };
});
var ordProxy3 = new Data_Ord.Ord(function () {
    return eqProxy3;
}, function (x) {
    return function (y) {
        return Data_Ordering.EQ.value;
    };
});
var eqProxy2 = new Data_Eq.Eq(function (x) {
    return function (y) {
        return true;
    };
});
var ordProxy2 = new Data_Ord.Ord(function () {
    return eqProxy2;
}, function (x) {
    return function (y) {
        return Data_Ordering.EQ.value;
    };
});
var eqProxy = new Data_Eq.Eq(function (x) {
    return function (y) {
        return true;
    };
});
var ordProxy = new Data_Ord.Ord(function () {
    return eqProxy;
}, function (x) {
    return function (y) {
        return Data_Ordering.EQ.value;
    };
});
var discardProxy3 = new Control_Bind.Discard(function (dictBind) {
    return Control_Bind.bind(dictBind);
});
var discardProxy2 = new Control_Bind.Discard(function (dictBind) {
    return Control_Bind.bind(dictBind);
});
var discardProxy = new Control_Bind.Discard(function (dictBind) {
    return Control_Bind.bind(dictBind);
});
var commutativeRingProxy3 = new Data_CommutativeRing.CommutativeRing(function () {
    return ringProxy3;
});
var commutativeRingProxy2 = new Data_CommutativeRing.CommutativeRing(function () {
    return ringProxy2;
});
var commutativeRingProxy = new Data_CommutativeRing.CommutativeRing(function () {
    return ringProxy;
});
var boundedProxy3 = new Data_Bounded.Bounded(function () {
    return ordProxy3;
}, Proxy3.value, Proxy3.value);
var boundedProxy2 = new Data_Bounded.Bounded(function () {
    return ordProxy2;
}, Proxy2.value, Proxy2.value);
var boundedProxy = new Data_Bounded.Bounded(function () {
    return ordProxy;
}, $$Proxy.value, $$Proxy.value);
var booleanAlgebraProxy3 = new Data_BooleanAlgebra.BooleanAlgebra(function () {
    return heytingAlgebraProxy3;
});
var booleanAlgebraProxy2 = new Data_BooleanAlgebra.BooleanAlgebra(function () {
    return heytingAlgebraProxy2;
});
var booleanAlgebraProxy = new Data_BooleanAlgebra.BooleanAlgebra(function () {
    return heytingAlgebraProxy;
});
var applyProxy = new Control_Apply.Apply(function () {
    return functorProxy;
}, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
});
var bindProxy = new Control_Bind.Bind(function () {
    return applyProxy;
}, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
});
var applicativeProxy = new Control_Applicative.Applicative(function () {
    return applyProxy;
}, function (v) {
    return $$Proxy.value;
});
var monadProxy = new Control_Monad.Monad(function () {
    return applicativeProxy;
}, function () {
    return bindProxy;
});
module.exports = {
    "Proxy": $$Proxy,
    Proxy2: Proxy2,
    Proxy3: Proxy3,
    eqProxy: eqProxy,
    functorProxy: functorProxy,
    ordProxy: ordProxy,
    applicativeProxy: applicativeProxy,
    applyProxy: applyProxy,
    bindProxy: bindProxy,
    booleanAlgebraProxy: booleanAlgebraProxy,
    boundedProxy: boundedProxy,
    commutativeRingProxy: commutativeRingProxy,
    discardProxy: discardProxy,
    heytingAlgebraProxy: heytingAlgebraProxy,
    monadProxy: monadProxy,
    ringProxy: ringProxy,
    semigroupProxy: semigroupProxy,
    semiringProxy: semiringProxy,
    showProxy: showProxy,
    eqProxy2: eqProxy2,
    ordProxy2: ordProxy2,
    booleanAlgebraProxy2: booleanAlgebraProxy2,
    boundedProxy2: boundedProxy2,
    commutativeRingProxy2: commutativeRingProxy2,
    discardProxy2: discardProxy2,
    heytingAlgebraProxy2: heytingAlgebraProxy2,
    ringProxy2: ringProxy2,
    semigroupProxy2: semigroupProxy2,
    semiringProxy2: semiringProxy2,
    showProxy2: showProxy2,
    eqProxy3: eqProxy3,
    ordProxy3: ordProxy3,
    booleanAlgebraProxy3: booleanAlgebraProxy3,
    boundedProxy3: boundedProxy3,
    commutativeRingProxy3: commutativeRingProxy3,
    discardProxy3: discardProxy3,
    heytingAlgebraProxy3: heytingAlgebraProxy3,
    ringProxy3: ringProxy3,
    semigroupProxy3: semigroupProxy3,
    semiringProxy3: semiringProxy3,
    showProxy3: showProxy3
};

},{"../Control.Applicative/index.js":7,"../Control.Apply/index.js":9,"../Control.Bind/index.js":13,"../Control.Monad/index.js":55,"../Data.BooleanAlgebra/index.js":111,"../Data.Bounded/index.js":113,"../Data.CommutativeRing/index.js":118,"../Data.Eq/index.js":135,"../Data.Functor/index.js":153,"../Data.HeytingAlgebra/index.js":162,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Ring/index.js":242,"../Data.Semigroup/index.js":248,"../Data.Semiring/index.js":251,"../Data.Show/index.js":254,"../Prelude/index.js":385}],422:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Type_Equality = require("../Type.Equality/index.js");
var Type_Row = require("../Type.Row/index.js");
var Homogeneous = {};
var HomogeneousRowList = {};
var homogeneousRowListNil = HomogeneousRowList;
var homogeneousRowListCons = function (dictHomogeneousRowList) {
    return function (dictTypeEquals) {
        return HomogeneousRowList;
    };
};
var homogeneous = function (dictRowToList) {
    return function (dictHomogeneousRowList) {
        return Homogeneous;
    };
};
module.exports = {
    Homogeneous: Homogeneous,
    HomogeneousRowList: HomogeneousRowList,
    homogeneous: homogeneous,
    homogeneousRowListCons: homogeneousRowListCons,
    homogeneousRowListNil: homogeneousRowListNil
};

},{"../Type.Equality/index.js":420,"../Type.Row/index.js":423}],423:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Type_Data_Boolean = require("../Type.Data.Boolean/index.js");
var Type_Data_Symbol = require("../Type.Data.Symbol/index.js");
var Type_Equality = require("../Type.Equality/index.js");
var RProxy = (function () {
    function RProxy() {

    };
    RProxy.value = new RProxy();
    return RProxy;
})();
var RLProxy = (function () {
    function RLProxy() {

    };
    RLProxy.value = new RLProxy();
    return RLProxy;
})();
var ListToRow = {};
var RowListRemove = {};
var RowListSet = {};
var RowListNub = {};
var RowListAppend = {};
var rowListSetImpl = function (dictTypeEquals) {
    return function (dictTypeEquals1) {
        return function (dictRowListRemove) {
            return RowListSet;
        };
    };
};
var rowListRemoveNil = RowListRemove;
var rowListRemoveCons = function (dictRowListRemove) {
    return function (dictEquals) {
        return function (dictIf) {
            return RowListRemove;
        };
    };
};
var rowListNubNil = RowListNub;
var rowListNubCons = function (dictTypeEquals) {
    return function (dictTypeEquals1) {
        return function (dictTypeEquals2) {
            return function (dictRowListRemove) {
                return function (dictRowListNub) {
                    return RowListNub;
                };
            };
        };
    };
};
var rowListAppendNil = function (dictTypeEquals) {
    return RowListAppend;
};
var rowListAppendCons = function (dictRowListAppend) {
    return function (dictTypeEquals) {
        return RowListAppend;
    };
};
var listToRowNil = ListToRow;
var listToCons = function (dictListToRow) {
    return function (dictCons) {
        return ListToRow;
    };
};
module.exports = {
    RProxy: RProxy,
    RLProxy: RLProxy,
    ListToRow: ListToRow,
    RowListRemove: RowListRemove,
    RowListSet: RowListSet,
    RowListNub: RowListNub,
    RowListAppend: RowListAppend,
    listToRowNil: listToRowNil,
    listToCons: listToCons,
    rowListRemoveNil: rowListRemoveNil,
    rowListRemoveCons: rowListRemoveCons,
    rowListSetImpl: rowListSetImpl,
    rowListNubNil: rowListNubNil,
    rowListNubCons: rowListNubCons,
    rowListAppendNil: rowListAppendNil,
    rowListAppendCons: rowListAppendCons
};

},{"../Type.Data.Boolean/index.js":415,"../Type.Data.Symbol/index.js":419,"../Type.Equality/index.js":420}],424:[function(require,module,exports){
"use strict";

// module Unsafe.Coerce

exports.unsafeCoerce = function (x) {
  return x;
};

},{}],425:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
module.exports = {
    unsafeCoerce: $foreign.unsafeCoerce
};

},{"./foreign.js":424}],426:[function(require,module,exports){
"use strict";

exports.reallyUnsafeRefEq = function (a) {
  return function (b) {
    return a === b;
  };
};

},{}],427:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var unsafeRefEq = $foreign.reallyUnsafeRefEq;
module.exports = {
    unsafeRefEq: unsafeRefEq,
    reallyUnsafeRefEq: $foreign.reallyUnsafeRefEq
};

},{"./foreign.js":426}],428:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Web_Event_Event = require("../Web.Event.Event/index.js");
var paste = "paste";
var cut = "cut";
var copy = "copy";
var clipboardchange = "clipboardchange";
module.exports = {
    clipboardchange: clipboardchange,
    copy: copy,
    cut: cut,
    paste: paste
};

},{"../Web.Event.Event/index.js":465}],429:[function(require,module,exports){
"use strict";

exports._clipboardData = function (e) {
  return e.clipboardData;
};

},{}],430:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Event_Event = require("../Web.Event.Event/index.js");
var Web_HTML_Event_DataTransfer = require("../Web.HTML.Event.DataTransfer/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toEvent = Unsafe_Coerce.unsafeCoerce;
var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("ClipboardEvent");
var clipboardData = function ($0) {
    return Data_Nullable.toMaybe($foreign["_clipboardData"]($0));
};
module.exports = {
    fromEvent: fromEvent,
    toEvent: toEvent,
    clipboardData: clipboardData
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.Event.Event/index.js":465,"../Web.HTML.Event.DataTransfer/index.js":477,"../Web.Internal.FFI/index.js":614,"./foreign.js":429}],431:[function(require,module,exports){
"use strict";

exports.data_ = function (t) {
  return function () {
    return t.data;
  };
};

exports.length = function (t) {
  return function () {
    return t.length;
  };
};

exports.substringData = function (offset) {
  return function (count) {
    return function (cd) {
      return function () {
        cd.substringData(offset, count);
      };
    };
  };
};

exports.appendData = function (data) {
  return function (cd) {
    return function () {
      cd.appendData(data);
    };
  };
};

exports.insertData = function (offset) {
  return function (data) {
    return function (cd) {
      return function () {
        cd.insertData(offset, data);
      };
    };
  };
};

exports.deleteData = function (offset) {
  return function (count) {
    return function (cd) {
      return function () {
        cd.deleteData(offset, count);
      };
    };
  };
};

exports.replaceData = function (offset) {
  return function (count) {
    return function (data) {
      return function (cd) {
        return function () {
          cd.replaceData(offset, count, data);
        };
      };
    };
  };
};

},{}],432:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM_ChildNode = require("../Web.DOM.ChildNode/index.js");
var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");
var Web_DOM_NonDocumentTypeChildNode = require("../Web.DOM.NonDocumentTypeChildNode/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("CharacterData");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("CharacterData");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("CharacterData");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("CharacterData");
module.exports = {
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromEventTarget: fromEventTarget,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toEventTarget: toEventTarget,
    data_: $foreign.data_,
    length: $foreign.length,
    substringData: $foreign.substringData,
    appendData: $foreign.appendData,
    insertData: $foreign.insertData,
    deleteData: $foreign.deleteData,
    replaceData: $foreign.replaceData
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.ChildNode/index.js":434,"../Web.DOM.Internal.Types/index.js":447,"../Web.DOM.NonDocumentTypeChildNode/index.js":454,"../Web.Event.EventTarget/index.js":468,"../Web.Internal.FFI/index.js":614,"./foreign.js":431}],433:[function(require,module,exports){
"use strict";

exports.remove = function (node) {
  return function () {
    return node.remove();
  };
};

},{}],434:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
module.exports = {
    remove: $foreign.remove
};

},{"../Effect/index.js":312,"../Prelude/index.js":385,"./foreign.js":433}],435:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Maybe = require("../Data.Maybe/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM_CharacterData = require("../Web.DOM.CharacterData/index.js");
var Web_DOM_ChildNode = require("../Web.DOM.ChildNode/index.js");
var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");
var Web_DOM_NonDocumentTypeChildNode = require("../Web.DOM.NonDocumentTypeChildNode/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var toCharacterData = Unsafe_Coerce.unsafeCoerce;
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("Comment");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("Comment");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("Comment");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("Comment");
var fromCharacterData = Web_Internal_FFI.unsafeReadProtoTagged("Comment");
module.exports = {
    fromCharacterData: fromCharacterData,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromEventTarget: fromEventTarget,
    toCharacterData: toCharacterData,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toEventTarget: toEventTarget
};

},{"../Data.Maybe/index.js":210,"../Unsafe.Coerce/index.js":425,"../Web.DOM.CharacterData/index.js":432,"../Web.DOM.ChildNode/index.js":434,"../Web.DOM.Internal.Types/index.js":447,"../Web.DOM.NonDocumentTypeChildNode/index.js":454,"../Web.Event.EventTarget/index.js":468,"../Web.Internal.FFI/index.js":614}],436:[function(require,module,exports){
"use strict";

exports.add = function(list) {
  return function(token) {
    return function() {
      return list.add(token);
    };
  };
};

exports.remove = function(list) {
  return function(token) {
    return function() {
      return list.remove(token);
    };
  };
};

exports.contains = function(list) {
  return function(token) {
    return function() {
      return list.contains(token);
    };
  };
};

exports.toggle = function(list) {
  return function(token) {
    return function() {
      return list.toggle(token);
    };
  };
};

exports.toggleForce = function(list) {
  return function(token) {
    return function(force) {
      return function() {
        return list.toggle(token, force);
      };
    };
  };
};

exports._item = function(list) {
  return function(index) {
    return function() {
      return list.item(index);
    };
  };
};

},{}],437:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var item = function (index) {
    return function ($0) {
        return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_item"](index)($0));
    };
};
module.exports = {
    item: item,
    add: $foreign.add,
    contains: $foreign.contains,
    remove: $foreign.remove,
    toggle: $foreign.toggle,
    toggleForce: $foreign.toggleForce
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect/index.js":312,"../Prelude/index.js":385,"./foreign.js":436}],438:[function(require,module,exports){
"use strict";

var getEffProp = function (name) {
  return function (doc) {
    return function () {
      return doc[name];
    };
  };
};

exports.url = getEffProp("URL");
exports.documentURI = getEffProp("documentURI");
exports.origin = getEffProp("origin");
exports.compatMode = getEffProp("compatMode");
exports.characterSet = getEffProp("characterSet");
exports.contentType = getEffProp("contentType");

exports._doctype = getEffProp("doctype");
exports._documentElement = getEffProp("documentElement");

exports.getElementsByTagName = function (localName) {
  return function (doc) {
    return function () {
      return doc.getElementsByTagName(localName);
    };
  };
};

exports._getElementsByTagNameNS = function (ns) {
  return function (localName) {
    return function (doc) {
      return function () {
        return doc.getElementsByTagNameNS(ns, localName);
      };
    };
  };
};

exports.getElementsByClassName = function (classNames) {
  return function (doc) {
    return function () {
      return doc.getElementsByClassName(classNames);
    };
  };
};

exports.createElement = function (localName) {
  return function (doc) {
    return function () {
      return doc.createElement(localName);
    };
  };
};

exports._createElementNS = function (ns) {
  return function (qualifiedName) {
    return function (doc) {
      return function () {
        return doc.createElementNS(ns, qualifiedName);
      };
    };
  };
};

exports.createDocumentFragment = function (doc) {
  return function () {
    return doc.createDocumentFragment();
  };
};

exports.createTextNode = function (data) {
  return function (doc) {
    return function () {
      return doc.createTextNode(data);
    };
  };
};

exports.createComment = function (data) {
  return function (doc) {
    return function () {
      return doc.createComment(data);
    };
  };
};

exports.createProcessingInstruction = function (target) {
  return function (data) {
    return function (doc) {
      return function () {
        return doc.createProcessingInstruction(target, data);
      };
    };
  };
};

exports.importNode = function (node) {
  return function (deep) {
    return function (doc) {
      return function () {
        return doc.importNode(node, deep);
      };
    };
  };
};

exports.adoptNode = function (node) {
  return function (doc) {
    return function () {
      return doc.adoptNode(node);
    };
  };
};

},{}],439:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM_Comment = require("../Web.DOM.Comment/index.js");
var Web_DOM_DocumentFragment = require("../Web.DOM.DocumentFragment/index.js");
var Web_DOM_DocumentType = require("../Web.DOM.DocumentType/index.js");
var Web_DOM_Element = require("../Web.DOM.Element/index.js");
var Web_DOM_HTMLCollection = require("../Web.DOM.HTMLCollection/index.js");
var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");
var Web_DOM_NonElementParentNode = require("../Web.DOM.NonElementParentNode/index.js");
var Web_DOM_ParentNode = require("../Web.DOM.ParentNode/index.js");
var Web_DOM_ProcessingInstruction = require("../Web.DOM.ProcessingInstruction/index.js");
var Web_DOM_Text = require("../Web.DOM.Text/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var getElementsByTagNameNS = function ($0) {
    return $foreign["_getElementsByTagNameNS"](Data_Nullable.toNullable($0));
};
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("Document");
var fromNonElementParentNode = Web_Internal_FFI.unsafeReadProtoTagged("Document");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("Document");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("Document");
var documentElement = function ($1) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_documentElement"]($1));
};
var doctype = function ($2) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_doctype"]($2));
};
var createElementNS = function ($3) {
    return $foreign["_createElementNS"](Data_Nullable.toNullable($3));
};
module.exports = {
    fromNode: fromNode,
    fromParentNode: fromParentNode,
    fromNonElementParentNode: fromNonElementParentNode,
    fromEventTarget: fromEventTarget,
    toNode: toNode,
    toParentNode: toParentNode,
    toNonElementParentNode: toNonElementParentNode,
    toEventTarget: toEventTarget,
    doctype: doctype,
    documentElement: documentElement,
    getElementsByTagNameNS: getElementsByTagNameNS,
    createElementNS: createElementNS,
    url: $foreign.url,
    documentURI: $foreign.documentURI,
    origin: $foreign.origin,
    compatMode: $foreign.compatMode,
    characterSet: $foreign.characterSet,
    contentType: $foreign.contentType,
    getElementsByTagName: $foreign.getElementsByTagName,
    getElementsByClassName: $foreign.getElementsByClassName,
    createElement: $foreign.createElement,
    createDocumentFragment: $foreign.createDocumentFragment,
    createTextNode: $foreign.createTextNode,
    createComment: $foreign.createComment,
    createProcessingInstruction: $foreign.createProcessingInstruction,
    importNode: $foreign.importNode,
    adoptNode: $foreign.adoptNode
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.Comment/index.js":435,"../Web.DOM.DocumentFragment/index.js":440,"../Web.DOM.DocumentType/index.js":442,"../Web.DOM.Element/index.js":444,"../Web.DOM.HTMLCollection/index.js":446,"../Web.DOM.Internal.Types/index.js":447,"../Web.DOM.NonElementParentNode/index.js":456,"../Web.DOM.ParentNode/index.js":458,"../Web.DOM.ProcessingInstruction/index.js":460,"../Web.DOM.Text/index.js":462,"../Web.Event.EventTarget/index.js":468,"../Web.Internal.FFI/index.js":614,"./foreign.js":438}],440:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Maybe = require("../Data.Maybe/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM_ChildNode = require("../Web.DOM.ChildNode/index.js");
var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");
var Web_DOM_NonElementParentNode = require("../Web.DOM.NonElementParentNode/index.js");
var Web_DOM_ParentNode = require("../Web.DOM.ParentNode/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("DocumentFragment");
var fromNonElementParentNode = Web_Internal_FFI.unsafeReadProtoTagged("DocumentFragment");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("DocumentFragment");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("DocumentFragment");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("DocumentFragment");
module.exports = {
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromParentNode: fromParentNode,
    fromNonElementParentNode: fromNonElementParentNode,
    fromEventTarget: fromEventTarget,
    toNode: toNode,
    toChildNode: toChildNode,
    toParentNode: toParentNode,
    toNonElementParentNode: toNonElementParentNode,
    toEventTarget: toEventTarget
};

},{"../Data.Maybe/index.js":210,"../Unsafe.Coerce/index.js":425,"../Web.DOM.ChildNode/index.js":434,"../Web.DOM.Internal.Types/index.js":447,"../Web.DOM.NonElementParentNode/index.js":456,"../Web.DOM.ParentNode/index.js":458,"../Web.Event.EventTarget/index.js":468,"../Web.Internal.FFI/index.js":614}],441:[function(require,module,exports){
"use strict";

var getProp = function (name) {
  return function (doctype) {
    return doctype[name];
  };
};

exports.name = getProp("name");
exports.publicId = getProp("publicId");
exports.systemId = getProp("systemId");

},{}],442:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM_ChildNode = require("../Web.DOM.ChildNode/index.js");
var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("DocumentType");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("DocumentType");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("DocumentType");
module.exports = {
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromEventTarget: fromEventTarget,
    toNode: toNode,
    toChildNode: toChildNode,
    toEventTarget: toEventTarget,
    name: $foreign.name,
    publicId: $foreign.publicId,
    systemId: $foreign.systemId
};

},{"../Data.Maybe/index.js":210,"../Unsafe.Coerce/index.js":425,"../Web.DOM.ChildNode/index.js":434,"../Web.DOM.Internal.Types/index.js":447,"../Web.Event.EventTarget/index.js":468,"../Web.Internal.FFI/index.js":614,"./foreign.js":441}],443:[function(require,module,exports){
"use strict";

var getProp = function (name) {
  return function (doctype) {
    return doctype[name];
  };
};

exports._namespaceURI = getProp("namespaceURI");
exports._prefix = getProp("prefix");
exports.localName = getProp("localName");
exports.tagName = getProp("tagName");

exports.id = function (node) {
  return function () {
    return node.id;
  };
};

exports.setId = function (id) {
  return function (node) {
    return function () {
      node.id = id;
      return {};
    };
  };
};

exports.className = function (node) {
  return function () {
    return node.className;
  };
};

exports.setClassName = function (className) {
  return function (node) {
    return function () {
      node.className = className;
      return {};
    };
  };
};

exports.getElementsByTagName = function (localName) {
  return function (doc) {
    return function () {
      return doc.getElementsByTagName(localName);
    };
  };
};

exports._getElementsByTagNameNS = function (ns) {
  return function (localName) {
    return function (doc) {
      return function () {
        return doc.getElementsByTagNameNS(ns, localName);
      };
    };
  };
};

exports.getElementsByClassName = function (classNames) {
  return function (doc) {
    return function () {
      return doc.getElementsByClassName(classNames);
    };
  };
};

exports.setAttribute = function (name) {
  return function (value) {
    return function (element) {
      return function () {
        element.setAttribute(name, value);
        return {};
      };
    };
  };
};

exports._getAttribute = function (name) {
  return function (element) {
    return function () {
      return element.getAttribute(name);
    };
  };
};

exports.hasAttribute = function(name) {
  return function (element) {
    return element.hasAttribute(name);
  };
};

exports.removeAttribute = function (name) {
  return function (element) {
    return function () {
      element.removeAttribute(name);
      return {};
    };
  };
};

// - CSSOM ---------------------------------------------------------------------

exports.scrollTop = function (node) {
  return function () {
    return node.scrollTop;
  };
};

exports.setScrollTop = function (scrollTop) {
  return function (node) {
    return function () {
      node.scrollTop = scrollTop;
      return {};
    };
  };
};

exports.scrollLeft = function (node) {
  return function () {
    return node.scrollLeft;
  };
};

exports.setScrollLeft = function (scrollLeft) {
  return function (node) {
    return function () {
      node.scrollLeft = scrollLeft;
      return {};
    };
  };
};

exports.scrollWidth = function (el) {
  return function () {
    return el.scrollWidth;
  };
};

exports.scrollHeight = function (el) {
  return function () {
    return el.scrollHeight;
  };
};

exports.clientTop = function (el) {
  return function () {
    return el.clientTop;
  };
};

exports.clientLeft = function (el) {
  return function () {
    return el.clientLeft;
  };
};

exports.clientWidth = function (el) {
  return function () {
    return el.clientWidth;
  };
};

exports.clientHeight = function (el) {
  return function () {
    return el.clientHeight;
  };
};

},{}],444:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM_ChildNode = require("../Web.DOM.ChildNode/index.js");
var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");
var Web_DOM_NonDocumentTypeChildNode = require("../Web.DOM.NonDocumentTypeChildNode/index.js");
var Web_DOM_ParentNode = require("../Web.DOM.ParentNode/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var prefix = function ($0) {
    return Data_Nullable.toMaybe($foreign["_prefix"]($0));
};
var namespaceURI = function ($1) {
    return Data_Nullable.toMaybe($foreign["_namespaceURI"]($1));
};
var getElementsByTagNameNS = function ($2) {
    return $foreign["_getElementsByTagNameNS"](Data_Nullable.toNullable($2));
};
var getAttribute = function (attr) {
    return function ($3) {
        return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_getAttribute"](attr)($3));
    };
};
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("Element");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
module.exports = {
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    namespaceURI: namespaceURI,
    prefix: prefix,
    getElementsByTagNameNS: getElementsByTagNameNS,
    getAttribute: getAttribute,
    localName: $foreign.localName,
    tagName: $foreign.tagName,
    id: $foreign.id,
    setId: $foreign.setId,
    className: $foreign.className,
    setClassName: $foreign.setClassName,
    getElementsByTagName: $foreign.getElementsByTagName,
    getElementsByClassName: $foreign.getElementsByClassName,
    setAttribute: $foreign.setAttribute,
    hasAttribute: $foreign.hasAttribute,
    removeAttribute: $foreign.removeAttribute,
    scrollTop: $foreign.scrollTop,
    setScrollTop: $foreign.setScrollTop,
    scrollLeft: $foreign.scrollLeft,
    setScrollLeft: $foreign.setScrollLeft,
    scrollWidth: $foreign.scrollWidth,
    scrollHeight: $foreign.scrollHeight,
    clientTop: $foreign.clientTop,
    clientLeft: $foreign.clientLeft,
    clientWidth: $foreign.clientWidth,
    clientHeight: $foreign.clientHeight
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.ChildNode/index.js":434,"../Web.DOM.Internal.Types/index.js":447,"../Web.DOM.NonDocumentTypeChildNode/index.js":454,"../Web.DOM.ParentNode/index.js":458,"../Web.Event.EventTarget/index.js":468,"../Web.Internal.FFI/index.js":614,"./foreign.js":443}],445:[function(require,module,exports){
"use strict";

exports.length = function (list) {
  return function () {
    return list.length;
  };
};

exports.toArray = function (list) {
  return function () {
    return [].slice.call(list);
  };
};

exports._item = function (index) {
  return function (list) {
    return function () {
      return list.item(index);
    };
  };
};

exports._namedItem = function (name) {
  return function (list) {
    return function () {
      return list.namedItem(name);
    };
  };
};

},{}],446:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");
var namedItem = function (id) {
    return function ($0) {
        return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_namedItem"](id)($0));
    };
};
var item = function (i) {
    return function ($1) {
        return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_item"](i)($1));
    };
};
module.exports = {
    item: item,
    namedItem: namedItem,
    length: $foreign.length,
    toArray: $foreign.toArray
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect/index.js":312,"../Prelude/index.js":385,"../Web.DOM.Internal.Types/index.js":447,"./foreign.js":445}],447:[function(require,module,exports){
arguments[4][219][0].apply(exports,arguments)
},{"dup":219}],448:[function(require,module,exports){
"use strict";

var getEffProp = function (name) {
  return function (node) {
    return function () {
      return node[name];
    };
  };
};

exports.nodeTypeIndex = function (node) {
  return node.nodeType;
};

exports.nodeName = function (node) {
  return node.nodeName;
};

exports.baseURI = getEffProp("baseURI");

exports._ownerDocument = getEffProp("ownerDocument");

exports._parentNode = getEffProp("parentNode");

exports._parentElement = getEffProp("parentElement");

exports.hasChildNodes = function (node) {
  return function () {
    return node.hasChildNodes();
  };
};

exports.childNodes = getEffProp("childNodes");

exports._firstChild = getEffProp("firstChild");

exports._lastChild = getEffProp("lastChild");

exports._previousSibling = getEffProp("previousSibling");

exports._nextSibling = getEffProp("nextSibling");

exports.nodeValue = getEffProp("nodeValue");

exports.setNodeValue = function (value) {
  return function (node) {
    return function () {
      node.nodeValue = value;
      return {};
    };
  };
};

exports.textContent = getEffProp("textContent");

exports.setTextContent = function (value) {
  return function (node) {
    return function () {
      node.textContent = value;
      return {};
    };
  };
};

exports.normalize = function (node) {
  return function () {
    node.normalize();
    return {};
  };
};

exports.clone = function (node) {
  return function () {
    return node.cloneNode(false);
  };
};

exports.deepClone = function (node) {
  return function () {
    return node.cloneNode(true);
  };
};

exports.isEqualNode = function (node1) {
  return function (node2) {
    return function () {
      return node1.isEqualNode(node2);
    };
  };
};

exports.compareDocumentPositionBits = function (node1) {
  return function (node2) {
    return function () {
      return node1.compareDocumentPosition(node2);
    };
  };
};

exports.contains = function (node1) {
  return function (node2) {
    return function () {
      return node1.contains(node2);
    };
  };
};

exports._lookupPrefix = function (prefix) {
  return function (node) {
    return function () {
      return node.lookupPrefix(prefix);
    };
  };
};

exports._lookupNamespaceURI = function (ns) {
  return function (node) {
    return function () {
      return node.lookupNamespaceURI(ns);
    };
  };
};

exports.isDefaultNamespace = function (ns) {
  return function (node) {
    return function () {
      return node.isDefaultNamespace(ns);
    };
  };
};

exports.insertBefore = function (node1) {
  return function (node2) {
    return function (parent) {
      return function () {
        return parent.insertBefore(node1, node2);
      };
    };
  };
};

exports.appendChild = function (node) {
  return function (parent) {
    return function () {
      return parent.appendChild(node);
    };
  };
};

exports.replaceChild = function (newChild) {
  return function (oldChild) {
    return function (parent) {
      return function () {
        return parent.replaceChild(newChild, oldChild);
      };
    };
  };
};

exports.removeChild = function (node) {
  return function (parent) {
    return function () {
      return parent.removeChild(node);
    };
  };
};

},{}],449:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM_Document = require("../Web.DOM.Document/index.js");
var Web_DOM_Element = require("../Web.DOM.Element/index.js");
var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");
var Web_DOM_NodeType = require("../Web.DOM.NodeType/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var previousSibling = function ($1) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_previousSibling"]($1));
};
var parentNode = function ($2) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_parentNode"]($2));
};
var parentElement = function ($3) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_parentElement"]($3));
};
var ownerDocument = function ($4) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_ownerDocument"]($4));
};
var nodeType = function (dictPartial) {
    return function ($5) {
        return Data_Maybe.fromJust(dictPartial)(Data_Enum.toEnum(Web_DOM_NodeType.boundedEnumNodeType)($foreign.nodeTypeIndex($5)));
    };
};
var nextSibling = function ($6) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_nextSibling"]($6));
};
var lookupPrefix = function (p) {
    return function ($7) {
        return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_lookupPrefix"](p)($7));
    };
};
var lookupNamespaceURI = function (ns) {
    return function ($8) {
        return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_lookupNamespaceURI"](ns)($8));
    };
};
var lastChild = function ($9) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_lastChild"]($9));
};
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("Node");
var firstChild = function ($10) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_firstChild"]($10));
};
module.exports = {
    fromEventTarget: fromEventTarget,
    toEventTarget: toEventTarget,
    nodeType: nodeType,
    ownerDocument: ownerDocument,
    parentNode: parentNode,
    parentElement: parentElement,
    firstChild: firstChild,
    lastChild: lastChild,
    previousSibling: previousSibling,
    nextSibling: nextSibling,
    lookupPrefix: lookupPrefix,
    lookupNamespaceURI: lookupNamespaceURI,
    nodeTypeIndex: $foreign.nodeTypeIndex,
    nodeName: $foreign.nodeName,
    baseURI: $foreign.baseURI,
    hasChildNodes: $foreign.hasChildNodes,
    childNodes: $foreign.childNodes,
    nodeValue: $foreign.nodeValue,
    setNodeValue: $foreign.setNodeValue,
    textContent: $foreign.textContent,
    setTextContent: $foreign.setTextContent,
    normalize: $foreign.normalize,
    clone: $foreign.clone,
    deepClone: $foreign.deepClone,
    isEqualNode: $foreign.isEqualNode,
    compareDocumentPositionBits: $foreign.compareDocumentPositionBits,
    contains: $foreign.contains,
    isDefaultNamespace: $foreign.isDefaultNamespace,
    insertBefore: $foreign.insertBefore,
    appendChild: $foreign.appendChild,
    replaceChild: $foreign.replaceChild,
    removeChild: $foreign.removeChild
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Enum/index.js":133,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.Document/index.js":439,"../Web.DOM.Element/index.js":444,"../Web.DOM.Internal.Types/index.js":447,"../Web.DOM.NodeType/index.js":452,"../Web.Event.EventTarget/index.js":468,"../Web.Internal.FFI/index.js":614,"./foreign.js":448}],450:[function(require,module,exports){
"use strict";

exports.length = function (list) {
  return function () {
    return list.length;
  };
};

exports.toArray = function (list) {
  return function () {
    return [].slice.call(list);
  };
};

exports._item = function (index) {
  return function (list) {
    return function () {
      return list.item(index);
    };
  };
};

},{}],451:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");
var item = function (i) {
    return function ($0) {
        return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_item"](i)($0));
    };
};
module.exports = {
    item: item,
    length: $foreign.length,
    toArray: $foreign.toArray
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect/index.js":312,"../Prelude/index.js":385,"../Web.DOM.Internal.Types/index.js":447,"./foreign.js":450}],452:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Prelude = require("../Prelude/index.js");
var ElementNode = (function () {
    function ElementNode() {

    };
    ElementNode.value = new ElementNode();
    return ElementNode;
})();
var AttributeNode = (function () {
    function AttributeNode() {

    };
    AttributeNode.value = new AttributeNode();
    return AttributeNode;
})();
var TextNode = (function () {
    function TextNode() {

    };
    TextNode.value = new TextNode();
    return TextNode;
})();
var CDATASectionNode = (function () {
    function CDATASectionNode() {

    };
    CDATASectionNode.value = new CDATASectionNode();
    return CDATASectionNode;
})();
var EntityReferenceNode = (function () {
    function EntityReferenceNode() {

    };
    EntityReferenceNode.value = new EntityReferenceNode();
    return EntityReferenceNode;
})();
var EntityNode = (function () {
    function EntityNode() {

    };
    EntityNode.value = new EntityNode();
    return EntityNode;
})();
var ProcessingInstructionNode = (function () {
    function ProcessingInstructionNode() {

    };
    ProcessingInstructionNode.value = new ProcessingInstructionNode();
    return ProcessingInstructionNode;
})();
var CommentNode = (function () {
    function CommentNode() {

    };
    CommentNode.value = new CommentNode();
    return CommentNode;
})();
var DocumentNode = (function () {
    function DocumentNode() {

    };
    DocumentNode.value = new DocumentNode();
    return DocumentNode;
})();
var DocumentTypeNode = (function () {
    function DocumentTypeNode() {

    };
    DocumentTypeNode.value = new DocumentTypeNode();
    return DocumentTypeNode;
})();
var DocumentFragmentNode = (function () {
    function DocumentFragmentNode() {

    };
    DocumentFragmentNode.value = new DocumentFragmentNode();
    return DocumentFragmentNode;
})();
var NotationNode = (function () {
    function NotationNode() {

    };
    NotationNode.value = new NotationNode();
    return NotationNode;
})();
var toEnumNodeType = function (v) {
    if (v === 1) {
        return new Data_Maybe.Just(ElementNode.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(AttributeNode.value);
    };
    if (v === 3) {
        return new Data_Maybe.Just(TextNode.value);
    };
    if (v === 4) {
        return new Data_Maybe.Just(CDATASectionNode.value);
    };
    if (v === 5) {
        return new Data_Maybe.Just(EntityReferenceNode.value);
    };
    if (v === 6) {
        return new Data_Maybe.Just(EntityNode.value);
    };
    if (v === 7) {
        return new Data_Maybe.Just(ProcessingInstructionNode.value);
    };
    if (v === 8) {
        return new Data_Maybe.Just(CommentNode.value);
    };
    if (v === 9) {
        return new Data_Maybe.Just(DocumentNode.value);
    };
    if (v === 10) {
        return new Data_Maybe.Just(DocumentTypeNode.value);
    };
    if (v === 11) {
        return new Data_Maybe.Just(DocumentFragmentNode.value);
    };
    if (v === 12) {
        return new Data_Maybe.Just(NotationNode.value);
    };
    return Data_Maybe.Nothing.value;
};
var fromEnumNodeType = function (v) {
    if (v instanceof ElementNode) {
        return 1;
    };
    if (v instanceof AttributeNode) {
        return 2;
    };
    if (v instanceof TextNode) {
        return 3;
    };
    if (v instanceof CDATASectionNode) {
        return 4;
    };
    if (v instanceof EntityReferenceNode) {
        return 5;
    };
    if (v instanceof EntityNode) {
        return 6;
    };
    if (v instanceof ProcessingInstructionNode) {
        return 7;
    };
    if (v instanceof CommentNode) {
        return 8;
    };
    if (v instanceof DocumentNode) {
        return 9;
    };
    if (v instanceof DocumentTypeNode) {
        return 10;
    };
    if (v instanceof DocumentFragmentNode) {
        return 11;
    };
    if (v instanceof NotationNode) {
        return 12;
    };
    throw new Error("Failed pattern match at Web.DOM.NodeType (line 54, column 1 - line 54, column 36): " + [ v.constructor.name ]);
};
var eqNodeType = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof ElementNode && y instanceof ElementNode) {
            return true;
        };
        if (x instanceof AttributeNode && y instanceof AttributeNode) {
            return true;
        };
        if (x instanceof TextNode && y instanceof TextNode) {
            return true;
        };
        if (x instanceof CDATASectionNode && y instanceof CDATASectionNode) {
            return true;
        };
        if (x instanceof EntityReferenceNode && y instanceof EntityReferenceNode) {
            return true;
        };
        if (x instanceof EntityNode && y instanceof EntityNode) {
            return true;
        };
        if (x instanceof ProcessingInstructionNode && y instanceof ProcessingInstructionNode) {
            return true;
        };
        if (x instanceof CommentNode && y instanceof CommentNode) {
            return true;
        };
        if (x instanceof DocumentNode && y instanceof DocumentNode) {
            return true;
        };
        if (x instanceof DocumentTypeNode && y instanceof DocumentTypeNode) {
            return true;
        };
        if (x instanceof DocumentFragmentNode && y instanceof DocumentFragmentNode) {
            return true;
        };
        if (x instanceof NotationNode && y instanceof NotationNode) {
            return true;
        };
        return false;
    };
});
var ordNodeType = new Data_Ord.Ord(function () {
    return eqNodeType;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordInt)(fromEnumNodeType(x))(fromEnumNodeType(y));
    };
});
var enumNodeType = new Data_Enum.Enum(function () {
    return ordNodeType;
}, Data_Enum.defaultPred(toEnumNodeType)(fromEnumNodeType), Data_Enum.defaultSucc(toEnumNodeType)(fromEnumNodeType));
var boundedNodeType = new Data_Bounded.Bounded(function () {
    return ordNodeType;
}, ElementNode.value, NotationNode.value);
var boundedEnumNodeType = new Data_Enum.BoundedEnum(function () {
    return boundedNodeType;
}, function () {
    return enumNodeType;
}, 12, fromEnumNodeType, toEnumNodeType);
module.exports = {
    ElementNode: ElementNode,
    AttributeNode: AttributeNode,
    TextNode: TextNode,
    CDATASectionNode: CDATASectionNode,
    EntityReferenceNode: EntityReferenceNode,
    EntityNode: EntityNode,
    ProcessingInstructionNode: ProcessingInstructionNode,
    CommentNode: CommentNode,
    DocumentNode: DocumentNode,
    DocumentTypeNode: DocumentTypeNode,
    DocumentFragmentNode: DocumentFragmentNode,
    NotationNode: NotationNode,
    eqNodeType: eqNodeType,
    ordNodeType: ordNodeType,
    boundedNodeType: boundedNodeType,
    enumNodeType: enumNodeType,
    boundedEnumNodeType: boundedEnumNodeType
};

},{"../Data.Bounded/index.js":113,"../Data.Enum/index.js":133,"../Data.Eq/index.js":135,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Prelude/index.js":385}],453:[function(require,module,exports){
"use strict";

exports._previousElementSibling = function (node) {
  return function () {
    return node.previousElementSibling;
  };
};

exports._nextElementSibling = function (node) {
  return function () {
    return node.nextElementSibling;
  };
};

},{}],454:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");
var previousElementSibling = function ($0) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_previousElementSibling"]($0));
};
var nextElementSibling = function ($1) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_nextElementSibling"]($1));
};
module.exports = {
    previousElementSibling: previousElementSibling,
    nextElementSibling: nextElementSibling
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect/index.js":312,"../Prelude/index.js":385,"../Web.DOM.Internal.Types/index.js":447,"./foreign.js":453}],455:[function(require,module,exports){
"use strict";

exports._getElementById = function (id) {
  return function (node) {
    return function () {
      return node.getElementById(id);
    };
  };
};

},{}],456:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Web_DOM_Element = require("../Web.DOM.Element/index.js");
var getElementById = function (eid) {
    return function ($0) {
        return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_getElementById"](eid)($0));
    };
};
module.exports = {
    getElementById: getElementById
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect/index.js":312,"../Prelude/index.js":385,"../Web.DOM.Element/index.js":444,"./foreign.js":455}],457:[function(require,module,exports){
"use strict";

var getEffProp = function (name) {
  return function (node) {
    return function () {
      return node[name];
    };
  };
};

exports.children = getEffProp("children");

exports._firstElementChild = getEffProp("firstElementChild");

exports._lastElementChild = getEffProp("lastElementChild");

exports.childElementCount = getEffProp("childElementCount");

exports._querySelector = function (selector) {
  return function (node) {
    return function () {
      return node.querySelector(selector);
    };
  };
};

exports.querySelectorAll = function (selector) {
  return function (node) {
    return function () {
      return node.querySelectorAll(selector);
    };
  };
};

},{}],458:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Web_DOM_HTMLCollection = require("../Web.DOM.HTMLCollection/index.js");
var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");
var Web_DOM_NodeList = require("../Web.DOM.NodeList/index.js");
var QuerySelector = function (x) {
    return x;
};
var querySelector = function (qs) {
    return function ($3) {
        return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_querySelector"](qs)($3));
    };
};
var ordQuerySelector = Data_Ord.ordString;
var newtypeQuerySelector = new Data_Newtype.Newtype(function (n) {
    return n;
}, QuerySelector);
var lastElementChild = function ($4) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_lastElementChild"]($4));
};
var firstElementChild = function ($5) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_firstElementChild"]($5));
};
var eqQuerySelector = Data_Eq.eqString;
module.exports = {
    firstElementChild: firstElementChild,
    lastElementChild: lastElementChild,
    QuerySelector: QuerySelector,
    querySelector: querySelector,
    eqQuerySelector: eqQuerySelector,
    ordQuerySelector: ordQuerySelector,
    newtypeQuerySelector: newtypeQuerySelector,
    children: $foreign.children,
    childElementCount: $foreign.childElementCount,
    querySelectorAll: $foreign.querySelectorAll
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Eq/index.js":135,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Newtype/index.js":220,"../Data.Nullable/index.js":223,"../Data.Ord/index.js":229,"../Effect/index.js":312,"../Prelude/index.js":385,"../Web.DOM.HTMLCollection/index.js":446,"../Web.DOM.Internal.Types/index.js":447,"../Web.DOM.NodeList/index.js":451,"./foreign.js":457}],459:[function(require,module,exports){
"use strict";

exports.target = function (pi) {
  return function () {
    return pi.target;
  };
};

},{}],460:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM_CharacterData = require("../Web.DOM.CharacterData/index.js");
var Web_DOM_ChildNode = require("../Web.DOM.ChildNode/index.js");
var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");
var Web_DOM_NonDocumentTypeChildNode = require("../Web.DOM.NonDocumentTypeChildNode/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var toCharacterData = Unsafe_Coerce.unsafeCoerce;
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("ProcessingInstruction");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("ProcessingInstruction");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("ProcessingInstruction");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("ProcessingInstruction");
var fromCharacterData = Web_Internal_FFI.unsafeReadProtoTagged("ProcessingInstruction");
module.exports = {
    fromCharacterData: fromCharacterData,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromEventTarget: fromEventTarget,
    toNode: toNode,
    toCharacterData: toCharacterData,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toEventTarget: toEventTarget,
    target: $foreign.target
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Unsafe.Coerce/index.js":425,"../Web.DOM.CharacterData/index.js":432,"../Web.DOM.ChildNode/index.js":434,"../Web.DOM.Internal.Types/index.js":447,"../Web.DOM.NonDocumentTypeChildNode/index.js":454,"../Web.Event.EventTarget/index.js":468,"../Web.Internal.FFI/index.js":614,"./foreign.js":459}],461:[function(require,module,exports){
"use strict";

exports.splitText = function (offset) {
  return function (t) {
    return function () {
      return t.splitText(offset);
    };
  };
};

exports.wholeText = function (t) {
  return function () {
    return t.wholeText;
  };
};

},{}],462:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM_CharacterData = require("../Web.DOM.CharacterData/index.js");
var Web_DOM_ChildNode = require("../Web.DOM.ChildNode/index.js");
var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");
var Web_DOM_NonDocumentTypeChildNode = require("../Web.DOM.NonDocumentTypeChildNode/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var toCharacterData = Unsafe_Coerce.unsafeCoerce;
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("Text");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("Text");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("Text");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("Text");
var fromCharacterData = Web_Internal_FFI.unsafeReadProtoTagged("Text");
module.exports = {
    fromCharacterData: fromCharacterData,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromEventTarget: fromEventTarget,
    toNode: toNode,
    toCharacterData: toCharacterData,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toEventTarget: toEventTarget,
    splitText: $foreign.splitText,
    wholeText: $foreign.wholeText
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Unsafe.Coerce/index.js":425,"../Web.DOM.CharacterData/index.js":432,"../Web.DOM.ChildNode/index.js":434,"../Web.DOM.Internal.Types/index.js":447,"../Web.DOM.NonDocumentTypeChildNode/index.js":454,"../Web.Event.EventTarget/index.js":468,"../Web.Internal.FFI/index.js":614,"./foreign.js":461}],463:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Web_DOM_CharacterData = require("../Web.DOM.CharacterData/index.js");
var Web_DOM_ChildNode = require("../Web.DOM.ChildNode/index.js");
var Web_DOM_Comment = require("../Web.DOM.Comment/index.js");
var Web_DOM_DOMTokenList = require("../Web.DOM.DOMTokenList/index.js");
var Web_DOM_Document = require("../Web.DOM.Document/index.js");
var Web_DOM_DocumentFragment = require("../Web.DOM.DocumentFragment/index.js");
var Web_DOM_DocumentType = require("../Web.DOM.DocumentType/index.js");
var Web_DOM_Element = require("../Web.DOM.Element/index.js");
var Web_DOM_HTMLCollection = require("../Web.DOM.HTMLCollection/index.js");
var Web_DOM_Node = require("../Web.DOM.Node/index.js");
var Web_DOM_NodeList = require("../Web.DOM.NodeList/index.js");
var Web_DOM_NodeType = require("../Web.DOM.NodeType/index.js");
var Web_DOM_NonDocumentTypeChildNode = require("../Web.DOM.NonDocumentTypeChildNode/index.js");
var Web_DOM_NonElementParentNode = require("../Web.DOM.NonElementParentNode/index.js");
var Web_DOM_ParentNode = require("../Web.DOM.ParentNode/index.js");
var Web_DOM_ProcessingInstruction = require("../Web.DOM.ProcessingInstruction/index.js");
var Web_DOM_Text = require("../Web.DOM.Text/index.js");
module.exports = {};

},{"../Web.DOM.CharacterData/index.js":432,"../Web.DOM.ChildNode/index.js":434,"../Web.DOM.Comment/index.js":435,"../Web.DOM.DOMTokenList/index.js":437,"../Web.DOM.Document/index.js":439,"../Web.DOM.DocumentFragment/index.js":440,"../Web.DOM.DocumentType/index.js":442,"../Web.DOM.Element/index.js":444,"../Web.DOM.HTMLCollection/index.js":446,"../Web.DOM.Node/index.js":449,"../Web.DOM.NodeList/index.js":451,"../Web.DOM.NodeType/index.js":452,"../Web.DOM.NonDocumentTypeChildNode/index.js":454,"../Web.DOM.NonElementParentNode/index.js":456,"../Web.DOM.ParentNode/index.js":458,"../Web.DOM.ProcessingInstruction/index.js":460,"../Web.DOM.Text/index.js":462}],464:[function(require,module,exports){
"use strict";

exports.bubbles = function (e) {
  return e.bubbles;
};

exports.cancelable = function (e) {
  return e.cancelable;
};

exports._currentTarget = function (e) {
  return e.currentTarget;
};

exports.defaultPrevented = function (e) {
  return e.defaultPrevented;
};

exports.eventPhaseIndex = function (e) {
  return e.eventPhase;
};

exports._target = function (e) {
  return e.target;
};

exports.timeStamp = function (e) {
  return e.timeStamp;
};

exports.type_ = function (e) {
  return e.type;
};

exports.preventDefault = function (e) {
  return function () {
    return e.preventDefault();
  };
};

exports.stopImmediatePropagation = function (e) {
  return function () {
    return e.stopImmediatePropagation();
  };
};

exports.stopPropagation = function (e) {
  return function () {
    return e.stopPropagation();
  };
};

},{}],465:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_DateTime_Instant = require("../Data.DateTime.Instant/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Web_Event_EventPhase = require("../Web.Event.EventPhase/index.js");
var Web_Event_Internal_Types = require("../Web.Event.Internal.Types/index.js");
var EventType = function (x) {
    return x;
};
var target = function ($4) {
    return Data_Nullable.toMaybe($foreign["_target"]($4));
};
var ordEventType = Data_Ord.ordString;
var newtypeEventType = new Data_Newtype.Newtype(function (n) {
    return n;
}, EventType);
var eventPhase = function (dictPartial) {
    return function ($5) {
        return Data_Maybe.fromJust(dictPartial)(Data_Enum.toEnum(Web_Event_EventPhase.boundedEnumEventPhase)($foreign.eventPhaseIndex($5)));
    };
};
var eqEventType = Data_Eq.eqString;
var currentTarget = function ($6) {
    return Data_Nullable.toMaybe($foreign["_currentTarget"]($6));
};
module.exports = {
    EventType: EventType,
    target: target,
    currentTarget: currentTarget,
    eventPhase: eventPhase,
    newtypeEventType: newtypeEventType,
    eqEventType: eqEventType,
    ordEventType: ordEventType,
    type_: $foreign.type_,
    stopPropagation: $foreign.stopPropagation,
    stopImmediatePropagation: $foreign.stopImmediatePropagation,
    bubbles: $foreign.bubbles,
    cancelable: $foreign.cancelable,
    preventDefault: $foreign.preventDefault,
    defaultPrevented: $foreign.defaultPrevented,
    timeStamp: $foreign.timeStamp
};

},{"../Control.Semigroupoid/index.js":61,"../Data.DateTime.Instant/index.js":125,"../Data.Enum/index.js":133,"../Data.Eq/index.js":135,"../Data.Maybe/index.js":210,"../Data.Newtype/index.js":220,"../Data.Nullable/index.js":223,"../Data.Ord/index.js":229,"../Effect/index.js":312,"../Prelude/index.js":385,"../Web.Event.EventPhase/index.js":466,"../Web.Event.Internal.Types/index.js":469,"./foreign.js":464}],466:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Prelude = require("../Prelude/index.js");
var None = (function () {
    function None() {

    };
    None.value = new None();
    return None;
})();
var Capturing = (function () {
    function Capturing() {

    };
    Capturing.value = new Capturing();
    return Capturing;
})();
var AtTarget = (function () {
    function AtTarget() {

    };
    AtTarget.value = new AtTarget();
    return AtTarget;
})();
var Bubbling = (function () {
    function Bubbling() {

    };
    Bubbling.value = new Bubbling();
    return Bubbling;
})();
var toEnumEventPhase = function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(None.value);
    };
    if (v === 1) {
        return new Data_Maybe.Just(Capturing.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(AtTarget.value);
    };
    if (v === 3) {
        return new Data_Maybe.Just(Bubbling.value);
    };
    return Data_Maybe.Nothing.value;
};
var fromEnumEventPhase = function (v) {
    if (v instanceof None) {
        return 0;
    };
    if (v instanceof Capturing) {
        return 1;
    };
    if (v instanceof AtTarget) {
        return 2;
    };
    if (v instanceof Bubbling) {
        return 3;
    };
    throw new Error("Failed pattern match at Web.Event.EventPhase (line 40, column 3 - line 44, column 17): " + [ v.constructor.name ]);
};
var eqEventPhase = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof None && y instanceof None) {
            return true;
        };
        if (x instanceof Capturing && y instanceof Capturing) {
            return true;
        };
        if (x instanceof AtTarget && y instanceof AtTarget) {
            return true;
        };
        if (x instanceof Bubbling && y instanceof Bubbling) {
            return true;
        };
        return false;
    };
});
var ordEventPhase = new Data_Ord.Ord(function () {
    return eqEventPhase;
}, function (x) {
    return function (y) {
        if (x instanceof None && y instanceof None) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof None) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof None) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Capturing && y instanceof Capturing) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Capturing) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Capturing) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof AtTarget && y instanceof AtTarget) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof AtTarget) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof AtTarget) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Bubbling && y instanceof Bubbling) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Web.Event.EventPhase (line 14, column 8 - line 14, column 48): " + [ x.constructor.name, y.constructor.name ]);
    };
});
var enumEventPhase = new Data_Enum.Enum(function () {
    return ordEventPhase;
}, Data_Enum.defaultPred(toEnumEventPhase)(fromEnumEventPhase), Data_Enum.defaultSucc(toEnumEventPhase)(fromEnumEventPhase));
var boundedEventPhase = new Data_Bounded.Bounded(function () {
    return ordEventPhase;
}, None.value, Bubbling.value);
var boundedEnumEventPhase = new Data_Enum.BoundedEnum(function () {
    return boundedEventPhase;
}, function () {
    return enumEventPhase;
}, 4, fromEnumEventPhase, toEnumEventPhase);
module.exports = {
    None: None,
    Capturing: Capturing,
    AtTarget: AtTarget,
    Bubbling: Bubbling,
    toEnumEventPhase: toEnumEventPhase,
    fromEnumEventPhase: fromEnumEventPhase,
    eqEventPhase: eqEventPhase,
    ordEventPhase: ordEventPhase,
    boundedEventPhase: boundedEventPhase,
    enumEventPhase: enumEventPhase,
    boundedEnumEventPhase: boundedEnumEventPhase
};

},{"../Data.Bounded/index.js":113,"../Data.Enum/index.js":133,"../Data.Eq/index.js":135,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Prelude/index.js":385}],467:[function(require,module,exports){
"use strict";

exports.eventListener = function (fn) {
  return function () {
    return function (event) {
      return fn(event)();
    };
  };
};

exports.addEventListener = function (type) {
  return function (listener) {
    return function (useCapture) {
      return function (target) {
        return function () {
          return target.addEventListener(type, listener, useCapture);
        };
      };
    };
  };
};

exports.removeEventListener = function (type) {
  return function (listener) {
    return function (useCapture) {
      return function (target) {
        return function () {
          return target.removeEventListener(type, listener, useCapture);
        };
      };
    };
  };
};

exports.dispatchEvent = function (event) {
  return function (target) {
    return function () {
      return target.dispatchEvent(event);
    };
  };
};

},{}],468:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Web_Event_Event = require("../Web.Event.Event/index.js");
var Web_Event_Internal_Types = require("../Web.Event.Internal.Types/index.js");
module.exports = {
    eventListener: $foreign.eventListener,
    addEventListener: $foreign.addEventListener,
    removeEventListener: $foreign.removeEventListener,
    dispatchEvent: $foreign.dispatchEvent
};

},{"../Effect/index.js":312,"../Prelude/index.js":385,"../Web.Event.Event/index.js":465,"../Web.Event.Internal.Types/index.js":469,"./foreign.js":467}],469:[function(require,module,exports){
arguments[4][219][0].apply(exports,arguments)
},{"dup":219}],470:[function(require,module,exports){
"use strict";

exports.typeImpl = function (blob) { return blob.type; };

exports.blobImpl = function (args) {
  return function (mediaType) {
    return new Blob(args, {type: mediaType});
  };
};

exports.size = function (blob) { return blob.size; };

exports.slice = function (contentType) {
  return function (start) {
    return function (end) {
      return function (blob) {
        return blob.slice(start, end, contentType);
      };
    };
  };
};

},{}],471:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_MediaType = require("../Data.MediaType/index.js");
var $$Math = require("../Math/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var StartByte = function (x) {
    return x;
};
var EndByte = function (x) {
    return x;
};
var type_ = function (blob) {
    var blobType = $foreign.typeImpl(blob);
    var $0 = blobType === "";
    if ($0) {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just(blobType);
};
var slice$prime = $foreign.slice("");
var idxFromNumber = function ($1) {
    return $$Math.round($1);
};
var idxFromInt = function ($2) {
    return Data_Int.toNumber($2);
};
var fromString = function (str) {
    return function (ct) {
        return $foreign.blobImpl([ str ])(ct);
    };
};
var fromArray = function (args) {
    return function (opts) {
        return $foreign.blobImpl(args)(opts);
    };
};
module.exports = {
    fromString: fromString,
    fromArray: fromArray,
    type_: type_,
    StartByte: StartByte,
    EndByte: EndByte,
    idxFromInt: idxFromInt,
    idxFromNumber: idxFromNumber,
    "slice'": slice$prime,
    size: $foreign.size,
    slice: $foreign.slice
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Eq/index.js":135,"../Data.Int/index.js":167,"../Data.Maybe/index.js":210,"../Data.MediaType/index.js":211,"../Math/index.js":364,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"./foreign.js":470}],472:[function(require,module,exports){
"use strict";

exports.name = function (file) { return file.name; };

},{}],473:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_MediaType = require("../Data.MediaType/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_File_Blob = require("../Web.File.Blob/index.js");
var type_ = function ($0) {
    return Web_File_Blob.type_($0);
};
var toBlob = Unsafe_Coerce.unsafeCoerce;
var size = function ($1) {
    return Web_File_Blob.size($1);
};
module.exports = {
    toBlob: toBlob,
    type_: type_,
    size: size,
    name: $foreign.name
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Maybe/index.js":210,"../Data.MediaType/index.js":211,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.File.Blob/index.js":471,"./foreign.js":472}],474:[function(require,module,exports){
"use strict";

exports.length = function (fileList) { return fileList.length; };

exports._item = function (index) {
  return function (fileList) {
    return fileList.item(index);
  };
};

},{}],475:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Prelude = require("../Prelude/index.js");
var Web_File_File = require("../Web.File.File/index.js");
var item = function (i) {
    return function ($0) {
        return Data_Nullable.toMaybe($foreign["_item"](i)($0));
    };
};
module.exports = {
    item: item,
    length: $foreign.length
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Prelude/index.js":385,"../Web.File.File/index.js":473,"./foreign.js":474}],476:[function(require,module,exports){
"use strict";

exports._files = function (dataTransfer) {
  return dataTransfer.files;
};

exports.types = function (dataTransfer) {
  return dataTransfer.types;
};

exports._getData = function (format) {
  return function (dataTransfer) {
    return function () {
      return dataTransfer.getData(format);
    };
  };
};

exports._setData = function (format) {
  return function (data) {
    return function (dataTransfer) {
      return function () {
        return dataTransfer.setData(format, data);
      };
    };
  };
};

exports._dropEffect = function (dataTransfer) {
  return function () {
    return dataTransfer.dropEffect;
  };
};

exports._setDropEffect = function (e) {
  return function (dataTransfer) {
    return function () {
      dataTransfer.dropEffect = e;
    };
  };
};

},{}],477:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_MediaType = require("../Data.MediaType/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Web_File_FileList = require("../Web.File.FileList/index.js");
var Copy = (function () {
    function Copy() {

    };
    Copy.value = new Copy();
    return Copy;
})();
var Link = (function () {
    function Link() {

    };
    Link.value = new Link();
    return Link;
})();
var Move = (function () {
    function Move() {

    };
    Move.value = new Move();
    return Move;
})();
var None = (function () {
    function None() {

    };
    None.value = new None();
    return None;
})();
var setDropEffect = function (de) {
    return $foreign["_setDropEffect"]((function () {
        if (de instanceof Copy) {
            return "copy";
        };
        if (de instanceof Link) {
            return "link";
        };
        if (de instanceof Move) {
            return "move";
        };
        if (de instanceof None) {
            return "none";
        };
        throw new Error("Failed pattern match at Web.HTML.Event.DataTransfer (line 81, column 35 - line 85, column 11): " + [ de.constructor.name ]);
    })());
};
var setData = function (v) {
    return function (dat) {
        return function (dt) {
            return $foreign["_setData"](v)(dat)(dt);
        };
    };
};
var getData = function (v) {
    return function (dt) {
        return $foreign["_getData"](v)(dt);
    };
};
var files = Data_Functor.map(Data_Functor.functorFn)(Data_Nullable.toMaybe)($foreign["_files"]);
var eqDropEffect = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Copy && y instanceof Copy) {
            return true;
        };
        if (x instanceof Link && y instanceof Link) {
            return true;
        };
        if (x instanceof Move && y instanceof Move) {
            return true;
        };
        if (x instanceof None && y instanceof None) {
            return true;
        };
        return false;
    };
});
var ordDropEffect = new Data_Ord.Ord(function () {
    return eqDropEffect;
}, function (x) {
    return function (y) {
        if (x instanceof Copy && y instanceof Copy) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Copy) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Copy) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Link && y instanceof Link) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Link) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Link) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Move && y instanceof Move) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Move) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Move) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof None && y instanceof None) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Web.HTML.Event.DataTransfer (line 65, column 8 - line 65, column 48): " + [ x.constructor.name, y.constructor.name ]);
    };
});
var dropEffect = function (dt) {
    return Data_Functor.mapFlipped(Effect.functorEffect)($foreign["_dropEffect"](dt))(function (v) {
        if (v === "copy") {
            return Copy.value;
        };
        if (v === "link") {
            return Link.value;
        };
        if (v === "move") {
            return Move.value;
        };
        if (v === "none") {
            return None.value;
        };
        return None.value;
    });
};
module.exports = {
    files: files,
    getData: getData,
    setData: setData,
    Copy: Copy,
    Link: Link,
    Move: Move,
    None: None,
    dropEffect: dropEffect,
    setDropEffect: setDropEffect,
    eqDropEffect: eqDropEffect,
    ordDropEffect: ordDropEffect,
    types: $foreign.types
};

},{"../Data.Eq/index.js":135,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.MediaType/index.js":211,"../Data.Nullable/index.js":223,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Effect/index.js":312,"../Prelude/index.js":385,"../Web.File.FileList/index.js":475,"./foreign.js":476}],478:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Web_Event_Event = require("../Web.Event.Event/index.js");
var drop = "drop";
var dragstart = "dragstart";
var dragover = "dragover";
var dragleave = "dragleave";
var dragexit = "dragexit";
var dragenter = "dragenter";
var dragend = "dragend";
var drag = "drag";
module.exports = {
    dragstart: dragstart,
    drag: drag,
    dragenter: dragenter,
    dragexit: dragexit,
    dragleave: dragleave,
    dragover: dragover,
    drop: drop,
    dragend: dragend
};

},{"../Web.Event.Event/index.js":465}],479:[function(require,module,exports){
"use strict";

exports.dataTransfer = function (e) {
  return e.dataTransfer;
};

},{}],480:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Event_Event = require("../Web.Event.Event/index.js");
var Web_HTML_Event_DataTransfer = require("../Web.HTML.Event.DataTransfer/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toEvent = Unsafe_Coerce.unsafeCoerce;
var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("DragEvent");
module.exports = {
    fromEvent: fromEvent,
    toEvent: toEvent,
    dataTransfer: $foreign.dataTransfer
};

},{"../Data.Maybe/index.js":210,"../Unsafe.Coerce/index.js":425,"../Web.Event.Event/index.js":465,"../Web.HTML.Event.DataTransfer/index.js":477,"../Web.Internal.FFI/index.js":614,"./foreign.js":479}],481:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Web_Event_Event = require("../Web.Event.Event/index.js");
var unload = "unload";
var toggle = "toggle";
var submit = "submit";
var storage = "storage";
var select = "select";
var reset = "reset";
var readystatechange = "readystatechange";
var progress = "progress";
var paste = "paste";
var online = "online";
var offline = "offline";
var message = "message";
var loadstart = "loadstart";
var loadend = "loadend";
var load = "load";
var languagechange = "languagechange";
var invalid = "invalid";
var input = "input";
var focus = "focus";
var error = "error";
var domcontentloaded = "DOMContentLoaded";
var cut = "cut";
var copy = "copy";
var close = "close";
var click = "click";
var change = "change";
var cancel = "cancel";
var blur = "blur";
var beforescriptexecute = "beforescriptexecute";
var beforeprint = "beforeprint";
var afterscriptexecute = "afterscriptexecute";
var afterprint = "afterprint";
var abort = "abort";
module.exports = {
    abort: abort,
    afterprint: afterprint,
    afterscriptexecute: afterscriptexecute,
    beforeprint: beforeprint,
    beforescriptexecute: beforescriptexecute,
    blur: blur,
    cancel: cancel,
    change: change,
    click: click,
    close: close,
    copy: copy,
    cut: cut,
    domcontentloaded: domcontentloaded,
    error: error,
    focus: focus,
    input: input,
    invalid: invalid,
    languagechange: languagechange,
    load: load,
    loadend: loadend,
    loadstart: loadstart,
    message: message,
    offline: offline,
    online: online,
    paste: paste,
    progress: progress,
    readystatechange: readystatechange,
    reset: reset,
    select: select,
    storage: storage,
    submit: submit,
    toggle: toggle,
    unload: unload
};

},{"../Web.Event.Event/index.js":465}],482:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Web_Event_Event = require("../Web.Event.Event/index.js");
var hashchange = "hashchange";
module.exports = {
    hashchange: hashchange
};

},{"../Web.Event.Event/index.js":465}],483:[function(require,module,exports){
"use strict";

exports.target = function (a) {
  return function () {
    return a.target;
  };
};

exports.setTarget = function (target) {
  return function (a) {
    return function () {
      a.target = target;
    };
  };
};

// ----------------------------------------------------------------------------

exports.download = function (a) {
  return function () {
    return a.download;
  };
};

exports.setDownload = function (download) {
  return function (a) {
    return function () {
      a.download = download;
    };
  };
};

// ----------------------------------------------------------------------------

exports.rel = function (a) {
  return function () {
    return a.rel;
  };
};

exports.setRel = function (rel) {
  return function (a) {
    return function () {
      a.rel = rel;
    };
  };
};

// ----------------------------------------------------------------------------

exports.rev = function (a) {
  return function () {
    return a.rev;
  };
};

exports.setRev = function (rev) {
  return function (a) {
    return function () {
      a.rev = rev;
    };
  };
};

// ----------------------------------------------------------------------------

exports.relList = function (a) {
  return function () {
    return a.relList;
  };
};

// ----------------------------------------------------------------------------

exports.hreflang = function (a) {
  return function () {
    return a.hreflang;
  };
};

exports.setHreflang = function (hreflang) {
  return function (a) {
    return function () {
      a.hreflang = hreflang;
    };
  };
};

// ----------------------------------------------------------------------------

exports.type_ = function (a) {
  return function () {
    return a.type;
  };
};

exports.setType = function (type) {
  return function (a) {
    return function () {
      a.type = type;
    };
  };
};

// ----------------------------------------------------------------------------

exports.text = function (a) {
  return function () {
    return a.text;
  };
};

exports.setText = function (text) {
  return function (a) {
    return function () {
      a.text = text;
    };
  };
};

},{}],484:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_DOM_DOMTokenList = require("../Web.DOM.DOMTokenList/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    target: $foreign.target,
    setTarget: $foreign.setTarget,
    download: $foreign.download,
    setDownload: $foreign.setDownload,
    rel: $foreign.rel,
    setRel: $foreign.setRel,
    rev: $foreign.rev,
    setRev: $foreign.setRev,
    relList: $foreign.relList,
    hreflang: $foreign.hreflang,
    setHreflang: $foreign.setHreflang,
    type_: $foreign.type_,
    setType: $foreign.setType,
    text: $foreign.text,
    setText: $foreign.setText
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.DOMTokenList/index.js":437,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":483}],485:[function(require,module,exports){
"use strict";

exports.alt = function (area) {
  return function () {
    return area.alt;
  };
};

exports.setAlt = function (alt) {
  return function (area) {
    return function () {
      area.alt = alt;
    };
  };
};

// ----------------------------------------------------------------------------

exports.coords = function (area) {
  return function () {
    return area.coords;
  };
};

exports.setCoords = function (coords) {
  return function (area) {
    return function () {
      area.coords = coords;
    };
  };
};

// ----------------------------------------------------------------------------

exports.shape = function (area) {
  return function () {
    return area.shape;
  };
};

exports.setShape = function (shape) {
  return function (area) {
    return function () {
      area.shape = shape;
    };
  };
};

// ----------------------------------------------------------------------------

exports.target = function (area) {
  return function () {
    return area.target;
  };
};

exports.setTarget = function (target) {
  return function (area) {
    return function () {
      area.target = target;
    };
  };
};

// ----------------------------------------------------------------------------

exports.download = function (area) {
  return function () {
    return area.download;
  };
};

exports.setDownload = function (download) {
  return function (area) {
    return function () {
      area.download = download;
    };
  };
};

// ----------------------------------------------------------------------------

exports.rel = function (area) {
  return function () {
    return area.rel;
  };
};

exports.setRel = function (rel) {
  return function (area) {
    return function () {
      area.rel = rel;
    };
  };
};

// ----------------------------------------------------------------------------

exports.relList = function (area) {
  return function () {
    return area.relList;
  };
};

// ----------------------------------------------------------------------------

exports.hreflang = function (area) {
  return function () {
    return area.hreflang;
  };
};

exports.setHreflang = function (hreflang) {
  return function (area) {
    return function () {
      area.hreflang = hreflang;
    };
  };
};

// ----------------------------------------------------------------------------

exports.type_ = function (area) {
  return function () {
    return area.type;
  };
};

exports.setType = function (type) {
  return function (area) {
    return function () {
      area.type = type;
    };
  };
};

},{}],486:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_DOM_DOMTokenList = require("../Web.DOM.DOMTokenList/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    alt: $foreign.alt,
    setAlt: $foreign.setAlt,
    coords: $foreign.coords,
    setCoords: $foreign.setCoords,
    shape: $foreign.shape,
    setShape: $foreign.setShape,
    target: $foreign.target,
    setTarget: $foreign.setTarget,
    download: $foreign.download,
    setDownload: $foreign.setDownload,
    rel: $foreign.rel,
    setRel: $foreign.setRel,
    relList: $foreign.relList,
    hreflang: $foreign.hreflang,
    setHreflang: $foreign.setHreflang,
    type_: $foreign.type_,
    setType: $foreign.setType
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.DOMTokenList/index.js":437,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":485}],487:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Maybe = require("../Data.Maybe/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_HTMLMediaElement = require("../Web.HTML.HTMLMediaElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLMediaElement = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromHTMLMediaElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
module.exports = {
    fromHTMLMediaElement: fromHTMLMediaElement,
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLMediaElement: toHTMLMediaElement,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Data.Maybe/index.js":210,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.HTMLMediaElement/index.js":538,"../Web.Internal.FFI/index.js":614}],488:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Maybe = require("../Data.Maybe/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Data.Maybe/index.js":210,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614}],489:[function(require,module,exports){
"use strict";

exports.href = function (base) {
  return function () {
    return base.href;
  };
};

exports.setHref = function (href) {
  return function (base) {
    return function () {
      base.href = href;
    };
  };
};

// ----------------------------------------------------------------------------

exports.target = function (base) {
  return function () {
    return base.target;
  };
};

exports.setTarget = function (target) {
  return function (base) {
    return function () {
      base.target = target;
    };
  };
};

},{}],490:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    href: $foreign.href,
    setHref: $foreign.setHref,
    target: $foreign.target,
    setTarget: $foreign.setTarget
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":489}],491:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Maybe = require("../Data.Maybe/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Data.Maybe/index.js":210,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614}],492:[function(require,module,exports){
"use strict";

exports.autofocus = function (button) {
  return function () {
    return button.autofocus;
  };
};

exports.setAutofocus = function (autofocus) {
  return function (button) {
    return function () {
      button.autofocus = autofocus;
    };
  };
};

// ----------------------------------------------------------------------------

exports.disabled = function (button) {
  return function () {
    return button.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (button) {
    return function () {
      button.disabled = disabled;
    };
  };
};

// ----------------------------------------------------------------------------

exports._form = function (button) {
  return function () {
    return button.form;
  };
};

// ----------------------------------------------------------------------------

exports.formAction = function (button) {
  return function () {
    return button.formAction;
  };
};

exports.setFormAction = function (formAction) {
  return function (button) {
    return function () {
      button.formAction = formAction;
    };
  };
};

// ----------------------------------------------------------------------------

exports.formEnctype = function (button) {
  return function () {
    return button.formEnctype;
  };
};

exports.setFormEnctype = function (formEnctype) {
  return function (button) {
    return function () {
      button.formEnctype = formEnctype;
    };
  };
};

// ----------------------------------------------------------------------------

exports.formMethod = function (button) {
  return function () {
    return button.formMethod;
  };
};

exports.setFormMethod = function (formMethod) {
  return function (button) {
    return function () {
      button.formMethod = formMethod;
    };
  };
};

// ----------------------------------------------------------------------------

exports.formNoValidate = function (button) {
  return function () {
    return button.formNoValidate;
  };
};

exports.setFormNoValidate = function (formNoValidate) {
  return function (button) {
    return function () {
      button.formNoValidate = formNoValidate;
    };
  };
};

// ----------------------------------------------------------------------------

exports.formTarget = function (button) {
  return function () {
    return button.formTarget;
  };
};

exports.setFormTarget = function (formTarget) {
  return function (button) {
    return function () {
      button.formTarget = formTarget;
    };
  };
};

// ----------------------------------------------------------------------------

exports.name = function (button) {
  return function () {
    return button.name;
  };
};

exports.setName = function (name) {
  return function (button) {
    return function () {
      button.name = name;
    };
  };
};

// ----------------------------------------------------------------------------

exports.type_ = function (button) {
  return function () {
    return button.type;
  };
};

exports.setType = function (type) {
  return function (button) {
    return function () {
      button.type = type;
    };
  };
};

// ----------------------------------------------------------------------------

exports.value = function (button) {
  return function () {
    return button.value;
  };
};

exports.setValue = function (value) {
  return function (button) {
    return function () {
      button.value = value;
    };
  };
};

// ----------------------------------------------------------------------------

exports.willValidate = function (button) {
  return function () {
    return button.willValidate;
  };
};

// ----------------------------------------------------------------------------

exports.validity = function (button) {
  return function () {
    return button.validity;
  };
};

// ----------------------------------------------------------------------------

exports.validationMessage = function (button) {
  return function () {
    return button.validationMessage;
  };
};

// ----------------------------------------------------------------------------

exports.checkValidity = function (button) {
  return function () {
    return button.checkValidity;
  };
};

// ----------------------------------------------------------------------------

exports.setCustomValidity = function (value) {
  return function (button) {
    return function () {
      button.setCustomValidity(value);
    };
  };
};

// ----------------------------------------------------------------------------

exports.labels = function (button) {
  return function () {
    return button.labels;
  };
};

},{}],493:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_DOM_NodeList = require("../Web.DOM.NodeList/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");
var Web_HTML_ValidityState = require("../Web.HTML.ValidityState/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var form = function ($0) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_form"]($0));
};
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    form: form,
    autofocus: $foreign.autofocus,
    setAutofocus: $foreign.setAutofocus,
    disabled: $foreign.disabled,
    setDisabled: $foreign.setDisabled,
    formAction: $foreign.formAction,
    setFormAction: $foreign.setFormAction,
    formEnctype: $foreign.formEnctype,
    setFormEnctype: $foreign.setFormEnctype,
    formMethod: $foreign.formMethod,
    setFormMethod: $foreign.setFormMethod,
    formNoValidate: $foreign.formNoValidate,
    setFormNoValidate: $foreign.setFormNoValidate,
    formTarget: $foreign.formTarget,
    setFormTarget: $foreign.setFormTarget,
    name: $foreign.name,
    setName: $foreign.setName,
    type_: $foreign.type_,
    setType: $foreign.setType,
    value: $foreign.value,
    setValue: $foreign.setValue,
    willValidate: $foreign.willValidate,
    validity: $foreign.validity,
    validationMessage: $foreign.validationMessage,
    checkValidity: $foreign.checkValidity,
    setCustomValidity: $foreign.setCustomValidity,
    labels: $foreign.labels
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.NodeList/index.js":451,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.HTMLFormElement/index.js":512,"../Web.HTML.ValidityState/index.js":608,"../Web.Internal.FFI/index.js":614,"./foreign.js":492}],494:[function(require,module,exports){
"use strict";

exports.width = function (canvas) {
  return function () {
    return canvas.width;
  };
};

exports.setWidth = function (width) {
  return function (canvas) {
    return function () {
      canvas.width = width;
    };
  };
};

// ----------------------------------------------------------------------------

exports.height = function (canvas) {
  return function () {
    return canvas.height;
  };
};

exports.setHeight = function (height) {
  return function (canvas) {
    return function () {
      canvas.height = height;
    };
  };
};

},{}],495:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    width: $foreign.width,
    setWidth: $foreign.setWidth,
    height: $foreign.height,
    setHeight: $foreign.setHeight
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":494}],496:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Maybe = require("../Data.Maybe/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Data.Maybe/index.js":210,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614}],497:[function(require,module,exports){
"use strict";

exports.value = function (data) {
  return function () {
    return data.value;
  };
};

exports.setValue = function (value) {
  return function (data) {
    return function () {
      data.value = value;
    };
  };
};

},{}],498:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    value: $foreign.value,
    setValue: $foreign.setValue
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":497}],499:[function(require,module,exports){
"use strict";

exports.options = function (dle) {
  return function () {
    return dle.options;
  };
};

},{}],500:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_DOM_HTMLCollection = require("../Web.DOM.HTMLCollection/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    options: $foreign.options
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Unsafe.Coerce/index.js":425,"../Web.DOM.HTMLCollection/index.js":446,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":499}],501:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Maybe = require("../Data.Maybe/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Data.Maybe/index.js":210,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614}],502:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Loading = (function () {
    function Loading() {

    };
    Loading.value = new Loading();
    return Loading;
})();
var Interactive = (function () {
    function Interactive() {

    };
    Interactive.value = new Interactive();
    return Interactive;
})();
var Complete = (function () {
    function Complete() {

    };
    Complete.value = new Complete();
    return Complete;
})();
var showReadyState = new Data_Show.Show(function (v) {
    if (v instanceof Loading) {
        return "Loading";
    };
    if (v instanceof Interactive) {
        return "Interactive";
    };
    if (v instanceof Complete) {
        return "Complete";
    };
    throw new Error("Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 15, column 10 - line 20, column 1): " + [ v.constructor.name ]);
});
var print = function (v) {
    if (v instanceof Loading) {
        return "loading";
    };
    if (v instanceof Interactive) {
        return "interactive";
    };
    if (v instanceof Complete) {
        return "complete";
    };
    throw new Error("Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 21, column 9 - line 26, column 1): " + [ v.constructor.name ]);
};
var parse = function (v) {
    if (v === "loading") {
        return new Data_Maybe.Just(Loading.value);
    };
    if (v === "interactive") {
        return new Data_Maybe.Just(Interactive.value);
    };
    if (v === "complete") {
        return new Data_Maybe.Just(Complete.value);
    };
    return Data_Maybe.Nothing.value;
};
var eqReadyState = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Loading && y instanceof Loading) {
            return true;
        };
        if (x instanceof Interactive && y instanceof Interactive) {
            return true;
        };
        if (x instanceof Complete && y instanceof Complete) {
            return true;
        };
        return false;
    };
});
var ordReadyState = new Data_Ord.Ord(function () {
    return eqReadyState;
}, function (x) {
    return function (y) {
        if (x instanceof Loading && y instanceof Loading) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Loading) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Loading) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Interactive && y instanceof Interactive) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Interactive) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Interactive) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Complete && y instanceof Complete) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 12, column 8 - line 12, column 48): " + [ x.constructor.name, y.constructor.name ]);
    };
});
module.exports = {
    Loading: Loading,
    Interactive: Interactive,
    Complete: Complete,
    print: print,
    parse: parse,
    eqReadyState: eqReadyState,
    ordReadyState: ordReadyState,
    showReadyState: showReadyState
};

},{"../Data.Eq/index.js":135,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Show/index.js":254,"../Prelude/index.js":385}],503:[function(require,module,exports){
"use strict";

exports._body = function (doc) {
  return function () {
    return doc.body;
  };
};

exports._readyState = function (doc) {
  return function () {
    return doc.readyState;
  };
};

exports._activeElement = function (doc) {
  return function () {
    return doc.activeElement;
  };
};

exports._currentScript = function (doc) {
  return function () {
    return doc.currentScript;
  };
};

exports.referrer = function (doc) {
  return function () {
    return doc.referrer;
  };
};

exports.title = function (doc) {
  return function () {
    return doc.title;
  };
};

exports.setTitle = function (title) {
  return function (doc) {
    return function () {
      doc.title = title;
      return {};
    };
  };
};
},{}],504:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM_Document = require("../Web.DOM.Document/index.js");
var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");
var Web_DOM_NonElementParentNode = require("../Web.DOM.NonElementParentNode/index.js");
var Web_DOM_ParentNode = require("../Web.DOM.ParentNode/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLDocument_ReadyState = require("../Web.HTML.HTMLDocument.ReadyState/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_HTMLScriptElement = require("../Web.HTML.HTMLScriptElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toDocument = Unsafe_Coerce.unsafeCoerce;
var readyState = function ($0) {
    return Data_Functor.map(Effect.functorEffect)(function ($1) {
        return Data_Maybe.fromMaybe(Web_HTML_HTMLDocument_ReadyState.Loading.value)(Web_HTML_HTMLDocument_ReadyState.parse($1));
    })($foreign["_readyState"]($0));
};
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromNonElementParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromDocument = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var currentScript = function ($2) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_currentScript"]($2));
};
var body = function ($3) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_body"]($3));
};
var activeElement = function ($4) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_activeElement"]($4));
};
module.exports = {
    fromDocument: fromDocument,
    fromNode: fromNode,
    fromParentNode: fromParentNode,
    fromNonElementParentNode: fromNonElementParentNode,
    fromEventTarget: fromEventTarget,
    toDocument: toDocument,
    toNode: toNode,
    toParentNode: toParentNode,
    toNonElementParentNode: toNonElementParentNode,
    toEventTarget: toEventTarget,
    body: body,
    readyState: readyState,
    activeElement: activeElement,
    currentScript: currentScript,
    referrer: $foreign.referrer,
    title: $foreign.title,
    setTitle: $foreign.setTitle
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.Document/index.js":439,"../Web.DOM.Internal.Types/index.js":447,"../Web.DOM.NonElementParentNode/index.js":456,"../Web.DOM.ParentNode/index.js":458,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLDocument.ReadyState/index.js":502,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.HTMLScriptElement/index.js":564,"../Web.Internal.FFI/index.js":614,"./foreign.js":503}],505:[function(require,module,exports){
"use strict";

exports._read = function (nothing, just, value) {
  var tag = Object.prototype.toString.call(value);
  if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
    return just(value);
  } else {
    return nothing;
  }
};

// ----------------------------------------------------------------------------

exports.title = function (elt) {
  return function () {
    return elt.title;
  };
};

exports.setTitle = function (title) {
  return function (elt) {
    return function () {
      elt.title = title;
      return {};
    };
  };
};

// ----------------------------------------------------------------------------

exports.lang = function (elt) {
  return function () {
    return elt.lang;
  };
};

exports.setLang = function (lang) {
  return function (elt) {
    return function () {
      elt.lang = lang;
      return {};
    };
  };
};

// ----------------------------------------------------------------------------

exports.dir = function (elt) {
  return function () {
    return elt.dir;
  };
};

exports.setDir = function (dir) {
  return function (elt) {
    return function () {
      elt.dir = dir;
      return {};
    };
  };
};

// ----------------------------------------------------------------------------

exports.className = function (elt) {
  return function () {
    return elt.className;
  };
};

exports.setClassName = function (className) {
  return function (elt) {
    return function () {
      elt.className = className;
      return {};
    };
  };
};

exports.classList = function (element) {
  return function () {
    return element.classList;
  };
};

// ----------------------------------------------------------------------------

exports.hidden = function (elt) {
  return function () {
    return elt.hidden;
  };
};

exports.setHidden = function (hidden) {
  return function (elt) {
    return function () {
      elt.hidden = hidden;
      return {};
    };
  };
};

// ----------------------------------------------------------------------------

exports.tabIndex = function (elt) {
  return function () {
    return elt.tabIndex;
  };
};

exports.setTabIndex = function (tabIndex) {
  return function (elt) {
    return function () {
      elt.tabIndex = tabIndex;
      return {};
    };
  };
};

// ----------------------------------------------------------------------------

exports.draggable = function (elt) {
  return function () {
    return elt.draggable;
  };
};

exports.setDraggable = function (draggable) {
  return function (elt) {
    return function () {
      elt.draggable = draggable;
      return {};
    };
  };
};

// ----------------------------------------------------------------------------

exports.contentEditable = function (elt) {
  return function () {
    return elt.contentEditable;
  };
};

exports.setContentEditable = function (contentEditable) {
  return function (elt) {
    return function () {
      elt.contentEditable = contentEditable;
      return {};
    };
  };
};

exports.isContentEditable = function (elt) {
  return function () {
    return elt.isContentEditable;
  };
};

// ----------------------------------------------------------------------------

exports.spellcheck = function (elt) {
  return function () {
    return elt.spellcheck;
  };
};

exports.setSpellcheck = function (spellcheck) {
  return function (elt) {
    return function () {
      elt.spellcheck = spellcheck;
      return {};
    };
  };
};

// ----------------------------------------------------------------------------

exports.click = function (elt) {
  return function () {
    return elt.click();
  };
};

exports.focus = function (elt) {
  return function () {
    return elt.focus();
  };
};

exports.blur = function (elt) {
  return function () {
    return elt.blur();
  };
};

// - CSSOM ---------------------------------------------------------------------

exports.getBoundingClientRect = function (el) {
  return function () {
    var rect = el.getBoundingClientRect();
    return {
      top: rect.top,
      right: rect.right,
      bottom: rect.bottom,
      left: rect.left,
      width: rect.width,
      height: rect.height
    };
  };
};

exports._offsetParent = function (el) {
  return function () {
    return el.offsetParent;
  };
};

exports.offsetTop = function (el) {
  return function () {
    return el.offsetTop;
  };
};

exports.offsetLeft = function (el) {
  return function () {
    return el.offsetLeft;
  };
};

exports.offsetWidth = function (el) {
  return function () {
    return el.offsetWidth;
  };
};

exports.offsetHeight = function (el) {
  return function () {
    return el.offsetHeight;
  };
};

},{}],506:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_DOM_DOMTokenList = require("../Web.DOM.DOMTokenList/index.js");
var Web_DOM_Element = require("../Web.DOM.Element/index.js");
var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");
var Web_DOM_NonDocumentTypeChildNode = require("../Web.DOM.NonDocumentTypeChildNode/index.js");
var Web_DOM_ParentNode = require("../Web.DOM.ParentNode/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var offsetParent = function ($0) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_offsetParent"]($0));
};
var fromParentNode = function (x) {
    return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};
var fromNonDocumentTypeChildNode = function (x) {
    return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};
var fromNode = function (x) {
    return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};
var fromEventTarget = function (x) {
    return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};
var fromElement = function (x) {
    return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};
var fromChildNode = function (x) {
    return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};
module.exports = {
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    offsetParent: offsetParent,
    title: $foreign.title,
    setTitle: $foreign.setTitle,
    lang: $foreign.lang,
    setLang: $foreign.setLang,
    dir: $foreign.dir,
    setDir: $foreign.setDir,
    className: $foreign.className,
    setClassName: $foreign.setClassName,
    classList: $foreign.classList,
    hidden: $foreign.hidden,
    setHidden: $foreign.setHidden,
    tabIndex: $foreign.tabIndex,
    setTabIndex: $foreign.setTabIndex,
    draggable: $foreign.draggable,
    setDraggable: $foreign.setDraggable,
    contentEditable: $foreign.contentEditable,
    setContentEditable: $foreign.setContentEditable,
    isContentEditable: $foreign.isContentEditable,
    spellcheck: $foreign.spellcheck,
    setSpellcheck: $foreign.setSpellcheck,
    click: $foreign.click,
    focus: $foreign.focus,
    blur: $foreign.blur,
    getBoundingClientRect: $foreign.getBoundingClientRect,
    offsetTop: $foreign.offsetTop,
    offsetLeft: $foreign.offsetLeft,
    offsetWidth: $foreign.offsetWidth,
    offsetHeight: $foreign.offsetHeight
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Function.Uncurried/index.js":144,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.DOMTokenList/index.js":437,"../Web.DOM.Element/index.js":444,"../Web.DOM.Internal.Types/index.js":447,"../Web.DOM.NonDocumentTypeChildNode/index.js":454,"../Web.DOM.ParentNode/index.js":458,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"./foreign.js":505}],507:[function(require,module,exports){
"use strict";

exports.src = function (embed) {
  return function () {
    return embed.src;
  };
};

exports.setSrc = function (src) {
  return function (embed) {
    return function () {
      embed.src = src;
    };
  };
};

// ----------------------------------------------------------------------------

exports.type_ = function (embed) {
  return function () {
    return embed.type;
  };
};

exports.setType = function (type) {
  return function (embed) {
    return function () {
      embed.type = type;
    };
  };
};

// ----------------------------------------------------------------------------

exports.width = function (embed) {
  return function () {
    return embed.width;
  };
};

exports.setWidth = function (width) {
  return function (embed) {
    return function () {
      embed.width = width;
    };
  };
};

// ----------------------------------------------------------------------------

exports.height = function (embed) {
  return function () {
    return embed.height;
  };
};

exports.setHeight = function (height) {
  return function (embed) {
    return function () {
      embed.height = height;
    };
  };
};

},{}],508:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    src: $foreign.src,
    setSrc: $foreign.setSrc,
    type_: $foreign.type_,
    setType: $foreign.setType,
    width: $foreign.width,
    setWidth: $foreign.setWidth,
    height: $foreign.height,
    setHeight: $foreign.setHeight
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":507}],509:[function(require,module,exports){
"use strict";

exports.disabled = function (fieldset) {
  return function () {
    return fieldset.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (fieldset) {
    return function () {
      fieldset.disabled = disabled;
    };
  };
};

// ----------------------------------------------------------------------------

exports._form = function (fieldset) {
  return function () {
    return fieldset.form;
  };
};

// ----------------------------------------------------------------------------

exports.name = function (fieldset) {
  return function () {
    return fieldset.name;
  };
};

exports.setName = function (name) {
  return function (fieldset) {
    return function () {
      fieldset.name = name;
    };
  };
};

// ----------------------------------------------------------------------------

exports.type_ = function (fieldset) {
  return function () {
    return fieldset.type;
  };
};

exports.setType = function (type) {
  return function (fieldset) {
    return function () {
      fieldset.type = type;
    };
  };
};

// ----------------------------------------------------------------------------

exports.willValidate = function (fieldset) {
  return function () {
    return fieldset.willValidate;
  };
};

// ----------------------------------------------------------------------------

exports.validity = function (fieldset) {
  return function () {
    return fieldset.validity;
  };
};

// ----------------------------------------------------------------------------

exports.validationMessage = function (fieldset) {
  return function () {
    return fieldset.validationMessage;
  };
};

// ----------------------------------------------------------------------------

exports.checkValidity = function (fieldset) {
  return function () {
    return fieldset.checkValidity;
  };
};

// ----------------------------------------------------------------------------

exports.setCustomValidity = function (value) {
  return function (fieldset) {
    return function () {
      fieldset.setCustomValidity(value);
    };
  };
};

},{}],510:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");
var Web_HTML_ValidityState = require("../Web.HTML.ValidityState/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var form = function ($0) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_form"]($0));
};
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    form: form,
    disabled: $foreign.disabled,
    setDisabled: $foreign.setDisabled,
    name: $foreign.name,
    setName: $foreign.setName,
    type_: $foreign.type_,
    setType: $foreign.setType,
    willValidate: $foreign.willValidate,
    validity: $foreign.validity,
    validationMessage: $foreign.validationMessage,
    checkValidity: $foreign.checkValidity,
    setCustomValidity: $foreign.setCustomValidity
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.HTMLFormElement/index.js":512,"../Web.HTML.ValidityState/index.js":608,"../Web.Internal.FFI/index.js":614,"./foreign.js":509}],511:[function(require,module,exports){
"use strict";

exports.acceptCharset = function (form) {
  return function () {
    return form.acceptCharset;
  };
};

exports.setAcceptCharset = function (acceptCharset) {
  return function (form) {
    return function () {
      form.acceptCharset = acceptCharset;
    };
  };
};

// ----------------------------------------------------------------------------

exports.action = function (form) {
  return function () {
    return form.action;
  };
};

exports.setAction = function (action) {
  return function (form) {
    return function () {
      form.action = action;
    };
  };
};

// ----------------------------------------------------------------------------

exports.autocomplete = function (form) {
  return function () {
    return form.autocomplete;
  };
};

exports.setAutocomplete = function (autocomplete) {
  return function (form) {
    return function () {
      form.autocomplete = autocomplete;
    };
  };
};

// ----------------------------------------------------------------------------

exports.enctype = function (form) {
  return function () {
    return form.enctype;
  };
};

exports.setEnctype = function (enctype) {
  return function (form) {
    return function () {
      form.enctype = enctype;
    };
  };
};

// ----------------------------------------------------------------------------

exports.encoding = function (form) {
  return function () {
    return form.encoding;
  };
};

exports.setEncoding = function (encoding) {
  return function (form) {
    return function () {
      form.encoding = encoding;
    };
  };
};

// ----------------------------------------------------------------------------

exports.method = function (form) {
  return function () {
    return form.method;
  };
};

exports.setMethod = function (method) {
  return function (form) {
    return function () {
      form.method = method;
    };
  };
};

// ----------------------------------------------------------------------------

exports.name = function (form) {
  return function () {
    return form.name;
  };
};

exports.setName = function (name) {
  return function (form) {
    return function () {
      form.name = name;
    };
  };
};

// ----------------------------------------------------------------------------

exports.noValidate = function (form) {
  return function () {
    return form.noValidate;
  };
};

exports.setNoValidate = function (noValidate) {
  return function (form) {
    return function () {
      form.noValidate = noValidate;
    };
  };
};

// ----------------------------------------------------------------------------

exports.target = function (form) {
  return function () {
    return form.target;
  };
};

exports.setTarget = function (target) {
  return function (form) {
    return function () {
      form.target = target;
    };
  };
};

// ----------------------------------------------------------------------------

exports.length = function (form) {
  return function () {
    return form.length;
  };
};

// ----------------------------------------------------------------------------

exports.submit = function (form) {
  return function () {
    form.submit();
  };
};

// ----------------------------------------------------------------------------

exports.reset = function (form) {
  return function () {
    form.reset();
  };
};

// ----------------------------------------------------------------------------

exports.checkValidity = function (form) {
  return function () {
    return form.checkValidity();
  };
};

},{}],512:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    acceptCharset: $foreign.acceptCharset,
    setAcceptCharset: $foreign.setAcceptCharset,
    action: $foreign.action,
    setAction: $foreign.setAction,
    autocomplete: $foreign.autocomplete,
    setAutocomplete: $foreign.setAutocomplete,
    enctype: $foreign.enctype,
    setEnctype: $foreign.setEnctype,
    encoding: $foreign.encoding,
    setEncoding: $foreign.setEncoding,
    method: $foreign.method,
    setMethod: $foreign.setMethod,
    name: $foreign.name,
    setName: $foreign.setName,
    noValidate: $foreign.noValidate,
    setNoValidate: $foreign.setNoValidate,
    target: $foreign.target,
    setTarget: $foreign.setTarget,
    length: $foreign.length,
    submit: $foreign.submit,
    reset: $foreign.reset,
    checkValidity: $foreign.checkValidity
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":511}],513:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Maybe = require("../Data.Maybe/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Data.Maybe/index.js":210,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614}],514:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Maybe = require("../Data.Maybe/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Data.Maybe/index.js":210,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614}],515:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Maybe = require("../Data.Maybe/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Data.Maybe/index.js":210,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614}],516:[function(require,module,exports){
"use strict";

exports.src = function (iframe) {
  return function () {
    return iframe.src;
  };
};

exports.setSrc = function (src) {
  return function (iframe) {
    return function () {
      iframe.src = src;
    };
  };
};

// ----------------------------------------------------------------------------

exports.srcdoc = function (iframe) {
  return function () {
    return iframe.srcdoc;
  };
};

exports.setSrcdoc = function (srcdoc) {
  return function (iframe) {
    return function () {
      iframe.srcdoc = srcdoc;
    };
  };
};

// ----------------------------------------------------------------------------

exports.name = function (iframe) {
  return function () {
    return iframe.name;
  };
};

exports.setName = function (name) {
  return function (iframe) {
    return function () {
      iframe.name = name;
    };
  };
};

// ----------------------------------------------------------------------------

exports.width = function (iframe) {
  return function () {
    return iframe.width;
  };
};

exports.setWidth = function (width) {
  return function (iframe) {
    return function () {
      iframe.width = width;
    };
  };
};

// ----------------------------------------------------------------------------

exports.height = function (iframe) {
  return function () {
    return iframe.height;
  };
};

exports.setHeight = function (height) {
  return function (iframe) {
    return function () {
      iframe.height = height;
    };
  };
};

// ----------------------------------------------------------------------------

exports._contentDocument = function (iframe) {
  return function () {
    return iframe.contentDocument;
  };
};

exports._contentWindow = function (iframe) {
  return function () {
    return iframe.contentWindow;
  };
};

},{}],517:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_DOM_Document = require("../Web.DOM.Document/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_Window = require("../Web.HTML.Window/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var contentWindow = function ($0) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_contentWindow"]($0));
};
var contentDocument = function ($1) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_contentDocument"]($1));
};
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    contentDocument: contentDocument,
    contentWindow: contentWindow,
    src: $foreign.src,
    setSrc: $foreign.setSrc,
    srcdoc: $foreign.srcdoc,
    setSrcdoc: $foreign.setSrcdoc,
    name: $foreign.name,
    setName: $foreign.setName,
    width: $foreign.width,
    setWidth: $foreign.setWidth,
    height: $foreign.height,
    setHeight: $foreign.setHeight
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.Document/index.js":439,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.Window/index.js":610,"../Web.Internal.FFI/index.js":614,"./foreign.js":516}],518:[function(require,module,exports){
/* global Image */
"use strict";

exports.create = function () {
  return function () {
    return new Image();
  };
};

exports["create'"] = function (width) {
  return function (height) {
    return function () {
      return new Image(width, height);
    };
  };
};

// ----------------------------------------------------------------------------

exports.alt = function (image) {
  return function () {
    return image.alt;
  };
};

exports.setAlt = function (alt) {
  return function (image) {
    return function () {
      image.alt = alt;
    };
  };
};

// ----------------------------------------------------------------------------

exports.src = function (image) {
  return function () {
    return image.src;
  };
};

exports.setSrc = function (src) {
  return function (image) {
    return function () {
      image.src = src;
    };
  };
};

// ----------------------------------------------------------------------------

exports.crossOrigin = function (image) {
  return function () {
    return image.crossOrigin;
  };
};

exports.setCrossOrigin = function (crossOrigin) {
  return function (image) {
    return function () {
      image.crossOrigin = crossOrigin;
    };
  };
};

// ----------------------------------------------------------------------------

exports.useMap = function (image) {
  return function () {
    return image.useMap;
  };
};

exports.setUseMap = function (useMap) {
  return function (image) {
    return function () {
      image.useMap = useMap;
    };
  };
};

// ----------------------------------------------------------------------------

exports.isMap = function (image) {
  return function () {
    return image.isMap;
  };
};

exports.setIsMap = function (isMap) {
  return function (image) {
    return function () {
      image.isMap = isMap;
    };
  };
};

// ----------------------------------------------------------------------------

exports.width = function (image) {
  return function () {
    return image.width;
  };
};

exports.setWidth = function (width) {
  return function (image) {
    return function () {
      image.width = width;
    };
  };
};

// ----------------------------------------------------------------------------

exports.height = function (image) {
  return function () {
    return image.height;
  };
};

exports.setHeight = function (height) {
  return function (image) {
    return function () {
      image.height = height;
    };
  };
};

// ----------------------------------------------------------------------------

exports.naturalWidth = function (image) {
  return function () {
    return image.naturalWidth;
  };
};

exports.naturalHeight = function (image) {
  return function () {
    return image.naturalHeight;
  };
};

// ----------------------------------------------------------------------------

exports.complete = function (image) {
  return function () {
    return image.complete;
  };
};

},{}],519:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    create: $foreign.create,
    "create'": $foreign["create'"],
    alt: $foreign.alt,
    setAlt: $foreign.setAlt,
    src: $foreign.src,
    setSrc: $foreign.setSrc,
    crossOrigin: $foreign.crossOrigin,
    setCrossOrigin: $foreign.setCrossOrigin,
    useMap: $foreign.useMap,
    setUseMap: $foreign.setUseMap,
    isMap: $foreign.isMap,
    setIsMap: $foreign.setIsMap,
    width: $foreign.width,
    setWidth: $foreign.setWidth,
    height: $foreign.height,
    setHeight: $foreign.setHeight,
    naturalWidth: $foreign.naturalWidth,
    naturalHeight: $foreign.naturalHeight,
    complete: $foreign.complete
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":518}],520:[function(require,module,exports){
"use strict";

exports.accept = function (input) {
  return function () {
    return input.accept;
  };
};

exports.setAccept = function (accept) {
  return function (input) {
    return function () {
      input.accept = accept;
    };
  };
};

// ----------------------------------------------------------------------------

exports.alt = function (input) {
  return function () {
    return input.alt;
  };
};

exports.setAlt = function (alt) {
  return function (input) {
    return function () {
      input.alt = alt;
    };
  };
};

// ----------------------------------------------------------------------------

exports.autocomplete = function (input) {
  return function () {
    return input.autocomplete;
  };
};

exports.setAutocomplete = function (autocomplete) {
  return function (input) {
    return function () {
      input.autocomplete = autocomplete;
    };
  };
};

// ----------------------------------------------------------------------------

exports.autofocus = function (input) {
  return function () {
    return input.autofocus;
  };
};

exports.setAutofocus = function (autofocus) {
  return function (input) {
    return function () {
      input.autofocus = autofocus;
    };
  };
};

// ----------------------------------------------------------------------------

exports.defaultChecked = function (input) {
  return function () {
    return input.defaultChecked;
  };
};

exports.setDefaultChecked = function (defaultChecked) {
  return function (input) {
    return function () {
      input.defaultChecked = defaultChecked;
    };
  };
};

// ----------------------------------------------------------------------------

exports.checked = function (input) {
  return function () {
    return input.checked;
  };
};

exports.setChecked = function (checked) {
  return function (input) {
    return function () {
      input.checked = checked;
    };
  };
};

// ----------------------------------------------------------------------------

exports.dirName = function (input) {
  return function () {
    return input.dirName;
  };
};

exports.setDirName = function (dirName) {
  return function (input) {
    return function () {
      input.dirName = dirName;
    };
  };
};

// ----------------------------------------------------------------------------

exports.disabled = function (input) {
  return function () {
    return input.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (input) {
    return function () {
      input.disabled = disabled;
    };
  };
};

// ----------------------------------------------------------------------------

exports._form = function (input) {
  return function () {
    return input.form;
  };
};

// ----------------------------------------------------------------------------

exports._files = function (input) {
  return function () {
    return input.files;
  };
};

// ----------------------------------------------------------------------------

exports.formAction = function (input) {
  return function () {
    return input.formAction;
  };
};

exports.setFormAction = function (formAction) {
  return function (input) {
    return function () {
      input.formAction = formAction;
    };
  };
};

// ----------------------------------------------------------------------------

exports.formEnctype = function (input) {
  return function () {
    return input.formEnctype;
  };
};

exports.setFormEnctype = function (formEnctype) {
  return function (input) {
    return function () {
      input.formEnctype = formEnctype;
    };
  };
};

// ----------------------------------------------------------------------------

exports.formMethod = function (input) {
  return function () {
    return input.formMethod;
  };
};

exports.setFormMethod = function (formMethod) {
  return function (input) {
    return function () {
      input.formMethod = formMethod;
    };
  };
};

// ----------------------------------------------------------------------------

exports.formNoValidate = function (input) {
  return function () {
    return input.formNoValidate;
  };
};

exports.setFormNoValidate = function (formNoValidate) {
  return function (input) {
    return function () {
      input.formNoValidate = formNoValidate;
    };
  };
};

// ----------------------------------------------------------------------------

exports.formTarget = function (input) {
  return function () {
    return input.formTarget;
  };
};

exports.setFormTarget = function (formTarget) {
  return function (input) {
    return function () {
      input.formTarget = formTarget;
    };
  };
};

// ----------------------------------------------------------------------------

exports.height = function (input) {
  return function () {
    return input.height;
  };
};

exports.setHeight = function (height) {
  return function (input) {
    return function () {
      input.height = height;
    };
  };
};

// ----------------------------------------------------------------------------

exports.indeterminate = function (input) {
  return function () {
    return input.indeterminate;
  };
};

exports.setIndeterminate = function (indeterminate) {
  return function (input) {
    return function () {
      input.indeterminate = indeterminate;
    };
  };
};

// ----------------------------------------------------------------------------

exports._list = function (input) {
  return function () {
    return input.list;
  };
};

// ----------------------------------------------------------------------------

exports.max = function (input) {
  return function () {
    return input.max;
  };
};

exports.setMax = function (max) {
  return function (input) {
    return function () {
      input.max = max;
    };
  };
};

// ----------------------------------------------------------------------------

exports.maxLength = function (input) {
  return function () {
    return input.maxLength;
  };
};

exports.setMaxLength = function (maxLength) {
  return function (input) {
    return function () {
      input.maxLength = maxLength;
    };
  };
};

// ----------------------------------------------------------------------------

exports.min = function (input) {
  return function () {
    return input.min;
  };
};

exports.setMin = function (min) {
  return function (input) {
    return function () {
      input.min = min;
    };
  };
};

// ----------------------------------------------------------------------------

exports.minLength = function (input) {
  return function () {
    return input.minLength;
  };
};

exports.setMinLength = function (minLength) {
  return function (input) {
    return function () {
      input.minLength = minLength;
    };
  };
};

// ----------------------------------------------------------------------------

exports.multiple = function (input) {
  return function () {
    return input.multiple;
  };
};

exports.setMultiple = function (multiple) {
  return function (input) {
    return function () {
      input.multiple = multiple;
    };
  };
};

// ----------------------------------------------------------------------------

exports.name = function (input) {
  return function () {
    return input.name;
  };
};

exports.setName = function (name) {
  return function (input) {
    return function () {
      input.name = name;
    };
  };
};

// ----------------------------------------------------------------------------

exports.pattern = function (input) {
  return function () {
    return input.pattern;
  };
};

exports.setPattern = function (pattern) {
  return function (input) {
    return function () {
      input.pattern = pattern;
    };
  };
};

// ----------------------------------------------------------------------------

exports.placeholder = function (input) {
  return function () {
    return input.placeholder;
  };
};

exports.setPlaceholder = function (placeholder) {
  return function (input) {
    return function () {
      input.placeholder = placeholder;
    };
  };
};

// ----------------------------------------------------------------------------

exports.readOnly = function (input) {
  return function () {
    return input.readOnly;
  };
};

exports.setReadOnly = function (readOnly) {
  return function (input) {
    return function () {
      input.readOnly = readOnly;
    };
  };
};

// ----------------------------------------------------------------------------

exports.required = function (input) {
  return function () {
    return input.required;
  };
};

exports.setRequired = function (required) {
  return function (input) {
    return function () {
      input.required = required;
    };
  };
};

// ----------------------------------------------------------------------------

exports.size = function (input) {
  return function () {
    return input.size;
  };
};

exports.setSize = function (size) {
  return function (input) {
    return function () {
      input.size = size;
    };
  };
};

// ----------------------------------------------------------------------------

exports.src = function (input) {
  return function () {
    return input.src;
  };
};

exports.setSrc = function (src) {
  return function (input) {
    return function () {
      input.src = src;
    };
  };
};

// ----------------------------------------------------------------------------

exports.step = function (input) {
  return function () {
    return input.step;
  };
};

exports.setStep = function (step) {
  return function (input) {
    return function () {
      input.step = step;
    };
  };
};

// ----------------------------------------------------------------------------

exports.type_ = function (input) {
  return function () {
    return input.type;
  };
};

exports.setType = function (type) {
  return function (input) {
    return function () {
      input.type = type;
    };
  };
};

// ----------------------------------------------------------------------------

exports.defaultValue = function (input) {
  return function () {
    return input.defaultValue;
  };
};

exports.setDefaultValue = function (defaultValue) {
  return function (input) {
    return function () {
      input.defaultValue = defaultValue;
    };
  };
};

// ----------------------------------------------------------------------------

exports.value = function (input) {
  return function () {
    return input.value;
  };
};

exports.setValue = function (value) {
  return function (input) {
    return function () {
      input.value = value;
    };
  };
};

// ----------------------------------------------------------------------------

exports.valueAsDate = function (input) {
  return function () {
    return input.valueAsDate;
  };
};

exports.setValueAsDate = function (valueAsDate) {
  return function (input) {
    return function () {
      input.valueAsDate = valueAsDate;
    };
  };
};

// ----------------------------------------------------------------------------

exports.valueAsNumber = function (input) {
  return function () {
    return input.valueAsNumber;
  };
};

exports.setValueAsNumber = function (valueAsNumber) {
  return function (input) {
    return function () {
      input.valueAsNumber = valueAsNumber;
    };
  };
};

// ----------------------------------------------------------------------------

exports.width = function (input) {
  return function () {
    return input.width;
  };
};

exports.setWidth = function (width) {
  return function (input) {
    return function () {
      input.width = width;
    };
  };
};

// ----------------------------------------------------------------------------

exports["stepUp'"] = function (n) {
  return function (input) {
    return function () {
      input.stepUp(n);
    };
  };
};

// ----------------------------------------------------------------------------

exports["stepDown'"] = function (n) {
  return function (input) {
    return function () {
      input.stepDown(n);
    };
  };
};

// ----------------------------------------------------------------------------

exports.willValidate = function (input) {
  return function () {
    return input.willValidate;
  };
};

// ----------------------------------------------------------------------------

exports.validity = function (input) {
  return function () {
    return input.validity;
  };
};

// ----------------------------------------------------------------------------

exports.validationMessage = function (input) {
  return function () {
    return input.validationMessage;
  };
};

// ----------------------------------------------------------------------------

exports.checkValidity = function (input) {
  return function () {
    return input.checkValidity;
  };
};

// ----------------------------------------------------------------------------

exports.setCustomValidity = function (value) {
  return function (input) {
    return function () {
      input.setCustomValidity(value);
    };
  };
};

// ----------------------------------------------------------------------------

exports.labels = function (input) {
  return function () {
    return input.labels;
  };
};

// ----------------------------------------------------------------------------

exports.select = function (input) {
  return function () {
    input.select();
  };
};

// ----------------------------------------------------------------------------

exports.selectionStart = function (input) {
  return function () {
    return input.selectionStart;
  };
};

exports.setSelectionStart = function (selectionStart) {
  return function (input) {
    return function () {
      input.selectionStart = selectionStart;
    };
  };
};

// ----------------------------------------------------------------------------

exports.selectionEnd = function (input) {
  return function () {
    return input.selectionEnd;
  };
};

exports.setSelectionEnd = function (selectionEnd) {
  return function (input) {
    return function () {
      input.selectionEnd = selectionEnd;
    };
  };
};

// ----------------------------------------------------------------------------

exports.selectionDirection = function (input) {
  return function () {
    return input.selectionDirection;
  };
};

exports.setSelectionDirection = function (selectionDirection) {
  return function (input) {
    return function () {
      input.selectionDirection = selectionDirection;
    };
  };
};

// ----------------------------------------------------------------------------

exports.setRangeText = function (replacement) {
  return function (input) {
    return function () {
      input.setRangeText(replacement);
    };
  };
};
exports._setRangeText = function (replacement, start, end, selectionMode, textarea) {
  textarea.setRangeText(replacement, start, end, selectionMode);
};

// ----------------------------------------------------------------------------

exports.setSelectionRange = function (start) {
  return function (end) {
    return function (direction) {
      return function (input) {
        return function () {
          input.setSelectionRange(start, end, direction, input);
        };
      };
    };
  };
};

},{}],521:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_JSDate = require("../Data.JSDate/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Effect_Uncurried = require("../Effect.Uncurried/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_DOM_NodeList = require("../Web.DOM.NodeList/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_File_FileList = require("../Web.File.FileList/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");
var Web_HTML_SelectionMode = require("../Web.HTML.SelectionMode/index.js");
var Web_HTML_ValidityState = require("../Web.HTML.ValidityState/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var stepUp = $foreign["stepUp'"](1);
var stepDown = $foreign["stepDown'"](1);
var setRangeText$prime = function (rpl) {
    return function (s) {
        return function (e) {
            return function (mode) {
                return function (area) {
                    return function () {
                        return $foreign["_setRangeText"](rpl, s, e, Web_HTML_SelectionMode.print(mode), area);
                    };
                };
            };
        };
    };
};
var list = function ($0) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_list"]($0));
};
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var form = function ($1) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_form"]($1));
};
var files = function ($2) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_files"]($2));
};
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    form: form,
    files: files,
    list: list,
    "setRangeText'": setRangeText$prime,
    accept: $foreign.accept,
    setAccept: $foreign.setAccept,
    alt: $foreign.alt,
    setAlt: $foreign.setAlt,
    autocomplete: $foreign.autocomplete,
    setAutocomplete: $foreign.setAutocomplete,
    autofocus: $foreign.autofocus,
    setAutofocus: $foreign.setAutofocus,
    defaultChecked: $foreign.defaultChecked,
    setDefaultChecked: $foreign.setDefaultChecked,
    checked: $foreign.checked,
    setChecked: $foreign.setChecked,
    dirName: $foreign.dirName,
    setDirName: $foreign.setDirName,
    disabled: $foreign.disabled,
    setDisabled: $foreign.setDisabled,
    formAction: $foreign.formAction,
    setFormAction: $foreign.setFormAction,
    formEnctype: $foreign.formEnctype,
    setFormEnctype: $foreign.setFormEnctype,
    formMethod: $foreign.formMethod,
    setFormMethod: $foreign.setFormMethod,
    formNoValidate: $foreign.formNoValidate,
    setFormNoValidate: $foreign.setFormNoValidate,
    formTarget: $foreign.formTarget,
    setFormTarget: $foreign.setFormTarget,
    height: $foreign.height,
    setHeight: $foreign.setHeight,
    indeterminate: $foreign.indeterminate,
    setIndeterminate: $foreign.setIndeterminate,
    max: $foreign.max,
    setMax: $foreign.setMax,
    maxLength: $foreign.maxLength,
    setMaxLength: $foreign.setMaxLength,
    min: $foreign.min,
    setMin: $foreign.setMin,
    minLength: $foreign.minLength,
    setMinLength: $foreign.setMinLength,
    multiple: $foreign.multiple,
    setMultiple: $foreign.setMultiple,
    name: $foreign.name,
    setName: $foreign.setName,
    pattern: $foreign.pattern,
    setPattern: $foreign.setPattern,
    placeholder: $foreign.placeholder,
    setPlaceholder: $foreign.setPlaceholder,
    readOnly: $foreign.readOnly,
    setReadOnly: $foreign.setReadOnly,
    required: $foreign.required,
    setRequired: $foreign.setRequired,
    size: $foreign.size,
    setSize: $foreign.setSize,
    src: $foreign.src,
    setSrc: $foreign.setSrc,
    step: $foreign.step,
    setStep: $foreign.setStep,
    type_: $foreign.type_,
    setType: $foreign.setType,
    defaultValue: $foreign.defaultValue,
    setDefaultValue: $foreign.setDefaultValue,
    value: $foreign.value,
    setValue: $foreign.setValue,
    valueAsDate: $foreign.valueAsDate,
    setValueAsDate: $foreign.setValueAsDate,
    valueAsNumber: $foreign.valueAsNumber,
    setValueAsNumber: $foreign.setValueAsNumber,
    width: $foreign.width,
    setWidth: $foreign.setWidth,
    "stepUp'": $foreign["stepUp'"],
    "stepDown'": $foreign["stepDown'"],
    willValidate: $foreign.willValidate,
    validity: $foreign.validity,
    validationMessage: $foreign.validationMessage,
    checkValidity: $foreign.checkValidity,
    setCustomValidity: $foreign.setCustomValidity,
    labels: $foreign.labels,
    select: $foreign.select,
    selectionStart: $foreign.selectionStart,
    setSelectionStart: $foreign.setSelectionStart,
    selectionEnd: $foreign.selectionEnd,
    setSelectionEnd: $foreign.setSelectionEnd,
    selectionDirection: $foreign.selectionDirection,
    setSelectionDirection: $foreign.setSelectionDirection,
    setRangeText: $foreign.setRangeText,
    setSelectionRange: $foreign.setSelectionRange
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.JSDate/index.js":169,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect.Uncurried/index.js":308,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.NodeList/index.js":451,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.File.FileList/index.js":475,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.HTMLFormElement/index.js":512,"../Web.HTML.SelectionMode/index.js":606,"../Web.HTML.ValidityState/index.js":608,"../Web.Internal.FFI/index.js":614,"./foreign.js":520}],522:[function(require,module,exports){
"use strict";

exports.autofocus = function (keygen) {
  return function () {
    return keygen.autofocus;
  };
};

exports.setAutofocus = function (autofocus) {
  return function (keygen) {
    return function () {
      keygen.autofocus = autofocus;
    };
  };
};

// ----------------------------------------------------------------------------

exports.challenge = function (keygen) {
  return function () {
    return keygen.challenge;
  };
};

exports.setChallenge = function (challenge) {
  return function (keygen) {
    return function () {
      keygen.challenge = challenge;
    };
  };
};

// ----------------------------------------------------------------------------

exports.disabled = function (keygen) {
  return function () {
    return keygen.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (keygen) {
    return function () {
      keygen.disabled = disabled;
    };
  };
};

// ----------------------------------------------------------------------------

exports._form = function (keygen) {
  return function () {
    return keygen.form;
  };
};

// ----------------------------------------------------------------------------

exports.keytype = function (keygen) {
  return function () {
    return keygen.keytype;
  };
};

exports.setKeytype = function (keytype) {
  return function (keygen) {
    return function () {
      keygen.keytype = keytype;
    };
  };
};

// ----------------------------------------------------------------------------

exports.name = function (keygen) {
  return function () {
    return keygen.name;
  };
};

exports.setName = function (name) {
  return function (keygen) {
    return function () {
      keygen.name = name;
    };
  };
};

// ----------------------------------------------------------------------------

exports.type_ = function (keygen) {
  return function () {
    return keygen.type;
  };
};

// ----------------------------------------------------------------------------

exports.willValidate = function (keygen) {
  return function () {
    return keygen.willValidate;
  };
};

// ----------------------------------------------------------------------------

exports.validity = function (keygen) {
  return function () {
    return keygen.validity;
  };
};

// ----------------------------------------------------------------------------

exports.validationMessage = function (keygen) {
  return function () {
    return keygen.validationMessage;
  };
};

// ----------------------------------------------------------------------------

exports.checkValidity = function (keygen) {
  return function () {
    return keygen.checkValidity;
  };
};

// ----------------------------------------------------------------------------

exports.setCustomValidity = function (value) {
  return function (keygen) {
    return function () {
      keygen.setCustomValidity(value);
    };
  };
};

// ----------------------------------------------------------------------------

exports.labels = function (keygen) {
  return function () {
    return keygen.labels;
  };
};

},{}],523:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_DOM_NodeList = require("../Web.DOM.NodeList/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");
var Web_HTML_ValidityState = require("../Web.HTML.ValidityState/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var form = function ($0) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_form"]($0));
};
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    form: form,
    autofocus: $foreign.autofocus,
    setAutofocus: $foreign.setAutofocus,
    challenge: $foreign.challenge,
    setChallenge: $foreign.setChallenge,
    disabled: $foreign.disabled,
    setDisabled: $foreign.setDisabled,
    keytype: $foreign.keytype,
    setKeytype: $foreign.setKeytype,
    name: $foreign.name,
    setName: $foreign.setName,
    type_: $foreign.type_,
    willValidate: $foreign.willValidate,
    validity: $foreign.validity,
    validationMessage: $foreign.validationMessage,
    checkValidity: $foreign.checkValidity,
    setCustomValidity: $foreign.setCustomValidity,
    labels: $foreign.labels
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.NodeList/index.js":451,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.HTMLFormElement/index.js":512,"../Web.HTML.ValidityState/index.js":608,"../Web.Internal.FFI/index.js":614,"./foreign.js":522}],524:[function(require,module,exports){
"use strict";

exports.value = function (li) {
  return function () {
    return li.value;
  };
};

exports.setValue = function (value) {
  return function (li) {
    return function () {
      li.value = value;
    };
  };
};

},{}],525:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    value: $foreign.value,
    setValue: $foreign.setValue
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":524}],526:[function(require,module,exports){
"use strict";

exports._form = function (label) {
  return function () {
    return label.form;
  };
};

// ----------------------------------------------------------------------------

exports.htmlFor = function (label) {
  return function () {
    return label.htmlFor;
  };
};

exports.setHtmlFor = function (htmlFor) {
  return function (label) {
    return function () {
      label.htmlFor = htmlFor;
    };
  };
};

// ----------------------------------------------------------------------------

exports._control = function (label) {
  return function () {
    return label.control;
  };
};

},{}],527:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var form = function ($0) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_form"]($0));
};
var control = function ($1) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_control"]($1));
};
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    form: form,
    control: control,
    htmlFor: $foreign.htmlFor,
    setHtmlFor: $foreign.setHtmlFor
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.HTMLFormElement/index.js":512,"../Web.Internal.FFI/index.js":614,"./foreign.js":526}],528:[function(require,module,exports){
"use strict";

exports._form = function (le) {
  return function () {
    return le.form;
  };
};

},{}],529:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var form = function ($0) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_form"]($0));
};
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    form: form
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.HTMLFormElement/index.js":512,"../Web.Internal.FFI/index.js":614,"./foreign.js":528}],530:[function(require,module,exports){
"use strict";

exports.disabled = function (link) {
  return function () {
    return link.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (link) {
    return function () {
      link.disabled = disabled;
    };
  };
};

// ----------------------------------------------------------------------------

exports.href = function (link) {
  return function () {
    return link.href;
  };
};

exports.setHref = function (href) {
  return function (link) {
    return function () {
      link.href = href;
    };
  };
};

// ----------------------------------------------------------------------------

exports.crossOrigin = function (link) {
  return function () {
    return link.crossOrigin;
  };
};

exports.setCrossOrigin = function (crossOrigin) {
  return function (link) {
    return function () {
      link.crossOrigin = crossOrigin;
    };
  };
};

// ----------------------------------------------------------------------------

exports.rel = function (link) {
  return function () {
    return link.rel;
  };
};

exports.setRel = function (rel) {
  return function (link) {
    return function () {
      link.rel = rel;
    };
  };
};

// ----------------------------------------------------------------------------

exports.rev = function (link) {
  return function () {
    return link.rev;
  };
};

exports.setRev = function (rev) {
  return function (link) {
    return function () {
      link.rev = rev;
    };
  };
};

// ----------------------------------------------------------------------------

exports.relList = function (link) {
  return function () {
    return link.relList;
  };
};

// ----------------------------------------------------------------------------

exports.media = function (link) {
  return function () {
    return link.media;
  };
};

exports.setMedia = function (media) {
  return function (link) {
    return function () {
      link.media = media;
    };
  };
};

// ----------------------------------------------------------------------------

exports.hreflang = function (link) {
  return function () {
    return link.hreflang;
  };
};

exports.setHreflang = function (hreflang) {
  return function (link) {
    return function () {
      link.hreflang = hreflang;
    };
  };
};

// ----------------------------------------------------------------------------

exports.type_ = function (link) {
  return function () {
    return link.type;
  };
};

exports.setType = function (type) {
  return function (link) {
    return function () {
      link.type = type;
    };
  };
};

},{}],531:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_DOM_DOMTokenList = require("../Web.DOM.DOMTokenList/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    disabled: $foreign.disabled,
    setDisabled: $foreign.setDisabled,
    href: $foreign.href,
    setHref: $foreign.setHref,
    crossOrigin: $foreign.crossOrigin,
    setCrossOrigin: $foreign.setCrossOrigin,
    rel: $foreign.rel,
    setRel: $foreign.setRel,
    rev: $foreign.rev,
    setRev: $foreign.setRev,
    relList: $foreign.relList,
    media: $foreign.media,
    setMedia: $foreign.setMedia,
    hreflang: $foreign.hreflang,
    setHreflang: $foreign.setHreflang,
    type_: $foreign.type_,
    setType: $foreign.setType
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.DOMTokenList/index.js":437,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":530}],532:[function(require,module,exports){
"use strict";

exports.name = function (map) {
  return function () {
    return map.name;
  };
};

exports.setName = function (name) {
  return function (map) {
    return function () {
      map.name = name;
    };
  };
};

// ----------------------------------------------------------------------------

exports.areas = function (map) {
  return function () {
    return map.areas;
  };
};

// ----------------------------------------------------------------------------

exports.images = function (map) {
  return function () {
    return map.images;
  };
};

},{}],533:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_DOM_HTMLCollection = require("../Web.DOM.HTMLCollection/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    name: $foreign.name,
    setName: $foreign.setName,
    areas: $foreign.areas,
    images: $foreign.images
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.HTMLCollection/index.js":446,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":532}],534:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Unspecified = (function () {
    function Unspecified() {

    };
    Unspecified.value = new Unspecified();
    return Unspecified;
})();
var Maybe = (function () {
    function Maybe() {

    };
    Maybe.value = new Maybe();
    return Maybe;
})();
var Probably = (function () {
    function Probably() {

    };
    Probably.value = new Probably();
    return Probably;
})();
var showCanPlayType = new Data_Show.Show(function (v) {
    if (v instanceof Unspecified) {
        return "Unspecified";
    };
    if (v instanceof Maybe) {
        return "Maybe";
    };
    if (v instanceof Probably) {
        return "Probably";
    };
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.CanPlayType (line 16, column 10 - line 21, column 1): " + [ v.constructor.name ]);
});
var print = function (v) {
    if (v instanceof Unspecified) {
        return "";
    };
    if (v instanceof Maybe) {
        return "maybe";
    };
    if (v instanceof Probably) {
        return "probably";
    };
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.CanPlayType (line 29, column 9 - line 32, column 15): " + [ v.constructor.name ]);
};
var parse = function (v) {
    if (v === "") {
        return new Data_Maybe.Just(Unspecified.value);
    };
    if (v === "maybe") {
        return new Data_Maybe.Just(Maybe.value);
    };
    if (v === "probably") {
        return new Data_Maybe.Just(Probably.value);
    };
    return Data_Maybe.Nothing.value;
};
var eqCanPlayType = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Unspecified && y instanceof Unspecified) {
            return true;
        };
        if (x instanceof Maybe && y instanceof Maybe) {
            return true;
        };
        if (x instanceof Probably && y instanceof Probably) {
            return true;
        };
        return false;
    };
});
var ordCanPlayType = new Data_Ord.Ord(function () {
    return eqCanPlayType;
}, function (x) {
    return function (y) {
        if (x instanceof Unspecified && y instanceof Unspecified) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Unspecified) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Unspecified) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Maybe && y instanceof Maybe) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Maybe) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Maybe) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Probably && y instanceof Probably) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.CanPlayType (line 13, column 8 - line 13, column 50): " + [ x.constructor.name, y.constructor.name ]);
    };
});
module.exports = {
    Unspecified: Unspecified,
    Maybe: Maybe,
    Probably: Probably,
    parse: parse,
    print: print,
    eqCanPlayType: eqCanPlayType,
    ordCanPlayType: ordCanPlayType,
    showCanPlayType: showCanPlayType
};

},{"../Data.Eq/index.js":135,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Show/index.js":254,"../Prelude/index.js":385}],535:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Empty = (function () {
    function Empty() {

    };
    Empty.value = new Empty();
    return Empty;
})();
var Idle = (function () {
    function Idle() {

    };
    Idle.value = new Idle();
    return Idle;
})();
var Loading = (function () {
    function Loading() {

    };
    Loading.value = new Loading();
    return Loading;
})();
var NoSource = (function () {
    function NoSource() {

    };
    NoSource.value = new NoSource();
    return NoSource;
})();
var toEnumNetworkState = function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(Empty.value);
    };
    if (v === 1) {
        return new Data_Maybe.Just(Idle.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(Loading.value);
    };
    if (v === 3) {
        return new Data_Maybe.Just(NoSource.value);
    };
    return Data_Maybe.Nothing.value;
};
var showNetworkState = new Data_Show.Show(function (v) {
    if (v instanceof Empty) {
        return "Empty";
    };
    if (v instanceof Idle) {
        return "Idle";
    };
    if (v instanceof Loading) {
        return "Loading";
    };
    if (v instanceof NoSource) {
        return "NoSource";
    };
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.NetworkState (line 29, column 1 - line 29, column 47): " + [ v.constructor.name ]);
});
var fromEnumNetworkState = function (v) {
    if (v instanceof Empty) {
        return 0;
    };
    if (v instanceof Idle) {
        return 1;
    };
    if (v instanceof Loading) {
        return 2;
    };
    if (v instanceof NoSource) {
        return 3;
    };
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.NetworkState (line 46, column 3 - line 50, column 17): " + [ v.constructor.name ]);
};
var eqNetworkState = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Empty && y instanceof Empty) {
            return true;
        };
        if (x instanceof Idle && y instanceof Idle) {
            return true;
        };
        if (x instanceof Loading && y instanceof Loading) {
            return true;
        };
        if (x instanceof NoSource && y instanceof NoSource) {
            return true;
        };
        return false;
    };
});
var ordNetworkState = new Data_Ord.Ord(function () {
    return eqNetworkState;
}, function (x) {
    return function (y) {
        if (x instanceof Empty && y instanceof Empty) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Empty) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Empty) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Idle && y instanceof Idle) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Idle) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Idle) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Loading && y instanceof Loading) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Loading) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Loading) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof NoSource && y instanceof NoSource) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.NetworkState (line 14, column 8 - line 14, column 52): " + [ x.constructor.name, y.constructor.name ]);
    };
});
var enumNetworkState = new Data_Enum.Enum(function () {
    return ordNetworkState;
}, Data_Enum.defaultPred(toEnumNetworkState)(fromEnumNetworkState), Data_Enum.defaultSucc(toEnumNetworkState)(fromEnumNetworkState));
var boundedNetworkState = new Data_Bounded.Bounded(function () {
    return ordNetworkState;
}, Empty.value, NoSource.value);
var boundedEnumNetworkState = new Data_Enum.BoundedEnum(function () {
    return boundedNetworkState;
}, function () {
    return enumNetworkState;
}, 4, fromEnumNetworkState, toEnumNetworkState);
module.exports = {
    Empty: Empty,
    Idle: Idle,
    Loading: Loading,
    NoSource: NoSource,
    eqNetworkState: eqNetworkState,
    ordNetworkState: ordNetworkState,
    boundedNetworkState: boundedNetworkState,
    enumNetworkState: enumNetworkState,
    boundedEnumNetworkState: boundedEnumNetworkState,
    showNetworkState: showNetworkState
};

},{"../Data.Bounded/index.js":113,"../Data.Enum/index.js":133,"../Data.Eq/index.js":135,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Show/index.js":254,"../Prelude/index.js":385}],536:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var HaveNothing = (function () {
    function HaveNothing() {

    };
    HaveNothing.value = new HaveNothing();
    return HaveNothing;
})();
var HaveMetadata = (function () {
    function HaveMetadata() {

    };
    HaveMetadata.value = new HaveMetadata();
    return HaveMetadata;
})();
var HaveCurrentData = (function () {
    function HaveCurrentData() {

    };
    HaveCurrentData.value = new HaveCurrentData();
    return HaveCurrentData;
})();
var HaveFutureData = (function () {
    function HaveFutureData() {

    };
    HaveFutureData.value = new HaveFutureData();
    return HaveFutureData;
})();
var HaveEnoughData = (function () {
    function HaveEnoughData() {

    };
    HaveEnoughData.value = new HaveEnoughData();
    return HaveEnoughData;
})();
var toEnumReadyState = function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(HaveNothing.value);
    };
    if (v === 1) {
        return new Data_Maybe.Just(HaveMetadata.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(HaveCurrentData.value);
    };
    if (v === 3) {
        return new Data_Maybe.Just(HaveFutureData.value);
    };
    if (v === 4) {
        return new Data_Maybe.Just(HaveEnoughData.value);
    };
    return Data_Maybe.Nothing.value;
};
var showReadyState = new Data_Show.Show(function (v) {
    if (v instanceof HaveNothing) {
        return "HaveNothing";
    };
    if (v instanceof HaveMetadata) {
        return "HaveMetadata";
    };
    if (v instanceof HaveCurrentData) {
        return "HaveCurrentData";
    };
    if (v instanceof HaveFutureData) {
        return "HaveFutureData";
    };
    if (v instanceof HaveEnoughData) {
        return "HaveEnoughData";
    };
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.ReadyState (line 30, column 1 - line 30, column 43): " + [ v.constructor.name ]);
});
var fromEnumReadyState = function (v) {
    if (v instanceof HaveNothing) {
        return 0;
    };
    if (v instanceof HaveMetadata) {
        return 1;
    };
    if (v instanceof HaveCurrentData) {
        return 2;
    };
    if (v instanceof HaveFutureData) {
        return 3;
    };
    if (v instanceof HaveEnoughData) {
        return 4;
    };
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.ReadyState (line 49, column 3 - line 54, column 23): " + [ v.constructor.name ]);
};
var eqReadyState = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof HaveNothing && y instanceof HaveNothing) {
            return true;
        };
        if (x instanceof HaveMetadata && y instanceof HaveMetadata) {
            return true;
        };
        if (x instanceof HaveCurrentData && y instanceof HaveCurrentData) {
            return true;
        };
        if (x instanceof HaveFutureData && y instanceof HaveFutureData) {
            return true;
        };
        if (x instanceof HaveEnoughData && y instanceof HaveEnoughData) {
            return true;
        };
        return false;
    };
});
var ordReadyState = new Data_Ord.Ord(function () {
    return eqReadyState;
}, function (x) {
    return function (y) {
        if (x instanceof HaveNothing && y instanceof HaveNothing) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof HaveNothing) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof HaveNothing) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof HaveMetadata && y instanceof HaveMetadata) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof HaveMetadata) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof HaveMetadata) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof HaveCurrentData && y instanceof HaveCurrentData) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof HaveCurrentData) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof HaveCurrentData) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof HaveFutureData && y instanceof HaveFutureData) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof HaveFutureData) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof HaveFutureData) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof HaveEnoughData && y instanceof HaveEnoughData) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.ReadyState (line 15, column 8 - line 15, column 48): " + [ x.constructor.name, y.constructor.name ]);
    };
});
var enumReadyState = new Data_Enum.Enum(function () {
    return ordReadyState;
}, Data_Enum.defaultPred(toEnumReadyState)(fromEnumReadyState), Data_Enum.defaultSucc(toEnumReadyState)(fromEnumReadyState));
var boundedReadyState = new Data_Bounded.Bounded(function () {
    return ordReadyState;
}, HaveNothing.value, HaveEnoughData.value);
var boundedEnumReadyState = new Data_Enum.BoundedEnum(function () {
    return boundedReadyState;
}, function () {
    return enumReadyState;
}, 5, fromEnumReadyState, toEnumReadyState);
module.exports = {
    HaveNothing: HaveNothing,
    HaveMetadata: HaveMetadata,
    HaveCurrentData: HaveCurrentData,
    HaveFutureData: HaveFutureData,
    HaveEnoughData: HaveEnoughData,
    eqReadyState: eqReadyState,
    ordReadyState: ordReadyState,
    boundedReadyState: boundedReadyState,
    enumReadyState: enumReadyState,
    boundedEnumReadyState: boundedEnumReadyState,
    showReadyState: showReadyState
};

},{"../Data.Bounded/index.js":113,"../Data.Enum/index.js":133,"../Data.Eq/index.js":135,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Show/index.js":254,"../Prelude/index.js":385}],537:[function(require,module,exports){
"use strict";

exports.src = function (media) {
  return function () {
    return media.src;
  };
};

exports.setSrc = function (src) {
  return function (media) {
    return function () {
      media.src = src;
    };
  };
};

// ----------------------------------------------------------------------------

exports.currentSrc = function (media) {
  return function () {
    return media.currentSrc;
  };
};

// ----------------------------------------------------------------------------

exports.crossOrigin = function (media) {
  return function () {
    return media.crossOrigin;
  };
};

exports.setCrossOrigin = function (crossOrigin) {
  return function (media) {
    return function () {
      media.crossOrigin = crossOrigin;
    };
  };
};

// ----------------------------------------------------------------------------

exports._networkState = function (media) {
  return media.networkState;
};

// ----------------------------------------------------------------------------

exports.preload = function (media) {
  return function () {
    return media.preload;
  };
};

exports.setPreload = function (preload) {
  return function (media) {
    return function () {
      media.preload = preload;
    };
  };
};

// ----------------------------------------------------------------------------

exports.load = function (media) {
  return function () {
    return media.load();
  };
};

// ----------------------------------------------------------------------------

exports._canPlayType = function (type, media) {
  return media.canPlayType(type);
};

// ----------------------------------------------------------------------------

exports._readyState = function (media) {
  return media.readyState;
};

// ----------------------------------------------------------------------------

exports.seeking = function (media) {
  return function () {
    return media.seeking;
  };
};

// ----------------------------------------------------------------------------

exports.currentTime = function (media) {
  return function () {
    return media.currentTime;
  };
};

exports.setCurrentTime = function (currentTime) {
  return function (media) {
    return function () {
      media.currentTime = currentTime;
    };
  };
};

// ----------------------------------------------------------------------------

exports.duration = function (media) {
  return function () {
    return media.duration;
  };
};

// ----------------------------------------------------------------------------

exports.getStartDate = function (media) {
  return function () {
    return media.getStartDate();
  };
};

// ----------------------------------------------------------------------------

exports.paused = function (media) {
  return function () {
    return media.paused;
  };
};

// ----------------------------------------------------------------------------

exports.defaultPlaybackRate = function (media) {
  return function () {
    return media.defaultPlaybackRate;
  };
};

exports.setDefaultPlaybackRate = function (defaultPlaybackRate) {
  return function (media) {
    return function () {
      media.defaultPlaybackRate = defaultPlaybackRate;
    };
  };
};

// ----------------------------------------------------------------------------

exports.playbackRate = function (media) {
  return function () {
    return media.playbackRate;
  };
};

exports.setPlaybackRate = function (playbackRate) {
  return function (media) {
    return function () {
      media.playbackRate = playbackRate;
    };
  };
};

// ----------------------------------------------------------------------------

exports.ended = function (media) {
  return function () {
    return media.ended;
  };
};

// ----------------------------------------------------------------------------

exports.autoplay = function (media) {
  return function () {
    return media.autoplay;
  };
};

exports.setAutoplay = function (autoplay) {
  return function (media) {
    return function () {
      media.autoplay = autoplay;
    };
  };
};

// ----------------------------------------------------------------------------

exports.loop = function (media) {
  return function () {
    return media.loop;
  };
};

exports.setLoop = function (loop) {
  return function (media) {
    return function () {
      media.loop = loop;
    };
  };
};

// ----------------------------------------------------------------------------

exports.play = function (media) {
  return function () {
    media.play();
  };
};

// ----------------------------------------------------------------------------

exports.pause = function (media) {
  return function () {
    media.pause();
  };
};

// ----------------------------------------------------------------------------

exports.mediaGroup = function (media) {
  return function () {
    return media.mediaGroup;
  };
};

exports.setMediaGroup = function (mediaGroup) {
  return function (media) {
    return function () {
      media.mediaGroup = mediaGroup;
    };
  };
};

// ----------------------------------------------------------------------------

exports.controls = function (media) {
  return function () {
    return media.controls;
  };
};

exports.setControls = function (controls) {
  return function (media) {
    return function () {
      media.controls = controls;
    };
  };
};

// ----------------------------------------------------------------------------

exports.volume = function (media) {
  return function () {
    return media.volume;
  };
};

exports.setVolume = function (volume) {
  return function (media) {
    return function () {
      media.volume = volume;
    };
  };
};

// ----------------------------------------------------------------------------

exports.muted = function (media) {
  return function () {
    return media.muted;
  };
};

exports.setMuted = function (muted) {
  return function (media) {
    return function () {
      media.muted = muted;
    };
  };
};

// ----------------------------------------------------------------------------

exports.defaultMuted = function (media) {
  return function () {
    return media.defaultMuted;
  };
};

exports.setDefaultMuted = function (defaultMuted) {
  return function (media) {
    return function () {
      media.defaultMuted = defaultMuted;
    };
  };
};

},{}],538:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_JSDate = require("../Data.JSDate/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Effect_Uncurried = require("../Effect.Uncurried/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_HTMLMediaElement_CanPlayType = require("../Web.HTML.HTMLMediaElement.CanPlayType/index.js");
var Web_HTML_HTMLMediaElement_NetworkState = require("../Web.HTML.HTMLMediaElement.NetworkState/index.js");
var Web_HTML_HTMLMediaElement_ReadyState = require("../Web.HTML.HTMLMediaElement.ReadyState/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var readyState = function (el) {
    return Data_Functor.map(Effect.functorEffect)(function ($0) {
        return Data_Maybe.fromMaybe(Web_HTML_HTMLMediaElement_ReadyState.HaveNothing.value)(Data_Enum.toEnum(Web_HTML_HTMLMediaElement_ReadyState.boundedEnumReadyState)($0));
    })(function () {
        return $foreign["_readyState"](el);
    });
};
var networkState = function (el) {
    return Data_Functor.map(Effect.functorEffect)(function ($1) {
        return Data_Maybe.fromMaybe(Web_HTML_HTMLMediaElement_NetworkState.Empty.value)(Data_Enum.toEnum(Web_HTML_HTMLMediaElement_NetworkState.boundedEnumNetworkState)($1));
    })(function () {
        return $foreign["_networkState"](el);
    });
};
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var canPlayType = function (ty) {
    return function (el) {
        return Data_Functor.map(Effect.functorEffect)(function ($2) {
            return Data_Maybe.fromMaybe(Web_HTML_HTMLMediaElement_CanPlayType.Unspecified.value)(Web_HTML_HTMLMediaElement_CanPlayType.parse($2));
        })(function () {
            return $foreign["_canPlayType"](ty, el);
        });
    };
};
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    networkState: networkState,
    canPlayType: canPlayType,
    readyState: readyState,
    src: $foreign.src,
    setSrc: $foreign.setSrc,
    currentSrc: $foreign.currentSrc,
    crossOrigin: $foreign.crossOrigin,
    setCrossOrigin: $foreign.setCrossOrigin,
    preload: $foreign.preload,
    setPreload: $foreign.setPreload,
    load: $foreign.load,
    seeking: $foreign.seeking,
    currentTime: $foreign.currentTime,
    setCurrentTime: $foreign.setCurrentTime,
    duration: $foreign.duration,
    getStartDate: $foreign.getStartDate,
    paused: $foreign.paused,
    defaultPlaybackRate: $foreign.defaultPlaybackRate,
    setDefaultPlaybackRate: $foreign.setDefaultPlaybackRate,
    playbackRate: $foreign.playbackRate,
    setPlaybackRate: $foreign.setPlaybackRate,
    ended: $foreign.ended,
    autoplay: $foreign.autoplay,
    setAutoplay: $foreign.setAutoplay,
    loop: $foreign.loop,
    setLoop: $foreign.setLoop,
    play: $foreign.play,
    pause: $foreign.pause,
    mediaGroup: $foreign.mediaGroup,
    setMediaGroup: $foreign.setMediaGroup,
    controls: $foreign.controls,
    setControls: $foreign.setControls,
    volume: $foreign.volume,
    setVolume: $foreign.setVolume,
    muted: $foreign.muted,
    setMuted: $foreign.setMuted,
    defaultMuted: $foreign.defaultMuted,
    setDefaultMuted: $foreign.setDefaultMuted
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Enum/index.js":133,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.JSDate/index.js":169,"../Data.Maybe/index.js":210,"../Effect.Uncurried/index.js":308,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.HTMLMediaElement.CanPlayType/index.js":534,"../Web.HTML.HTMLMediaElement.NetworkState/index.js":535,"../Web.HTML.HTMLMediaElement.ReadyState/index.js":536,"../Web.Internal.FFI/index.js":614,"./foreign.js":537}],539:[function(require,module,exports){
"use strict";

exports.name = function (meta) {
  return function () {
    return meta.name;
  };
};

exports.setName = function (name) {
  return function (meta) {
    return function () {
      meta.name = name;
    };
  };
};

// ----------------------------------------------------------------------------

exports.httpEquiv = function (meta) {
  return function () {
    return meta.httpEquiv;
  };
};

exports.setHttpEquiv = function (httpEquiv) {
  return function (meta) {
    return function () {
      meta.httpEquiv = httpEquiv;
    };
  };
};

// ----------------------------------------------------------------------------

exports.content = function (meta) {
  return function () {
    return meta.content;
  };
};

exports.setContent = function (content) {
  return function (meta) {
    return function () {
      meta.content = content;
    };
  };
};

},{}],540:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    name: $foreign.name,
    setName: $foreign.setName,
    httpEquiv: $foreign.httpEquiv,
    setHttpEquiv: $foreign.setHttpEquiv,
    content: $foreign.content,
    setContent: $foreign.setContent
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":539}],541:[function(require,module,exports){
"use strict";

exports.value = function (meter) {
  return function () {
    return meter.value;
  };
};

exports.setValue = function (value) {
  return function (meter) {
    return function () {
      meter.value = value;
    };
  };
};

// ----------------------------------------------------------------------------

exports.min = function (meter) {
  return function () {
    return meter.min;
  };
};

exports.setMin = function (min) {
  return function (meter) {
    return function () {
      meter.min = min;
    };
  };
};

// ----------------------------------------------------------------------------

exports.max = function (meter) {
  return function () {
    return meter.max;
  };
};

exports.setMax = function (max) {
  return function (meter) {
    return function () {
      meter.max = max;
    };
  };
};

// ----------------------------------------------------------------------------

exports.low = function (meter) {
  return function () {
    return meter.low;
  };
};

exports.setLow = function (low) {
  return function (meter) {
    return function () {
      meter.low = low;
    };
  };
};

// ----------------------------------------------------------------------------

exports.high = function (meter) {
  return function () {
    return meter.high;
  };
};

exports.setHigh = function (high) {
  return function (meter) {
    return function () {
      meter.high = high;
    };
  };
};

// ----------------------------------------------------------------------------

exports.optimum = function (meter) {
  return function () {
    return meter.optimum;
  };
};

exports.setOptimum = function (optimum) {
  return function (meter) {
    return function () {
      meter.optimum = optimum;
    };
  };
};

// ----------------------------------------------------------------------------

exports.labels = function (meter) {
  return function () {
    return meter.labels;
  };
};

},{}],542:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_DOM_NodeList = require("../Web.DOM.NodeList/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    value: $foreign.value,
    setValue: $foreign.setValue,
    min: $foreign.min,
    setMin: $foreign.setMin,
    max: $foreign.max,
    setMax: $foreign.setMax,
    low: $foreign.low,
    setLow: $foreign.setLow,
    high: $foreign.high,
    setHigh: $foreign.setHigh,
    optimum: $foreign.optimum,
    setOptimum: $foreign.setOptimum,
    labels: $foreign.labels
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.NodeList/index.js":451,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":541}],543:[function(require,module,exports){
"use strict";

exports.cite = function (mod) {
  return function () {
    return mod.cite;
  };
};

exports.setCite = function (cite) {
  return function (mod) {
    return function () {
      mod.cite = cite;
    };
  };
};

// ----------------------------------------------------------------------------

exports.dateTime = function (mod) {
  return function () {
    return mod.dateTime;
  };
};

exports.setDateTime = function (dateTime) {
  return function (mod) {
    return function () {
      mod.dateTime = dateTime;
    };
  };
};

},{}],544:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    cite: $foreign.cite,
    setCite: $foreign.setCite,
    dateTime: $foreign.dateTime,
    setDateTime: $foreign.setDateTime
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":543}],545:[function(require,module,exports){
"use strict";

exports.reversed = function (ol) {
  return function () {
    return ol.reversed;
  };
};

exports.setReversed = function (reversed) {
  return function (ol) {
    return function () {
      ol.reversed = reversed;
    };
  };
};

// ----------------------------------------------------------------------------

exports.start = function (ol) {
  return function () {
    return ol.start;
  };
};

exports.setStart = function (start) {
  return function (ol) {
    return function () {
      ol.start = start;
    };
  };
};

// ----------------------------------------------------------------------------

exports.type_ = function (ol) {
  return function () {
    return ol.type;
  };
};

exports.setType = function (type) {
  return function (ol) {
    return function () {
      ol.type = type;
    };
  };
};

},{}],546:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    reversed: $foreign.reversed,
    setReversed: $foreign.setReversed,
    start: $foreign.start,
    setStart: $foreign.setStart,
    type_: $foreign.type_,
    setType: $foreign.setType
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":545}],547:[function(require,module,exports){
"use strict";

exports.data_ = function (object) {
  return function () {
    return object.data;
  };
};

exports.setData = function (data) {
  return function (object) {
    return function () {
      object.data = data;
    };
  };
};

// ----------------------------------------------------------------------------

exports.type_ = function (object) {
  return function () {
    return object.type;
  };
};

exports.setType = function (type) {
  return function (object) {
    return function () {
      object.type = type;
    };
  };
};

// ----------------------------------------------------------------------------

exports.typeMustMatch = function (object) {
  return function () {
    return object.typeMustMatch;
  };
};

// ----------------------------------------------------------------------------

exports.name = function (object) {
  return function () {
    return object.name;
  };
};

exports.setName = function (name) {
  return function (object) {
    return function () {
      object.name = name;
    };
  };
};

// ----------------------------------------------------------------------------

exports.useMap = function (object) {
  return function () {
    return object.useMap;
  };
};

exports.setUseMap = function (useMap) {
  return function (object) {
    return function () {
      object.useMap = useMap;
    };
  };
};

// ----------------------------------------------------------------------------

exports._form = function (object) {
  return function () {
    return object.form;
  };
};

// ----------------------------------------------------------------------------

exports.width = function (object) {
  return function () {
    return object.width;
  };
};

exports.setWidth = function (width) {
  return function (object) {
    return function () {
      object.width = width;
    };
  };
};

// ----------------------------------------------------------------------------

exports.height = function (object) {
  return function () {
    return object.height;
  };
};

exports.setHeight = function (height) {
  return function (object) {
    return function () {
      object.height = height;
    };
  };
};

// ----------------------------------------------------------------------------

exports._contentDocument = function (object) {
  return function () {
    return object.contentDocument;
  };
};

// ----------------------------------------------------------------------------

exports.willValidate = function (object) {
  return function () {
    return object.willValidate;
  };
};

// ----------------------------------------------------------------------------

exports.validity = function (object) {
  return function () {
    return object.validity;
  };
};

// ----------------------------------------------------------------------------

exports.validationMessage = function (object) {
  return function () {
    return object.validationMessage;
  };
};

// ----------------------------------------------------------------------------

exports.checkValidity = function (object) {
  return function () {
    return object.checkValidity;
  };
};

// ----------------------------------------------------------------------------

exports.setCustomValidity = function (value) {
  return function (object) {
    return function () {
      object.setCustomValidity(value);
    };
  };
};

},{}],548:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_DOM_Document = require("../Web.DOM.Document/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");
var Web_HTML_ValidityState = require("../Web.HTML.ValidityState/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var form = function ($0) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_form"]($0));
};
var contentDocument = function ($1) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_contentDocument"]($1));
};
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    form: form,
    contentDocument: contentDocument,
    data_: $foreign.data_,
    setData: $foreign.setData,
    type_: $foreign.type_,
    setType: $foreign.setType,
    typeMustMatch: $foreign.typeMustMatch,
    name: $foreign.name,
    setName: $foreign.setName,
    useMap: $foreign.useMap,
    setUseMap: $foreign.setUseMap,
    width: $foreign.width,
    setWidth: $foreign.setWidth,
    height: $foreign.height,
    setHeight: $foreign.setHeight,
    willValidate: $foreign.willValidate,
    validity: $foreign.validity,
    validationMessage: $foreign.validationMessage,
    checkValidity: $foreign.checkValidity,
    setCustomValidity: $foreign.setCustomValidity
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.Document/index.js":439,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.HTMLFormElement/index.js":512,"../Web.HTML.ValidityState/index.js":608,"../Web.Internal.FFI/index.js":614,"./foreign.js":547}],549:[function(require,module,exports){
"use strict";

exports.disabled = function (optgroup) {
  return function () {
    return optgroup.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (optgroup) {
    return function () {
      optgroup.disabled = disabled;
    };
  };
};

// ----------------------------------------------------------------------------

exports.label = function (optgroup) {
  return function () {
    return optgroup.label;
  };
};

exports.setLabel = function (label) {
  return function (optgroup) {
    return function () {
      optgroup.label = label;
    };
  };
};

},{}],550:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    disabled: $foreign.disabled,
    setDisabled: $foreign.setDisabled,
    label: $foreign.label,
    setLabel: $foreign.setLabel
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":549}],551:[function(require,module,exports){
"use strict";

exports.disabled = function (option) {
  return function () {
    return option.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (option) {
    return function () {
      option.disabled = disabled;
    };
  };
};

// ----------------------------------------------------------------------------

exports._form = function (option) {
  return function () {
    return option.form;
  };
};

// ----------------------------------------------------------------------------

exports.label = function (option) {
  return function () {
    return option.label;
  };
};

exports.setLabel = function (label) {
  return function (option) {
    return function () {
      option.label = label;
    };
  };
};

// ----------------------------------------------------------------------------

exports.defaultSelected = function (option) {
  return function () {
    return option.defaultSelected;
  };
};

exports.setDefaultSelected = function (defaultSelected) {
  return function (option) {
    return function () {
      option.defaultSelected = defaultSelected;
    };
  };
};

// ----------------------------------------------------------------------------

exports.selected = function (option) {
  return function () {
    return option.selected;
  };
};

exports.setSelected = function (selected) {
  return function (option) {
    return function () {
      option.selected = selected;
    };
  };
};

// ----------------------------------------------------------------------------

exports.value = function (option) {
  return function () {
    return option.value;
  };
};

exports.setValue = function (value) {
  return function (option) {
    return function () {
      option.value = value;
    };
  };
};

// ----------------------------------------------------------------------------

exports.text = function (option) {
  return function () {
    return option.text;
  };
};

exports.setText = function (text) {
  return function (option) {
    return function () {
      option.text = text;
    };
  };
};

// ----------------------------------------------------------------------------

exports.index = function (option) {
  return function () {
    return option.index;
  };
};

},{}],552:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var form = function ($0) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_form"]($0));
};
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    form: form,
    disabled: $foreign.disabled,
    setDisabled: $foreign.setDisabled,
    label: $foreign.label,
    setLabel: $foreign.setLabel,
    defaultSelected: $foreign.defaultSelected,
    setDefaultSelected: $foreign.setDefaultSelected,
    selected: $foreign.selected,
    setSelected: $foreign.setSelected,
    value: $foreign.value,
    setValue: $foreign.setValue,
    text: $foreign.text,
    setText: $foreign.setText,
    index: $foreign.index
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.HTMLFormElement/index.js":512,"../Web.Internal.FFI/index.js":614,"./foreign.js":551}],553:[function(require,module,exports){
"use strict";

exports._form = function (output) {
  return function () {
    return output.form;
  };
};

// ----------------------------------------------------------------------------

exports.name = function (output) {
  return function () {
    return output.name;
  };
};

exports.setName = function (name) {
  return function (output) {
    return function () {
      output.name = name;
    };
  };
};

// ----------------------------------------------------------------------------

exports.type_ = function (output) {
  return function () {
    return output.type;
  };
};

// ----------------------------------------------------------------------------

exports.defaultValue = function (output) {
  return function () {
    return output.defaultValue;
  };
};

exports.setDefaultValue = function (defaultValue) {
  return function (output) {
    return function () {
      output.defaultValue = defaultValue;
    };
  };
};

// ----------------------------------------------------------------------------

exports.value = function (output) {
  return function () {
    return output.value;
  };
};

exports.setValue = function (value) {
  return function (output) {
    return function () {
      output.value = value;
    };
  };
};

// ----------------------------------------------------------------------------

exports.willValidate = function (output) {
  return function () {
    return output.willValidate;
  };
};

// ----------------------------------------------------------------------------

exports.validity = function (output) {
  return function () {
    return output.validity;
  };
};

// ----------------------------------------------------------------------------

exports.validationMessage = function (output) {
  return function () {
    return output.validationMessage;
  };
};

// ----------------------------------------------------------------------------

exports.checkValidity = function (output) {
  return function () {
    return output.checkValidity;
  };
};

// ----------------------------------------------------------------------------

exports.setCustomValidity = function (value) {
  return function (output) {
    return function () {
      output.setCustomValidity(value);
    };
  };
};

// ----------------------------------------------------------------------------

exports.labels = function (output) {
  return function () {
    return output.labels;
  };
};

},{}],554:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_DOM_NodeList = require("../Web.DOM.NodeList/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");
var Web_HTML_ValidityState = require("../Web.HTML.ValidityState/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var form = function ($0) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_form"]($0));
};
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    form: form,
    name: $foreign.name,
    setName: $foreign.setName,
    type_: $foreign.type_,
    defaultValue: $foreign.defaultValue,
    setDefaultValue: $foreign.setDefaultValue,
    value: $foreign.value,
    setValue: $foreign.setValue,
    willValidate: $foreign.willValidate,
    validity: $foreign.validity,
    validationMessage: $foreign.validationMessage,
    checkValidity: $foreign.checkValidity,
    setCustomValidity: $foreign.setCustomValidity,
    labels: $foreign.labels
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.NodeList/index.js":451,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.HTMLFormElement/index.js":512,"../Web.HTML.ValidityState/index.js":608,"../Web.Internal.FFI/index.js":614,"./foreign.js":553}],555:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Maybe = require("../Data.Maybe/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Data.Maybe/index.js":210,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614}],556:[function(require,module,exports){
"use strict";

exports.name = function (param) {
  return function () {
    return param.name;
  };
};

exports.setName = function (name) {
  return function (param) {
    return function () {
      param.name = name;
    };
  };
};

// ----------------------------------------------------------------------------

exports.value = function (param) {
  return function () {
    return param.value;
  };
};

exports.setValue = function (value) {
  return function (param) {
    return function () {
      param.value = value;
    };
  };
};

},{}],557:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    name: $foreign.name,
    setName: $foreign.setName,
    value: $foreign.value,
    setValue: $foreign.setValue
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":556}],558:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Maybe = require("../Data.Maybe/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Data.Maybe/index.js":210,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614}],559:[function(require,module,exports){
"use strict";

exports.value = function (progress) {
  return function () {
    return progress.value;
  };
};

exports.setValue = function (value) {
  return function (progress) {
    return function () {
      progress.value = value;
    };
  };
};

// ----------------------------------------------------------------------------

exports.max = function (progress) {
  return function () {
    return progress.max;
  };
};

exports.setMax = function (max) {
  return function (progress) {
    return function () {
      progress.max = max;
    };
  };
};

// ----------------------------------------------------------------------------

exports.position = function (progress) {
  return function () {
    return progress.position;
  };
};

// ----------------------------------------------------------------------------

exports.labels = function (progress) {
  return function () {
    return progress.labels;
  };
};

},{}],560:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_DOM_NodeList = require("../Web.DOM.NodeList/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    value: $foreign.value,
    setValue: $foreign.setValue,
    max: $foreign.max,
    setMax: $foreign.setMax,
    position: $foreign.position,
    labels: $foreign.labels
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.NodeList/index.js":451,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":559}],561:[function(require,module,exports){
"use strict";

exports.cite = function (quote) {
  return function () {
    return quote.cite;
  };
};

exports.setCite = function (cite) {
  return function (quote) {
    return function () {
      quote.cite = cite;
    };
  };
};

},{}],562:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    cite: $foreign.cite,
    setCite: $foreign.setCite
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":561}],563:[function(require,module,exports){
"use strict";

exports.src = function (script) {
  return function () {
    return script.src;
  };
};

exports.setSrc = function (src) {
  return function (script) {
    return function () {
      script.src = src;
    };
  };
};

// ----------------------------------------------------------------------------

exports.type_ = function (script) {
  return function () {
    return script.type;
  };
};

exports.setType = function (type) {
  return function (script) {
    return function () {
      script.type = type;
    };
  };
};

// ----------------------------------------------------------------------------

exports.charset = function (script) {
  return function () {
    return script.charset;
  };
};

exports.setCharset = function (charset) {
  return function (script) {
    return function () {
      script.charset = charset;
    };
  };
};

// ----------------------------------------------------------------------------

exports.async = function (script) {
  return function () {
    return script.async;
  };
};

exports.setAsync = function (async) {
  return function (script) {
    return function () {
      script.async = async;
    };
  };
};

// ----------------------------------------------------------------------------

exports.defer = function (script) {
  return function () {
    return script.defer;
  };
};

exports.setDefer = function (defer) {
  return function (script) {
    return function () {
      script.defer = defer;
    };
  };
};

// ----------------------------------------------------------------------------

exports.crossOrigin = function (script) {
  return function () {
    return script.crossOrigin;
  };
};

exports.setCrossOrigin = function (crossOrigin) {
  return function (script) {
    return function () {
      script.crossOrigin = crossOrigin;
    };
  };
};

// ----------------------------------------------------------------------------

exports.text = function (script) {
  return function () {
    return script.text;
  };
};

exports.setText = function (text) {
  return function (script) {
    return function () {
      script.text = text;
    };
  };
};

},{}],564:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    src: $foreign.src,
    setSrc: $foreign.setSrc,
    type_: $foreign.type_,
    setType: $foreign.setType,
    charset: $foreign.charset,
    setCharset: $foreign.setCharset,
    async: $foreign.async,
    setAsync: $foreign.setAsync,
    defer: $foreign.defer,
    setDefer: $foreign.setDefer,
    crossOrigin: $foreign.crossOrigin,
    setCrossOrigin: $foreign.setCrossOrigin,
    text: $foreign.text,
    setText: $foreign.setText
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":563}],565:[function(require,module,exports){
"use strict";

exports.autofocus = function (select) {
  return function () {
    return select.autofocus;
  };
};

exports.setAutofocus = function (autofocus) {
  return function (select) {
    return function () {
      select.autofocus = autofocus;
    };
  };
};

// ----------------------------------------------------------------------------

exports.disabled = function (select) {
  return function () {
    return select.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (select) {
    return function () {
      select.disabled = disabled;
    };
  };
};

// ----------------------------------------------------------------------------

exports.multiple = function (select) {
  return function () {
    return select.multiple;
  };
};

exports.setMultiple = function (multiple) {
  return function (select) {
    return function () {
      select.multiple = multiple;
    };
  };
};

// ----------------------------------------------------------------------------

exports._form = function (select) {
  return function () {
    return select.form;
  };
};

// ----------------------------------------------------------------------------

exports.name = function (select) {
  return function () {
    return select.name;
  };
};

exports.setName = function (name) {
  return function (select) {
    return function () {
      select.name = name;
    };
  };
};

// ----------------------------------------------------------------------------

exports.required = function (select) {
  return function () {
    return select.required;
  };
};

exports.setRequired = function (required) {
  return function (select) {
    return function () {
      select.required = required;
    };
  };
};

// ----------------------------------------------------------------------------

exports.size = function (select) {
  return function () {
    return select.size;
  };
};

exports.setSize = function (size) {
  return function (select) {
    return function () {
      select.size = size;
    };
  };
};

// ----------------------------------------------------------------------------

exports.type_ = function (select) {
  return function () {
    return select.type;
  };
};

// ----------------------------------------------------------------------------

exports.length = function (select) {
  return function () {
    return select.length;
  };
};

exports.setLength = function (length) {
  return function (select) {
    return function () {
      select.length = length;
    };
  };
};

// ----------------------------------------------------------------------------

exports.selectedOptions = function (select) {
  return function () {
    return select.selectedOptions;
  };
};

// ----------------------------------------------------------------------------

exports.selectedIndex = function (select) {
  return function () {
    return select.selectedIndex;
  };
};

exports.setSelectedIndex = function (selectedIndex) {
  return function (select) {
    return function () {
      select.selectedIndex = selectedIndex;
    };
  };
};

// ----------------------------------------------------------------------------

exports.value = function (select) {
  return function () {
    return select.value;
  };
};

exports.setValue = function (value) {
  return function (select) {
    return function () {
      select.value = value;
    };
  };
};

// ----------------------------------------------------------------------------

exports.willValidate = function (select) {
  return function () {
    return select.willValidate;
  };
};

// ----------------------------------------------------------------------------

exports.validity = function (select) {
  return function () {
    return select.validity;
  };
};

// ----------------------------------------------------------------------------

exports.validationMessage = function (select) {
  return function () {
    return select.validationMessage;
  };
};

// ----------------------------------------------------------------------------

exports.checkValidity = function (select) {
  return function () {
    return select.checkValidity;
  };
};

// ----------------------------------------------------------------------------

exports.setCustomValidity = function (value) {
  return function (select) {
    return function () {
      select.setCustomValidity(value);
    };
  };
};

// ----------------------------------------------------------------------------

exports.labels = function (select) {
  return function () {
    return select.labels;
  };
};

},{}],566:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_DOM_HTMLCollection = require("../Web.DOM.HTMLCollection/index.js");
var Web_DOM_NodeList = require("../Web.DOM.NodeList/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");
var Web_HTML_ValidityState = require("../Web.HTML.ValidityState/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var form = function ($0) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_form"]($0));
};
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    form: form,
    autofocus: $foreign.autofocus,
    setAutofocus: $foreign.setAutofocus,
    disabled: $foreign.disabled,
    setDisabled: $foreign.setDisabled,
    multiple: $foreign.multiple,
    setMultiple: $foreign.setMultiple,
    name: $foreign.name,
    setName: $foreign.setName,
    required: $foreign.required,
    setRequired: $foreign.setRequired,
    size: $foreign.size,
    setSize: $foreign.setSize,
    type_: $foreign.type_,
    length: $foreign.length,
    setLength: $foreign.setLength,
    selectedOptions: $foreign.selectedOptions,
    selectedIndex: $foreign.selectedIndex,
    setSelectedIndex: $foreign.setSelectedIndex,
    value: $foreign.value,
    setValue: $foreign.setValue,
    willValidate: $foreign.willValidate,
    validity: $foreign.validity,
    validationMessage: $foreign.validationMessage,
    checkValidity: $foreign.checkValidity,
    setCustomValidity: $foreign.setCustomValidity,
    labels: $foreign.labels
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.HTMLCollection/index.js":446,"../Web.DOM.NodeList/index.js":451,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.HTMLFormElement/index.js":512,"../Web.HTML.ValidityState/index.js":608,"../Web.Internal.FFI/index.js":614,"./foreign.js":565}],567:[function(require,module,exports){
"use strict";

exports.src = function (source) {
  return function () {
    return source.src;
  };
};

exports.setSrc = function (src) {
  return function (source) {
    return function () {
      source.src = src;
    };
  };
};

// ----------------------------------------------------------------------------

exports.type_ = function (source) {
  return function () {
    return source.type;
  };
};

exports.setType = function (type) {
  return function (source) {
    return function () {
      source.type = type;
    };
  };
};

// ----------------------------------------------------------------------------

exports.media = function (source) {
  return function () {
    return source.media;
  };
};

exports.setMedia = function (media) {
  return function (source) {
    return function () {
      source.media = media;
    };
  };
};

},{}],568:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    src: $foreign.src,
    setSrc: $foreign.setSrc,
    type_: $foreign.type_,
    setType: $foreign.setType,
    media: $foreign.media,
    setMedia: $foreign.setMedia
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":567}],569:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Maybe = require("../Data.Maybe/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Data.Maybe/index.js":210,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614}],570:[function(require,module,exports){
"use strict";

exports.media = function (style) {
  return function () {
    return style.media;
  };
};

exports.setMedia = function (media) {
  return function (style) {
    return function () {
      style.media = media;
    };
  };
};

// ----------------------------------------------------------------------------

exports.type_ = function (style) {
  return function () {
    return style.type;
  };
};

exports.setType = function (type) {
  return function (style) {
    return function () {
      style.type = type;
    };
  };
};

},{}],571:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    media: $foreign.media,
    setMedia: $foreign.setMedia,
    type_: $foreign.type_,
    setType: $foreign.setType
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":570}],572:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Maybe = require("../Data.Maybe/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Data.Maybe/index.js":210,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614}],573:[function(require,module,exports){
"use strict";

exports.colSpan = function (cell) {
  return function () {
    return cell.colSpan;
  };
};

exports.setColSpan = function (colSpan) {
  return function (cell) {
    return function () {
      cell.colSpan = colSpan;
    };
  };
};

// ----------------------------------------------------------------------------

exports.rowSpan = function (cell) {
  return function () {
    return cell.rowSpan;
  };
};

exports.setRowSpan = function (rowSpan) {
  return function (cell) {
    return function () {
      cell.rowSpan = rowSpan;
    };
  };
};

// ----------------------------------------------------------------------------

exports.cellIndex = function (cell) {
  return function () {
    return cell.cellIndex;
  };
};

},{}],574:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    colSpan: $foreign.colSpan,
    setColSpan: $foreign.setColSpan,
    rowSpan: $foreign.rowSpan,
    setRowSpan: $foreign.setRowSpan,
    cellIndex: $foreign.cellIndex
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":573}],575:[function(require,module,exports){
"use strict";

exports.span = function (col) {
  return function () {
    return col.span;
  };
};

exports.setSpan = function (span) {
  return function (col) {
    return function () {
      col.span = span;
    };
  };
};

},{}],576:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    span: $foreign.span,
    setSpan: $foreign.setSpan
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":575}],577:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Maybe = require("../Data.Maybe/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_HTMLTableCellElement = require("../Web.HTML.HTMLTableCellElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLTableCellElement = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromHTMLTableCellElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
module.exports = {
    fromHTMLTableCellElement: fromHTMLTableCellElement,
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLTableCellElement: toHTMLTableCellElement,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Data.Maybe/index.js":210,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.HTMLTableCellElement/index.js":574,"../Web.Internal.FFI/index.js":614}],578:[function(require,module,exports){
"use strict";

exports._caption = function (table) {
  return function () {
    return table.caption;
  };
};

exports._setCaption = function (caption) {
  return function (table) {
    return function () {
      table.caption = caption;
    };
  };
};

// ----------------------------------------------------------------------------

exports.createCaption = function (table) {
  return function () {
    return table.createCaption();
  };
};

// ----------------------------------------------------------------------------

exports.deleteCaption = function (table) {
  return function () {
    table.deleteCaption();
  };
};

// ----------------------------------------------------------------------------

exports._tHead = function (table) {
  return function () {
    return table.tHead;
  };
};

exports._setTHead = function (tHead) {
  return function (table) {
    return function () {
      table.tHead = tHead;
    };
  };
};

// ----------------------------------------------------------------------------

exports.createTHead = function (table) {
  return function () {
    return table.createTHead();
  };
};

// ----------------------------------------------------------------------------

exports.deleteTHead = function (table) {
  return function () {
    table.deleteTHead();
  };
};

// ----------------------------------------------------------------------------

exports._tFoot = function (table) {
  return function () {
    return table.tFoot;
  };
};

exports._setTFoot = function (tFoot) {
  return function (table) {
    return function () {
      table.tFoot = tFoot;
    };
  };
};

// ----------------------------------------------------------------------------

exports.createTFoot = function (table) {
  return function () {
    return table.createTFoot();
  };
};

// ----------------------------------------------------------------------------

exports.deleteTFoot = function (table) {
  return function () {
    table.deleteTFoot();
  };
};

// ----------------------------------------------------------------------------

exports.tBodies = function (table) {
  return function () {
    return table.tBodies;
  };
};

// ----------------------------------------------------------------------------

exports.createTBody = function (table) {
  return function () {
    return table.createTBody();
  };
};

// ----------------------------------------------------------------------------

exports.rows = function (table) {
  return function () {
    return table.rows;
  };
};

// ----------------------------------------------------------------------------

exports["insertRow'"] = function (index) {
  return function (table) {
    return function () {
      return table.insertRow(index);
    };
  };
};

// ----------------------------------------------------------------------------

exports.deleteRow = function (index) {
  return function (table) {
    return function () {
      table.deleteRow(index);
    };
  };
};

// ----------------------------------------------------------------------------

exports.border = function (table) {
  return function () {
    return table.border;
  };
};

exports.setBorder = function (border) {
  return function (table) {
    return function () {
      table.border = border;
    };
  };
};

},{}],579:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_DOM_HTMLCollection = require("../Web.DOM.HTMLCollection/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_HTMLTableCaptionElement = require("../Web.HTML.HTMLTableCaptionElement/index.js");
var Web_HTML_HTMLTableSectionElement = require("../Web.HTML.HTMLTableSectionElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var tHead = function ($0) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_tHead"]($0));
};
var tFoot = function ($1) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_tFoot"]($1));
};
var setTHead = function ($2) {
    return $foreign["_setTHead"](Data_Nullable.toNullable($2));
};
var setTFoot = function ($3) {
    return $foreign["_setTFoot"](Data_Nullable.toNullable($3));
};
var setCaption = function ($4) {
    return $foreign["_setCaption"](Data_Nullable.toNullable($4));
};
var insertRow = $foreign["insertRow'"](-1 | 0);
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var caption = function ($5) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_caption"]($5));
};
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    caption: caption,
    setCaption: setCaption,
    tHead: tHead,
    setTHead: setTHead,
    tFoot: tFoot,
    setTFoot: setTFoot,
    insertRow: insertRow,
    createCaption: $foreign.createCaption,
    deleteCaption: $foreign.deleteCaption,
    createTHead: $foreign.createTHead,
    deleteTHead: $foreign.deleteTHead,
    createTFoot: $foreign.createTFoot,
    deleteTFoot: $foreign.deleteTFoot,
    tBodies: $foreign.tBodies,
    createTBody: $foreign.createTBody,
    rows: $foreign.rows,
    "insertRow'": $foreign["insertRow'"],
    deleteRow: $foreign.deleteRow,
    border: $foreign.border,
    setBorder: $foreign.setBorder
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Data.Ring/index.js":242,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.HTMLCollection/index.js":446,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.HTMLTableCaptionElement/index.js":572,"../Web.HTML.HTMLTableSectionElement/index.js":585,"../Web.Internal.FFI/index.js":614,"./foreign.js":578}],580:[function(require,module,exports){
"use strict";

exports.scope = function (cell) {
  return function () {
    return cell.scope;
  };
};

exports.setScope = function (scope) {
  return function (cell) {
    return function () {
      cell.scope = scope;
    };
  };
};

// ----------------------------------------------------------------------------

exports.abbr = function (cell) {
  return function () {
    return cell.abbr;
  };
};

exports.setAbbr = function (abbr) {
  return function (cell) {
    return function () {
      cell.abbr = abbr;
    };
  };
};

},{}],581:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_HTMLTableCellElement = require("../Web.HTML.HTMLTableCellElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLTableCellElement = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromHTMLTableCellElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
module.exports = {
    fromHTMLTableCellElement: fromHTMLTableCellElement,
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLTableCellElement: toHTMLTableCellElement,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    scope: $foreign.scope,
    setScope: $foreign.setScope,
    abbr: $foreign.abbr,
    setAbbr: $foreign.setAbbr
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.HTMLTableCellElement/index.js":574,"../Web.Internal.FFI/index.js":614,"./foreign.js":580}],582:[function(require,module,exports){
"use strict";

exports.rowIndex = function (row) {
  return function () {
    return row.rowIndex;
  };
};

// ----------------------------------------------------------------------------

exports.sectionRowIndex = function (row) {
  return function () {
    return row.sectionRowIndex;
  };
};

// ----------------------------------------------------------------------------

exports.cells = function (row) {
  return function () {
    return row.cells;
  };
};

// ----------------------------------------------------------------------------

exports.cells = function (row) {
  return function () {
    return row.cells;
  };
};

// ----------------------------------------------------------------------------

exports["insertCell'"] = function (index) {
  return function (row) {
    return function () {
      return row.insertCell(index);
    };
  };
};

// ----------------------------------------------------------------------------

exports.deleteCell = function (index) {
  return function (row) {
    return function () {
      row.deleteCell(index);
    };
  };
};

},{}],583:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_DOM_HTMLCollection = require("../Web.DOM.HTMLCollection/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var insertCell = $foreign["insertCell'"](-1 | 0);
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    insertCell: insertCell,
    rowIndex: $foreign.rowIndex,
    sectionRowIndex: $foreign.sectionRowIndex,
    cells: $foreign.cells,
    "insertCell'": $foreign["insertCell'"],
    deleteCell: $foreign.deleteCell
};

},{"../Data.Maybe/index.js":210,"../Data.Ring/index.js":242,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.HTMLCollection/index.js":446,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":582}],584:[function(require,module,exports){
"use strict";

exports.rows = function (section) {
  return function () {
    return section.rows;
  };
};

// ----------------------------------------------------------------------------

exports["insertRow'"] = function (index) {
  return function (section) {
    return function () {
      return section.insertRow(index);
    };
  };
};

// ----------------------------------------------------------------------------

exports.deleteRow = function (index) {
  return function (section) {
    return function () {
      section.deleteRow(index);
    };
  };
};

},{}],585:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_DOM_HTMLCollection = require("../Web.DOM.HTMLCollection/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var insertRow = $foreign["insertRow'"](-1 | 0);
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    insertRow: insertRow,
    rows: $foreign.rows,
    "insertRow'": $foreign["insertRow'"],
    deleteRow: $foreign.deleteRow
};

},{"../Data.Maybe/index.js":210,"../Data.Ring/index.js":242,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.HTMLCollection/index.js":446,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":584}],586:[function(require,module,exports){
"use strict";

exports.content = function (template) {
  return function () {
    return template.content;
  };
};

},{}],587:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_DOM_DocumentFragment = require("../Web.DOM.DocumentFragment/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    content: $foreign.content
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Unsafe.Coerce/index.js":425,"../Web.DOM.DocumentFragment/index.js":440,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":586}],588:[function(require,module,exports){
"use strict";

exports.autocomplete = function (textarea) {
  return function () {
    return textarea.autocomplete;
  };
};

exports.setAutocomplete = function (autocomplete) {
  return function (textarea) {
    return function () {
      textarea.autocomplete = autocomplete;
    };
  };
};

// ----------------------------------------------------------------------------

exports.autofocus = function (textarea) {
  return function () {
    return textarea.autofocus;
  };
};

exports.setAutofocus = function (autofocus) {
  return function (textarea) {
    return function () {
      textarea.autofocus = autofocus;
    };
  };
};

// ----------------------------------------------------------------------------

exports.cols = function (textarea) {
  return function () {
    return textarea.cols;
  };
};

exports.setCols = function (cols) {
  return function (textarea) {
    return function () {
      textarea.cols = cols;
    };
  };
};

// ----------------------------------------------------------------------------

exports.dirName = function (textarea) {
  return function () {
    return textarea.dirName;
  };
};

exports.setDirName = function (dirName) {
  return function (textarea) {
    return function () {
      textarea.dirName = dirName;
    };
  };
};

// ----------------------------------------------------------------------------

exports.disabled = function (textarea) {
  return function () {
    return textarea.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (textarea) {
    return function () {
      textarea.disabled = disabled;
    };
  };
};

// ----------------------------------------------------------------------------

exports._form = function (textarea) {
  return function () {
    return textarea.form;
  };
};

// ----------------------------------------------------------------------------

exports.maxLength = function (textarea) {
  return function () {
    return textarea.maxLength;
  };
};

exports.setMaxLength = function (maxLength) {
  return function (textarea) {
    return function () {
      textarea.maxLength = maxLength;
    };
  };
};

// ----------------------------------------------------------------------------

exports.minLength = function (textarea) {
  return function () {
    return textarea.minLength;
  };
};

exports.setMinLength = function (minLength) {
  return function (textarea) {
    return function () {
      textarea.minLength = minLength;
    };
  };
};

// ----------------------------------------------------------------------------

exports.name = function (textarea) {
  return function () {
    return textarea.name;
  };
};

exports.setName = function (name) {
  return function (textarea) {
    return function () {
      textarea.name = name;
    };
  };
};

// ----------------------------------------------------------------------------

exports.placeholder = function (textarea) {
  return function () {
    return textarea.placeholder;
  };
};

exports.setPlaceholder = function (placeholder) {
  return function (textarea) {
    return function () {
      textarea.placeholder = placeholder;
    };
  };
};

// ----------------------------------------------------------------------------

exports.readOnly = function (textarea) {
  return function () {
    return textarea.readOnly;
  };
};

exports.setReadOnly = function (readOnly) {
  return function (textarea) {
    return function () {
      textarea.readOnly = readOnly;
    };
  };
};

// ----------------------------------------------------------------------------

exports.required = function (textarea) {
  return function () {
    return textarea.required;
  };
};

exports.setRequired = function (required) {
  return function (textarea) {
    return function () {
      textarea.required = required;
    };
  };
};

// ----------------------------------------------------------------------------

exports.rows = function (textarea) {
  return function () {
    return textarea.rows;
  };
};

exports.setRows = function (rows) {
  return function (textarea) {
    return function () {
      textarea.rows = rows;
    };
  };
};

// ----------------------------------------------------------------------------

exports.wrap = function (textarea) {
  return function () {
    return textarea.wrap;
  };
};

exports.setWrap = function (wrap) {
  return function (textarea) {
    return function () {
      textarea.wrap = wrap;
    };
  };
};

// ----------------------------------------------------------------------------

exports.type_ = function (textarea) {
  return function () {
    return textarea.type;
  };
};

// ----------------------------------------------------------------------------

exports.defaultValue = function (textarea) {
  return function () {
    return textarea.defaultValue;
  };
};

exports.setDefaultValue = function (defaultValue) {
  return function (textarea) {
    return function () {
      textarea.defaultValue = defaultValue;
    };
  };
};

// ----------------------------------------------------------------------------

exports.value = function (textarea) {
  return function () {
    return textarea.value;
  };
};

exports.setValue = function (value) {
  return function (textarea) {
    return function () {
      textarea.value = value;
    };
  };
};

// ----------------------------------------------------------------------------

exports.textLength = function (textarea) {
  return function () {
    return textarea.textLength;
  };
};

// ----------------------------------------------------------------------------

exports.willValidate = function (textarea) {
  return function () {
    return textarea.willValidate;
  };
};

// ----------------------------------------------------------------------------

exports.validity = function (textarea) {
  return function () {
    return textarea.validity;
  };
};

// ----------------------------------------------------------------------------

exports.validationMessage = function (textarea) {
  return function () {
    return textarea.validationMessage;
  };
};

// ----------------------------------------------------------------------------

exports.checkValidity = function (textarea) {
  return function () {
    return textarea.checkValidity;
  };
};

// ----------------------------------------------------------------------------

exports.setCustomValidity = function (value) {
  return function (textarea) {
    return function () {
      textarea.setCustomValidity(value);
    };
  };
};

// ----------------------------------------------------------------------------

exports.labels = function (textarea) {
  return function () {
    return textarea.labels;
  };
};

// ----------------------------------------------------------------------------

exports.select = function (textarea) {
  return function () {
    textarea.select();
  };
};

// ----------------------------------------------------------------------------

exports.selectionStart = function (textarea) {
  return function () {
    return textarea.selectionStart;
  };
};

exports.setSelectionStart = function (selectionStart) {
  return function (textarea) {
    return function () {
      textarea.selectionStart = selectionStart;
    };
  };
};

// ----------------------------------------------------------------------------

exports.selectionEnd = function (textarea) {
  return function () {
    return textarea.selectionEnd;
  };
};

exports.setSelectionEnd = function (selectionEnd) {
  return function (textarea) {
    return function () {
      textarea.selectionEnd = selectionEnd;
    };
  };
};

// ----------------------------------------------------------------------------

exports.selectionDirection = function (textarea) {
  return function () {
    return textarea.selectionDirection;
  };
};

exports.setSelectionDirection = function (selectionDirection) {
  return function (textarea) {
    return function () {
      textarea.selectionDirection = selectionDirection;
    };
  };
};

// ----------------------------------------------------------------------------

exports.setRangeText = function (replacement) {
  return function (textarea) {
    return function () {
      textarea.setRangeText(replacement);
    };
  };
};

exports._setRangeText = function (replacement, start, end, selectionMode, textarea) {
  textarea.setRangeText(replacement, start, end, selectionMode);
};

// ----------------------------------------------------------------------------

exports.setSelectionRange = function (start) {
  return function (end) {
    return function (direction) {
      return function (textarea) {
        return function () {
          textarea.setSelectionRange(start, end, direction);
        };
      };
    };
  };
};

},{}],589:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Effect_Uncurried = require("../Effect.Uncurried/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_DOM_NodeList = require("../Web.DOM.NodeList/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");
var Web_HTML_SelectionMode = require("../Web.HTML.SelectionMode/index.js");
var Web_HTML_ValidityState = require("../Web.HTML.ValidityState/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var setRangeText$prime = function (rpl) {
    return function (s) {
        return function (e) {
            return function (mode) {
                return function (area) {
                    return function () {
                        return $foreign["_setRangeText"](rpl, s, e, Web_HTML_SelectionMode.print(mode), area);
                    };
                };
            };
        };
    };
};
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var form = function ($0) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_form"]($0));
};
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    form: form,
    "setRangeText'": setRangeText$prime,
    autocomplete: $foreign.autocomplete,
    setAutocomplete: $foreign.setAutocomplete,
    autofocus: $foreign.autofocus,
    setAutofocus: $foreign.setAutofocus,
    cols: $foreign.cols,
    setCols: $foreign.setCols,
    dirName: $foreign.dirName,
    setDirName: $foreign.setDirName,
    disabled: $foreign.disabled,
    setDisabled: $foreign.setDisabled,
    maxLength: $foreign.maxLength,
    setMaxLength: $foreign.setMaxLength,
    minLength: $foreign.minLength,
    setMinLength: $foreign.setMinLength,
    name: $foreign.name,
    setName: $foreign.setName,
    placeholder: $foreign.placeholder,
    setPlaceholder: $foreign.setPlaceholder,
    readOnly: $foreign.readOnly,
    setReadOnly: $foreign.setReadOnly,
    required: $foreign.required,
    setRequired: $foreign.setRequired,
    rows: $foreign.rows,
    setRows: $foreign.setRows,
    wrap: $foreign.wrap,
    setWrap: $foreign.setWrap,
    type_: $foreign.type_,
    defaultValue: $foreign.defaultValue,
    setDefaultValue: $foreign.setDefaultValue,
    value: $foreign.value,
    setValue: $foreign.setValue,
    textLength: $foreign.textLength,
    willValidate: $foreign.willValidate,
    validity: $foreign.validity,
    validationMessage: $foreign.validationMessage,
    checkValidity: $foreign.checkValidity,
    setCustomValidity: $foreign.setCustomValidity,
    labels: $foreign.labels,
    select: $foreign.select,
    selectionStart: $foreign.selectionStart,
    setSelectionStart: $foreign.setSelectionStart,
    selectionEnd: $foreign.selectionEnd,
    setSelectionEnd: $foreign.setSelectionEnd,
    selectionDirection: $foreign.selectionDirection,
    setSelectionDirection: $foreign.setSelectionDirection,
    setRangeText: $foreign.setRangeText,
    setSelectionRange: $foreign.setSelectionRange
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect.Uncurried/index.js":308,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM.NodeList/index.js":451,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.HTMLFormElement/index.js":512,"../Web.HTML.SelectionMode/index.js":606,"../Web.HTML.ValidityState/index.js":608,"../Web.Internal.FFI/index.js":614,"./foreign.js":588}],590:[function(require,module,exports){
"use strict";

exports.dateTime = function (time) {
  return function () {
    return time.dateTime;
  };
};

exports.setDateTime = function (dateTime) {
  return function (time) {
    return function () {
      time.dateTime = dateTime;
    };
  };
};

},{}],591:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    dateTime: $foreign.dateTime,
    setDateTime: $foreign.setDateTime
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":590}],592:[function(require,module,exports){
"use strict";

exports.text = function (title) {
  return function () {
    return title.text;
  };
};

exports.setText = function (text) {
  return function (title) {
    return function () {
      title.text = text;
    };
  };
};

},{}],593:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    text: $foreign.text,
    setText: $foreign.setText
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614,"./foreign.js":592}],594:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var None = (function () {
    function None() {

    };
    None.value = new None();
    return None;
})();
var Loading = (function () {
    function Loading() {

    };
    Loading.value = new Loading();
    return Loading;
})();
var Loaded = (function () {
    function Loaded() {

    };
    Loaded.value = new Loaded();
    return Loaded;
})();
var $$Error = (function () {
    function $$Error() {

    };
    $$Error.value = new $$Error();
    return $$Error;
})();
var toEnumReadyState = function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(None.value);
    };
    if (v === 1) {
        return new Data_Maybe.Just(Loading.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(Loaded.value);
    };
    if (v === 3) {
        return new Data_Maybe.Just($$Error.value);
    };
    return Data_Maybe.Nothing.value;
};
var showReadyState = new Data_Show.Show(function (v) {
    if (v instanceof None) {
        return "None";
    };
    if (v instanceof Loading) {
        return "Loading";
    };
    if (v instanceof Loaded) {
        return "Loaded";
    };
    if (v instanceof $$Error) {
        return "Error";
    };
    throw new Error("Failed pattern match at Web.HTML.HTMLTrackElement.ReadyState (line 29, column 1 - line 29, column 43): " + [ v.constructor.name ]);
});
var fromEnumReadyState = function (v) {
    if (v instanceof None) {
        return 0;
    };
    if (v instanceof Loading) {
        return 1;
    };
    if (v instanceof Loaded) {
        return 2;
    };
    if (v instanceof $$Error) {
        return 3;
    };
    throw new Error("Failed pattern match at Web.HTML.HTMLTrackElement.ReadyState (line 46, column 3 - line 50, column 14): " + [ v.constructor.name ]);
};
var eqReadyState = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof None && y instanceof None) {
            return true;
        };
        if (x instanceof Loading && y instanceof Loading) {
            return true;
        };
        if (x instanceof Loaded && y instanceof Loaded) {
            return true;
        };
        if (x instanceof $$Error && y instanceof $$Error) {
            return true;
        };
        return false;
    };
});
var ordReadyState = new Data_Ord.Ord(function () {
    return eqReadyState;
}, function (x) {
    return function (y) {
        if (x instanceof None && y instanceof None) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof None) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof None) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Loading && y instanceof Loading) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Loading) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Loading) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Loaded && y instanceof Loaded) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Loaded) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Loaded) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof $$Error && y instanceof $$Error) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Web.HTML.HTMLTrackElement.ReadyState (line 14, column 8 - line 14, column 48): " + [ x.constructor.name, y.constructor.name ]);
    };
});
var enumReadyState = new Data_Enum.Enum(function () {
    return ordReadyState;
}, Data_Enum.defaultPred(toEnumReadyState)(fromEnumReadyState), Data_Enum.defaultSucc(toEnumReadyState)(fromEnumReadyState));
var boundedReadyState = new Data_Bounded.Bounded(function () {
    return ordReadyState;
}, None.value, $$Error.value);
var boundedEnumReadyState = new Data_Enum.BoundedEnum(function () {
    return boundedReadyState;
}, function () {
    return enumReadyState;
}, 4, fromEnumReadyState, toEnumReadyState);
module.exports = {
    None: None,
    Loading: Loading,
    Loaded: Loaded,
    "Error": $$Error,
    toEnumReadyState: toEnumReadyState,
    fromEnumReadyState: fromEnumReadyState,
    eqReadyState: eqReadyState,
    ordReadyState: ordReadyState,
    boundedReadyState: boundedReadyState,
    enumReadyState: enumReadyState,
    boundedEnumReadyState: boundedEnumReadyState,
    showReadyState: showReadyState
};

},{"../Data.Bounded/index.js":113,"../Data.Enum/index.js":133,"../Data.Eq/index.js":135,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Show/index.js":254,"../Prelude/index.js":385}],595:[function(require,module,exports){
"use strict";

exports.kind = function (track) {
  return function () {
    return track.kind;
  };
};

exports.setKind = function (kind) {
  return function (track) {
    return function () {
      track.kind = kind;
    };
  };
};

// ----------------------------------------------------------------------------

exports.src = function (track) {
  return function () {
    return track.src;
  };
};

exports.setSrc = function (src) {
  return function (track) {
    return function () {
      track.src = src;
    };
  };
};

// ----------------------------------------------------------------------------

exports.srclang = function (track) {
  return function () {
    return track.srclang;
  };
};

exports.setSrclang = function (srclang) {
  return function (track) {
    return function () {
      track.srclang = srclang;
    };
  };
};

// ----------------------------------------------------------------------------

exports.label = function (track) {
  return function () {
    return track.label;
  };
};

exports.setLabel = function (label) {
  return function (track) {
    return function () {
      track.label = label;
    };
  };
};

// ----------------------------------------------------------------------------

exports["default"] = function (track) {
  return function () {
    return track["default"];
  };
};

exports.setDefault = function (def) {
  return function (track) {
    return function () {
      track["default"] = def;
    };
  };
};

// ----------------------------------------------------------------------------

exports._readyState = function (track) {
  return track.readyState;
};

},{}],596:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Effect_Uncurried = require("../Effect.Uncurried/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_HTMLTrackElement_ReadyState = require("../Web.HTML.HTMLTrackElement.ReadyState/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var readyState = function (el) {
    return Data_Functor.map(Effect.functorEffect)(function ($0) {
        return Data_Maybe.fromMaybe(Web_HTML_HTMLTrackElement_ReadyState.None.value)(Data_Enum.toEnum(Web_HTML_HTMLTrackElement_ReadyState.boundedEnumReadyState)($0));
    })(function () {
        return $foreign["_readyState"](el);
    });
};
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    readyState: readyState,
    kind: $foreign.kind,
    setKind: $foreign.setKind,
    src: $foreign.src,
    setSrc: $foreign.setSrc,
    srclang: $foreign.srclang,
    setSrclang: $foreign.setSrclang,
    label: $foreign.label,
    setLabel: $foreign.setLabel,
    "default": $foreign["default"],
    setDefault: $foreign.setDefault
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Enum/index.js":133,"../Data.Function/index.js":145,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Effect.Uncurried/index.js":308,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.HTMLTrackElement.ReadyState/index.js":594,"../Web.Internal.FFI/index.js":614,"./foreign.js":595}],597:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Maybe = require("../Data.Maybe/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
module.exports = {
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget
};

},{"../Data.Maybe/index.js":210,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.Internal.FFI/index.js":614}],598:[function(require,module,exports){
"use strict";

// ----------------------------------------------------------------------------

exports.width = function (video) {
  return function () {
    return video.width;
  };
};

exports.setWidth = function (width) {
  return function (video) {
    return function () {
      video.width = width;
    };
  };
};

// ----------------------------------------------------------------------------

exports.height = function (video) {
  return function () {
    return video.height;
  };
};

exports.setHeight = function (height) {
  return function (video) {
    return function () {
      video.height = height;
    };
  };
};

// ----------------------------------------------------------------------------

exports.videoWidth = function (video) {
  return function () {
    return video.videoWidth;
  };
};

// ----------------------------------------------------------------------------

exports.videoHeight = function (video) {
  return function () {
    return video.videoHeight;
  };
};

// ----------------------------------------------------------------------------

exports.poster = function (video) {
  return function () {
    return video.poster;
  };
};

exports.setPoster = function (poster) {
  return function (video) {
    return function () {
      video.poster = poster;
    };
  };
};

},{}],599:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_DOM = require("../Web.DOM/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_HTMLMediaElement = require("../Web.HTML.HTMLMediaElement/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLMediaElement = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromHTMLMediaElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
module.exports = {
    fromHTMLMediaElement: fromHTMLMediaElement,
    fromHTMLElement: fromHTMLElement,
    fromElement: fromElement,
    fromNode: fromNode,
    fromChildNode: fromChildNode,
    fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
    fromParentNode: fromParentNode,
    fromEventTarget: fromEventTarget,
    toHTMLMediaElement: toHTMLMediaElement,
    toHTMLElement: toHTMLElement,
    toElement: toElement,
    toNode: toNode,
    toChildNode: toChildNode,
    toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
    toParentNode: toParentNode,
    toEventTarget: toEventTarget,
    width: $foreign.width,
    setWidth: $foreign.setWidth,
    height: $foreign.height,
    setHeight: $foreign.setHeight,
    videoWidth: $foreign.videoWidth,
    videoHeight: $foreign.videoHeight,
    poster: $foreign.poster,
    setPoster: $foreign.setPoster
};

},{"../Data.Maybe/index.js":210,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.DOM/index.js":463,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.HTMLMediaElement/index.js":538,"../Web.Internal.FFI/index.js":614,"./foreign.js":598}],600:[function(require,module,exports){
"use strict";

exports.back = function(history) {
  return function() {
    return history.back();
  };
};
exports.forward = function(history) {
  return function() {
    return history.forward();
  };
};
exports.go = function(delta) {
  return function(history) {
    return function() {
      return history.go(delta);
    };
  };
};
exports.pushState = function(a) {
  return function(docTitle) {
    return function(url) {
      return function(history) {
        return function() {
          return history.pushState(a, docTitle, url);
        };
      };
    };
  };
};
exports.replaceState = function(a) {
  return function(docTitle) {
    return function(url) {
      return function(history) {
        return function() {
          return history.replaceState(a, docTitle, url);
        };
      };
    };
  };
};
exports.state = function(history) {
  return function() {
    return history.state;
  };
};

},{}],601:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Effect = require("../Effect/index.js");
var Foreign = require("../Foreign/index.js");
var Prelude = require("../Prelude/index.js");
var URL = function (x) {
    return x;
};
var DocumentTitle = function (x) {
    return x;
};
var Delta = function (x) {
    return x;
};
var newtypeURL = new Data_Newtype.Newtype(function (n) {
    return n;
}, URL);
var newtypeDocumentTitle = new Data_Newtype.Newtype(function (n) {
    return n;
}, DocumentTitle);
var newtypeDelta = new Data_Newtype.Newtype(function (n) {
    return n;
}, Delta);
var eqURL = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordURL = new Data_Ord.Ord(function () {
    return eqURL;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
var eqDocumentTitle = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordDocumentTitle = new Data_Ord.Ord(function () {
    return eqDocumentTitle;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
var eqDelta = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordDelta = new Data_Ord.Ord(function () {
    return eqDelta;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
    };
});
module.exports = {
    DocumentTitle: DocumentTitle,
    Delta: Delta,
    URL: URL,
    eqDocumentTitle: eqDocumentTitle,
    ordDocumentTitle: ordDocumentTitle,
    newtypeDocumentTitle: newtypeDocumentTitle,
    eqDelta: eqDelta,
    ordDelta: ordDelta,
    newtypeDelta: newtypeDelta,
    eqURL: eqURL,
    ordURL: ordURL,
    newtypeURL: newtypeURL,
    back: $foreign.back,
    forward: $foreign.forward,
    go: $foreign.go,
    pushState: $foreign.pushState,
    replaceState: $foreign.replaceState,
    state: $foreign.state
};

},{"../Data.Eq/index.js":135,"../Data.Newtype/index.js":220,"../Data.Ord/index.js":229,"../Effect/index.js":312,"../Foreign/index.js":320,"../Prelude/index.js":385,"./foreign.js":600}],602:[function(require,module,exports){
"use strict";

exports.hash = function (location) {
  return function () {
    return location.hash;
  };
};

exports.setHash = function (hash) {
  return function (location) {
    return function () {
      location.hash = hash;
    };
  };
};

// ----------------------------------------------------------------------------

exports.host = function (location) {
  return function () {
    return location.host;
  };
};

exports.setHost = function (host) {
  return function (location) {
    return function () {
      location.host = host;
    };
  };
};

// ----------------------------------------------------------------------------

exports.hostname = function (location) {
  return function () {
    return location.hostname;
  };
};

exports.setHostname = function (hostname) {
  return function (location) {
    return function () {
      location.hostname = hostname;
    };
  };
};

// ----------------------------------------------------------------------------

exports.href = function (location) {
  return function () {
    return location.href;
  };
};

exports.setHref = function (href) {
  return function (location) {
    return function () {
      location.href = href;
    };
  };
};

// ----------------------------------------------------------------------------

exports.origin = function (location) {
  return function () {
    return location.origin;
  };
};

exports.setOrigin = function (origin) {
  return function (location) {
    return function () {
      location.origin = origin;
    };
  };
};

// ----------------------------------------------------------------------------

exports.pathname = function (location) {
  return function () {
    return location.pathname;
  };
};

exports.setPathname = function (pathname) {
  return function (location) {
    return function () {
      location.pathname = pathname;
    };
  };
};

// ----------------------------------------------------------------------------

exports.port = function (location) {
  return function () {
    return location.port;
  };
};

exports.setPort = function (port) {
  return function (location) {
    return function () {
      location.port = port;
    };
  };
};

// ----------------------------------------------------------------------------

exports.protocol = function (location) {
  return function () {
    return location.protocol;
  };
};

exports.setProtocol = function (protocol) {
  return function (location) {
    return function () {
      location.protocol = protocol;
    };
  };
};

// ----------------------------------------------------------------------------

exports.search = function (location) {
  return function () {
    return location.search;
  };
};

exports.setSearch = function (search) {
  return function (location) {
    return function () {
      location.search = search;
    };
  };
};

// ----------------------------------------------------------------------------

exports.assign = function (url) {
  return function (location) {
    return function () {
      location.assign(url);
    };
  };
};

// ----------------------------------------------------------------------------

exports.replace = function (url) {
  return function (location) {
    return function () {
      location.replace(url);
    };
  };
};

// ----------------------------------------------------------------------------

exports.reload = function (location) {
  return function () {
    location.reload();
  };
};

},{}],603:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
module.exports = {
    hash: $foreign.hash,
    setHash: $foreign.setHash,
    host: $foreign.host,
    setHost: $foreign.setHost,
    hostname: $foreign.hostname,
    setHostname: $foreign.setHostname,
    href: $foreign.href,
    setHref: $foreign.setHref,
    origin: $foreign.origin,
    setOrigin: $foreign.setOrigin,
    pathname: $foreign.pathname,
    setPathname: $foreign.setPathname,
    port: $foreign.port,
    setPort: $foreign.setPort,
    protocol: $foreign.protocol,
    setProtocol: $foreign.setProtocol,
    search: $foreign.search,
    setSearch: $foreign.setSearch,
    assign: $foreign.assign,
    replace: $foreign.replace,
    reload: $foreign.reload
};

},{"../Effect/index.js":312,"../Prelude/index.js":385,"./foreign.js":602}],604:[function(require,module,exports){
"use strict";

exports.language = function (navigator) {
  return function () {
    return navigator.language;
  };
};

exports.platform = function (navigator) {
  return function () {
    return navigator.platform;
  };
};

exports.userAgent = function (navigator) {
  return function () {
    return navigator.userAgent;
  };
};
},{}],605:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Effect = require("../Effect/index.js");
module.exports = {
    language: $foreign.language,
    platform: $foreign.platform,
    userAgent: $foreign.userAgent
};

},{"../Effect/index.js":312,"./foreign.js":604}],606:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show = require("../Data.Show/index.js");
var Prelude = require("../Prelude/index.js");
var Preserve = (function () {
    function Preserve() {

    };
    Preserve.value = new Preserve();
    return Preserve;
})();
var Select = (function () {
    function Select() {

    };
    Select.value = new Select();
    return Select;
})();
var Start = (function () {
    function Start() {

    };
    Start.value = new Start();
    return Start;
})();
var End = (function () {
    function End() {

    };
    End.value = new End();
    return End;
})();
var showSelectionMode = new Data_Show.Show(function (v) {
    if (v instanceof Preserve) {
        return "Preserve";
    };
    if (v instanceof Select) {
        return "Select";
    };
    if (v instanceof Start) {
        return "Start";
    };
    if (v instanceof End) {
        return "End";
    };
    throw new Error("Failed pattern match at Web.HTML.SelectionMode (line 17, column 10 - line 23, column 1): " + [ v.constructor.name ]);
});
var print = function (v) {
    if (v instanceof Preserve) {
        return "preserve";
    };
    if (v instanceof Select) {
        return "select";
    };
    if (v instanceof Start) {
        return "start";
    };
    if (v instanceof End) {
        return "end";
    };
    throw new Error("Failed pattern match at Web.HTML.SelectionMode (line 32, column 9 - line 36, column 10): " + [ v.constructor.name ]);
};
var parse = function (v) {
    if (v === "preserve") {
        return new Data_Maybe.Just(Preserve.value);
    };
    if (v === "select") {
        return new Data_Maybe.Just(Select.value);
    };
    if (v === "start") {
        return new Data_Maybe.Just(Start.value);
    };
    if (v === "end") {
        return new Data_Maybe.Just(End.value);
    };
    return Data_Maybe.Nothing.value;
};
var eqSelectionMode = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Preserve && y instanceof Preserve) {
            return true;
        };
        if (x instanceof Select && y instanceof Select) {
            return true;
        };
        if (x instanceof Start && y instanceof Start) {
            return true;
        };
        if (x instanceof End && y instanceof End) {
            return true;
        };
        return false;
    };
});
var ordSelectionMode = new Data_Ord.Ord(function () {
    return eqSelectionMode;
}, function (x) {
    return function (y) {
        if (x instanceof Preserve && y instanceof Preserve) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Preserve) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Preserve) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Select && y instanceof Select) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Select) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Select) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Start && y instanceof Start) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Start) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Start) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof End && y instanceof End) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Web.HTML.SelectionMode (line 14, column 8 - line 14, column 54): " + [ x.constructor.name, y.constructor.name ]);
    };
});
module.exports = {
    Preserve: Preserve,
    Select: Select,
    Start: Start,
    End: End,
    parse: parse,
    print: print,
    eqSelectionMode: eqSelectionMode,
    ordSelectionMode: ordSelectionMode,
    showSelectionMode: showSelectionMode
};

},{"../Data.Eq/index.js":135,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Data.Show/index.js":254,"../Prelude/index.js":385}],607:[function(require,module,exports){
"use strict";

exports.readProp = function (prop, vs) {
  return vs[prop];
};

},{}],608:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Effect = require("../Effect/index.js");
var Effect_Uncurried = require("../Effect.Uncurried/index.js");
var valueMissing = Effect_Uncurried.runEffectFn2($foreign.readProp)("valueMissing");
var valid = Effect_Uncurried.runEffectFn2($foreign.readProp)("valid");
var typeMismatch = Effect_Uncurried.runEffectFn2($foreign.readProp)("typeMismatch");
var tooShort = Effect_Uncurried.runEffectFn2($foreign.readProp)("tooShort");
var tooLong = Effect_Uncurried.runEffectFn2($foreign.readProp)("tooLong");
var stepMismatch = Effect_Uncurried.runEffectFn2($foreign.readProp)("stepMismatch");
var rangeUnderflow = Effect_Uncurried.runEffectFn2($foreign.readProp)("rangeUnderflow");
var rangeOverflow = Effect_Uncurried.runEffectFn2($foreign.readProp)("rangeOverflow");
var patternMismatch = Effect_Uncurried.runEffectFn2($foreign.readProp)("patternMismatch");
var customError = Effect_Uncurried.runEffectFn2($foreign.readProp)("customError");
var badInput = Effect_Uncurried.runEffectFn2($foreign.readProp)("badInput");
module.exports = {
    valueMissing: valueMissing,
    typeMismatch: typeMismatch,
    patternMismatch: patternMismatch,
    tooLong: tooLong,
    tooShort: tooShort,
    rangeUnderflow: rangeUnderflow,
    rangeOverflow: rangeOverflow,
    stepMismatch: stepMismatch,
    badInput: badInput,
    customError: customError,
    valid: valid
};

},{"../Effect.Uncurried/index.js":308,"../Effect/index.js":312,"./foreign.js":607}],609:[function(require,module,exports){
"use strict";

exports.document = function (window) {
  return function () {
    return window.document;
  };
};

exports.navigator = function (window) {
  return function () {
    return window.navigator;
  };
};

exports.location = function (window) {
  return function () {
    return window.location;
  };
};

exports.history = function(window) {
  return function() {
    return window.history;
  };
};

exports.innerWidth = function (window) {
  return function () {
    return window.innerWidth;
  };
};

exports.innerHeight = function (window) {
  return function () {
    return window.innerHeight;
  };
};

exports.alert = function (str) {
  return function (window) {
    return function () {
      window.alert(str);
      return {};
    };
  };
};

exports.confirm = function (str) {
  return function (window) {
    return function () {
      return window.confirm(str);
    };
  };
};

exports.moveBy = function (xDelta) {
  return function (yDelta) {
    return function (window) {
      return function () {
        window.moveBy(xDelta, yDelta);
        return {};
      };
    };
  };
};

exports.moveTo = function (width) {
  return function (height) {
    return function (window) {
      return function () {
        window.moveTo(width, height);
        return {};
      };
    };
  };
};

exports._open = function (url) {
  return function (name) {
    return function (features) {
      return function (window) {
        return function () {
          return window.open(url, name, features);
        };
      };
    };
  };
};

exports.outerHeight = function (window) {
  return function () {
    return window.outerHeight;
  };
};

exports.outerWidth = function (window) {
  return function () {
    return window.outerWidth;
  };
};

exports.print = function (window) {
  return function () {
    window.print();
    return {};
  };
};

exports._prompt = function (str) {
  return function (defaultText) {
    return function (window) {
      return function () {
        return window.prompt(str, defaultText);
      };
    };
  };
};

exports.resizeBy = function (xDelta) {
  return function (yDelta) {
    return function (window) {
      return function () {
        window.resizeBy(xDelta, yDelta);
        return {};
      };
    };
  };
};

exports.resizeTo = function (width) {
  return function (height) {
    return function (window) {
      return function () {
        window.resizeTo(width, height);
        return {};
      };
    };
  };
};

exports.screenX = function (window) {
  return function () {
    return window.screenX;
  };
};

exports.screenY = function (window) {
  return function () {
    return window.screenY;
  };
};

exports.scroll = function (xCoord) {
  return function (yCoord) {
    return function (window) {
      return function () {
        window.scroll(xCoord, yCoord);
        return {};
      };
    };
  };
};

exports.scrollBy = function (xCoord) {
  return function (yCoord) {
    return function (window) {
      return function () {
        window.scrollBy(xCoord, yCoord);
        return {};
      };
    };
  };
};

exports.scrollX = function (window) {
  return function () {
    return window.scrollX;
  };
};

exports.scrollY = function (window) {
  return function () {
    return window.scrollY;
  };
};

exports.localStorage = function (window) {
  return function () {
    return window.localStorage;
  };
};

exports.sessionStorage = function (window) {
  return function () {
    return window.sessionStorage;
  };
};

exports._requestAnimationFrame = function(fn) {
  return function(window) {
    return function() {
      return window.requestAnimationFrame(fn);
    };
  };
};

exports._cancelAnimationFrame = function(id) {
  return function(window) {
    return function() {
      return window.cancelAnimationFrame(id);
    };
  };
};

exports._requestIdleCallback = function(opts) {
  return function(fn) {
    return function(window) {
      return function() {
        return window.requestIdleCallback(fn, opts);
      };
    };
  };
};

exports._cancelIdleCallback = function(id) {
  return function(window) {
    return function() {
      return window.cancelIdleCallback(id);
    };
  };
};

},{}],610:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML_HTMLDocument = require("../Web.HTML.HTMLDocument/index.js");
var Web_HTML_History = require("../Web.HTML.History/index.js");
var Web_HTML_Location = require("../Web.HTML.Location/index.js");
var Web_HTML_Navigator = require("../Web.HTML.Navigator/index.js");
var Web_Storage_Storage = require("../Web.Storage.Storage/index.js");
var RequestIdleCallbackId = function (x) {
    return x;
};
var RequestAnimationFrameId = function (x) {
    return x;
};
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var requestIdleCallback = function (opts) {
    return function (fn) {
        return function ($30) {
            return Data_Functor.map(Effect.functorEffect)(RequestIdleCallbackId)($foreign["_requestIdleCallback"](opts)(fn)($30));
        };
    };
};
var requestAnimationFrame = function (fn) {
    return function ($31) {
        return Data_Functor.map(Effect.functorEffect)(RequestAnimationFrameId)($foreign["_requestAnimationFrame"](fn)($31));
    };
};
var promptDefault = function (msg) {
    return function (defaultText) {
        return function (window) {
            return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_prompt"](msg)(defaultText)(window));
        };
    };
};
var prompt = function (msg) {
    return function (window) {
        return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_prompt"](msg)("")(window));
    };
};
var open = function (url$prime) {
    return function (name) {
        return function (features) {
            return function (window) {
                return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_open"](url$prime)(name)(features)(window));
            };
        };
    };
};
var newtypeRequestIdleCallbackId = new Data_Newtype.Newtype(function (n) {
    return n;
}, RequestIdleCallbackId);
var newtypeRequestAnimationFrameId = new Data_Newtype.Newtype(function (n) {
    return n;
}, RequestAnimationFrameId);
var eqRequestIdleCallbackId = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordRequestIdleCallbackId = new Data_Ord.Ord(function () {
    return eqRequestIdleCallbackId;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
    };
});
var eqRequestAnimationFrameId = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordRequestAnimationFrameId = new Data_Ord.Ord(function () {
    return eqRequestAnimationFrameId;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
    };
});
var cancelIdleCallback = function (idAF) {
    return $foreign["_cancelIdleCallback"](Data_Newtype.unwrap(newtypeRequestIdleCallbackId)(idAF));
};
var cancelAnimationFrame = function (idAF) {
    return $foreign["_cancelAnimationFrame"](Data_Newtype.unwrap(newtypeRequestAnimationFrameId)(idAF));
};
module.exports = {
    toEventTarget: toEventTarget,
    open: open,
    prompt: prompt,
    promptDefault: promptDefault,
    requestAnimationFrame: requestAnimationFrame,
    cancelAnimationFrame: cancelAnimationFrame,
    requestIdleCallback: requestIdleCallback,
    cancelIdleCallback: cancelIdleCallback,
    newtypeRequestAnimationFrameId: newtypeRequestAnimationFrameId,
    eqRequestAnimationFrameId: eqRequestAnimationFrameId,
    ordRequestAnimationFrameId: ordRequestAnimationFrameId,
    newtypeRequestIdleCallbackId: newtypeRequestIdleCallbackId,
    eqRequestIdleCallbackId: eqRequestIdleCallbackId,
    ordRequestIdleCallbackId: ordRequestIdleCallbackId,
    document: $foreign.document,
    navigator: $foreign.navigator,
    location: $foreign.location,
    history: $foreign.history,
    innerWidth: $foreign.innerWidth,
    innerHeight: $foreign.innerHeight,
    alert: $foreign.alert,
    confirm: $foreign.confirm,
    moveBy: $foreign.moveBy,
    moveTo: $foreign.moveTo,
    outerHeight: $foreign.outerHeight,
    outerWidth: $foreign.outerWidth,
    print: $foreign.print,
    resizeBy: $foreign.resizeBy,
    resizeTo: $foreign.resizeTo,
    screenX: $foreign.screenX,
    screenY: $foreign.screenY,
    scroll: $foreign.scroll,
    scrollBy: $foreign.scrollBy,
    scrollX: $foreign.scrollX,
    scrollY: $foreign.scrollY,
    localStorage: $foreign.localStorage,
    sessionStorage: $foreign.sessionStorage
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Eq/index.js":135,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Newtype/index.js":220,"../Data.Nullable/index.js":223,"../Data.Ord/index.js":229,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.Event.EventTarget/index.js":468,"../Web.HTML.HTMLDocument/index.js":504,"../Web.HTML.History/index.js":601,"../Web.HTML.Location/index.js":603,"../Web.HTML.Navigator/index.js":605,"../Web.Storage.Storage/index.js":616,"./foreign.js":609}],611:[function(require,module,exports){
/* global window */
"use strict";

exports.window = function () {
  return window;
};

},{}],612:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Effect = require("../Effect/index.js");
var Web_HTML_HTMLAnchorElement = require("../Web.HTML.HTMLAnchorElement/index.js");
var Web_HTML_HTMLAreaElement = require("../Web.HTML.HTMLAreaElement/index.js");
var Web_HTML_HTMLAudioElement = require("../Web.HTML.HTMLAudioElement/index.js");
var Web_HTML_HTMLBRElement = require("../Web.HTML.HTMLBRElement/index.js");
var Web_HTML_HTMLBaseElement = require("../Web.HTML.HTMLBaseElement/index.js");
var Web_HTML_HTMLBodyElement = require("../Web.HTML.HTMLBodyElement/index.js");
var Web_HTML_HTMLButtonElement = require("../Web.HTML.HTMLButtonElement/index.js");
var Web_HTML_HTMLCanvasElement = require("../Web.HTML.HTMLCanvasElement/index.js");
var Web_HTML_HTMLDListElement = require("../Web.HTML.HTMLDListElement/index.js");
var Web_HTML_HTMLDataElement = require("../Web.HTML.HTMLDataElement/index.js");
var Web_HTML_HTMLDataListElement = require("../Web.HTML.HTMLDataListElement/index.js");
var Web_HTML_HTMLDivElement = require("../Web.HTML.HTMLDivElement/index.js");
var Web_HTML_HTMLDocument = require("../Web.HTML.HTMLDocument/index.js");
var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");
var Web_HTML_HTMLEmbedElement = require("../Web.HTML.HTMLEmbedElement/index.js");
var Web_HTML_HTMLFieldSetElement = require("../Web.HTML.HTMLFieldSetElement/index.js");
var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");
var Web_HTML_HTMLHRElement = require("../Web.HTML.HTMLHRElement/index.js");
var Web_HTML_HTMLHeadElement = require("../Web.HTML.HTMLHeadElement/index.js");
var Web_HTML_HTMLHeadingElement = require("../Web.HTML.HTMLHeadingElement/index.js");
var Web_HTML_HTMLIFrameElement = require("../Web.HTML.HTMLIFrameElement/index.js");
var Web_HTML_HTMLImageElement = require("../Web.HTML.HTMLImageElement/index.js");
var Web_HTML_HTMLInputElement = require("../Web.HTML.HTMLInputElement/index.js");
var Web_HTML_HTMLKeygenElement = require("../Web.HTML.HTMLKeygenElement/index.js");
var Web_HTML_HTMLLIElement = require("../Web.HTML.HTMLLIElement/index.js");
var Web_HTML_HTMLLabelElement = require("../Web.HTML.HTMLLabelElement/index.js");
var Web_HTML_HTMLLegendElement = require("../Web.HTML.HTMLLegendElement/index.js");
var Web_HTML_HTMLLinkElement = require("../Web.HTML.HTMLLinkElement/index.js");
var Web_HTML_HTMLMapElement = require("../Web.HTML.HTMLMapElement/index.js");
var Web_HTML_HTMLMediaElement = require("../Web.HTML.HTMLMediaElement/index.js");
var Web_HTML_HTMLMetaElement = require("../Web.HTML.HTMLMetaElement/index.js");
var Web_HTML_HTMLMeterElement = require("../Web.HTML.HTMLMeterElement/index.js");
var Web_HTML_HTMLModElement = require("../Web.HTML.HTMLModElement/index.js");
var Web_HTML_HTMLOListElement = require("../Web.HTML.HTMLOListElement/index.js");
var Web_HTML_HTMLObjectElement = require("../Web.HTML.HTMLObjectElement/index.js");
var Web_HTML_HTMLOptGroupElement = require("../Web.HTML.HTMLOptGroupElement/index.js");
var Web_HTML_HTMLOptionElement = require("../Web.HTML.HTMLOptionElement/index.js");
var Web_HTML_HTMLOutputElement = require("../Web.HTML.HTMLOutputElement/index.js");
var Web_HTML_HTMLParagraphElement = require("../Web.HTML.HTMLParagraphElement/index.js");
var Web_HTML_HTMLParamElement = require("../Web.HTML.HTMLParamElement/index.js");
var Web_HTML_HTMLPreElement = require("../Web.HTML.HTMLPreElement/index.js");
var Web_HTML_HTMLProgressElement = require("../Web.HTML.HTMLProgressElement/index.js");
var Web_HTML_HTMLQuoteElement = require("../Web.HTML.HTMLQuoteElement/index.js");
var Web_HTML_HTMLScriptElement = require("../Web.HTML.HTMLScriptElement/index.js");
var Web_HTML_HTMLSelectElement = require("../Web.HTML.HTMLSelectElement/index.js");
var Web_HTML_HTMLSourceElement = require("../Web.HTML.HTMLSourceElement/index.js");
var Web_HTML_HTMLSpanElement = require("../Web.HTML.HTMLSpanElement/index.js");
var Web_HTML_HTMLStyleElement = require("../Web.HTML.HTMLStyleElement/index.js");
var Web_HTML_HTMLTableCaptionElement = require("../Web.HTML.HTMLTableCaptionElement/index.js");
var Web_HTML_HTMLTableCellElement = require("../Web.HTML.HTMLTableCellElement/index.js");
var Web_HTML_HTMLTableColElement = require("../Web.HTML.HTMLTableColElement/index.js");
var Web_HTML_HTMLTableDataCellElement = require("../Web.HTML.HTMLTableDataCellElement/index.js");
var Web_HTML_HTMLTableElement = require("../Web.HTML.HTMLTableElement/index.js");
var Web_HTML_HTMLTableHeaderCellElement = require("../Web.HTML.HTMLTableHeaderCellElement/index.js");
var Web_HTML_HTMLTableRowElement = require("../Web.HTML.HTMLTableRowElement/index.js");
var Web_HTML_HTMLTableSectionElement = require("../Web.HTML.HTMLTableSectionElement/index.js");
var Web_HTML_HTMLTemplateElement = require("../Web.HTML.HTMLTemplateElement/index.js");
var Web_HTML_HTMLTextAreaElement = require("../Web.HTML.HTMLTextAreaElement/index.js");
var Web_HTML_HTMLTimeElement = require("../Web.HTML.HTMLTimeElement/index.js");
var Web_HTML_HTMLTitleElement = require("../Web.HTML.HTMLTitleElement/index.js");
var Web_HTML_HTMLTrackElement = require("../Web.HTML.HTMLTrackElement/index.js");
var Web_HTML_HTMLUListElement = require("../Web.HTML.HTMLUListElement/index.js");
var Web_HTML_HTMLVideoElement = require("../Web.HTML.HTMLVideoElement/index.js");
var Web_HTML_History = require("../Web.HTML.History/index.js");
var Web_HTML_Location = require("../Web.HTML.Location/index.js");
var Web_HTML_Navigator = require("../Web.HTML.Navigator/index.js");
var Web_HTML_Window = require("../Web.HTML.Window/index.js");
module.exports = {
    window: $foreign.window
};

},{"../Effect/index.js":312,"../Web.HTML.HTMLAnchorElement/index.js":484,"../Web.HTML.HTMLAreaElement/index.js":486,"../Web.HTML.HTMLAudioElement/index.js":487,"../Web.HTML.HTMLBRElement/index.js":488,"../Web.HTML.HTMLBaseElement/index.js":490,"../Web.HTML.HTMLBodyElement/index.js":491,"../Web.HTML.HTMLButtonElement/index.js":493,"../Web.HTML.HTMLCanvasElement/index.js":495,"../Web.HTML.HTMLDListElement/index.js":496,"../Web.HTML.HTMLDataElement/index.js":498,"../Web.HTML.HTMLDataListElement/index.js":500,"../Web.HTML.HTMLDivElement/index.js":501,"../Web.HTML.HTMLDocument/index.js":504,"../Web.HTML.HTMLElement/index.js":506,"../Web.HTML.HTMLEmbedElement/index.js":508,"../Web.HTML.HTMLFieldSetElement/index.js":510,"../Web.HTML.HTMLFormElement/index.js":512,"../Web.HTML.HTMLHRElement/index.js":513,"../Web.HTML.HTMLHeadElement/index.js":514,"../Web.HTML.HTMLHeadingElement/index.js":515,"../Web.HTML.HTMLIFrameElement/index.js":517,"../Web.HTML.HTMLImageElement/index.js":519,"../Web.HTML.HTMLInputElement/index.js":521,"../Web.HTML.HTMLKeygenElement/index.js":523,"../Web.HTML.HTMLLIElement/index.js":525,"../Web.HTML.HTMLLabelElement/index.js":527,"../Web.HTML.HTMLLegendElement/index.js":529,"../Web.HTML.HTMLLinkElement/index.js":531,"../Web.HTML.HTMLMapElement/index.js":533,"../Web.HTML.HTMLMediaElement/index.js":538,"../Web.HTML.HTMLMetaElement/index.js":540,"../Web.HTML.HTMLMeterElement/index.js":542,"../Web.HTML.HTMLModElement/index.js":544,"../Web.HTML.HTMLOListElement/index.js":546,"../Web.HTML.HTMLObjectElement/index.js":548,"../Web.HTML.HTMLOptGroupElement/index.js":550,"../Web.HTML.HTMLOptionElement/index.js":552,"../Web.HTML.HTMLOutputElement/index.js":554,"../Web.HTML.HTMLParagraphElement/index.js":555,"../Web.HTML.HTMLParamElement/index.js":557,"../Web.HTML.HTMLPreElement/index.js":558,"../Web.HTML.HTMLProgressElement/index.js":560,"../Web.HTML.HTMLQuoteElement/index.js":562,"../Web.HTML.HTMLScriptElement/index.js":564,"../Web.HTML.HTMLSelectElement/index.js":566,"../Web.HTML.HTMLSourceElement/index.js":568,"../Web.HTML.HTMLSpanElement/index.js":569,"../Web.HTML.HTMLStyleElement/index.js":571,"../Web.HTML.HTMLTableCaptionElement/index.js":572,"../Web.HTML.HTMLTableCellElement/index.js":574,"../Web.HTML.HTMLTableColElement/index.js":576,"../Web.HTML.HTMLTableDataCellElement/index.js":577,"../Web.HTML.HTMLTableElement/index.js":579,"../Web.HTML.HTMLTableHeaderCellElement/index.js":581,"../Web.HTML.HTMLTableRowElement/index.js":583,"../Web.HTML.HTMLTableSectionElement/index.js":585,"../Web.HTML.HTMLTemplateElement/index.js":587,"../Web.HTML.HTMLTextAreaElement/index.js":589,"../Web.HTML.HTMLTimeElement/index.js":591,"../Web.HTML.HTMLTitleElement/index.js":593,"../Web.HTML.HTMLTrackElement/index.js":596,"../Web.HTML.HTMLUListElement/index.js":597,"../Web.HTML.HTMLVideoElement/index.js":599,"../Web.HTML.History/index.js":601,"../Web.HTML.Location/index.js":603,"../Web.HTML.Navigator/index.js":605,"../Web.HTML.Window/index.js":610,"./foreign.js":611}],613:[function(require,module,exports){
"use strict";

exports._unsafeReadProtoTagged = function (nothing, just, name, value) {
  var ty = window[name];
  if (ty != null && value instanceof ty) {
    return just(value);
  }
  return nothing;
};

},{}],614:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var unsafeReadProtoTagged = function (name) {
    return function (value) {
        return $foreign["_unsafeReadProtoTagged"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, name, value);
    };
};
module.exports = {
    unsafeReadProtoTagged: unsafeReadProtoTagged
};

},{"../Data.Function.Uncurried/index.js":144,"../Data.Maybe/index.js":210,"./foreign.js":613}],615:[function(require,module,exports){
"use strict";

exports.length = function (storage) {
  return function () {
    return storage.length;
  };
};

exports._key = function (index) {
  return function (storage) {
    return function () {
      return storage.key(index);
    };
  };
};

exports._getItem = function (key) {
  return function (storage) {
    return function () {
      return storage.getItem(key);
    };
  };
};

exports.setItem = function (key) {
  return function (value) {
    return function (storage) {
      return function () {
        storage.setItem(key, value);
      };
    };
  };
};

exports.removeItem = function (key) {
  return function (storage) {
    return function () {
      storage.removeItem(key);
    };
  };
};

exports.clear = function (storage) {
  return function () {
    storage.clear();
  };
};

},{}],616:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var key = function (i) {
    return function ($0) {
        return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_key"](i)($0));
    };
};
var getItem = function (s) {
    return function ($1) {
        return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_getItem"](s)($1));
    };
};
module.exports = {
    key: key,
    getItem: getItem,
    length: $foreign.length,
    setItem: $foreign.setItem,
    removeItem: $foreign.removeItem,
    clear: $foreign.clear
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect/index.js":312,"../Prelude/index.js":385,"./foreign.js":615}],617:[function(require,module,exports){
"use strict";

exports.identifier = function (t) {
  return t.identifier;
};

exports.screenX = function (t) {
  return t.screenX;
};

exports.screenY = function (t) {
  return t.screenY;
};

exports.clientX = function (t) {
  return t.clientX;
};

exports.clientY = function (t) {
  return t.clientY;
};

exports.pageX = function (t) {
  return t.pageX;
};

exports.pageY = function (t) {
  return t.pageY;
};

exports.target = function (t) {
  return t.target;
};

},{}],618:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
module.exports = {
    identifier: $foreign.identifier,
    screenX: $foreign.screenX,
    screenY: $foreign.screenY,
    clientX: $foreign.clientX,
    clientY: $foreign.clientY,
    pageX: $foreign.pageX,
    pageY: $foreign.pageY,
    target: $foreign.target
};

},{"../Web.Event.EventTarget/index.js":468,"./foreign.js":617}],619:[function(require,module,exports){
"use strict";

exports.touches = function (e) {
  return e.touches;
};

exports.targetTouches = function (e) {
  return e.targetTouches;
};

exports.changedTouches = function (e) {
  return e.changedTouches;
};

exports.altKey = function (e) {
  return e.altKey;
};

exports.metaKey = function (e) {
  return e.metaKey;
};

exports.ctrlKey = function (e) {
  return e.ctrlKey;
};

exports.shiftKey = function (e) {
  return e.shiftKey;
};

},{}],620:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Event_Event = require("../Web.Event.Event/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var Web_TouchEvent_TouchList = require("../Web.TouchEvent.TouchList/index.js");
var Web_UIEvent_UIEvent = require("../Web.UIEvent.UIEvent/index.js");
var toUIEvent = Unsafe_Coerce.unsafeCoerce;
var toEvent = Unsafe_Coerce.unsafeCoerce;
var fromUIEvent = Web_Internal_FFI.unsafeReadProtoTagged("TouchEvent");
var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("TouchEvent");
module.exports = {
    fromUIEvent: fromUIEvent,
    fromEvent: fromEvent,
    toUIEvent: toUIEvent,
    toEvent: toEvent,
    touches: $foreign.touches,
    targetTouches: $foreign.targetTouches,
    changedTouches: $foreign.changedTouches,
    altKey: $foreign.altKey,
    metaKey: $foreign.metaKey,
    ctrlKey: $foreign.ctrlKey,
    shiftKey: $foreign.shiftKey
};

},{"../Data.Maybe/index.js":210,"../Unsafe.Coerce/index.js":425,"../Web.Event.Event/index.js":465,"../Web.Internal.FFI/index.js":614,"../Web.TouchEvent.TouchList/index.js":622,"../Web.UIEvent.UIEvent/index.js":634,"./foreign.js":619}],621:[function(require,module,exports){
"use strict";

exports.length = function (l) {
  return l.length;
};

exports._item = function (i, l) {
  return l.item(i);
};

},{}],622:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Prelude = require("../Prelude/index.js");
var Web_TouchEvent_Touch = require("../Web.TouchEvent.Touch/index.js");
var item = function (i) {
    return function (l) {
        return Data_Nullable.toMaybe($foreign["_item"](i, l));
    };
};
module.exports = {
    item: item,
    length: $foreign.length
};

},{"../Data.Function.Uncurried/index.js":144,"../Data.Function/index.js":145,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Prelude/index.js":385,"../Web.TouchEvent.Touch/index.js":618,"./foreign.js":621}],623:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Web_TouchEvent_Touch = require("../Web.TouchEvent.Touch/index.js");
var Web_TouchEvent_TouchEvent = require("../Web.TouchEvent.TouchEvent/index.js");
var Web_TouchEvent_TouchList = require("../Web.TouchEvent.TouchList/index.js");
module.exports = {};

},{"../Web.TouchEvent.Touch/index.js":618,"../Web.TouchEvent.TouchEvent/index.js":620,"../Web.TouchEvent.TouchList/index.js":622}],624:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Web_Event_Event = require("../Web.Event.Event/index.js");
var focusout = "focusout";
var focusin = "focusin";
var focus = "focus";
var blur = "blur";
module.exports = {
    blur: blur,
    focus: focus,
    focusin: focusin,
    focusout: focusout
};

},{"../Web.Event.Event/index.js":465}],625:[function(require,module,exports){
"use strict";

exports._relatedTarget = function (e) {
  return e.relatedTarget;
};

},{}],626:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Event_Event = require("../Web.Event.Event/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var Web_UIEvent_UIEvent = require("../Web.UIEvent.UIEvent/index.js");
var toUIEvent = Unsafe_Coerce.unsafeCoerce;
var toEvent = Unsafe_Coerce.unsafeCoerce;
var relatedTarget = Data_Functor.map(Data_Functor.functorFn)(Data_Nullable.toMaybe)($foreign["_relatedTarget"]);
var fromUIEvent = Web_Internal_FFI.unsafeReadProtoTagged("FocusEvent");
var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("FocusEvent");
module.exports = {
    fromUIEvent: fromUIEvent,
    fromEvent: fromEvent,
    toUIEvent: toUIEvent,
    toEvent: toEvent,
    relatedTarget: relatedTarget
};

},{"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.Event.Event/index.js":465,"../Web.Event.EventTarget/index.js":468,"../Web.Internal.FFI/index.js":614,"../Web.UIEvent.UIEvent/index.js":634,"./foreign.js":625}],627:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Web_Event_Event = require("../Web.Event.Event/index.js");
var keyup = "keyup";
var keydown = "keydown";
module.exports = {
    keydown: keydown,
    keyup: keyup
};

},{"../Web.Event.Event/index.js":465}],628:[function(require,module,exports){
"use strict";

exports.key = function (e) {
  return e.key;
};

exports.code = function (e) {
  return e.code;
};

exports.locationIndex = function (e) {
  return e.location;
};

exports.ctrlKey = function (e) {
  return e.ctrlKey;
};

exports.shiftKey = function (e) {
  return e.shiftKey;
};

exports.altKey = function (e) {
  return e.altKey;
};

exports.metaKey = function (e) {
  return e.metaKey;
};

exports.repeat = function (e) {
  return e.repeat;
};

exports.isComposing = function (e) {
  return e.isComposing;
};

exports.getModifierState = function (s) {
  return function (e) {
    return function () {
      return e.getModifierState(s);
    };
  };
};

},{}],629:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Event_Event = require("../Web.Event.Event/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var Web_UIEvent_UIEvent = require("../Web.UIEvent.UIEvent/index.js");
var Standard = (function () {
    function Standard() {

    };
    Standard.value = new Standard();
    return Standard;
})();
var Left = (function () {
    function Left() {

    };
    Left.value = new Left();
    return Left;
})();
var Right = (function () {
    function Right() {

    };
    Right.value = new Right();
    return Right;
})();
var Numpad = (function () {
    function Numpad() {

    };
    Numpad.value = new Numpad();
    return Numpad;
})();
var toUIEvent = Unsafe_Coerce.unsafeCoerce;
var toEvent = Unsafe_Coerce.unsafeCoerce;
var toEnumKeyLocation = function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(Standard.value);
    };
    if (v === 1) {
        return new Data_Maybe.Just(Left.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(Right.value);
    };
    if (v === 3) {
        return new Data_Maybe.Just(Numpad.value);
    };
    return Data_Maybe.Nothing.value;
};
var fromUIEvent = Web_Internal_FFI.unsafeReadProtoTagged("KeyboardEvent");
var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("KeyboardEvent");
var fromEnumKeyLocation = function (v) {
    if (v instanceof Standard) {
        return 0;
    };
    if (v instanceof Left) {
        return 1;
    };
    if (v instanceof Right) {
        return 2;
    };
    if (v instanceof Numpad) {
        return 3;
    };
    throw new Error("Failed pattern match at Web.UIEvent.KeyboardEvent (line 107, column 3 - line 113, column 1): " + [ v.constructor.name ]);
};
var eqKeyLocation = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Standard && y instanceof Standard) {
            return true;
        };
        if (x instanceof Left && y instanceof Left) {
            return true;
        };
        if (x instanceof Right && y instanceof Right) {
            return true;
        };
        if (x instanceof Numpad && y instanceof Numpad) {
            return true;
        };
        return false;
    };
});
var ordKeyLocation = new Data_Ord.Ord(function () {
    return eqKeyLocation;
}, function (x) {
    return function (y) {
        if (x instanceof Standard && y instanceof Standard) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Standard) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Standard) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Left && y instanceof Left) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Left) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Left) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Right && y instanceof Right) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Right) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Right) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Numpad && y instanceof Numpad) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Web.UIEvent.KeyboardEvent (line 81, column 8 - line 81, column 50): " + [ x.constructor.name, y.constructor.name ]);
    };
});
var enumKeyLocation = new Data_Enum.Enum(function () {
    return ordKeyLocation;
}, Data_Enum.defaultPred(toEnumKeyLocation)(fromEnumKeyLocation), Data_Enum.defaultSucc(toEnumKeyLocation)(fromEnumKeyLocation));
var boundedKeyLocation = new Data_Bounded.Bounded(function () {
    return ordKeyLocation;
}, Standard.value, Numpad.value);
var boundedEnumKeyLocation = new Data_Enum.BoundedEnum(function () {
    return boundedKeyLocation;
}, function () {
    return enumKeyLocation;
}, 4, fromEnumKeyLocation, toEnumKeyLocation);
var location = function (dictPartial) {
    return function ($13) {
        return Data_Maybe.fromJust(dictPartial)(Data_Enum.toEnum(boundedEnumKeyLocation)($foreign.locationIndex($13)));
    };
};
module.exports = {
    fromUIEvent: fromUIEvent,
    fromEvent: fromEvent,
    toUIEvent: toUIEvent,
    toEvent: toEvent,
    location: location,
    Standard: Standard,
    Left: Left,
    Right: Right,
    Numpad: Numpad,
    toEnumKeyLocation: toEnumKeyLocation,
    fromEnumKeyLocation: fromEnumKeyLocation,
    eqKeyLocation: eqKeyLocation,
    ordKeyLocation: ordKeyLocation,
    boundedKeyLocation: boundedKeyLocation,
    enumKeyLocation: enumKeyLocation,
    boundedEnumKeyLocation: boundedEnumKeyLocation,
    key: $foreign.key,
    code: $foreign.code,
    locationIndex: $foreign.locationIndex,
    ctrlKey: $foreign.ctrlKey,
    shiftKey: $foreign.shiftKey,
    altKey: $foreign.altKey,
    metaKey: $foreign.metaKey,
    repeat: $foreign.repeat,
    isComposing: $foreign.isComposing,
    getModifierState: $foreign.getModifierState
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Bounded/index.js":113,"../Data.Enum/index.js":133,"../Data.Eq/index.js":135,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.Event.Event/index.js":465,"../Web.Internal.FFI/index.js":614,"../Web.UIEvent.UIEvent/index.js":634,"./foreign.js":628}],630:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Web_Event_Event = require("../Web.Event.Event/index.js");
var mouseup = "mouseup";
var mouseover = "mouseover";
var mouseout = "mouseout";
var mousemove = "mousemove";
var mouseleave = "mouseleave";
var mouseenter = "mouseenter";
var mousedown = "mousedown";
var dblclick = "dblclick";
var click = "click";
module.exports = {
    click: click,
    dblclick: dblclick,
    mousedown: mousedown,
    mouseenter: mouseenter,
    mouseleave: mouseleave,
    mousemove: mousemove,
    mouseout: mouseout,
    mouseover: mouseover,
    mouseup: mouseup
};

},{"../Web.Event.Event/index.js":465}],631:[function(require,module,exports){
"use strict";

exports.screenX = function (e) {
  return e.screenX;
};

exports.screenY = function (e) {
  return e.screenY;
};

exports.clientX = function (e) {
  return e.clientX;
};

exports.clientY = function (e) {
  return e.clientY;
};

exports.pageX = function (e) {
  return e.pageX;
};

exports.pageY = function (e) {
  return e.pageY;
};

exports.ctrlKey = function (e) {
  return e.ctrlKey;
};

exports.shiftKey = function (e) {
  return e.shiftKey;
};

exports.altKey = function (e) {
  return e.altKey;
};

exports.metaKey = function (e) {
  return e.metaKey;
};

exports.button = function (e) {
  return e.button;
};

exports._relatedTarget = function (e) {
  return e.relatedTarget;
};

exports.buttons = function (e) {
  return e.buttons;
};

exports.getModifierState = function (s) {
  return function (e) {
    return function () {
      return e.getModifierState(s);
    };
  };
};

},{}],632:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Effect = require("../Effect/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Event_Event = require("../Web.Event.Event/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var Web_UIEvent_UIEvent = require("../Web.UIEvent.UIEvent/index.js");
var toUIEvent = Unsafe_Coerce.unsafeCoerce;
var toEvent = Unsafe_Coerce.unsafeCoerce;
var relatedTarget = Data_Functor.map(Data_Functor.functorFn)(Data_Nullable.toMaybe)($foreign["_relatedTarget"]);
var fromUIEvent = Web_Internal_FFI.unsafeReadProtoTagged("MouseEvent");
var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("MouseEvent");
module.exports = {
    fromUIEvent: fromUIEvent,
    fromEvent: fromEvent,
    toUIEvent: toUIEvent,
    toEvent: toEvent,
    relatedTarget: relatedTarget,
    screenX: $foreign.screenX,
    screenY: $foreign.screenY,
    clientX: $foreign.clientX,
    clientY: $foreign.clientY,
    pageX: $foreign.pageX,
    pageY: $foreign.pageY,
    ctrlKey: $foreign.ctrlKey,
    shiftKey: $foreign.shiftKey,
    altKey: $foreign.altKey,
    metaKey: $foreign.metaKey,
    button: $foreign.button,
    buttons: $foreign.buttons,
    getModifierState: $foreign.getModifierState
};

},{"../Data.Functor/index.js":153,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Effect/index.js":312,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.Event.Event/index.js":465,"../Web.Event.EventTarget/index.js":468,"../Web.Internal.FFI/index.js":614,"../Web.UIEvent.UIEvent/index.js":634,"./foreign.js":631}],633:[function(require,module,exports){
"use strict";

exports._view = function (e) {
  return e.view;
};

exports.detail = function (e) {
  return e.detail;
};

},{}],634:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Event_Event = require("../Web.Event.Event/index.js");
var Web_HTML = require("../Web.HTML/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var view = function ($0) {
    return Data_Nullable.toMaybe($foreign["_view"]($0));
};
var toEvent = Unsafe_Coerce.unsafeCoerce;
var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("UIEvent");
module.exports = {
    fromEvent: fromEvent,
    toEvent: toEvent,
    view: view,
    detail: $foreign.detail
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Maybe/index.js":210,"../Data.Nullable/index.js":223,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.Event.Event/index.js":465,"../Web.HTML/index.js":612,"../Web.Internal.FFI/index.js":614,"./foreign.js":633}],635:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var Web_Event_Event = require("../Web.Event.Event/index.js");
var wheel = "wheel";
module.exports = {
    wheel: wheel
};

},{"../Web.Event.Event/index.js":465}],636:[function(require,module,exports){
"use strict";

exports.deltaX = function (e) {
  return e.deltaX;
};

exports.deltaY = function (e) {
  return e.deltaY;
};

exports.deltaZ = function (e) {
  return e.deltaZ;
};

exports.deltaModeIndex = function (e) {
  return e.deltaModeIndex;
};

},{}],637:[function(require,module,exports){
// Generated by purs version 0.12.3
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Prelude = require("../Prelude/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Event_Event = require("../Web.Event.Event/index.js");
var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");
var Web_UIEvent_MouseEvent = require("../Web.UIEvent.MouseEvent/index.js");
var Web_UIEvent_UIEvent = require("../Web.UIEvent.UIEvent/index.js");
var Pixel = (function () {
    function Pixel() {

    };
    Pixel.value = new Pixel();
    return Pixel;
})();
var Line = (function () {
    function Line() {

    };
    Line.value = new Line();
    return Line;
})();
var Page = (function () {
    function Page() {

    };
    Page.value = new Page();
    return Page;
})();
var toUIEvent = Unsafe_Coerce.unsafeCoerce;
var toMouseEvent = Unsafe_Coerce.unsafeCoerce;
var toEvent = Unsafe_Coerce.unsafeCoerce;
var toEnumDeltaMode = function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(Pixel.value);
    };
    if (v === 1) {
        return new Data_Maybe.Just(Line.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(Page.value);
    };
    return Data_Maybe.Nothing.value;
};
var fromUIEvent = Web_Internal_FFI.unsafeReadProtoTagged("WheelEvent");
var fromMouseEvent = Web_Internal_FFI.unsafeReadProtoTagged("WheelEvent");
var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("WheelEvent");
var fromEnumDeltaMode = function (v) {
    if (v instanceof Pixel) {
        return 0;
    };
    if (v instanceof Line) {
        return 1;
    };
    if (v instanceof Page) {
        return 2;
    };
    throw new Error("Failed pattern match at Web.UIEvent.WheelEvent (line 91, column 3 - line 94, column 13): " + [ v.constructor.name ]);
};
var eqDeltaMode = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Pixel && y instanceof Pixel) {
            return true;
        };
        if (x instanceof Line && y instanceof Line) {
            return true;
        };
        if (x instanceof Page && y instanceof Page) {
            return true;
        };
        return false;
    };
});
var ordDeltaMode = new Data_Ord.Ord(function () {
    return eqDeltaMode;
}, function (x) {
    return function (y) {
        if (x instanceof Pixel && y instanceof Pixel) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Pixel) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Pixel) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Line && y instanceof Line) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Line) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Line) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Page && y instanceof Page) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Web.UIEvent.WheelEvent (line 66, column 8 - line 66, column 46): " + [ x.constructor.name, y.constructor.name ]);
    };
});
var enumDeltaMode = new Data_Enum.Enum(function () {
    return ordDeltaMode;
}, Data_Enum.defaultPred(toEnumDeltaMode)(fromEnumDeltaMode), Data_Enum.defaultSucc(toEnumDeltaMode)(fromEnumDeltaMode));
var boundedDeltaMode = new Data_Bounded.Bounded(function () {
    return ordDeltaMode;
}, Pixel.value, Page.value);
var boundedEnumDeltaMode = new Data_Enum.BoundedEnum(function () {
    return boundedDeltaMode;
}, function () {
    return enumDeltaMode;
}, 3, fromEnumDeltaMode, toEnumDeltaMode);
var deltaMode = function (dictPartial) {
    return function ($13) {
        return Data_Maybe.fromJust(dictPartial)(Data_Enum.toEnum(boundedEnumDeltaMode)($foreign.deltaModeIndex($13)));
    };
};
module.exports = {
    fromMouseEvent: fromMouseEvent,
    fromUIEvent: fromUIEvent,
    fromEvent: fromEvent,
    toMouseEvent: toMouseEvent,
    toUIEvent: toUIEvent,
    toEvent: toEvent,
    deltaMode: deltaMode,
    Pixel: Pixel,
    Line: Line,
    Page: Page,
    toEnumDeltaMode: toEnumDeltaMode,
    fromEnumDeltaMode: fromEnumDeltaMode,
    eqDeltaMode: eqDeltaMode,
    ordDeltaMode: ordDeltaMode,
    boundedDeltaMode: boundedDeltaMode,
    enumDeltaMode: enumDeltaMode,
    boundedEnumDeltaMode: boundedEnumDeltaMode,
    deltaX: $foreign.deltaX,
    deltaY: $foreign.deltaY,
    deltaZ: $foreign.deltaZ,
    deltaModeIndex: $foreign.deltaModeIndex
};

},{"../Control.Semigroupoid/index.js":61,"../Data.Bounded/index.js":113,"../Data.Enum/index.js":133,"../Data.Eq/index.js":135,"../Data.Maybe/index.js":210,"../Data.Ord/index.js":229,"../Data.Ordering/index.js":230,"../Prelude/index.js":385,"../Unsafe.Coerce/index.js":425,"../Web.Event.Event/index.js":465,"../Web.Internal.FFI/index.js":614,"../Web.UIEvent.MouseEvent/index.js":632,"../Web.UIEvent.UIEvent/index.js":634,"./foreign.js":636}],638:[function(require,module,exports){
require('Main').main();

},{"Main":362}]},{},[638]);
